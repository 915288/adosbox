!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	src/libs/gui_tk/gui_tk.h	/^static inline int A(RGB val) { return ((val&Color::AlphaMask)>>Color::AlphaShift); }$/;"	f	namespace:GUI::Color
A1Valid	src/platform/visualc/ntddcdrm.h	/^  UCHAR  A1Valid : 1;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
A1Values	src/platform/visualc/ntddcdrm.h	/^  UCHAR  A1Values[3];$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
A2Valid	src/platform/visualc/ntddcdrm.h	/^  UCHAR  A2Valid : 1;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
A2Values	src/platform/visualc/ntddcdrm.h	/^  UCHAR  A2Values[3];$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
A3Valid	src/platform/visualc/ntddcdrm.h	/^  UCHAR  A3Valid : 1;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
A3Values	src/platform/visualc/ntddcdrm.h	/^  UCHAR  A3Values[3];$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
AAA	src/cpu/arminst.h	557;"	d
AAA	src/cpu/instructions.h	553;"	d
AAD	src/cpu/arminst.h	623;"	d
AAD	src/cpu/instructions.h	619;"	d
AAM	src/cpu/arminst.h	605;"	d
AAM	src/cpu/instructions.h	601;"	d
AAS	src/cpu/arminst.h	581;"	d
AAS	src/cpu/instructions.h	577;"	d
AB_BufLen	src/dos/wnaspi32.h	/^    DWORD                   AB_BufLen;          \/\/ 04\/004 Length in bytes of the buffer$/;"	m	struct:tag_ASPI32BUFF
AB_BufPointer	src/dos/wnaspi32.h	/^    PBYTE                   AB_BufPointer;      \/\/ 00\/000 Pointer to the ASPI allocated buffer$/;"	m	struct:tag_ASPI32BUFF
AB_Reserved	src/dos/wnaspi32.h	/^    DWORD                   AB_Reserved;        \/\/ 0C\/012 Reserved$/;"	m	struct:tag_ASPI32BUFF
AB_ZeroFill	src/dos/wnaspi32.h	/^    DWORD                   AB_ZeroFill;        \/\/ 08\/008 Flag set to 1 if buffer should be zeroed$/;"	m	struct:tag_ASPI32BUFF
ACTL_MAX_REG	src/ints/int10_pal.cpp	24;"	d	file:
ADCB	src/cpu/arminst.h	29;"	d
ADCB	src/cpu/core_normal/prefix_none.h	/^		ALIb(ADCB);break;$/;"	v
ADCB	src/cpu/core_normal/prefix_none.h	/^		RMEbGb(ADCB);break;$/;"	v
ADCB	src/cpu/core_normal/prefix_none.h	/^		RMGbEb(ADCB);break;$/;"	v
ADCB	src/cpu/core_normal/verysimple_prefix_none.h	/^		ALIb(ADCB);break;$/;"	v
ADCB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEbGb(ADCB);break;$/;"	v
ADCB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGbEb(ADCB);break;$/;"	v
ADCB	src/cpu/instructions.h	28;"	d
ADCD	src/cpu/arminst.h	144;"	d
ADCD	src/cpu/core_normal/prefix_66.h	/^		EAXId(ADCD);break;$/;"	v
ADCD	src/cpu/core_normal/prefix_66.h	/^		RMEdGd(ADCD);break;	$/;"	v
ADCD	src/cpu/core_normal/prefix_66.h	/^		RMGdEd(ADCD);break;$/;"	v
ADCD	src/cpu/instructions.h	140;"	d
ADCW	src/cpu/arminst.h	88;"	d
ADCW	src/cpu/core_normal/prefix_none.h	/^		AXIw(ADCW);break;$/;"	v
ADCW	src/cpu/core_normal/prefix_none.h	/^		RMEwGw(ADCW);break;	$/;"	v
ADCW	src/cpu/core_normal/prefix_none.h	/^		RMGwEw(ADCW);break;$/;"	v
ADCW	src/cpu/core_normal/verysimple_prefix_none.h	/^		AXIw(ADCW);break;$/;"	v
ADCW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEwGw(ADCW);break;	$/;"	v
ADCW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGwEw(ADCW);break;$/;"	v
ADCW	src/cpu/instructions.h	84;"	d
ADDB	src/cpu/arminst.h	22;"	d
ADDB	src/cpu/core_normal/prefix_none.h	/^		ALIb(ADDB);break;$/;"	v
ADDB	src/cpu/core_normal/prefix_none.h	/^		RMEbGb(ADDB);break;$/;"	v
ADDB	src/cpu/core_normal/prefix_none.h	/^		RMGbEb(ADDB);break;$/;"	v
ADDB	src/cpu/core_normal/verysimple_prefix_none.h	/^		ALIb(ADDB);break;$/;"	v
ADDB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEbGb(ADDB);break;$/;"	v
ADDB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGbEb(ADDB);break;$/;"	v
ADDB	src/cpu/instructions.h	22;"	d
ADDD	src/cpu/arminst.h	138;"	d
ADDD	src/cpu/core_normal/prefix_66.h	/^		EAXId(ADDD);break;$/;"	v
ADDD	src/cpu/core_normal/prefix_66.h	/^		RMEdGd(ADDD);break;	$/;"	v
ADDD	src/cpu/core_normal/prefix_66.h	/^		RMGdEd(ADDD);break;$/;"	v
ADDD	src/cpu/instructions.h	134;"	d
ADDR_DELIM	src/gui/midi_alsa.h	26;"	d
ADDW	src/cpu/arminst.h	82;"	d
ADDW	src/cpu/core_normal/prefix_none.h	/^		AXIw(ADDW);break;$/;"	v
ADDW	src/cpu/core_normal/prefix_none.h	/^		RMEwGw(ADDW);break;	$/;"	v
ADDW	src/cpu/core_normal/prefix_none.h	/^		RMGwEw(ADDW);break;$/;"	v
ADDW	src/cpu/core_normal/verysimple_prefix_none.h	/^		AXIw(ADDW);break;$/;"	v
ADDW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEwGw(ADDW);break;	$/;"	v
ADDW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGwEw(ADDW);break;$/;"	v
ADDW	src/cpu/instructions.h	78;"	d
ADD_REG_VAL_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	401;"	d
ADD_REG_VAL_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	418;"	d
ADD_REG_VAL_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	399;"	d
ADD_REG_VAL_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	416;"	d
ADD_SEG_PHYS_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	386;"	d
ADD_SEG_PHYS_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	393;"	d
ADD_SEG_PHYS_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	384;"	d
ADD_SEG_PHYS_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	391;"	d
ADR	src/platform/visualc/ntddcdrm.h	/^  UCHAR  ADR : 4;$/;"	m	struct:_SUB_Q_CURRENT_POSITION
ADR_ENCODES_CURRENT_POSITION	src/platform/visualc/ntddcdrm.h	221;"	d
ADR_ENCODES_ISRC	src/platform/visualc/ntddcdrm.h	223;"	d
ADR_ENCODES_MEDIA_CATALOG	src/platform/visualc/ntddcdrm.h	222;"	d
ADR_NO_MODE_INFORMATION	src/platform/visualc/ntddcdrm.h	220;"	d
ALIb	src/cpu/core_normal/helpers.h	127;"	d
ALPHABETICAL	include/dos_system.h	/^	enum TDirSort { NOSORT, ALPHABETICAL, DIRALPHABETICAL, ALPHABETICALREV, DIRALPHABETICALREV };$/;"	e	enum:DOS_Drive_Cache::TDirSort
ALPHABETICALREV	include/dos_system.h	/^	enum TDirSort { NOSORT, ALPHABETICAL, DIRALPHABETICAL, ALPHABETICALREV, DIRALPHABETICALREV };$/;"	e	enum:DOS_Drive_Cache::TDirSort
ALSA_PCM_OLD_HW_PARAMS_API	src/gui/midi_alsa.h	21;"	d
ALSA_PCM_OLD_SW_PARAMS_API	src/gui/midi_alsa.h	22;"	d
AMmask	src/hardware/fmopl.cpp	/^	UINT32	AMmask;		\/* LFO Amplitude Modulation enable mask *\/$/;"	m	struct:__anon153	file:
AMmask	src/hardware/ymf262.cpp	/^	UINT32	AMmask;		\/* LFO Amplitude Modulation enable mask *\/$/;"	m	struct:__anon190	file:
ANDB	src/cpu/arminst.h	64;"	d
ANDB	src/cpu/core_normal/prefix_none.h	/^		ALIb(ANDB);break;$/;"	v
ANDB	src/cpu/core_normal/prefix_none.h	/^		RMEbGb(ANDB);break;$/;"	v
ANDB	src/cpu/core_normal/prefix_none.h	/^		RMGbEb(ANDB);break;$/;"	v
ANDB	src/cpu/core_normal/verysimple_prefix_none.h	/^		ALIb(ANDB);break;$/;"	v
ANDB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEbGb(ANDB);break;$/;"	v
ANDB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGbEb(ANDB);break;$/;"	v
ANDB	src/cpu/instructions.h	60;"	d
ANDD	src/cpu/arminst.h	176;"	d
ANDD	src/cpu/core_normal/prefix_66.h	/^		EAXId(ANDD);break;$/;"	v
ANDD	src/cpu/core_normal/prefix_66.h	/^		RMEdGd(ANDD);break;	$/;"	v
ANDD	src/cpu/core_normal/prefix_66.h	/^		RMGdEd(ANDD);break;$/;"	v
ANDD	src/cpu/instructions.h	172;"	d
ANDW	src/cpu/arminst.h	120;"	d
ANDW	src/cpu/core_normal/prefix_none.h	/^		AXIw(ANDW);break;$/;"	v
ANDW	src/cpu/core_normal/prefix_none.h	/^		RMEwGw(ANDW);break;	$/;"	v
ANDW	src/cpu/core_normal/prefix_none.h	/^		RMGwEw(ANDW);break;$/;"	v
ANDW	src/cpu/core_normal/verysimple_prefix_none.h	/^		AXIw(ANDW);break;$/;"	v
ANDW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEwGw(ANDW);break;	$/;"	v
ANDW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGwEw(ANDW);break;$/;"	v
ANDW	src/cpu/instructions.h	116;"	d
ANSI_MAYBE	src/dos/scsidefs.h	284;"	d
ANSI_RESHI	src/dos/scsidefs.h	288;"	d
ANSI_RESLO	src/dos/scsidefs.h	287;"	d
ANSI_SCSI1	src/dos/scsidefs.h	285;"	d
ANSI_SCSI2	src/dos/scsidefs.h	286;"	d
ARMV4LE	src/cpu/core_dynrec.cpp	143;"	d	file:
ASPI32BUFF	src/dos/wnaspi32.h	/^ASPI32BUFF, *PASPI32BUFF, FAR *LPASPI32BUFF;$/;"	t	typeref:struct:tag_ASPI32BUFF
ASPI_SRB	src/dos/cdrom_aspi_win32.cpp	/^} ASPI_SRB;$/;"	t	typeref:union:__anon114	file:
ASP_init_in_progress	src/hardware/sblaster.cpp	/^static bool ASP_init_in_progress = false;$/;"	v	file:
ASP_regs	src/hardware/sblaster.cpp	/^static Bit8u ASP_regs[256];$/;"	v	file:
ATT_REGS	src/ints/int10_modes.cpp	36;"	d	file:
AUDIO_DATA_TRACK	src/platform/visualc/ntddcdrm.h	290;"	d
AUDIO_STATUS_IN_PROGRESS	src/platform/visualc/ntddcdrm.h	238;"	d
AUDIO_STATUS_NOT_SUPPORTED	src/platform/visualc/ntddcdrm.h	237;"	d
AUDIO_STATUS_NO_STATUS	src/platform/visualc/ntddcdrm.h	242;"	d
AUDIO_STATUS_PAUSED	src/platform/visualc/ntddcdrm.h	239;"	d
AUDIO_STATUS_PLAY_COMPLETE	src/platform/visualc/ntddcdrm.h	240;"	d
AUDIO_STATUS_PLAY_ERROR	src/platform/visualc/ntddcdrm.h	241;"	d
AUDIO_WITH_PREEMPHASIS	src/platform/visualc/ntddcdrm.h	288;"	d
AUTOEXEC	src/shell/shell.cpp	/^	AUTOEXEC(Section* configuration):Module_base(configuration) {$/;"	f	class:AUTOEXEC
AUTOEXEC	src/shell/shell.cpp	/^class AUTOEXEC:public Module_base {$/;"	c	file:
AUTOEXEC_Init	src/shell/shell.cpp	/^void AUTOEXEC_Init(Section * sec) {$/;"	f
AUTOEXEC_SIZE	src/shell/shell.cpp	45;"	d	file:
AVIOUT4	src/hardware/hardware.cpp	174;"	d	file:
AVIOUTd	src/hardware/hardware.cpp	176;"	d	file:
AVIOUTw	src/hardware/hardware.cpp	175;"	d	file:
AVI_HEADER_SIZE	src/hardware/hardware.cpp	46;"	d	file:
AXIw	src/cpu/core_normal/helpers.h	130;"	d
About	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::About(HWND hwnd) {$/;"	f	class:CodecInst
AboutDialogProc	src/libs/zmbv/zmbv_vfw.cpp	/^static BOOL CALLBACK AboutDialogProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam) {$/;"	f	file:
AbsoluteAddress	src/platform/visualc/ntddcdrm.h	/^  UCHAR  AbsoluteAddress[4];$/;"	m	struct:_SUB_Q_CURRENT_POSITION
Accept	src/hardware/serialport/misc_util.cpp	/^TCPClientSocket* TCPServerSocket::Accept() {$/;"	f	class:TCPServerSocket
AcceptIncomingCall	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::AcceptIncomingCall(void) {$/;"	f	class:CSerialModem
AcceptsMode_ET3K	src/hardware/vga_tseng.cpp	/^bool AcceptsMode_ET3K(Bitu mode) {$/;"	f
AcceptsMode_ET4K	src/hardware/vga_tseng.cpp	/^bool AcceptsMode_ET4K(Bitu mode) {$/;"	f
AcceptsMode_PVGA1A	src/hardware/vga_paradise.cpp	/^bool AcceptsMode_PVGA1A(Bitu mode) {$/;"	f
AcquireFlags	src/cpu/core_dynrec/decoder_basic.h	/^static void AcquireFlags(Bitu flags_mask) {$/;"	f
AcquireFlags	src/cpu/core_dynrec/save/decoder_basic.h	/^static void AcquireFlags(Bitu flags_mask) {$/;"	f
ActionEventSource	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> ActionEventSource(const STR name) : name(String(name)) { }$/;"	f	class:GUI::ActionEventSource
ActionEventSource	src/libs/gui_tk/gui_tk.h	/^class ActionEventSource {$/;"	c	namespace:GUI
ActionEventSource_Callback	src/libs/gui_tk/gui_tk.h	/^struct ActionEventSource_Callback {$/;"	s	namespace:GUI
Activate	include/dos_system.h	/^	virtual void Activate(void) {};$/;"	f	class:DOS_Drive
Activate	src/debug/debug.cpp	/^void CBreakpoint::Activate(bool _active)$/;"	f	class:CBreakpoint
Activate	src/dos/drive_iso.cpp	/^void isoDrive::Activate(void) {$/;"	f	class:isoDrive
ActivateBind	src/gui/sdl_mapper.cpp	/^	void ActivateBind(Bits _value,bool ev_trigger,bool skip_action=false) {$/;"	f	class:CBind
ActivateBindList	src/gui/sdl_mapper.cpp	/^void CBindGroup::ActivateBindList(CBindList * list,Bits value,bool ev_trigger) {$/;"	f	class:CBindGroup
ActivateBreakpoints	src/debug/debug.cpp	/^void CBreakpoint::ActivateBreakpoints(PhysPt adr, bool activate)$/;"	f	class:CBreakpoint
ActivateEvent	src/gui/sdl_mapper.cpp	/^	void ActivateEvent(bool ev_trigger,bool skip_action) {$/;"	f	class:CContinuousEvent
ActivateEvent	src/gui/sdl_mapper.cpp	/^	void ActivateEvent(bool ev_trigger,bool skip_action) {$/;"	f	class:CTriggeredEvent
ActivateJoystickBoundEvents	src/gui/sdl_mapper.cpp	/^	void ActivateJoystickBoundEvents() {$/;"	f	class:CStickBindGroup
Active	src/gui/sdl_mapper.cpp	/^	void Active(bool \/*moved*\/) {$/;"	f	class:CJAxisEvent
Active	src/gui/sdl_mapper.cpp	/^	void Active(bool pressed) {$/;"	f	class:CJButtonEvent
Active	src/gui/sdl_mapper.cpp	/^	void Active(bool pressed) {$/;"	f	class:CJHatEvent
Active	src/gui/sdl_mapper.cpp	/^	void Active(bool yesno) {$/;"	f	class:CHandlerEvent
Active	src/gui/sdl_mapper.cpp	/^	void Active(bool yesno) {$/;"	f	class:CKeyEvent
Active	src/gui/sdl_mapper.cpp	/^	void Active(bool yesno) {$/;"	f	class:CModEvent
AdapterScansDown	src/platform/visualc/ntddscsi.h	/^	BOOLEAN  AdapterScansDown;$/;"	m	struct:_IO_SCSI_CAPABILITIES
AdapterUsesPio	src/platform/visualc/ntddscsi.h	/^	BOOLEAN  AdapterUsesPio;$/;"	m	struct:_IO_SCSI_CAPABILITIES
AddBind	src/gui/sdl_mapper.cpp	/^void CEvent::AddBind(CBind * bind) {$/;"	f	class:CEvent
AddBreakpoint	src/debug/debug.cpp	/^CBreakpoint* CBreakpoint::AddBreakpoint(Bit16u seg, Bit32u off, bool once)$/;"	f	class:CBreakpoint
AddCacheBlock	src/cpu/core_dyn_x86/cache.h	/^    void AddCacheBlock(CacheBlock * block) {$/;"	f	class:CodePageHandler
AddCacheBlock	src/cpu/core_dynrec/cache.h	/^	void AddCacheBlock(CacheBlockDynRec * block) {$/;"	f	class:CodePageHandlerDynRec
AddCacheBlock	src/cpu/core_dynrec/save/cache.h	/^	void AddCacheBlock(CacheBlockDynRec * block) {$/;"	f	class:CodePageHandlerDynRec
AddCrossBlock	src/cpu/core_dyn_x86/cache.h	/^    void AddCrossBlock(CacheBlock * block) {$/;"	f	class:CodePageHandler
AddCrossBlock	src/cpu/core_dynrec/cache.h	/^    void AddCrossBlock(CacheBlockDynRec * block) {$/;"	f	class:CodePageHandlerDynRec
AddCrossBlock	src/cpu/core_dynrec/save/cache.h	/^    void AddCrossBlock(CacheBlockDynRec * block) {$/;"	f	class:CodePageHandlerDynRec
AddDelayEntry	src/hardware/pcspeaker.cpp	/^static void AddDelayEntry(float index,float vol) {$/;"	f	file:
AddDestroyFunction	src/misc/setup.cpp	/^void Section::AddDestroyFunction(SectionFunction func,bool canchange) {$/;"	f	class:Section
AddDrive	src/dos/dos_mscdex.cpp	/^int CMscdex::AddDrive(Bit16u _drive, char* physicalPath, Bit8u& subUnit)$/;"	f	class:CMscdex
AddEntry	src/dos/drive_cache.cpp	/^void DOS_Drive_Cache::AddEntry(const char* path, bool checkExists) {$/;"	f	class:DOS_Drive_Cache
AddEntry	src/hardware/pic.cpp	/^static void AddEntry(PICEntry * entry) {$/;"	f	file:
AddFlags	src/gui/sdl_mapper.cpp	/^	void AddFlags(char * buf) {$/;"	f	class:CBind
AddInitFunction	src/misc/setup.cpp	/^void Section::AddInitFunction(SectionFunction func,bool canchange) {$/;"	f	class:Section
AddIntBreakpoint	src/debug/debug.cpp	/^CBreakpoint* CBreakpoint::AddIntBreakpoint(Bit8u intNum, Bit16u ah, bool once)$/;"	f	class:CBreakpoint
AddJAxisButton	src/gui/sdl_mapper.cpp	/^static CJAxisEvent * AddJAxisButton(Bitu x,Bitu y,Bitu dx,Bitu dy,char const * const title,Bitu stick,Bitu axis,bool positive,CJAxisEvent * opposite_axis) {$/;"	f	file:
AddJAxisButton_hidden	src/gui/sdl_mapper.cpp	/^static CJAxisEvent * AddJAxisButton_hidden(Bitu stick,Bitu axis,bool positive,CJAxisEvent * opposite_axis) {$/;"	f	file:
AddJButtonButton	src/gui/sdl_mapper.cpp	/^static void AddJButtonButton(Bitu x,Bitu y,Bitu dx,Bitu dy,char const * const title,Bitu stick,Bitu button) {$/;"	f	file:
AddJButtonButton_hidden	src/gui/sdl_mapper.cpp	/^static void AddJButtonButton_hidden(Bitu stick,Bitu button) {$/;"	f	file:
AddJHatButton	src/gui/sdl_mapper.cpp	/^static void AddJHatButton(Bitu x,Bitu y,Bitu dx,Bitu dy,char const * const title,Bitu _stick,Bitu _hat,Bitu _dir) {$/;"	f	file:
AddKeyButtonEvent	src/gui/sdl_mapper.cpp	/^static CKeyEvent * AddKeyButtonEvent(Bitu x,Bitu y,Bitu dx,Bitu dy,char const * const title,char const * const entry,KBD_KEYS key) {$/;"	f	file:
AddMemBreakpoint	src/debug/debug.cpp	/^CBreakpoint* CBreakpoint::AddMemBreakpoint(Bit16u seg, Bit32u off)$/;"	f	class:CBreakpoint
AddModButton	src/gui/sdl_mapper.cpp	/^static void AddModButton(Bitu x,Bitu y,Bitu dx,Bitu dy,char const * const title,Bitu _mod) {$/;"	f	file:
AddRef	include/dos_system.h	/^	virtual void	AddRef()					{ refCtr++; };$/;"	f	class:DOS_File
AddSamples	src/hardware/mixer.cpp	/^INLINE void MixerChannel::AddSamples(Bitu len, const Type* data) {$/;"	f	class:MixerChannel
AddSamples_m16	src/hardware/mixer.cpp	/^void MixerChannel::AddSamples_m16(Bitu len,const Bit16s * data) {$/;"	f	class:MixerChannel
AddSamples_m16u	src/hardware/mixer.cpp	/^void MixerChannel::AddSamples_m16u(Bitu len,const Bit16u * data) {$/;"	f	class:MixerChannel
AddSamples_m32	src/hardware/mixer.cpp	/^void MixerChannel::AddSamples_m32(Bitu len,const Bit32s * data) {$/;"	f	class:MixerChannel
AddSamples_m8	src/hardware/mixer.cpp	/^void MixerChannel::AddSamples_m8(Bitu len, const Bit8u * data) {$/;"	f	class:MixerChannel
AddSamples_m8s	src/hardware/mixer.cpp	/^void MixerChannel::AddSamples_m8s(Bitu len,const Bit8s * data) {$/;"	f	class:MixerChannel
AddSamples_s16	src/hardware/mixer.cpp	/^void MixerChannel::AddSamples_s16(Bitu len,const Bit16s * data) {$/;"	f	class:MixerChannel
AddSamples_s16u	src/hardware/mixer.cpp	/^void MixerChannel::AddSamples_s16u(Bitu len,const Bit16u * data) {$/;"	f	class:MixerChannel
AddSamples_s32	src/hardware/mixer.cpp	/^void MixerChannel::AddSamples_s32(Bitu len,const Bit32s * data) {$/;"	f	class:MixerChannel
AddSamples_s8	src/hardware/mixer.cpp	/^void MixerChannel::AddSamples_s8(Bitu len,const Bit8u * data) {$/;"	f	class:MixerChannel
AddSamples_s8s	src/hardware/mixer.cpp	/^void MixerChannel::AddSamples_s8s(Bitu len,const Bit8s * data) {$/;"	f	class:MixerChannel
AddSection_line	src/misc/setup.cpp	/^Section_line* Config::AddSection_line(char const * const _name,void (*_initfunction)(Section*)){$/;"	f	class:Config
AddSection_prop	src/misc/setup.cpp	/^Section_prop* Config::AddSection_prop(char const * const _name,void (*_initfunction)(Section*),bool canchange){$/;"	f	class:Config
AddSenLen	src/dos/scsidefs.h	/^    BYTE    AddSenLen;          \/\/ Additional Sense Length$/;"	m	struct:__anon123
AddSenQual	src/dos/scsidefs.h	/^    BYTE    AddSenQual;         \/\/ Additional Sense Code Qualifier$/;"	m	struct:__anon123
AddSenseBytes	src/dos/scsidefs.h	/^    BYTE    AddSenseBytes;      \/\/ Additional Sense Bytes$/;"	m	struct:__anon123
AddSenseCode	src/dos/scsidefs.h	/^    BYTE    AddSenseCode;       \/\/ Additional Sense Code$/;"	m	struct:__anon123
AddSilence	src/hardware/mixer.cpp	/^void MixerChannel::AddSilence(void) {$/;"	f	class:MixerChannel
AddStretched	src/hardware/mixer.cpp	/^void MixerChannel::AddStretched(Bitu len,Bit16s * data) {$/;"	f	class:MixerChannel
AddTrack	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::AddTrack(Track &curr, int &shift, int prestart, int &totalPregap, int currPregap)$/;"	f	class:CDROM_Interface_Image
Add_bool	src/misc/setup.cpp	/^Prop_bool* Section_prop::Add_bool(string const& _propname, Property::Changeable::Value when, bool _value) {$/;"	f	class:Section_prop
Add_hex	src/misc/setup.cpp	/^Prop_hex* Section_prop::Add_hex(string const& _propname, Property::Changeable::Value when, Hex _value) {$/;"	f	class:Section_prop
Add_int	src/misc/setup.cpp	/^Prop_int* Section_prop::Add_int(string const& _propname, Property::Changeable::Value when, int _value) {$/;"	f	class:Section_prop
Add_multi	src/misc/setup.cpp	/^Prop_multival* Section_prop::Add_multi(std::string const& _propname, Property::Changeable::Value when,std::string const& sep) {$/;"	f	class:Section_prop
Add_multiremain	src/misc/setup.cpp	/^Prop_multival_remain* Section_prop::Add_multiremain(std::string const& _propname, Property::Changeable::Value when,std::string const& sep) {$/;"	f	class:Section_prop
Add_path	src/misc/setup.cpp	/^Prop_path* Section_prop::Add_path(string const& _propname, Property::Changeable::Value when, char const * const _value) {$/;"	f	class:Section_prop
Add_string	src/misc/setup.cpp	/^Prop_string* Section_prop::Add_string(string const& _propname, Property::Changeable::Value when, char const * const _value) {$/;"	f	class:Section_prop
AddrMaskTable	src/cpu/core_simple.cpp	/^static const Bit32u AddrMaskTable[2]={0x0000ffff,0xffffffff};$/;"	v	file:
AddrMaskTable	src/cpu/core_verysimple.cpp	/^static const Bit32u AddrMaskTable[2]={0x0000ffff,0xffffffff};$/;"	v	file:
Address	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Address[4];$/;"	m	struct:_TRACK_DATA
Adlib	src/hardware/adlib.cpp	/^namespace Adlib {$/;"	n	file:
Adlib	src/hardware/adlib.h	/^namespace Adlib {$/;"	n
Adr	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Adr : 4;$/;"	m	struct:_CDROM_TOC_FULL_TOC_DATA_BLOCK
Adr	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Adr : 4;$/;"	m	struct:_TRACK_DATA
AlignmentMask	src/platform/visualc/ntddscsi.h	/^	ULONG  AlignmentMask;$/;"	m	struct:_IO_SCSI_CAPABILITIES
Allocate	src/cpu/callback.cpp	/^void CALLBACK_HandlerObject::Allocate(CallBack_Handler handler,const char* description) {$/;"	f	class:CALLBACK_HandlerObject
AllocationInfo	src/dos/drive_fat.cpp	/^bool fatDrive::AllocationInfo(Bit16u *_bytes_sector, Bit8u *_sectors_cluster, Bit16u *_total_clusters, Bit16u *_free_clusters) {$/;"	f	class:fatDrive
AllocationInfo	src/dos/drive_iso.cpp	/^bool isoDrive::AllocationInfo(Bit16u *bytes_sector, Bit8u *sectors_cluster, Bit16u *total_clusters, Bit16u *free_clusters)$/;"	f	class:isoDrive
AllocationInfo	src/dos/drive_local.cpp	/^bool localDrive::AllocationInfo(Bit16u * _bytes_sector,Bit8u * _sectors_cluster,Bit16u * _total_clusters,Bit16u * _free_clusters) {$/;"	f	class:localDrive
AllocationInfo	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::AllocationInfo(Bit16u * _bytes_sector,Bit8u * _sectors_cluster,Bit16u * _total_clusters,Bit16u * _free_clusters) {$/;"	f	class:Virtual_Drive
AlphaMask	src/libs/gui_tk/gui_tk.h	/^const RGB AlphaMask = 0xff000000;$/;"	m	namespace:GUI::Color
AlphaShift	src/libs/gui_tk/gui_tk.h	/^const int AlphaShift = 24;$/;"	m	namespace:GUI::Color
Alt	src/libs/gui_tk/gui_tk.h	/^		Alt, Ctrl, Shift, Windows$/;"	e	enum:GUI::Key::Special
Always	include/setup.h	/^	struct Changeable { enum Value {Always, WhenIdle,OnlyAtStart};};$/;"	e	enum:Property::Changeable::Value
AnalyzeInstruction	src/debug/debug.cpp	/^char* AnalyzeInstruction(char* inst, bool saveSelector) {$/;"	f
Ap	src/debug/disasm_tables.h	/^	Ib,Ibs,Iw,Iv,Ap,$/;"	e	enum:__anon111
AppendDisk	src/dos/drives.cpp	/^void DriveManager::AppendDisk(int drive, DOS_Drive* disk) {$/;"	f	class:DriveManager
AudioFile	src/dos/cdrom.h	/^	class AudioFile : public TrackFile {$/;"	c	class:CDROM_Interface_Image
AudioFile	src/dos/cdrom_image.cpp	/^CDROM_Interface_Image::AudioFile::AudioFile(const char *filename, bool &error)$/;"	f	class:CDROM_Interface_Image::AudioFile
AudioStatus	src/platform/visualc/ntddcdrm.h	/^  UCHAR  AudioStatus;$/;"	m	struct:_SUB_Q_HEADER
AutoexecObject	include/shell.h	/^	AutoexecObject():installed(false){ };$/;"	f	class:AutoexecObject
AutoexecObject	include/shell.h	/^class AutoexecObject{$/;"	c
B	src/libs/gui_tk/gui_tk.h	/^static inline int B(RGB val) { return ((val&Color::BlueMask)>>Color::BlueShift); }$/;"	f	namespace:GUI::Color
BANK_MASK	include/paging.h	47;"	d
BANK_SHIFT	include/paging.h	46;"	d
BASE	src/debug/debug_disasm.cpp	128;"	d	file:
BB_Add	src/gui/sdl_mapper.cpp	/^	BB_Next,BB_Add,BB_Del,$/;"	e	enum:BB_Types	file:
BB_Del	src/gui/sdl_mapper.cpp	/^	BB_Next,BB_Add,BB_Del,$/;"	e	enum:BB_Types	file:
BB_Exit	src/gui/sdl_mapper.cpp	/^	BB_Save,BB_Exit$/;"	e	enum:BB_Types	file:
BB_Next	src/gui/sdl_mapper.cpp	/^	BB_Next,BB_Add,BB_Del,$/;"	e	enum:BB_Types	file:
BB_Save	src/gui/sdl_mapper.cpp	/^	BB_Save,BB_Exit$/;"	e	enum:BB_Types	file:
BB_Types	src/gui/sdl_mapper.cpp	/^enum BB_Types {$/;"	g	file:
BCD2BIN	src/hardware/timer.cpp	/^static INLINE void BCD2BIN(Bit16u& val) {$/;"	f	file:
BC_Hold	src/gui/sdl_mapper.cpp	/^	BC_Hold,$/;"	e	enum:BC_Types	file:
BC_Mod1	src/gui/sdl_mapper.cpp	/^	BC_Mod1,BC_Mod2,BC_Mod3,$/;"	e	enum:BC_Types	file:
BC_Mod2	src/gui/sdl_mapper.cpp	/^	BC_Mod1,BC_Mod2,BC_Mod3,$/;"	e	enum:BC_Types	file:
BC_Mod3	src/gui/sdl_mapper.cpp	/^	BC_Mod1,BC_Mod2,BC_Mod3,$/;"	e	enum:BC_Types	file:
BC_Types	src/gui/sdl_mapper.cpp	/^enum BC_Types {$/;"	g	file:
BC_hh	src/cpu/core_dyn_x86.cpp	/^	BC_hl,BC_hh,$/;"	e	enum:ByteCombo	file:
BC_hl	src/cpu/core_dyn_x86.cpp	/^	BC_hl,BC_hh,$/;"	e	enum:ByteCombo	file:
BC_lh	src/cpu/core_dyn_x86.cpp	/^	BC_ll,BC_lh,$/;"	e	enum:ByteCombo	file:
BC_ll	src/cpu/core_dyn_x86.cpp	/^	BC_ll,BC_lh,$/;"	e	enum:ByteCombo	file:
BFLG_Hold	src/gui/sdl_mapper.cpp	63;"	d	file:
BFLG_Repeat	src/gui/sdl_mapper.cpp	64;"	d	file:
BH	src/gui/sdl_mapper.cpp	1776;"	d	file:
BH_INDEX	include/regs.h	76;"	d
BH_INDEX	include/regs.h	83;"	d
BIAS64	src/fpu/fpu_instructions.h	90;"	d
BIAS80	src/fpu/fpu_instructions.h	89;"	d
BIN2BCD	src/hardware/timer.cpp	/^static INLINE void BIN2BCD(Bit16u& val) {$/;"	f	file:
BIND_MappingEvents	src/gui/sdl_mapper.cpp	/^void BIND_MappingEvents(void) {$/;"	f
BIOS	src/ints/bios.cpp	/^	BIOS(Section* configuration):Module_base(configuration){$/;"	f	class:BIOS
BIOS	src/ints/bios.cpp	/^class BIOS:public Module_base{$/;"	c	file:
BIOSMEM_CHAR_HEIGHT	src/ints/int10.h	39;"	d
BIOSMEM_CRTCPU_PAGE	src/ints/int10.h	44;"	d
BIOSMEM_CRTC_ADDRESS	src/ints/int10.h	35;"	d
BIOSMEM_CURRENT_MODE	src/ints/int10.h	28;"	d
BIOSMEM_CURRENT_MSR	src/ints/int10.h	36;"	d
BIOSMEM_CURRENT_PAGE	src/ints/int10.h	34;"	d
BIOSMEM_CURRENT_PAL	src/ints/int10.h	37;"	d
BIOSMEM_CURRENT_START	src/ints/int10.h	31;"	d
BIOSMEM_CURSOR_POS	src/ints/int10.h	32;"	d
BIOSMEM_CURSOR_TYPE	src/ints/int10.h	33;"	d
BIOSMEM_DCC_INDEX	src/ints/int10.h	43;"	d
BIOSMEM_INITIAL_MODE	src/ints/int10.h	27;"	d
BIOSMEM_MODESET_CTL	src/ints/int10.h	42;"	d
BIOSMEM_NB_COLS	src/ints/int10.h	29;"	d
BIOSMEM_NB_ROWS	src/ints/int10.h	38;"	d
BIOSMEM_PAGE_SIZE	src/ints/int10.h	30;"	d
BIOSMEM_SEG	src/ints/int10.h	25;"	d
BIOSMEM_SWITCHES	src/ints/int10.h	41;"	d
BIOSMEM_VIDEO_CTL	src/ints/int10.h	40;"	d
BIOSMEM_VS_POINTER	src/ints/int10.h	45;"	d
BIOS_24_HOURS_FLAG	include/bios.h	65;"	d
BIOS_ADDRESS_LPT1	include/bios.h	26;"	d
BIOS_ADDRESS_LPT2	include/bios.h	27;"	d
BIOS_ADDRESS_LPT3	include/bios.h	28;"	d
BIOS_AddKeyToBuffer	src/ints/bios_keyboard.cpp	/^bool BIOS_AddKeyToBuffer(Bit16u code) {$/;"	f
BIOS_BASE_ADDRESS_COM1	include/bios.h	22;"	d
BIOS_BASE_ADDRESS_COM2	include/bios.h	23;"	d
BIOS_BASE_ADDRESS_COM3	include/bios.h	24;"	d
BIOS_BASE_ADDRESS_COM4	include/bios.h	25;"	d
BIOS_COM1_TIMEOUT	include/bios.h	74;"	d
BIOS_COM2_TIMEOUT	include/bios.h	75;"	d
BIOS_COM3_TIMEOUT	include/bios.h	76;"	d
BIOS_COM4_TIMEOUT	include/bios.h	77;"	d
BIOS_CONFIGURATION	include/bios.h	30;"	d
BIOS_CTRL_ALT_DEL_FLAG	include/bios.h	67;"	d
BIOS_CURRENT_SCREEN_PAGE	include/bios.h	59;"	d
BIOS_CURSOR_FIRST_LINE	include/bios.h	58;"	d
BIOS_CURSOR_LAST_LINE	include/bios.h	57;"	d
BIOS_CURSOR_SHAPE	include/bios.h	56;"	d
BIOS_DISK_MOTOR_TIMEOUT	include/bios.h	46;"	d
BIOS_DISK_STATUS	include/bios.h	47;"	d
BIOS_DRIVE_ACTIVE	include/bios.h	44;"	d
BIOS_DRIVE_RUNNING	include/bios.h	45;"	d
BIOS_Destroy	src/ints/bios.cpp	/^void BIOS_Destroy(Section* sec){$/;"	f
BIOS_FONT_HEIGHT	include/bios.h	84;"	d
BIOS_HARDDISK_COUNT	include/bios.h	68;"	d
BIOS_Init	src/ints/bios.cpp	/^void BIOS_Init(Section* sec) {$/;"	f
BIOS_KEYBOARD_BUFFER	include/bios.h	42;"	d
BIOS_KEYBOARD_BUFFER_END	include/bios.h	81;"	d
BIOS_KEYBOARD_BUFFER_HEAD	include/bios.h	40;"	d
BIOS_KEYBOARD_BUFFER_START	include/bios.h	80;"	d
BIOS_KEYBOARD_BUFFER_TAIL	include/bios.h	41;"	d
BIOS_KEYBOARD_FLAGS	include/bios.h	66;"	d
BIOS_KEYBOARD_FLAGS1	include/bios.h	36;"	d
BIOS_KEYBOARD_FLAGS2	include/bios.h	37;"	d
BIOS_KEYBOARD_FLAGS3	include/bios.h	91;"	d
BIOS_KEYBOARD_LEDS	include/bios.h	92;"	d
BIOS_KEYBOARD_STATE	include/bios.h	35;"	d
BIOS_KEYBOARD_TOKEN	include/bios.h	38;"	d
BIOS_LPT1_TIMEOUT	include/bios.h	70;"	d
BIOS_LPT2_TIMEOUT	include/bios.h	71;"	d
BIOS_LPT3_TIMEOUT	include/bios.h	72;"	d
BIOS_MAX_DISK	include/bios_disk.h	34;"	d
BIOS_MEMORY_SIZE	include/bios.h	32;"	d
BIOS_NCOLS	src/ints/int10.h	97;"	d
BIOS_NROWS	src/ints/int10.h	98;"	d
BIOS_PRINT_SCREEN_FLAG	include/bios.h	100;"	d
BIOS_ROWS_ON_SCREEN_MINUS_1	include/bios.h	83;"	d
BIOS_SCREEN_COLUMNS	include/bios.h	50;"	d
BIOS_SetComPorts	src/ints/bios.cpp	/^void BIOS_SetComPorts(Bit16u baseaddr[]) {$/;"	f
BIOS_SetupDisks	src/ints/bios_disk.cpp	/^void BIOS_SetupDisks(void) {$/;"	f
BIOS_SetupKeyboard	src/ints/bios_keyboard.cpp	/^void BIOS_SetupKeyboard(void) {$/;"	f
BIOS_TIMER	include/bios.h	64;"	d
BIOS_TRUE_MEMORY_SIZE	include/bios.h	33;"	d
BIOS_VDU_COLOR_REGISTER	include/bios.h	62;"	d
BIOS_VDU_CONTROL	include/bios.h	61;"	d
BIOS_VIDEO_COMBO	include/bios.h	89;"	d
BIOS_VIDEO_CURSOR_POS	include/bios.h	53;"	d
BIOS_VIDEO_INFO_0	include/bios.h	86;"	d
BIOS_VIDEO_INFO_1	include/bios.h	87;"	d
BIOS_VIDEO_INFO_2	include/bios.h	88;"	d
BIOS_VIDEO_MEMORY_ADDRESS	include/bios.h	52;"	d
BIOS_VIDEO_MEMORY_USED	include/bios.h	51;"	d
BIOS_VIDEO_MODE	include/bios.h	49;"	d
BIOS_VIDEO_PORT	include/bios.h	60;"	d
BIOS_VIDEO_SAVEPTR	include/bios.h	102;"	d
BIOS_WAIT_FLAG_ACTIVE	include/bios.h	96;"	d
BIOS_WAIT_FLAG_COUNT	include/bios.h	95;"	d
BIOS_WAIT_FLAG_POINTER	include/bios.h	94;"	d
BIOS_WAIT_FLAG_TEMP	include/bios.h	97;"	d
BIOS_ZeroExtendedSize	src/ints/bios.cpp	/^void BIOS_ZeroExtendedSize(bool in) {$/;"	f
BKPNT_INTERRUPT	src/debug/debug.cpp	/^enum EBreakpoint { BKPNT_UNKNOWN, BKPNT_PHYSICAL, BKPNT_INTERRUPT, BKPNT_MEMORY, BKPNT_MEMORY_PROT, BKPNT_MEMORY_LINEAR };$/;"	e	enum:EBreakpoint	file:
BKPNT_MEMORY	src/debug/debug.cpp	/^enum EBreakpoint { BKPNT_UNKNOWN, BKPNT_PHYSICAL, BKPNT_INTERRUPT, BKPNT_MEMORY, BKPNT_MEMORY_PROT, BKPNT_MEMORY_LINEAR };$/;"	e	enum:EBreakpoint	file:
BKPNT_MEMORY_LINEAR	src/debug/debug.cpp	/^enum EBreakpoint { BKPNT_UNKNOWN, BKPNT_PHYSICAL, BKPNT_INTERRUPT, BKPNT_MEMORY, BKPNT_MEMORY_PROT, BKPNT_MEMORY_LINEAR };$/;"	e	enum:EBreakpoint	file:
BKPNT_MEMORY_PROT	src/debug/debug.cpp	/^enum EBreakpoint { BKPNT_UNKNOWN, BKPNT_PHYSICAL, BKPNT_INTERRUPT, BKPNT_MEMORY, BKPNT_MEMORY_PROT, BKPNT_MEMORY_LINEAR };$/;"	e	enum:EBreakpoint	file:
BKPNT_PHYSICAL	src/debug/debug.cpp	/^enum EBreakpoint { BKPNT_UNKNOWN, BKPNT_PHYSICAL, BKPNT_INTERRUPT, BKPNT_MEMORY, BKPNT_MEMORY_PROT, BKPNT_MEMORY_LINEAR };$/;"	e	enum:EBreakpoint	file:
BKPNT_UNKNOWN	src/debug/debug.cpp	/^enum EBreakpoint { BKPNT_UNKNOWN, BKPNT_PHYSICAL, BKPNT_INTERRUPT, BKPNT_MEMORY, BKPNT_MEMORY_PROT, BKPNT_MEMORY_LINEAR };$/;"	e	enum:EBreakpoint	file:
BL_INDEX	include/regs.h	77;"	d
BL_INDEX	include/regs.h	84;"	d
BMOD_Mod1	src/gui/sdl_mapper.cpp	59;"	d	file:
BMOD_Mod2	src/gui/sdl_mapper.cpp	60;"	d	file:
BMOD_Mod3	src/gui/sdl_mapper.cpp	61;"	d	file:
BOOT	src/dos/dos_programs.cpp	/^class BOOT : public Program {$/;"	c	file:
BOOT_ProgramStart	src/dos/dos_programs.cpp	/^static void BOOT_ProgramStart(Program * * make) {$/;"	f	file:
BPINT_ALL	src/debug/debug.cpp	267;"	d	file:
BPoints	src/debug/debug.cpp	/^	static std::list<CBreakpoint*>	BPoints;$/;"	m	class:CBreakpoint	file:
BPoints	src/debug/debug.cpp	/^std::list<CBreakpoint*> CBreakpoint::BPoints;$/;"	m	class:CBreakpoint	file:
BR_B	src/cpu/core_dyn_x86.cpp	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes	file:
BR_B	src/cpu/core_dynrec/decoder_basic.h	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes
BR_B	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes
BR_BE	src/cpu/core_dyn_x86.cpp	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes	file:
BR_BE	src/cpu/core_dynrec/decoder_basic.h	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes
BR_BE	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes
BR_CallBack	src/cpu/core_dyn_x86.cpp	/^	BR_CallBack,$/;"	e	enum:BlockReturn	file:
BR_CallBack	src/cpu/core_dynrec.cpp	/^	BR_CallBack,$/;"	e	enum:BlockReturn	file:
BR_Cycles	src/cpu/core_dyn_x86.cpp	/^	BR_Cycles,$/;"	e	enum:BlockReturn	file:
BR_Cycles	src/cpu/core_dynrec.cpp	/^	BR_Cycles,$/;"	e	enum:BlockReturn	file:
BR_Iret	src/cpu/core_dyn_x86.cpp	/^	BR_Iret,$/;"	e	enum:BlockReturn	file:
BR_Iret	src/cpu/core_dynrec.cpp	/^	BR_Iret,$/;"	e	enum:BlockReturn	file:
BR_L	src/cpu/core_dyn_x86.cpp	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes	file:
BR_L	src/cpu/core_dynrec/decoder_basic.h	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes
BR_L	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes
BR_LE	src/cpu/core_dyn_x86.cpp	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes	file:
BR_LE	src/cpu/core_dynrec/decoder_basic.h	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes
BR_LE	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes
BR_Link1	src/cpu/core_dyn_x86.cpp	/^	BR_Link1,BR_Link2,$/;"	e	enum:BlockReturn	file:
BR_Link1	src/cpu/core_dynrec.cpp	/^	BR_Link1,BR_Link2,$/;"	e	enum:BlockReturn	file:
BR_Link2	src/cpu/core_dyn_x86.cpp	/^	BR_Link1,BR_Link2,$/;"	e	enum:BlockReturn	file:
BR_Link2	src/cpu/core_dynrec.cpp	/^	BR_Link1,BR_Link2,$/;"	e	enum:BlockReturn	file:
BR_NB	src/cpu/core_dyn_x86.cpp	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes	file:
BR_NB	src/cpu/core_dynrec/decoder_basic.h	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes
BR_NB	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes
BR_NBE	src/cpu/core_dyn_x86.cpp	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes	file:
BR_NBE	src/cpu/core_dynrec/decoder_basic.h	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes
BR_NBE	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes
BR_NL	src/cpu/core_dyn_x86.cpp	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes	file:
BR_NL	src/cpu/core_dynrec/decoder_basic.h	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes
BR_NL	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes
BR_NLE	src/cpu/core_dyn_x86.cpp	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes	file:
BR_NLE	src/cpu/core_dynrec/decoder_basic.h	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes
BR_NLE	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_L,BR_NL,BR_LE,BR_NLE$/;"	e	enum:BranchTypes
BR_NO	src/cpu/core_dyn_x86.cpp	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes	file:
BR_NO	src/cpu/core_dynrec/decoder_basic.h	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes
BR_NO	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes
BR_NP	src/cpu/core_dyn_x86.cpp	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes	file:
BR_NP	src/cpu/core_dynrec/decoder_basic.h	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes
BR_NP	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes
BR_NS	src/cpu/core_dyn_x86.cpp	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes	file:
BR_NS	src/cpu/core_dynrec/decoder_basic.h	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes
BR_NS	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes
BR_NZ	src/cpu/core_dyn_x86.cpp	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes	file:
BR_NZ	src/cpu/core_dynrec/decoder_basic.h	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes
BR_NZ	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes
BR_Normal	src/cpu/core_dyn_x86.cpp	/^	BR_Normal=0,$/;"	e	enum:BlockReturn	file:
BR_Normal	src/cpu/core_dynrec.cpp	/^	BR_Normal=0,$/;"	e	enum:BlockReturn	file:
BR_O	src/cpu/core_dyn_x86.cpp	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes	file:
BR_O	src/cpu/core_dynrec/decoder_basic.h	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes
BR_O	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_O,BR_NO,BR_B,BR_NB,$/;"	e	enum:BranchTypes
BR_Opcode	src/cpu/core_dyn_x86.cpp	/^	BR_Opcode,$/;"	e	enum:BlockReturn	file:
BR_Opcode	src/cpu/core_dynrec.cpp	/^	BR_Opcode,$/;"	e	enum:BlockReturn	file:
BR_OpcodeFull	src/cpu/core_dyn_x86.cpp	/^	BR_OpcodeFull,$/;"	e	enum:BlockReturn	file:
BR_OpcodeFull	src/cpu/core_dynrec.cpp	/^	BR_OpcodeFull,$/;"	e	enum:BlockReturn	file:
BR_P	src/cpu/core_dyn_x86.cpp	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes	file:
BR_P	src/cpu/core_dynrec/decoder_basic.h	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes
BR_P	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes
BR_S	src/cpu/core_dyn_x86.cpp	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes	file:
BR_S	src/cpu/core_dynrec/decoder_basic.h	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes
BR_S	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_S,BR_NS,BR_P,BR_NP,$/;"	e	enum:BranchTypes
BR_SMCBlock	src/cpu/core_dyn_x86.cpp	/^	BR_SMCBlock$/;"	e	enum:BlockReturn	file:
BR_SMCBlock	src/cpu/core_dynrec.cpp	/^	BR_SMCBlock$/;"	e	enum:BlockReturn	file:
BR_Z	src/cpu/core_dyn_x86.cpp	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes	file:
BR_Z	src/cpu/core_dynrec/decoder_basic.h	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes
BR_Z	src/cpu/core_dynrec/save/decoder_basic.h	/^	BR_Z,BR_NZ,BR_BE,BR_NBE,$/;"	e	enum:BranchTypes
BS	src/libs/gui_tk/gui_tk.h	/^	enum SpecialChar { CR = '\\r', LF = '\\n', BS = '\\b', Tab = '\\t', Space = ' ', ESC = 27 };$/;"	e	enum:GUI::Font::SpecialChar
BSWAP	src/cpu/arminst.h	963;"	d
BSWAP	src/cpu/instructions.h	959;"	d
BUILD_Y8950	src/hardware/fmopl.h	7;"	d
BUILD_YM3526	src/hardware/fmopl.h	6;"	d
BUILD_YM3812	src/hardware/fmopl.h	5;"	d
BUILD_YMF262	src/hardware/ymf262.h	5;"	d
BW	src/gui/sdl_mapper.cpp	1775;"	d	file:
Background	src/libs/gui_tk/gui_tk.cpp	/^RGB Background = 0xffc0c0c0;$/;"	m	namespace:GUI::Color	file:
Background3D	src/libs/gui_tk/gui_tk.cpp	/^RGB Background3D = 0xffc0c0c0;$/;"	m	namespace:GUI::Color	file:
Backspace	src/libs/gui_tk/gui_tk.h	/^		Up, Down, Left, Right, Backspace, Tab, Backtab, Enter, Escape,$/;"	e	enum:GUI::Key::Special
Backtab	src/libs/gui_tk/gui_tk.h	/^		Up, Down, Left, Right, Backspace, Tab, Backtab, Enter, Escape,$/;"	e	enum:GUI::Key::Special
BankSize	src/ints/int10_vesa.cpp	/^	Bit8u BankSize;$/;"	m	struct:MODE_INFO	file:
BaseDS	src/cpu/core_simple.cpp	103;"	d	file:
BaseDS	src/cpu/core_verysimple.cpp	93;"	d	file:
BaseSS	src/cpu/core_simple.cpp	104;"	d	file:
BaseSS	src/cpu/core_verysimple.cpp	94;"	d	file:
BatchFile	include/shell.h	/^class BatchFile {$/;"	c
BatchFile	src/shell/shell_batch.cpp	/^BatchFile::BatchFile(DOS_Shell * host,char const * const name, char const * const cmd_line) {$/;"	f	class:BatchFile
Bd	src/debug/disasm_tables.h	/^	Bd,Bw,$/;"	e	enum:__anon111
BeginScaler	src/gui/render_16.h	66;"	d
BeginScaler	src/gui/render_32.h	66;"	d
BeginScaler	src/gui/render_8.h	69;"	d
BeginScaler	src/gui/render_9.h	69;"	d
BeginScalerGX	src/gui/render_16.h	103;"	d
BeginScalerGX	src/gui/render_32.h	103;"	d
BeginScalerGX	src/gui/render_8.h	121;"	d
BeginScalerGX	src/gui/render_9.h	121;"	d
BestMatch	src/hardware/memory.cpp	/^INLINE Bitu BestMatch(Bitu size) {$/;"	f
Big	include/cpu.h	/^	Bitu Big(void) {$/;"	f	class:Descriptor
BinaryFile	src/dos/cdrom.h	/^	class BinaryFile : public TrackFile {$/;"	c	class:CDROM_Interface_Image
BinaryFile	src/dos/cdrom_image.cpp	/^CDROM_Interface_Image::BinaryFile::BinaryFile(const char *filename, bool &error)$/;"	f	class:CDROM_Interface_Image::BinaryFile
BindName	src/gui/sdl_mapper.cpp	/^	void BindName(char * buf) {$/;"	f	class:CJAxisBind
BindName	src/gui/sdl_mapper.cpp	/^	void BindName(char * buf) {$/;"	f	class:CJButtonBind
BindName	src/gui/sdl_mapper.cpp	/^	void BindName(char * buf) {$/;"	f	class:CJHatBind
BindName	src/gui/sdl_mapper.cpp	/^	void BindName(char * buf) {$/;"	f	class:CKeyBind
BindStart	src/gui/sdl_mapper.cpp	/^	const char * BindStart(void) {$/;"	f	class:CKeyBindGroup	file:
BindStart	src/gui/sdl_mapper.cpp	/^	const char * BindStart(void) {$/;"	f	class:CStickBindGroup	file:
Bit16s	config.h	/^  typedef   signed short Bit16s;$/;"	t
Bit16s	include/modules.h	/^typedef signed short Bit16s;$/;"	t
Bit16s	src/platform/visualc/config.h	/^typedef   signed short		Bit16s;$/;"	t
Bit16u	config.h	/^  typedef unsigned short Bit16u;$/;"	t
Bit16u	include/modules.h	/^typedef unsigned short Bit16u;$/;"	t
Bit16u	src/platform/visualc/config.h	/^typedef unsigned short		Bit16u;$/;"	t
Bit32s	config.h	/^  typedef   signed int Bit32s;$/;"	t
Bit32s	config.h	/^  typedef   signed long Bit32s;$/;"	t
Bit32s	include/modules.h	/^typedef signed long Bit32s;$/;"	t
Bit32s	src/platform/visualc/config.h	/^typedef    signed long		Bit32s;$/;"	t
Bit32u	config.h	/^  typedef unsigned int Bit32u;$/;"	t
Bit32u	config.h	/^  typedef unsigned long Bit32u;$/;"	t
Bit32u	include/modules.h	/^typedef unsigned long Bit32u;$/;"	t
Bit32u	src/platform/visualc/config.h	/^typedef  unsigned long		Bit32u;$/;"	t
Bit64s	config.h	/^  typedef   signed long Bit64s;$/;"	t
Bit64s	config.h	/^  typedef   signed long long Bit64s;$/;"	t
Bit64s	include/modules.h	/^typedef signed __int64 Bit64s;$/;"	t
Bit64s	include/modules.h	/^typedef signed long long int Bit64s;$/;"	t
Bit64s	src/platform/visualc/config.h	/^typedef   signed __int64	Bit64s;$/;"	t
Bit64u	config.h	/^  typedef unsigned long Bit64u;$/;"	t
Bit64u	config.h	/^  typedef unsigned long long Bit64u;$/;"	t
Bit64u	include/modules.h	/^typedef unsigned __int64 Bit64u;$/;"	t
Bit64u	include/modules.h	/^typedef unsigned long long int Bit64u;$/;"	t
Bit64u	src/platform/visualc/config.h	/^typedef unsigned __int64	Bit64u;$/;"	t
Bit8s	config.h	/^  typedef   signed char Bit8s;$/;"	t
Bit8s	include/modules.h	/^typedef signed char Bit8s;$/;"	t
Bit8s	src/platform/visualc/config.h	/^typedef    signed char		Bit8s;$/;"	t
Bit8u	config.h	/^  typedef unsigned char Bit8u;$/;"	t
Bit8u	include/modules.h	/^typedef unsigned char Bit8u;$/;"	t
Bit8u	src/platform/visualc/config.h	/^typedef  unsigned char		Bit8u;$/;"	t
BitmapFont	src/libs/gui_tk/gui_tk.h	/^class BitmapFont : public Font {$/;"	c	namespace:GUI
Bits	config.h	/^  typedef Bit32s Bits;$/;"	t
Bits	config.h	/^  typedef Bit64s Bits;$/;"	t
Bits	src/platform/visualc/config.h	/^typedef signed int			Bits;$/;"	t
BitsPerPixel	src/ints/int10_vesa.cpp	/^	Bit8u BitsPerPixel;$/;"	m	struct:MODE_INFO	file:
Bitu	config.h	/^  typedef Bit32u Bitu;$/;"	t
Bitu	config.h	/^  typedef Bit64u Bitu;$/;"	t
Bitu	src/platform/visualc/config.h	/^typedef unsigned int		Bitu;$/;"	t
Black	src/libs/gui_tk/gui_tk.h	/^const RGB Black = 0xff000000;$/;"	m	namespace:GUI::Color
BlahModes	include/mixer.h	/^enum BlahModes {$/;"	g
BlockNumber	src/platform/visualc/ntddcdrm.h	/^  UCHAR  BlockNumber : 3;$/;"	m	struct:_CDROM_TOC_CD_TEXT_DATA_BLOCK
BlockReturn	src/cpu/core_dyn_x86.cpp	/^enum BlockReturn {$/;"	g	file:
BlockReturn	src/cpu/core_dynrec.cpp	/^enum BlockReturn {$/;"	g	file:
Blue	src/libs/gui_tk/gui_tk.h	/^const RGB Blue = Black|BlueMask;$/;"	m	namespace:GUI::Color
BlueMask	src/libs/gui_tk/gui_tk.h	/^const RGB BlueMask = 0x000000ff;$/;"	m	namespace:GUI::Color
BlueMaskPos	src/ints/int10_vesa.cpp	/^	Bit8u BlueMaskPos;$/;"	m	struct:MODE_INFO	file:
BlueMaskSize	src/ints/int10_vesa.cpp	/^	Bit8u BlueMaskSize;$/;"	m	struct:MODE_INFO	file:
BlueShift	src/libs/gui_tk/gui_tk.h	/^const int BlueShift = 0;$/;"	m	namespace:GUI::Color
Border	src/libs/gui_tk/gui_tk.cpp	/^RGB Border = 0xff000000;$/;"	m	namespace:GUI::Color	file:
BorderedWindow	src/libs/gui_tk/gui_tk.h	/^	BorderedWindow(Window *parent, int x, int y, int w, int h, int bl, int bt, int br, int bb) :$/;"	f	class:GUI::BorderedWindow
BorderedWindow	src/libs/gui_tk/gui_tk.h	/^class BorderedWindow : public Window {$/;"	c	namespace:GUI
BranchTypes	src/cpu/core_dyn_x86.cpp	/^enum BranchTypes {$/;"	g	file:
BranchTypes	src/cpu/core_dynrec/decoder_basic.h	/^enum BranchTypes {$/;"	g
BranchTypes	src/cpu/core_dynrec/save/decoder_basic.h	/^enum BranchTypes {$/;"	g
Break	src/libs/gui_tk/gui_tk.h	/^		Print, Pause, Break, CapsLock, NumLock, ScrollLock,$/;"	e	enum:GUI::Key::Special
BusData	src/platform/visualc/ntddscsi.h	/^	SCSI_BUS_DATA  BusData[1];$/;"	m	struct:_SCSI_ADAPTER_BUS_INFO
Button	src/libs/gui_tk/gui_tk.h	/^	Button(Window *parent, int x, int y, int w, int h) : BorderedWindow(parent,x,y,w,h,6,5,6,5), ActionEventSource("GUI::Button"), pressed(0) {}$/;"	f	class:GUI::Button
Button	src/libs/gui_tk/gui_tk.h	/^class Button : public BorderedWindow, public ActionEventSource {$/;"	c	namespace:GUI
Button	src/libs/gui_tk/gui_tk.h	/^template <typename STR> Button::Button(Window *parent, int x, int y, const STR text, int w, int h) :$/;"	f	class:GUI::Button
ButtonName	src/gui/sdl_mapper.cpp	/^	const char * ButtonName(void) {$/;"	f	class:CHandlerEvent
Bw	src/debug/disasm_tables.h	/^	Bd,Bw,$/;"	e	enum:__anon111
ByteCombo	src/cpu/core_dyn_x86.cpp	/^enum ByteCombo {$/;"	g	file:
ByteTransmitted	src/hardware/serialport/serialport.cpp	/^void CSerial::ByteTransmitted () {$/;"	f	class:CSerial
ByteTransmitting	src/hardware/serialport/serialport.cpp	/^void CSerial::ByteTransmitting() {$/;"	f	class:CSerial
BytesPerScanLine	src/ints/int10_vesa.cpp	/^	Bit16u BytesPerScanLine;$/;"	m	struct:MODE_INFO	file:
C4AxisBindGroup	src/gui/sdl_mapper.cpp	/^	C4AxisBindGroup(Bitu _stick,Bitu _emustick) : CStickBindGroup (_stick,_emustick){$/;"	f	class:C4AxisBindGroup
C4AxisBindGroup	src/gui/sdl_mapper.cpp	/^class C4AxisBindGroup : public  CStickBindGroup {$/;"	c	file:
CACHE_ALIGN	src/cpu/core_dyn_x86.cpp	59;"	d	file:
CACHE_ALIGN	src/cpu/core_dynrec.cpp	61;"	d	file:
CACHE_BLOCKS	src/cpu/core_dyn_x86.cpp	58;"	d	file:
CACHE_BLOCKS	src/cpu/core_dynrec.cpp	60;"	d	file:
CACHE_DATA_ALIGN	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	69;"	d
CACHE_DATA_ALIGN	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	69;"	d
CACHE_DATA_ALIGN	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	69;"	d
CACHE_DATA_ALIGN	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	69;"	d
CACHE_DATA_JUMP	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	68;"	d
CACHE_DATA_JUMP	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	68;"	d
CACHE_DATA_JUMP	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	68;"	d
CACHE_DATA_JUMP	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	68;"	d
CACHE_DATA_MAX	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	71;"	d
CACHE_DATA_MAX	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	71;"	d
CACHE_DATA_MAX	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	71;"	d
CACHE_DATA_MAX	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	71;"	d
CACHE_DATA_MIN	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	70;"	d
CACHE_DATA_MIN	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	70;"	d
CACHE_DATA_MIN	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	70;"	d
CACHE_DATA_MIN	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	70;"	d
CACHE_MAXSIZE	src/cpu/core_dyn_x86.cpp	55;"	d	file:
CACHE_MAXSIZE	src/cpu/core_dynrec.cpp	57;"	d	file:
CACHE_PAGES	src/cpu/core_dyn_x86.cpp	57;"	d	file:
CACHE_PAGES	src/cpu/core_dynrec.cpp	59;"	d	file:
CACHE_SYNC_ALL	src/cpu/core_dynrec/risc_armv4le-common.h	102;"	d
CACHE_SYNC_ALL	src/cpu/core_dynrec/save/risc_armv4le-common.h	102;"	d
CACHE_SYNC_DISCARD	src/cpu/core_dynrec/risc_armv4le-common.h	94;"	d
CACHE_SYNC_DISCARD	src/cpu/core_dynrec/save/risc_armv4le-common.h	94;"	d
CACHE_SYNC_FLUSH_D_TLB	src/cpu/core_dynrec/risc_armv4le-common.h	98;"	d
CACHE_SYNC_FLUSH_D_TLB	src/cpu/core_dynrec/save/risc_armv4le-common.h	98;"	d
CACHE_SYNC_FLUSH_I_TLB	src/cpu/core_dynrec/risc_armv4le-common.h	97;"	d
CACHE_SYNC_FLUSH_I_TLB	src/cpu/core_dynrec/save/risc_armv4le-common.h	97;"	d
CACHE_SYNC_FLUSH_TLB	src/cpu/core_dynrec/risc_armv4le-common.h	99;"	d
CACHE_SYNC_FLUSH_TLB	src/cpu/core_dynrec/save/risc_armv4le-common.h	99;"	d
CACHE_SYNC_INSTRUCTIONS	src/cpu/core_dynrec/risc_armv4le-common.h	95;"	d
CACHE_SYNC_INSTRUCTIONS	src/cpu/core_dynrec/save/risc_armv4le-common.h	95;"	d
CACHE_SYNC_L2_DISCARD	src/cpu/core_dynrec/risc_armv4le-common.h	101;"	d
CACHE_SYNC_L2_DISCARD	src/cpu/core_dynrec/save/risc_armv4le-common.h	101;"	d
CACHE_SYNC_L2_WRITEBACK	src/cpu/core_dynrec/risc_armv4le-common.h	100;"	d
CACHE_SYNC_L2_WRITEBACK	src/cpu/core_dynrec/save/risc_armv4le-common.h	100;"	d
CACHE_SYNC_WRITEBACK	src/cpu/core_dynrec/risc_armv4le-common.h	96;"	d
CACHE_SYNC_WRITEBACK	src/cpu/core_dynrec/save/risc_armv4le-common.h	96;"	d
CACHE_TOTAL	src/cpu/core_dyn_x86.cpp	56;"	d	file:
CACHE_TOTAL	src/cpu/core_dynrec.cpp	58;"	d	file:
CALCVOL	src/hardware/sblaster.cpp	1053;"	d	file:
CALC_FCSLOT	src/hardware/fmopl.cpp	/^INLINE void CALC_FCSLOT(OPL_CH *CH,OPL_SLOT *SLOT)$/;"	f
CALC_FCSLOT	src/hardware/ymf262.cpp	/^INLINE void CALC_FCSLOT(OPL3_CH *CH,OPL3_SLOT *SLOT)$/;"	f
CALLBACK_Allocate	src/cpu/callback.cpp	/^Bitu CALLBACK_Allocate(void) {$/;"	f
CALLBACK_DeAllocate	src/cpu/callback.cpp	/^void CALLBACK_DeAllocate(Bitu in) {$/;"	f
CALLBACK_GetBase	include/callback.h	/^INLINE PhysPt CALLBACK_GetBase(void) {$/;"	f
CALLBACK_GetDescription	src/cpu/callback.cpp	/^const char* CALLBACK_GetDescription(Bitu nr) {$/;"	f
CALLBACK_HandlerObject	include/callback.h	/^	CALLBACK_HandlerObject():installed(false),m_type(NONE){vectorhandler.installed=false;}$/;"	f	class:CALLBACK_HandlerObject
CALLBACK_HandlerObject	include/callback.h	/^class CALLBACK_HandlerObject{$/;"	c
CALLBACK_Idle	src/cpu/callback.cpp	/^void CALLBACK_Idle(void) {$/;"	f
CALLBACK_Init	src/cpu/callback.cpp	/^void CALLBACK_Init(Section* sec) {$/;"	f
CALLBACK_PhysPointer	include/callback.h	/^INLINE PhysPt CALLBACK_PhysPointer(Bitu callback) {$/;"	f
CALLBACK_RealPointer	include/callback.h	/^INLINE RealPt CALLBACK_RealPointer(Bitu callback) {$/;"	f
CALLBACK_RemoveSetup	src/cpu/callback.cpp	/^void CALLBACK_RemoveSetup(Bitu callback) {$/;"	f
CALLBACK_RunRealFar	src/cpu/callback.cpp	/^void CALLBACK_RunRealFar(Bit16u seg,Bit16u off) {$/;"	f
CALLBACK_RunRealInt	src/cpu/callback.cpp	/^void CALLBACK_RunRealInt(Bit8u intnum) {$/;"	f
CALLBACK_SCF	src/cpu/callback.cpp	/^void CALLBACK_SCF(bool val) {$/;"	f
CALLBACK_SZF	src/cpu/callback.cpp	/^void CALLBACK_SZF(bool val) {$/;"	f
CALLBACK_SetDescription	src/cpu/callback.cpp	/^void CALLBACK_SetDescription(Bitu nr, const char* descr) {$/;"	f
CALLBACK_Setup	src/cpu/callback.cpp	/^Bitu CALLBACK_Setup(Bitu callback,CallBack_Handler handler,Bitu type,PhysPt addr,const char* descr) {$/;"	f
CALLBACK_Setup	src/cpu/callback.cpp	/^bool CALLBACK_Setup(Bitu callback,CallBack_Handler handler,Bitu type,const char* descr) {$/;"	f
CALLBACK_SetupExtra	src/cpu/callback.cpp	/^Bitu CALLBACK_SetupExtra(Bitu callback, Bitu type, PhysPt physAddress, bool use_cb=true) {$/;"	f
CAN_USE_LOCK	src/ints/bios_keyboard.cpp	31;"	d	file:
CAPTURE_AddAviChunk	src/hardware/hardware.cpp	/^static void CAPTURE_AddAviChunk(const char * tag, Bit32u size, void * data, Bit32u flags) {$/;"	f	file:
CAPTURE_AddImage	src/hardware/hardware.cpp	/^void CAPTURE_AddImage(Bitu width, Bitu height, Bitu bpp, Bitu pitch, Bitu flags, float fps, Bit8u * data, Bit8u * pal) {$/;"	f
CAPTURE_AddMidi	src/hardware/hardware.cpp	/^void CAPTURE_AddMidi(bool sysex, Bitu len, Bit8u * data) {$/;"	f
CAPTURE_AddWave	src/hardware/hardware.cpp	/^void CAPTURE_AddWave(Bit32u freq, Bit32u len, Bit16s * data) {$/;"	f
CAPTURE_FLAG_DBLH	include/hardware.h	46;"	d
CAPTURE_FLAG_DBLW	include/hardware.h	45;"	d
CAPTURE_IMAGE	include/hardware.h	31;"	d
CAPTURE_MIDI	include/hardware.h	30;"	d
CAPTURE_MidiEvent	src/hardware/hardware.cpp	/^static void CAPTURE_MidiEvent(bool pressed) {$/;"	f	file:
CAPTURE_OPL	include/hardware.h	29;"	d
CAPTURE_ScreenShotEvent	src/hardware/hardware.cpp	/^static void CAPTURE_ScreenShotEvent(bool pressed) {$/;"	f	file:
CAPTURE_VIDEO	include/hardware.h	32;"	d
CAPTURE_VideoEvent	src/hardware/hardware.cpp	/^static void CAPTURE_VideoEvent(bool pressed) {$/;"	f	file:
CAPTURE_WAVE	include/hardware.h	28;"	d
CAPTURE_WaveEvent	src/hardware/hardware.cpp	/^static void CAPTURE_WaveEvent(bool pressed) {$/;"	f	file:
CAPWORD	src/hardware/serialport/misc_util.h	37;"	d
CAPWORD	src/hardware/serialport/misc_util.h	39;"	d
CASE_0F_B	src/cpu/core_normal/helpers.h	161;"	d
CASE_0F_D	src/cpu/core_normal/helpers.h	158;"	d
CASE_0F_D	src/cpu/core_verysimple.cpp	122;"	d	file:
CASE_0F_D	src/cpu/core_verysimple.cpp	123;"	d	file:
CASE_0F_W	src/cpu/core_normal/helpers.h	155;"	d
CASE_B	src/cpu/core_normal/helpers.h	151;"	d
CASE_D	src/cpu/core_normal/helpers.h	148;"	d
CASE_D	src/cpu/core_verysimple.cpp	119;"	d	file:
CASE_D	src/cpu/core_verysimple.cpp	120;"	d	file:
CASE_W	src/cpu/core_normal/helpers.h	145;"	d
CBRET_NONE	include/callback.h	/^	CBRET_NONE=0,CBRET_STOP=1$/;"	e	enum:__anon2
CBRET_STOP	include/callback.h	/^	CBRET_NONE=0,CBRET_STOP=1$/;"	e	enum:__anon2
CB_HOOKABLE	include/callback.h	/^		CB_INT29,CB_INT16,CB_HOOKABLE,CB_TDE_IRET,CB_IPXESR,CB_IPXESR_RET,$/;"	e	enum:__anon1
CB_INT16	include/callback.h	/^		CB_INT29,CB_INT16,CB_HOOKABLE,CB_TDE_IRET,CB_IPXESR,CB_IPXESR_RET,$/;"	e	enum:__anon1
CB_INT21	include/callback.h	/^		CB_INT21 };$/;"	e	enum:__anon1
CB_INT29	include/callback.h	/^		CB_INT29,CB_INT16,CB_HOOKABLE,CB_TDE_IRET,CB_IPXESR,CB_IPXESR_RET,$/;"	e	enum:__anon1
CB_IPXESR	include/callback.h	/^		CB_INT29,CB_INT16,CB_HOOKABLE,CB_TDE_IRET,CB_IPXESR,CB_IPXESR_RET,$/;"	e	enum:__anon1
CB_IPXESR_RET	include/callback.h	/^		CB_INT29,CB_INT16,CB_HOOKABLE,CB_TDE_IRET,CB_IPXESR,CB_IPXESR_RET,$/;"	e	enum:__anon1
CB_IRET	include/callback.h	/^enum { CB_RETN,CB_RETF,CB_RETF8,CB_IRET,CB_IRETD,CB_IRET_STI,CB_IRET_EOI_PIC1,$/;"	e	enum:__anon1
CB_IRETD	include/callback.h	/^enum { CB_RETN,CB_RETF,CB_RETF8,CB_IRET,CB_IRETD,CB_IRET_STI,CB_IRET_EOI_PIC1,$/;"	e	enum:__anon1
CB_IRET_EOI_PIC1	include/callback.h	/^enum { CB_RETN,CB_RETF,CB_RETF8,CB_IRET,CB_IRETD,CB_IRET_STI,CB_IRET_EOI_PIC1,$/;"	e	enum:__anon1
CB_IRET_STI	include/callback.h	/^enum { CB_RETN,CB_RETF,CB_RETF8,CB_IRET,CB_IRETD,CB_IRET_STI,CB_IRET_EOI_PIC1,$/;"	e	enum:__anon1
CB_IRQ0	include/callback.h	/^		CB_IRQ0,CB_IRQ1,CB_IRQ9,CB_IRQ12,CB_IRQ12_RET,CB_IRQ6_PCJR,CB_MOUSE,$/;"	e	enum:__anon1
CB_IRQ1	include/callback.h	/^		CB_IRQ0,CB_IRQ1,CB_IRQ9,CB_IRQ12,CB_IRQ12_RET,CB_IRQ6_PCJR,CB_MOUSE,$/;"	e	enum:__anon1
CB_IRQ12	include/callback.h	/^		CB_IRQ0,CB_IRQ1,CB_IRQ9,CB_IRQ12,CB_IRQ12_RET,CB_IRQ6_PCJR,CB_MOUSE,$/;"	e	enum:__anon1
CB_IRQ12_RET	include/callback.h	/^		CB_IRQ0,CB_IRQ1,CB_IRQ9,CB_IRQ12,CB_IRQ12_RET,CB_IRQ6_PCJR,CB_MOUSE,$/;"	e	enum:__anon1
CB_IRQ6_PCJR	include/callback.h	/^		CB_IRQ0,CB_IRQ1,CB_IRQ9,CB_IRQ12,CB_IRQ12_RET,CB_IRQ6_PCJR,CB_MOUSE,$/;"	e	enum:__anon1
CB_IRQ9	include/callback.h	/^		CB_IRQ0,CB_IRQ1,CB_IRQ9,CB_IRQ12,CB_IRQ12_RET,CB_IRQ6_PCJR,CB_MOUSE,$/;"	e	enum:__anon1
CB_MAX	include/callback.h	36;"	d
CB_MOUSE	include/callback.h	/^		CB_IRQ0,CB_IRQ1,CB_IRQ9,CB_IRQ12,CB_IRQ12_RET,CB_IRQ6_PCJR,CB_MOUSE,$/;"	e	enum:__anon1
CB_POS	src/misc/programs.cpp	50;"	d	file:
CB_RETF	include/callback.h	/^enum { CB_RETN,CB_RETF,CB_RETF8,CB_IRET,CB_IRETD,CB_IRET_STI,CB_IRET_EOI_PIC1,$/;"	e	enum:__anon1
CB_RETF8	include/callback.h	/^enum { CB_RETN,CB_RETF,CB_RETF8,CB_IRET,CB_IRETD,CB_IRET_STI,CB_IRET_EOI_PIC1,$/;"	e	enum:__anon1
CB_RETN	include/callback.h	/^enum { CB_RETN,CB_RETF,CB_RETF8,CB_IRET,CB_IRETD,CB_IRET_STI,CB_IRET_EOI_PIC1,$/;"	e	enum:__anon1
CB_SEG	include/callback.h	38;"	d
CB_SIZE	include/callback.h	37;"	d
CB_TDE_IRET	include/callback.h	/^		CB_INT29,CB_INT16,CB_HOOKABLE,CB_TDE_IRET,CB_IPXESR,CB_IPXESR_RET,$/;"	e	enum:__anon1
CBind	src/gui/sdl_mapper.cpp	/^	CBind(CBindList * _list) {$/;"	f	class:CBind
CBind	src/gui/sdl_mapper.cpp	/^class CBind {$/;"	c	file:
CBindButton	src/gui/sdl_mapper.cpp	/^	CBindButton(Bitu _x,Bitu _y,Bitu _dx,Bitu _dy,const char * _text,BB_Types _type) $/;"	f	class:CBindButton
CBindButton	src/gui/sdl_mapper.cpp	/^class CBindButton : public CTextButton {$/;"	c	file:
CBindGroup	src/gui/sdl_mapper.cpp	/^	CBindGroup() {$/;"	f	class:CBindGroup
CBindGroup	src/gui/sdl_mapper.cpp	/^class CBindGroup {$/;"	c	file:
CBindGroup_it	src/gui/sdl_mapper.cpp	/^typedef std::vector<CBindGroup *>::iterator CBindGroup_it;$/;"	t	file:
CBindList	src/gui/sdl_mapper.cpp	/^typedef std::list<CBind *> CBindList;$/;"	t	file:
CBindList_it	src/gui/sdl_mapper.cpp	/^typedef std::list<CBind *>::iterator CBindList_it;$/;"	t	file:
CBreakpoint	src/debug/debug.cpp	/^CBreakpoint::CBreakpoint(void):$/;"	f	class:CBreakpoint
CBreakpoint	src/debug/debug.cpp	/^class CBreakpoint$/;"	c	file:
CButton	src/gui/sdl_mapper.cpp	/^	CButton(Bitu _x,Bitu _y,Bitu _dx,Bitu _dy) {$/;"	f	class:CButton
CButton	src/gui/sdl_mapper.cpp	/^class CButton {$/;"	c	file:
CButton_it	src/gui/sdl_mapper.cpp	/^typedef std::vector<CButton *>::iterator CButton_it;$/;"	t	file:
CCHBindGroup	src/gui/sdl_mapper.cpp	/^	CCHBindGroup(Bitu _stick,Bitu _emustick) : CStickBindGroup (_stick,_emustick){$/;"	f	class:CCHBindGroup
CCHBindGroup	src/gui/sdl_mapper.cpp	/^class CCHBindGroup : public  CStickBindGroup {$/;"	c	file:
CCaptionButton	src/gui/sdl_mapper.cpp	/^	CCaptionButton(Bitu _x,Bitu _y,Bitu _dx,Bitu _dy) : CButton(_x,_y,_dx,_dy){$/;"	f	class:CCaptionButton
CCaptionButton	src/gui/sdl_mapper.cpp	/^class CCaptionButton : public CButton {$/;"	c	file:
CCheckButton	src/gui/sdl_mapper.cpp	/^	CCheckButton(Bitu _x,Bitu _y,Bitu _dx,Bitu _dy,const char * _text,BC_Types _type) $/;"	f	class:CCheckButton
CCheckButton	src/gui/sdl_mapper.cpp	/^class CCheckButton : public CTextButton {$/;"	c	file:
CContinuousEvent	src/gui/sdl_mapper.cpp	/^	CContinuousEvent(char const * const _entry) : CEvent(_entry) {}$/;"	f	class:CContinuousEvent
CContinuousEvent	src/gui/sdl_mapper.cpp	/^class CContinuousEvent : public CEvent {$/;"	c	file:
CDAudioCallBack	src/dos/cdrom_image.cpp	/^void CDROM_Interface_Image::CDAudioCallBack(Bitu len)$/;"	f	class:CDROM_Interface_Image
CDBByte	src/dos/wnaspi32.h	/^    BYTE        CDBByte[16];                    \/\/ 30\/048 SCSI CDB$/;"	m	struct:__anon126
CDDA	src/platform/visualc/ntddcdrm.h	/^	CDDA$/;"	e	enum:_TRACK_MODE_TYPE
CDIOCTL_CDA_DIO	src/dos/cdrom.h	/^	enum cdioctl_cdatype { CDIOCTL_CDA_DIO, CDIOCTL_CDA_MCI, CDIOCTL_CDA_DX };$/;"	e	enum:CDROM_Interface_Ioctl::cdioctl_cdatype
CDIOCTL_CDA_DX	src/dos/cdrom.h	/^	enum cdioctl_cdatype { CDIOCTL_CDA_DIO, CDIOCTL_CDA_MCI, CDIOCTL_CDA_DX };$/;"	e	enum:CDROM_Interface_Ioctl::cdioctl_cdatype
CDIOCTL_CDA_MCI	src/dos/cdrom.h	/^	enum cdioctl_cdatype { CDIOCTL_CDA_DIO, CDIOCTL_CDA_MCI, CDIOCTL_CDA_DX };$/;"	e	enum:CDROM_Interface_Ioctl::cdioctl_cdatype
CDROM_AUDIO_CONTROL	src/platform/visualc/ntddcdrm.h	/^} CDROM_AUDIO_CONTROL, *PCDROM_AUDIO_CONTROL;$/;"	t	typeref:struct:_CDROM_AUDIO_CONTROL
CDROM_CD_TEXT_PACK_ALBUM_NAME	src/platform/visualc/ntddcdrm.h	191;"	d
CDROM_CD_TEXT_PACK_ARRANGER	src/platform/visualc/ntddcdrm.h	195;"	d
CDROM_CD_TEXT_PACK_COMPOSER	src/platform/visualc/ntddcdrm.h	194;"	d
CDROM_CD_TEXT_PACK_DISC_ID	src/platform/visualc/ntddcdrm.h	197;"	d
CDROM_CD_TEXT_PACK_GENRE	src/platform/visualc/ntddcdrm.h	198;"	d
CDROM_CD_TEXT_PACK_MESSAGES	src/platform/visualc/ntddcdrm.h	196;"	d
CDROM_CD_TEXT_PACK_PERFORMER	src/platform/visualc/ntddcdrm.h	192;"	d
CDROM_CD_TEXT_PACK_SIZE_INFO	src/platform/visualc/ntddcdrm.h	202;"	d
CDROM_CD_TEXT_PACK_SONGWRITER	src/platform/visualc/ntddcdrm.h	193;"	d
CDROM_CD_TEXT_PACK_TOC_INFO	src/platform/visualc/ntddcdrm.h	199;"	d
CDROM_CD_TEXT_PACK_TOC_INFO2	src/platform/visualc/ntddcdrm.h	200;"	d
CDROM_CD_TEXT_PACK_UPC_EAN	src/platform/visualc/ntddcdrm.h	201;"	d
CDROM_DISK_AUDIO_TRACK	src/platform/visualc/ntddcdrm.h	104;"	d
CDROM_DISK_DATA	src/platform/visualc/ntddcdrm.h	/^} CDROM_DISK_DATA, *PCDROM_DISK_DATA;$/;"	t	typeref:struct:_CDROM_DISK_DATA
CDROM_DISK_DATA_TRACK	src/platform/visualc/ntddcdrm.h	105;"	d
CDROM_GetMountType	src/dos/cdrom.cpp	/^int CDROM_GetMountType(char* path, int forceCD)$/;"	f
CDROM_Image_Destroy	src/dos/cdrom_image.cpp	/^void CDROM_Image_Destroy(Section*) {$/;"	f
CDROM_Image_Init	src/dos/cdrom_image.cpp	/^void CDROM_Image_Init(Section* section) {$/;"	f
CDROM_Interface	src/dos/cdrom.h	/^class CDROM_Interface$/;"	c
CDROM_Interface_Aspi	src/dos/cdrom.h	/^class CDROM_Interface_Aspi : public CDROM_Interface$/;"	c
CDROM_Interface_Aspi	src/dos/cdrom_aspi_win32.cpp	/^CDROM_Interface_Aspi::CDROM_Interface_Aspi(void)$/;"	f	class:CDROM_Interface_Aspi
CDROM_Interface_Fake	src/dos/cdrom.h	/^class CDROM_Interface_Fake : public CDROM_Interface$/;"	c
CDROM_Interface_Image	src/dos/cdrom.h	/^class CDROM_Interface_Image : public CDROM_Interface$/;"	c
CDROM_Interface_Image	src/dos/cdrom_image.cpp	/^CDROM_Interface_Image::CDROM_Interface_Image(Bit8u subUnit)$/;"	f	class:CDROM_Interface_Image
CDROM_Interface_Ioctl	src/dos/cdrom.h	/^class CDROM_Interface_Ioctl : public CDROM_Interface$/;"	c
CDROM_Interface_Ioctl	src/dos/cdrom.h	/^class CDROM_Interface_Ioctl : public CDROM_Interface_SDL$/;"	c
CDROM_Interface_Ioctl	src/dos/cdrom_ioctl_linux.cpp	/^CDROM_Interface_Ioctl::CDROM_Interface_Ioctl(void) : CDROM_Interface_SDL()$/;"	f	class:CDROM_Interface_Ioctl
CDROM_Interface_Ioctl	src/dos/cdrom_ioctl_os2.cpp	/^CDROM_Interface_Ioctl::CDROM_Interface_Ioctl(void) : CDROM_Interface_SDL(){$/;"	f	class:CDROM_Interface_Ioctl
CDROM_Interface_Ioctl	src/dos/cdrom_ioctl_win32.cpp	/^CDROM_Interface_Ioctl::CDROM_Interface_Ioctl(cdioctl_cdatype ioctl_cda) {$/;"	f	class:CDROM_Interface_Ioctl
CDROM_Interface_SDL	src/dos/cdrom.cpp	/^CDROM_Interface_SDL::CDROM_Interface_SDL(void) $/;"	f	class:CDROM_Interface_SDL
CDROM_Interface_SDL	src/dos/cdrom.h	/^class CDROM_Interface_SDL : public CDROM_Interface$/;"	c
CDROM_PLAY_AUDIO_MSF	src/platform/visualc/ntddcdrm.h	/^} CDROM_PLAY_AUDIO_MSF, *PCDROM_PLAY_AUDIO_MSF;$/;"	t	typeref:struct:_CDROM_PLAY_AUDIO_MSF
CDROM_READ_TOC_EX	src/platform/visualc/ntddcdrm.h	/^} CDROM_READ_TOC_EX, *PCDROM_READ_TOC_EX;$/;"	t	typeref:struct:_CDROM_READ_TOC_EX
CDROM_READ_TOC_EX_FORMAT_ATIP	src/platform/visualc/ntddcdrm.h	125;"	d
CDROM_READ_TOC_EX_FORMAT_CDTEXT	src/platform/visualc/ntddcdrm.h	126;"	d
CDROM_READ_TOC_EX_FORMAT_FULL_TOC	src/platform/visualc/ntddcdrm.h	123;"	d
CDROM_READ_TOC_EX_FORMAT_PMA	src/platform/visualc/ntddcdrm.h	124;"	d
CDROM_READ_TOC_EX_FORMAT_SESSION	src/platform/visualc/ntddcdrm.h	122;"	d
CDROM_READ_TOC_EX_FORMAT_TOC	src/platform/visualc/ntddcdrm.h	121;"	d
CDROM_SEEK_AUDIO_MSF	src/platform/visualc/ntddcdrm.h	/^} CDROM_SEEK_AUDIO_MSF, *PCDROM_SEEK_AUDIO_MSF;$/;"	t	typeref:struct:_CDROM_SEEK_AUDIO_MSF
CDROM_SUB_Q_DATA_FORMAT	src/platform/visualc/ntddcdrm.h	/^} CDROM_SUB_Q_DATA_FORMAT, *PCDROM_SUB_Q_DATA_FORMAT;$/;"	t	typeref:struct:_CDROM_SUB_Q_DATA_FORMAT
CDROM_TOC	src/platform/visualc/ntddcdrm.h	/^} CDROM_TOC, *PCDROM_TOC;$/;"	t	typeref:struct:_CDROM_TOC
CDROM_TOC_ATIP_DATA_BLOCK	src/platform/visualc/ntddcdrm.h	/^} CDROM_TOC_ATIP_DATA_BLOCK, *PCDROM_TOC_ATIP_DATA_BLOCK;$/;"	t	typeref:struct:_CDROM_TOC_ATIP_DATA_BLOCK
CDROM_TOC_CD_TEXT_DATA_BLOCK	src/platform/visualc/ntddcdrm.h	/^} CDROM_TOC_CD_TEXT_DATA_BLOCK, *PCDROM_TOC_CD_TEXT_DATA_BLOCK;$/;"	t	typeref:struct:_CDROM_TOC_CD_TEXT_DATA_BLOCK
CDROM_TOC_FULL_TOC_DATA_BLOCK	src/platform/visualc/ntddcdrm.h	/^} CDROM_TOC_FULL_TOC_DATA_BLOCK, *PCDROM_TOC_FULL_TOC_DATA_BLOCK;$/;"	t	typeref:struct:_CDROM_TOC_FULL_TOC_DATA_BLOCK
CDROM_TOC_SIZE	src/platform/visualc/ntddcdrm.h	161;"	d
CDROM_USE_ASPI	src/dos/cdrom.h	/^enum { CDROM_USE_SDL, CDROM_USE_ASPI, CDROM_USE_IOCTL_DIO, CDROM_USE_IOCTL_DX, CDROM_USE_IOCTL_MCI };$/;"	e	enum:__anon113
CDROM_USE_IOCTL_DIO	src/dos/cdrom.h	/^enum { CDROM_USE_SDL, CDROM_USE_ASPI, CDROM_USE_IOCTL_DIO, CDROM_USE_IOCTL_DX, CDROM_USE_IOCTL_MCI };$/;"	e	enum:__anon113
CDROM_USE_IOCTL_DX	src/dos/cdrom.h	/^enum { CDROM_USE_SDL, CDROM_USE_ASPI, CDROM_USE_IOCTL_DIO, CDROM_USE_IOCTL_DX, CDROM_USE_IOCTL_MCI };$/;"	e	enum:__anon113
CDROM_USE_IOCTL_MCI	src/dos/cdrom.h	/^enum { CDROM_USE_SDL, CDROM_USE_ASPI, CDROM_USE_IOCTL_DIO, CDROM_USE_IOCTL_DX, CDROM_USE_IOCTL_MCI };$/;"	e	enum:__anon113
CDROM_USE_SDL	src/dos/cdrom.h	/^enum { CDROM_USE_SDL, CDROM_USE_ASPI, CDROM_USE_IOCTL_DIO, CDROM_USE_IOCTL_DX, CDROM_USE_IOCTL_MCI };$/;"	e	enum:__anon113
CD_FRAMESIZE	src/dos/cdrom_ioctl_os2.cpp	34;"	d	file:
CD_FRAMESIZE_RAW	src/dos/cdrom_ioctl_os2.cpp	33;"	d	file:
CDebugVar	src/debug/debug.cpp	/^	CDebugVar(char* _name, PhysPt _adr) { adr=_adr; safe_strncpy(name,_name,16); };$/;"	f	class:CDebugVar
CDebugVar	src/debug/debug.cpp	/^class CDebugVar$/;"	c	file:
CDirectSerial	src/hardware/serialport/directserial_os2.cpp	/^CDirectSerial::CDirectSerial (Bitu id, CommandLine *cmd)$/;"	f	class:CDirectSerial
CDirectSerial	src/hardware/serialport/directserial_os2.h	/^class CDirectSerial : public CSerial {$/;"	c
CDirectSerial	src/hardware/serialport/directserial_posix.cpp	/^CDirectSerial::CDirectSerial (Bitu id, CommandLine* cmd)$/;"	f	class:CDirectSerial
CDirectSerial	src/hardware/serialport/directserial_posix.h	/^class CDirectSerial : public CSerial {$/;"	c
CDirectSerial	src/hardware/serialport/directserial_win32.cpp	/^CDirectSerial::CDirectSerial (Bitu id, CommandLine* cmd)$/;"	f	class:CDirectSerial
CDirectSerial	src/hardware/serialport/directserial_win32.h	/^class CDirectSerial : public CSerial {$/;"	c
CEvent	src/gui/sdl_mapper.cpp	/^	CEvent(char const * const _entry) {$/;"	f	class:CEvent
CEvent	src/gui/sdl_mapper.cpp	/^class CEvent {$/;"	c	file:
CEventButton	src/gui/sdl_mapper.cpp	/^	CEventButton(Bitu _x,Bitu _y,Bitu _dx,Bitu _dy,const char * _text,CEvent * _event) $/;"	f	class:CEventButton
CEventButton	src/gui/sdl_mapper.cpp	/^class CEventButton : public CTextButton {$/;"	c	file:
CEventList_it	src/gui/sdl_mapper.cpp	/^typedef std::list<CEvent *>::iterator CEventList_it;$/;"	t	file:
CEventVector_it	src/gui/sdl_mapper.cpp	/^typedef std::vector<CEvent *>::iterator CEventVector_it;$/;"	t	file:
CFCSBindGroup	src/gui/sdl_mapper.cpp	/^	CFCSBindGroup(Bitu _stick,Bitu _emustick) : CStickBindGroup (_stick,_emustick){$/;"	f	class:CFCSBindGroup
CFCSBindGroup	src/gui/sdl_mapper.cpp	/^class CFCSBindGroup : public  CStickBindGroup {$/;"	c	file:
CFifo	src/hardware/serialport/softmodem.h	/^	CFifo(Bitu _size) {$/;"	f	class:CFifo
CFifo	src/hardware/serialport/softmodem.h	/^class CFifo {$/;"	c
CFileInfo	include/dos_system.h	/^		CFileInfo(void) {$/;"	f	class:DOS_Drive_Cache::CFileInfo
CFileInfo	include/dos_system.h	/^	class CFileInfo {$/;"	c	class:DOS_Drive_Cache
CGA2_CopyRow	src/ints/int10_char.cpp	/^static INLINE void CGA2_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) { $/;"	f	file:
CGA2_FillRow	src/ints/int10_char.cpp	/^static INLINE void CGA2_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u attr) { $/;"	f	file:
CGA4_CopyRow	src/ints/int10_char.cpp	/^static INLINE void CGA4_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) {$/;"	f	file:
CGA4_FillRow	src/ints/int10_char.cpp	/^static INLINE void CGA4_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u attr) {$/;"	f	file:
CGA_16_Table	src/hardware/vga.cpp	/^Bit32u CGA_16_Table[256];$/;"	v
CGA_2_Table	src/hardware/vga.cpp	/^Bit32u CGA_2_Table[16];$/;"	v
CGA_4_HiRes_Table	src/hardware/vga.cpp	/^Bit32u CGA_4_HiRes_Table[256];$/;"	v
CGA_4_Table	src/hardware/vga.cpp	/^Bit32u CGA_4_Table[256];$/;"	v
CG_SRCDIR	Android.mk	/^CG_SRCDIR=LOCAL_PATH$/;"	m
CG_SUBDIRS	Android.mk	/^CG_SUBDIRS := \\$/;"	m
CHECKED	src/hardware/vga_memory.cpp	38;"	d	file:
CHECKED	src/hardware/vga_memory.cpp	42;"	d	file:
CHECKED2	src/hardware/vga_memory.cpp	40;"	d	file:
CHECKED2	src/hardware/vga_memory.cpp	43;"	d	file:
CHECKED3	src/hardware/vga_memory.cpp	46;"	d	file:
CHECKED4	src/hardware/vga_memory.cpp	47;"	d	file:
CHKPAL	src/gui/render_8.h	32;"	d
CHKPAL	src/gui/render_9.h	36;"	d
CH_LIST	include/control.h	37;"	d
CH_LIST	include/programs.h	32;"	d
CH_LIST	include/setup.h	31;"	d
CH_STRING	include/control.h	47;"	d
CH_STRING	include/programs.h	37;"	d
CH_STRING	include/setup.h	41;"	d
CH_VECTOR	include/control.h	42;"	d
CH_VECTOR	include/setup.h	36;"	d
CHandlerEvent	src/gui/sdl_mapper.cpp	/^	CHandlerEvent(char const * const _entry,MAPPER_Handler * _handler,MapKeys _key,Bitu _mod,char const * const _buttonname) : CTriggeredEvent(_entry) {$/;"	f	class:CHandlerEvent
CHandlerEvent	src/gui/sdl_mapper.cpp	/^class CHandlerEvent : public CTriggeredEvent {$/;"	c	file:
CHandlerEventVector_it	src/gui/sdl_mapper.cpp	/^typedef std::vector<CHandlerEvent *>::iterator CHandlerEventVector_it;$/;"	t	file:
CJAxisBind	src/gui/sdl_mapper.cpp	/^	CJAxisBind(CBindList * _list,CBindGroup * _group,Bitu _axis,bool _positive) : CBind(_list){$/;"	f	class:CJAxisBind
CJAxisBind	src/gui/sdl_mapper.cpp	/^class CJAxisBind : public CBind {$/;"	c	file:
CJAxisEvent	src/gui/sdl_mapper.cpp	/^	CJAxisEvent(char const * const _entry,Bitu _stick,Bitu _axis,bool _positive,CJAxisEvent * _opposite_axis) : CContinuousEvent(_entry) {$/;"	f	class:CJAxisEvent
CJAxisEvent	src/gui/sdl_mapper.cpp	/^class CJAxisEvent : public CContinuousEvent {$/;"	c	file:
CJButtonBind	src/gui/sdl_mapper.cpp	/^	CJButtonBind(CBindList * _list,CBindGroup * _group,Bitu _button) : CBind(_list) {$/;"	f	class:CJButtonBind
CJButtonBind	src/gui/sdl_mapper.cpp	/^class CJButtonBind : public CBind {$/;"	c	file:
CJButtonEvent	src/gui/sdl_mapper.cpp	/^	CJButtonEvent(char const * const _entry,Bitu _stick,Bitu _button) : CTriggeredEvent(_entry) {$/;"	f	class:CJButtonEvent
CJButtonEvent	src/gui/sdl_mapper.cpp	/^class CJButtonEvent : public CTriggeredEvent {$/;"	c	file:
CJHatBind	src/gui/sdl_mapper.cpp	/^	CJHatBind(CBindList * _list,CBindGroup * _group,Bitu _hat,Bit8u _dir) : CBind(_list) {$/;"	f	class:CJHatBind
CJHatBind	src/gui/sdl_mapper.cpp	/^class CJHatBind : public CBind {$/;"	c	file:
CJHatEvent	src/gui/sdl_mapper.cpp	/^	CJHatEvent(char const * const _entry,Bitu _stick,Bitu _hat,Bitu _dir) : CTriggeredEvent(_entry) {$/;"	f	class:CJHatEvent
CJHatEvent	src/gui/sdl_mapper.cpp	/^class CJHatEvent : public CTriggeredEvent {$/;"	c	file:
CKeyBind	src/gui/sdl_mapper.cpp	/^	CKeyBind(CBindList * _list,SDLKey _key) : CBind(_list) {$/;"	f	class:CKeyBind
CKeyBind	src/gui/sdl_mapper.cpp	/^class CKeyBind : public CBind {$/;"	c	file:
CKeyBindGroup	src/gui/sdl_mapper.cpp	/^	CKeyBindGroup(Bitu _keys) : CBindGroup (){$/;"	f	class:CKeyBindGroup
CKeyBindGroup	src/gui/sdl_mapper.cpp	/^class CKeyBindGroup : public  CBindGroup {$/;"	c	file:
CKeyEvent	src/gui/sdl_mapper.cpp	/^	CKeyEvent(char const * const _entry,KBD_KEYS _key) : CTriggeredEvent(_entry) {$/;"	f	class:CKeyEvent
CKeyEvent	src/gui/sdl_mapper.cpp	/^class CKeyEvent : public CTriggeredEvent {$/;"	c	file:
CLK_25	include/vga.h	47;"	d
CLK_28	include/vga.h	48;"	d
CLR_BLACK	src/gui/sdl_mapper.cpp	/^	CLR_BLACK=0,$/;"	e	enum:__anon142	file:
CLR_BLUE	src/gui/sdl_mapper.cpp	/^	CLR_BLUE=3,$/;"	e	enum:__anon142	file:
CLR_GREEN	src/gui/sdl_mapper.cpp	/^	CLR_GREEN=4$/;"	e	enum:__anon142	file:
CLR_RED	src/gui/sdl_mapper.cpp	/^	CLR_RED=2,$/;"	e	enum:__anon142	file:
CLR_WHITE	src/gui/sdl_mapper.cpp	/^	CLR_WHITE=1,$/;"	e	enum:__anon142	file:
CMD_ATTRIB	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_ATTRIB(char *args){$/;"	f	class:DOS_Shell
CMD_CALL	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_CALL(char * args){$/;"	f	class:DOS_Shell
CMD_CHDIR	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_CHDIR(char * args) {$/;"	f	class:DOS_Shell
CMD_CHOICE	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_CHOICE(char * args){$/;"	f	class:DOS_Shell
CMD_CLS	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_CLS(char * args) {$/;"	f	class:DOS_Shell
CMD_COPY	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_COPY(char * args) {$/;"	f	class:DOS_Shell
CMD_DELETE	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_DELETE(char * args) {$/;"	f	class:DOS_Shell
CMD_DIR	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_DIR(char * args) {$/;"	f	class:DOS_Shell
CMD_ECHO	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_ECHO(char * args){$/;"	f	class:DOS_Shell
CMD_EXIT	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_EXIT(char * args) {$/;"	f	class:DOS_Shell
CMD_GOTO	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_GOTO(char * args) {$/;"	f	class:DOS_Shell
CMD_HELP	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_HELP(char * args){$/;"	f	class:DOS_Shell
CMD_IF	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_IF(char * args) {$/;"	f	class:DOS_Shell
CMD_LOADHIGH	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_LOADHIGH(char *args){$/;"	f	class:DOS_Shell
CMD_MAXCMDS	include/shell.h	36;"	d
CMD_MAXLINE	include/shell.h	35;"	d
CMD_MKDIR	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_MKDIR(char * args) {$/;"	f	class:DOS_Shell
CMD_NONE	src/hardware/keyboard.cpp	/^	CMD_NONE,$/;"	e	enum:KeyCommands	file:
CMD_OLDSIZE	include/shell.h	37;"	d
CMD_PATH	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_PATH(char *args){$/;"	f	class:DOS_Shell
CMD_PAUSE	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_PAUSE(char * args){$/;"	f	class:DOS_Shell
CMD_REM	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_REM(char * args) {$/;"	f	class:DOS_Shell
CMD_RENAME	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_RENAME(char * args){$/;"	f	class:DOS_Shell
CMD_RMDIR	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_RMDIR(char * args) {$/;"	f	class:DOS_Shell
CMD_SET	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_SET(char * args) {$/;"	f	class:DOS_Shell
CMD_SETLEDS	src/hardware/keyboard.cpp	/^	CMD_SETLEDS,$/;"	e	enum:KeyCommands	file:
CMD_SETOUTPORT	src/hardware/keyboard.cpp	/^	CMD_SETOUTPORT$/;"	e	enum:KeyCommands	file:
CMD_SETTYPERATE	src/hardware/keyboard.cpp	/^	CMD_SETTYPERATE,$/;"	e	enum:KeyCommands	file:
CMD_SHIFT	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_SHIFT(char * args ) {$/;"	f	class:DOS_Shell
CMD_SUBST	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_SUBST (char * args) {$/;"	f	class:DOS_Shell
CMD_TYPE	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_TYPE(char * args) {$/;"	f	class:DOS_Shell
CMD_VER	src/shell/shell_cmds.cpp	/^void DOS_Shell::CMD_VER(char *args) {$/;"	f	class:DOS_Shell
CMOS	src/hardware/cmos.cpp	/^	CMOS(Section* configuration):Module_base(configuration){$/;"	f	class:CMOS
CMOS	src/hardware/cmos.cpp	/^class CMOS:public Module_base{$/;"	c	file:
CMOS_Destroy	src/hardware/cmos.cpp	/^void CMOS_Destroy(Section* sec){$/;"	f
CMOS_Init	src/hardware/cmos.cpp	/^void CMOS_Init(Section* sec) {$/;"	f
CMOS_SetRegister	src/hardware/cmos.cpp	/^void CMOS_SetRegister(Bitu regNr, Bit8u val) {$/;"	f
CMPB	src/cpu/arminst.h	70;"	d
CMPB	src/cpu/core_normal/prefix_none.h	/^		ALIb(CMPB);break;$/;"	v
CMPB	src/cpu/core_normal/prefix_none.h	/^		RMEbGb(CMPB);break;$/;"	v
CMPB	src/cpu/core_normal/prefix_none.h	/^		RMGbEb(CMPB);break;$/;"	v
CMPB	src/cpu/core_normal/verysimple_prefix_none.h	/^		ALIb(CMPB);break;$/;"	v
CMPB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEbGb(CMPB);break;$/;"	v
CMPB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGbEb(CMPB);break;$/;"	v
CMPB	src/cpu/instructions.h	66;"	d
CMPD	src/cpu/arminst.h	182;"	d
CMPD	src/cpu/core_normal/prefix_66.h	/^		EAXId(CMPD);break;$/;"	v
CMPD	src/cpu/core_normal/prefix_66.h	/^		RMEdGd(CMPD);break;$/;"	v
CMPD	src/cpu/core_normal/prefix_66.h	/^		RMGdEd(CMPD);break;$/;"	v
CMPD	src/cpu/instructions.h	178;"	d
CMPW	src/cpu/arminst.h	126;"	d
CMPW	src/cpu/core_normal/prefix_none.h	/^		AXIw(CMPW);break;$/;"	v
CMPW	src/cpu/core_normal/prefix_none.h	/^		RMEwGw(CMPW);break;$/;"	v
CMPW	src/cpu/core_normal/prefix_none.h	/^		RMGwEw(CMPW);break;$/;"	v
CMPW	src/cpu/core_normal/verysimple_prefix_none.h	/^		AXIw(CMPW);break;$/;"	v
CMPW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEwGw(CMPW);break;$/;"	v
CMPW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGwEw(CMPW);break;$/;"	v
CMPW	src/cpu/instructions.h	122;"	d
CMS	src/hardware/gameblaster.cpp	/^	CMS(Section* configuration):Module_base(configuration) {$/;"	f	class:CMS
CMS	src/hardware/gameblaster.cpp	/^class CMS:public Module_base {$/;"	c	file:
CMSPAR	src/hardware/serialport/directserial_posix.cpp	267;"	d	file:
CMS_BUFFER_SIZE	src/hardware/gameblaster.cpp	32;"	d	file:
CMS_CallBack	src/hardware/gameblaster.cpp	/^ static void CMS_CallBack(Bitu len) {$/;"	f	file:
CMS_Init	src/hardware/gameblaster.cpp	/^void CMS_Init(Section* sec) {$/;"	f
CMS_RATE	src/hardware/gameblaster.cpp	33;"	d	file:
CMS_ShutDown	src/hardware/gameblaster.cpp	/^void CMS_ShutDown(Section* sec) {$/;"	f
CMapper	src/gui/sdl_mapper.cpp	/^static struct CMapper {$/;"	s	file:
CModEvent	src/gui/sdl_mapper.cpp	/^	CModEvent(char const * const _entry,Bitu _wmod) : CTriggeredEvent(_entry) {$/;"	f	class:CModEvent
CModEvent	src/gui/sdl_mapper.cpp	/^class CModEvent : public CTriggeredEvent {$/;"	c	file:
CMscdex	src/dos/dos_mscdex.cpp	/^CMscdex::CMscdex(void) {$/;"	f	class:CMscdex
CMscdex	src/dos/dos_mscdex.cpp	/^class CMscdex$/;"	c	file:
CNullModem	src/hardware/serialport/nullmodem.cpp	/^CNullModem::CNullModem(Bitu id, CommandLine* cmd):CSerial (id, cmd) {$/;"	f	class:CNullModem
CNullModem	src/hardware/serialport/nullmodem.h	/^class CNullModem : public CSerial {$/;"	c
CODEC_4CC	src/libs/zmbv/zmbv.h	27;"	d
COMNUMBER	include/serialport.h	98;"	d
COMP_CANCELLED	include/ipx.h	64;"	d
COMP_DISCONNECT	include/ipx.h	59;"	d
COMP_EVENTNOTCANCELED	include/ipx.h	62;"	d
COMP_HARDWAREERROR	include/ipx.h	67;"	d
COMP_INVALIDID	include/ipx.h	60;"	d
COMP_MALFORMED	include/ipx.h	65;"	d
COMP_NOCONNECTION	include/ipx.h	63;"	d
COMP_REMOTETERM	include/ipx.h	58;"	d
COMP_SPXTABLEFULL	include/ipx.h	61;"	d
COMP_SUCCESS	include/ipx.h	57;"	d
COMP_UNDELIVERABLE	include/ipx.h	66;"	d
CON	src/hardware/fmopl.cpp	/^	UINT8   CON;		\/* connection (algorithm) type	*\/$/;"	m	struct:__anon153	file:
CON	src/hardware/ymf262.cpp	/^	UINT8   CON;		\/* connection (algorithm) type	*\/$/;"	m	struct:__anon190	file:
CONFIG	src/misc/programs.cpp	/^class CONFIG : public Program {$/;"	c	file:
CONFIG_ProgramStart	src/misc/programs.cpp	/^static void CONFIG_ProgramStart(Program * * make) {$/;"	f	file:
CONVIP	include/ipxserver.h	36;"	d
CONVIPX	include/ipxserver.h	37;"	d
COOKED_SECTOR_SIZE	src/dos/cdrom.h	24;"	d
CPU	src/cpu/cpu.cpp	/^	CPU(Section* configuration):Module_base(configuration) {$/;"	f	class:CPU
CPU	src/cpu/cpu.cpp	/^class CPU: public Module_base {$/;"	c	file:
CPUBlock	include/cpu.h	/^struct CPUBlock {$/;"	s
CPU_ARCHTYPE_386FAST	include/cpu.h	46;"	d
CPU_ARCHTYPE_386SLOW	include/cpu.h	45;"	d
CPU_ARCHTYPE_486NEWSLOW	include/cpu.h	48;"	d
CPU_ARCHTYPE_486OLDSLOW	include/cpu.h	47;"	d
CPU_ARCHTYPE_MIXED	include/cpu.h	44;"	d
CPU_ARCHTYPE_PENTIUMSLOW	include/cpu.h	49;"	d
CPU_ARPL	src/cpu/cpu.cpp	/^void CPU_ARPL(Bitu & dest_sel,Bitu src_sel) {$/;"	f
CPU_AUTODETERMINE_CORE	include/cpu.h	35;"	d
CPU_AUTODETERMINE_CYCLES	include/cpu.h	36;"	d
CPU_AUTODETERMINE_MASK	include/cpu.h	39;"	d
CPU_AUTODETERMINE_NONE	include/cpu.h	34;"	d
CPU_AUTODETERMINE_SHIFT	include/cpu.h	38;"	d
CPU_ArchitectureType	src/cpu/cpu.cpp	/^Bitu CPU_ArchitectureType = CPU_ARCHTYPE_MIXED;$/;"	v
CPU_AutoDetermineMode	src/cpu/cpu.cpp	/^Bitu CPU_AutoDetermineMode = 0;$/;"	v
CPU_CALL	src/cpu/cpu.cpp	/^void CPU_CALL(bool use32,Bitu selector,Bitu offset,Bitu oldeip) {$/;"	f
CPU_CHECK_COND	src/cpu/cpu.cpp	104;"	d	file:
CPU_CHECK_COND	src/cpu/cpu.cpp	108;"	d	file:
CPU_CHECK_COND	src/cpu/cpu.cpp	115;"	d	file:
CPU_CHECK_IGNORE	src/cpu/cpu.cpp	100;"	d	file:
CPU_CLI	src/cpu/cpu.cpp	/^bool CPU_CLI(void) {$/;"	f
CPU_CPUID	src/cpu/cpu.cpp	/^bool CPU_CPUID(void) {$/;"	f
CPU_CYCLES_LOWER_LIMIT	include/cpu.h	41;"	d
CPU_CYCLES_UPPER_LIMIT	include/cpu.h	42;"	d
CPU_CheckSegments	src/cpu/cpu.cpp	/^void CPU_CheckSegments(void) {$/;"	f
CPU_Core_Dyn_X86_Cache_Close	src/cpu/core_dyn_x86.cpp	/^void CPU_Core_Dyn_X86_Cache_Close(void) {$/;"	f
CPU_Core_Dyn_X86_Cache_Init	src/cpu/core_dyn_x86.cpp	/^void CPU_Core_Dyn_X86_Cache_Init(bool enable_cache) {$/;"	f
CPU_Core_Dyn_X86_Init	src/cpu/core_dyn_x86.cpp	/^void CPU_Core_Dyn_X86_Init(void) {$/;"	f
CPU_Core_Dyn_X86_Run	src/cpu/core_dyn_x86.cpp	/^Bits CPU_Core_Dyn_X86_Run(void) {$/;"	f
CPU_Core_Dyn_X86_SetFPUMode	src/cpu/core_dyn_x86.cpp	/^void CPU_Core_Dyn_X86_SetFPUMode(bool dh_fpu) {$/;"	f
CPU_Core_Dyn_X86_Trap_Run	src/cpu/core_dyn_x86.cpp	/^Bits CPU_Core_Dyn_X86_Trap_Run(void) {$/;"	f
CPU_Core_Dynrec_Cache_Close	src/cpu/core_dynrec.cpp	/^void CPU_Core_Dynrec_Cache_Close(void) {$/;"	f
CPU_Core_Dynrec_Cache_Init	src/cpu/core_dynrec.cpp	/^void CPU_Core_Dynrec_Cache_Init(bool enable_cache) {$/;"	f
CPU_Core_Dynrec_Init	src/cpu/core_dynrec.cpp	/^void CPU_Core_Dynrec_Init(void) {$/;"	f
CPU_Core_Dynrec_Run	src/cpu/core_dynrec.cpp	/^Bits CPU_Core_Dynrec_Run(void) {$/;"	f
CPU_Core_Dynrec_Trap_Run	src/cpu/core_dynrec.cpp	/^Bits CPU_Core_Dynrec_Trap_Run(void) {$/;"	f
CPU_Core_Full_Init	src/cpu/core_full.cpp	/^void CPU_Core_Full_Init(void) {$/;"	f
CPU_Core_Full_Run	src/cpu/core_full.cpp	/^Bits CPU_Core_Full_Run(void) {$/;"	f
CPU_Core_Normal_Trap_Run	src/cpu/core_verysimple.cpp	/^Bits CPU_Core_Normal_Trap_Run(void) {$/;"	f
CPU_Core_Simple_Init	src/cpu/core_simple.cpp	/^void CPU_Core_Simple_Init(void) {$/;"	f
CPU_Core_Simple_Run	src/cpu/core_simple.cpp	/^Bits CPU_Core_Simple_Run(void) {$/;"	f
CPU_Core_Simple_Trap_Run	src/cpu/core_simple.cpp	/^Bits CPU_Core_Simple_Trap_Run(void) {$/;"	f
CPU_Core_VerySimple_Init	src/cpu/core_verysimple.cpp	/^void CPU_Core_VerySimple_Init(void) {$/;"	f
CPU_Core_VerySimple_Run	src/cpu/core_verysimple.cpp	/^Bits CPU_Core_VerySimple_Run(void) {$/;"	f
CPU_CycleAutoAdjust	src/cpu/cpu.cpp	/^bool CPU_CycleAutoAdjust = false;$/;"	v
CPU_CycleDecrease	src/cpu/cpu.cpp	/^void CPU_CycleDecrease(bool pressed) {$/;"	f
CPU_CycleDown	src/cpu/cpu.cpp	/^Bit32s CPU_CycleDown = 0;$/;"	v
CPU_CycleIncrease	src/cpu/cpu.cpp	/^void CPU_CycleIncrease(bool pressed) {$/;"	f
CPU_CycleLeft	src/cpu/cpu.cpp	/^Bit32s CPU_CycleLeft = 0;$/;"	v
CPU_CycleLimit	src/cpu/cpu.cpp	/^Bit32s CPU_CycleLimit = -1;$/;"	v
CPU_CycleMax	src/cpu/cpu.cpp	/^Bit32s CPU_CycleMax = 300;$/;"	v
CPU_CyclePercUsed	src/cpu/cpu.cpp	/^Bit32s CPU_CyclePercUsed = 100;$/;"	v
CPU_CycleUp	src/cpu/cpu.cpp	/^Bit32s CPU_CycleUp = 0;$/;"	v
CPU_Cycles	src/cpu/cpu.cpp	/^Bit32s CPU_Cycles = 0;$/;"	v
CPU_Decoder	include/cpu.h	/^typedef Bits (CPU_Decoder)(void);$/;"	t
CPU_Disable_SkipAutoAdjust	src/cpu/cpu.cpp	/^void CPU_Disable_SkipAutoAdjust(void) {$/;"	f
CPU_ENTER	src/cpu/cpu.cpp	/^void CPU_ENTER(bool use32,Bitu bytes,Bitu level) {$/;"	f
CPU_Enable_SkipAutoAdjust	src/cpu/cpu.cpp	/^void CPU_Enable_SkipAutoAdjust(void) {$/;"	f
CPU_Exception	src/cpu/cpu.cpp	/^void CPU_Exception(Bitu which,Bitu error ) {$/;"	f
CPU_FPU	src/cpu/core_dyn_x86.cpp	71;"	d	file:
CPU_FPU	src/cpu/core_dynrec.cpp	73;"	d	file:
CPU_FPU	src/cpu/core_simple.cpp	47;"	d	file:
CPU_FPU	src/cpu/core_verysimple.cpp	47;"	d	file:
CPU_GET_CRX	src/cpu/cpu.cpp	/^Bitu CPU_GET_CRX(Bitu cr) {$/;"	f
CPU_HLT	src/cpu/cpu.cpp	/^void CPU_HLT(Bitu oldeip) {$/;"	f
CPU_HW_Interrupt	include/cpu.h	/^INLINE void CPU_HW_Interrupt(Bitu num) {$/;"	f
CPU_INT_EXCEPTION	include/cpu.h	142;"	d
CPU_INT_HAS_ERROR	include/cpu.h	143;"	d
CPU_INT_NOIOPLCHECK	include/cpu.h	144;"	d
CPU_INT_SOFTWARE	include/cpu.h	141;"	d
CPU_IODelayRemoved	src/cpu/cpu.cpp	/^Bit64s CPU_IODelayRemoved = 0;$/;"	v
CPU_IO_Exception	src/cpu/cpu.cpp	/^bool CPU_IO_Exception(Bitu port,Bitu size) {$/;"	f
CPU_IRET	src/cpu/cpu.cpp	/^void CPU_IRET(bool use32,Bitu oldeip) {$/;"	f
CPU_Init	src/cpu/cpu.cpp	/^void CPU_Init(Section* sec) {$/;"	f
CPU_Interrupt	src/cpu/cpu.cpp	/^void CPU_Interrupt(Bitu num,Bitu type,Bitu oldeip) {$/;"	f
CPU_JMP	src/cpu/cpu.cpp	/^void CPU_JMP(bool use32,Bitu selector,Bitu offset,Bitu oldeip) {$/;"	f
CPU_LAR	src/cpu/cpu.cpp	/^void CPU_LAR(Bitu selector,Bitu & ar) {$/;"	f
CPU_LGDT	src/cpu/cpu.cpp	/^void CPU_LGDT(Bitu limit,Bitu base) {$/;"	f
CPU_LIDT	src/cpu/cpu.cpp	/^void CPU_LIDT(Bitu limit,Bitu base) {$/;"	f
CPU_LLDT	src/cpu/cpu.cpp	/^bool CPU_LLDT(Bitu selector) {$/;"	f
CPU_LMSW	src/cpu/cpu.cpp	/^bool CPU_LMSW(Bitu word) {$/;"	f
CPU_LOG	src/cpu/cpu.cpp	43;"	d	file:
CPU_LSL	src/cpu/cpu.cpp	/^void CPU_LSL(Bitu selector,Bitu & limit) {$/;"	f
CPU_LTR	src/cpu/cpu.cpp	/^bool CPU_LTR(Bitu selector) {$/;"	f
CPU_OldCycleMax	src/cpu/cpu.cpp	/^Bit32s CPU_OldCycleMax = 300;$/;"	v
CPU_Other_Run	src/cpu/core_dynrec.cpp	25;"	d	file:
CPU_PIC_CHECK	src/cpu/core_simple.cpp	50;"	d	file:
CPU_PIC_CHECK	src/cpu/core_verysimple.cpp	50;"	d	file:
CPU_POPF	src/cpu/cpu.cpp	/^bool CPU_POPF(Bitu use32) {$/;"	f
CPU_PUSHF	src/cpu/cpu.cpp	/^bool CPU_PUSHF(Bitu use32) {$/;"	f
CPU_Pop16	src/cpu/cpu.cpp	/^Bitu CPU_Pop16(void) {$/;"	f
CPU_Pop32	src/cpu/cpu.cpp	/^Bitu CPU_Pop32(void) {$/;"	f
CPU_PopSeg	src/cpu/cpu.cpp	/^bool CPU_PopSeg(SegNames seg,bool use32) {$/;"	f
CPU_PrefetchQueueSize	src/cpu/cpu.cpp	/^Bitu CPU_PrefetchQueueSize=0;$/;"	v
CPU_PrepareException	src/cpu/cpu.cpp	/^bool CPU_PrepareException(Bitu which,Bitu error) {$/;"	f
CPU_Push16	src/cpu/cpu.cpp	/^void CPU_Push16(Bitu value) {$/;"	f
CPU_Push32	src/cpu/cpu.cpp	/^void CPU_Push32(Bitu value) {$/;"	f
CPU_READ_CRX	src/cpu/cpu.cpp	/^bool CPU_READ_CRX(Bitu cr,Bit32u & retvalue) {$/;"	f
CPU_READ_DRX	src/cpu/cpu.cpp	/^bool CPU_READ_DRX(Bitu dr,Bit32u & retvalue) {$/;"	f
CPU_READ_TRX	src/cpu/cpu.cpp	/^bool CPU_READ_TRX(Bitu tr,Bit32u & retvalue) {$/;"	f
CPU_RET	src/cpu/cpu.cpp	/^void CPU_RET(bool use32,Bitu bytes,Bitu oldeip) {$/;"	f
CPU_Regs	include/regs.h	/^struct CPU_Regs {$/;"	s
CPU_Reset_AutoAdjust	src/cpu/cpu.cpp	/^void CPU_Reset_AutoAdjust(void) {$/;"	f
CPU_SET_CRX	src/cpu/cpu.cpp	/^void CPU_SET_CRX(Bitu cr,Bitu value) {$/;"	f
CPU_SGDT_base	src/cpu/cpu.cpp	/^Bitu CPU_SGDT_base(void) {$/;"	f
CPU_SGDT_limit	src/cpu/cpu.cpp	/^Bitu CPU_SGDT_limit(void) {$/;"	f
CPU_SIDT_base	src/cpu/cpu.cpp	/^Bitu CPU_SIDT_base(void) {$/;"	f
CPU_SIDT_limit	src/cpu/cpu.cpp	/^Bitu CPU_SIDT_limit(void) {$/;"	f
CPU_SLDT	src/cpu/cpu.cpp	/^Bitu CPU_SLDT(void) {$/;"	f
CPU_SMSW	src/cpu/cpu.cpp	/^Bitu CPU_SMSW(void) {$/;"	f
CPU_STI	src/cpu/cpu.cpp	/^bool CPU_STI(void) {$/;"	f
CPU_STR	src/cpu/cpu.cpp	/^Bitu CPU_STR(void) {$/;"	f
CPU_SW_Interrupt	include/cpu.h	/^INLINE void CPU_SW_Interrupt(Bitu num,Bitu oldeip) {$/;"	f
CPU_SW_Interrupt_NoIOPLCheck	include/cpu.h	/^INLINE void CPU_SW_Interrupt_NoIOPLCheck(Bitu num,Bitu oldeip) {$/;"	f
CPU_SetFlags	src/cpu/cpu.cpp	/^void CPU_SetFlags(Bitu word,Bitu mask) {$/;"	f
CPU_SetFlagsd	include/cpu.h	/^INLINE void CPU_SetFlagsd(Bitu word) {$/;"	f
CPU_SetFlagsw	include/cpu.h	/^INLINE void CPU_SetFlagsw(Bitu word) {$/;"	f
CPU_SetSegGeneral	src/cpu/cpu.cpp	/^bool CPU_SetSegGeneral(SegNames seg,Bitu value) {$/;"	f
CPU_ShutDown	src/cpu/cpu.cpp	/^void CPU_ShutDown(Section* sec) {$/;"	f
CPU_SkipCycleAutoAdjust	src/cpu/cpu.cpp	/^bool CPU_SkipCycleAutoAdjust = false;$/;"	v
CPU_SwitchTask	src/cpu/cpu.cpp	/^bool CPU_SwitchTask(Bitu new_tss_selector,TSwitchType tstype,Bitu old_eip) {$/;"	f
CPU_TRAP_CHECK	src/cpu/core_simple.cpp	51;"	d	file:
CPU_TRAP_CHECK	src/cpu/core_verysimple.cpp	51;"	d	file:
CPU_VERR	src/cpu/cpu.cpp	/^void CPU_VERR(Bitu selector) {$/;"	f
CPU_VERW	src/cpu/cpu.cpp	/^void CPU_VERW(Bitu selector) {$/;"	f
CPU_WRITE_CRX	src/cpu/cpu.cpp	/^bool CPU_WRITE_CRX(Bitu cr,Bitu value) {$/;"	f
CPU_WRITE_DRX	src/cpu/cpu.cpp	/^bool CPU_WRITE_DRX(Bitu dr,Bitu value) {$/;"	f
CPU_WRITE_TRX	src/cpu/cpu.cpp	/^bool CPU_WRITE_TRX(Bitu tr,Bitu value) {$/;"	f
CPU_flag_id_toggle	src/cpu/cpu.cpp	/^Bitu CPU_flag_id_toggle=0;$/;"	v
CR	src/libs/gui_tk/gui_tk.h	/^	enum SpecialChar { CR = '\\r', LF = '\\n', BS = '\\b', Tab = '\\t', Space = ' ', ESC = 27 };$/;"	e	enum:GUI::Font::SpecialChar
CR0_FPUEMULATION	include/cpu.h	181;"	d
CR0_FPUPRESENT	include/cpu.h	183;"	d
CR0_MONITORPROCESSOR	include/cpu.h	180;"	d
CR0_PAGING	include/cpu.h	184;"	d
CR0_PROTECTION	include/cpu.h	179;"	d
CR0_TASKSWITCH	include/cpu.h	182;"	d
CRC	src/platform/visualc/ntddcdrm.h	/^  UCHAR  CRC[2];$/;"	m	struct:_CDROM_TOC_CD_TEXT_DATA_BLOCK
CROSS_DIR	include/cross.h	59;"	d
CROSS_DIR	src/cpu/core_dynrec/cross.h	54;"	d
CROSS_DIR	src/cpu/core_dynrec/save/cross.h	54;"	d
CROSS_FILE	include/cross.h	58;"	d
CROSS_FILE	src/cpu/core_dynrec/cross.h	53;"	d
CROSS_FILE	src/cpu/core_dynrec/save/cross.h	53;"	d
CROSS_FILENAME	include/cross.h	49;"	d
CROSS_FILENAME	include/cross.h	53;"	d
CROSS_FILENAME	src/cpu/core_dynrec/cross.h	44;"	d
CROSS_FILENAME	src/cpu/core_dynrec/cross.h	48;"	d
CROSS_FILENAME	src/cpu/core_dynrec/save/cross.h	44;"	d
CROSS_FILENAME	src/cpu/core_dynrec/save/cross.h	48;"	d
CROSS_FILESPLIT	include/cross.h	50;"	d
CROSS_FILESPLIT	include/cross.h	54;"	d
CROSS_FILESPLIT	src/cpu/core_dynrec/cross.h	45;"	d
CROSS_FILESPLIT	src/cpu/core_dynrec/cross.h	49;"	d
CROSS_FILESPLIT	src/cpu/core_dynrec/save/cross.h	45;"	d
CROSS_FILESPLIT	src/cpu/core_dynrec/save/cross.h	49;"	d
CROSS_LEN	include/cross.h	45;"	d
CROSS_LEN	src/cpu/core_dynrec/cross.h	40;"	d
CROSS_LEN	src/cpu/core_dynrec/save/cross.h	40;"	d
CROSS_NONE	include/cross.h	57;"	d
CROSS_NONE	src/cpu/core_dynrec/cross.h	52;"	d
CROSS_NONE	src/cpu/core_dynrec/save/cross.h	52;"	d
CSMKeyControll	src/hardware/fmopl.cpp	/^INLINE void CSMKeyControll(OPL_CH *CH)$/;"	f
CSerial	include/serialport.h	/^class CSerial {$/;"	c
CSerial	src/hardware/serialport/serialport.cpp	/^CSerial::CSerial(Bitu id, CommandLine* cmd) {$/;"	f	class:CSerial
CSerialDummy	src/hardware/serialport/serialdummy.cpp	/^CSerialDummy::CSerialDummy(Bitu id,	CommandLine* cmd):CSerial(id, cmd) {$/;"	f	class:CSerialDummy
CSerialDummy	src/hardware/serialport/serialdummy.h	/^class CSerialDummy : public CSerial {$/;"	c
CSerialModem	src/hardware/serialport/softmodem.cpp	/^CSerialModem::CSerialModem(Bitu id, CommandLine* cmd):CSerial(id, cmd) {$/;"	f	class:CSerialModem
CSerialModem	src/hardware/serialport/softmodem.h	/^class CSerialModem : public CSerial {$/;"	c
CStickBindGroup	src/gui/sdl_mapper.cpp	/^	CStickBindGroup(Bitu _stick,Bitu _emustick,bool _dummy=false) : CBindGroup (){$/;"	f	class:CStickBindGroup
CStickBindGroup	src/gui/sdl_mapper.cpp	/^class CStickBindGroup : public  CBindGroup {$/;"	c	file:
CTMIXER_Read	src/hardware/sblaster.cpp	/^static Bit8u CTMIXER_Read(void) {$/;"	f	file:
CTMIXER_Reset	src/hardware/sblaster.cpp	/^static void CTMIXER_Reset(void) {$/;"	f	file:
CTMIXER_UpdateVolumes	src/hardware/sblaster.cpp	/^static void CTMIXER_UpdateVolumes(void) {$/;"	f	file:
CTMIXER_Write	src/hardware/sblaster.cpp	/^static void CTMIXER_Write(Bit8u val) {$/;"	f	file:
CTextButton	src/gui/sdl_mapper.cpp	/^	CTextButton(Bitu _x,Bitu _y,Bitu _dx,Bitu _dy,const char * _text) : CButton(_x,_y,_dx,_dy) { text=_text;}$/;"	f	class:CTextButton
CTextButton	src/gui/sdl_mapper.cpp	/^class CTextButton : public CButton {$/;"	c	file:
CTriggeredEvent	src/gui/sdl_mapper.cpp	/^	CTriggeredEvent(char const * const _entry) : CEvent(_entry) {}$/;"	f	class:CTriggeredEvent
CTriggeredEvent	src/gui/sdl_mapper.cpp	/^class CTriggeredEvent : public CEvent {$/;"	c	file:
CURSORX	src/ints/mouse.cpp	59;"	d	file:
CURSORY	src/ints/mouse.cpp	60;"	d	file:
CURSOR_POS_COL	src/ints/int10.h	/^INLINE Bit8u CURSOR_POS_COL(Bit8u page) {$/;"	f
CURSOR_POS_ROW	src/ints/int10.h	/^INLINE Bit8u CURSOR_POS_ROW(Bit8u page) {$/;"	f
C_ATTRIBUTE_ALWAYS_INLINE	config.h	28;"	d
C_ATTRIBUTE_FASTCALL	config.h	31;"	d
C_CORE_INLINE	src/platform/visualc/config.h	35;"	d
C_DEBUG	src/platform/visualc/config.h	7;"	d
C_DIRECTSERIAL	config.h	41;"	d
C_DIRECTSERIAL	src/platform/visualc/config.h	56;"	d
C_DYNAMIC_X86	src/platform/visualc/config.h	29;"	d
C_DYNREC	src/platform/visualc/config.h	32;"	d
C_FPU	config.h	51;"	d
C_FPU	src/platform/visualc/config.h	38;"	d
C_FPU_X86	src/platform/visualc/config.h	41;"	d
C_HAS_ATTRIBUTE	config.h	57;"	d
C_HAS_BUILTIN_EXPECT	config.h	61;"	d
C_HAVE_MPROTECT	config.h	64;"	d
C_HEAVY_DEBUG	src/platform/visualc/config.h	22;"	d
C_IPX	src/platform/visualc/config.h	19;"	d
C_MODEM	src/platform/visualc/config.h	16;"	d
C_OPENGL	config.h	76;"	d
C_OPENGL	src/platform/visualc/config.h	13;"	d
C_SDL_SOUND	config.h	79;"	d
C_SET_PRIORITY	config.h	82;"	d
C_SSHOT	src/platform/visualc/config.h	10;"	d
C_TARGETCPU	config.h	88;"	d
C_TARGETCPU	src/platform/visualc/config.h	25;"	d
C_UNALIGNED_MEMORY	config.h	91;"	d
C_UNALIGNED_MEMORY	src/platform/visualc/config.h	44;"	d
C_VGARAM_CHECKED	src/hardware/vga_memory.cpp	33;"	d	file:
CacheBlock	src/cpu/core_dyn_x86/cache.h	/^class CacheBlock {$/;"	c
CacheBlockDynRec	src/cpu/core_dynrec/cache.h	/^class CacheBlockDynRec {$/;"	c
CacheBlockDynRec	src/cpu/core_dynrec/save/cache.h	/^class CacheBlockDynRec {$/;"	c
CacheOut	src/dos/drive_cache.cpp	/^void DOS_Drive_Cache::CacheOut(const char* path, bool ignoreLastDir) {$/;"	f	class:DOS_Drive_Cache
CacheWrite	src/hardware/adlib.cpp	/^void Module::CacheWrite( Bit32u reg, Bit8u val ) {$/;"	f	class:Adlib::Module
CallBack_Description	src/cpu/callback.cpp	/^char* CallBack_Description[CB_MAX];$/;"	v
CallBack_Handler	include/callback.h	/^typedef Bitu (*CallBack_Handler)(void);$/;"	t
CallBack_Handlers	src/cpu/callback.cpp	/^CallBack_Handler CallBack_Handlers[CB_MAX];$/;"	v
CanCompress	src/libs/zmbv/zmbv_vfw.cpp	/^static bool CanCompress(LPBITMAPINFOHEADER lpbiIn, LPBITMAPINFOHEADER lpbiOut, bool requireOutput) {$/;"	f	file:
CanDecompress	src/libs/zmbv/zmbv_vfw.cpp	/^static bool CanDecompress(LPBITMAPINFOHEADER lpbiIn, LPBITMAPINFOHEADER lpbiOut) {$/;"	f	file:
CanReadPVD	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::CanReadPVD(TrackFile *file, int sectorSize, bool mode2)$/;"	f	class:CDROM_Interface_Image
CanReceiveByte	src/hardware/serialport/serialport.cpp	/^bool CSerial::CanReceiveByte() {$/;"	f	class:CSerial
CapsLock	src/libs/gui_tk/gui_tk.h	/^		Print, Pause, Break, CapsLock, NumLock, ScrollLock,$/;"	e	enum:GUI::Key::Special
CaptureState	src/hardware/hardware.cpp	/^Bitu CaptureState;$/;"	v
Cdb	src/platform/visualc/ntddscsi.h	/^  UCHAR  Cdb[16];$/;"	m	struct:_SCSI_PASS_THROUGH
Cdb	src/platform/visualc/ntddscsi.h	/^  UCHAR  Cdb[16];$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
CdbLength	src/platform/visualc/ntddscsi.h	/^  UCHAR  CdbLength;$/;"	m	struct:_SCSI_PASS_THROUGH
CdbLength	src/platform/visualc/ntddscsi.h	/^  UCHAR  CdbLength;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
CdrwReferenceSpeed	src/platform/visualc/ntddcdrm.h	/^  UCHAR  CdrwReferenceSpeed : 3;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Change	src/gui/sdl_mapper.cpp	/^void CCaptionButton::Change(const char * format,...) {$/;"	f	class:CCaptionButton
ChangeRegister	src/debug/debug.cpp	/^bool ChangeRegister(char* str)$/;"	f
ChangeToLongCmd	src/misc/programs.cpp	/^void Program::ChangeToLongCmd() {$/;"	f	class:Program
Change_Config	include/setup.h	/^	virtual bool Change_Config(Section* \/*newconfig*\/) {return false;} ;$/;"	f	class:Module_base
Change_Config	src/cpu/cpu.cpp	/^	bool Change_Config(Section* newconfig){$/;"	f	class:CPU
Changeable	include/setup.h	/^	struct Changeable { enum Value {Always, WhenIdle,OnlyAtStart};};$/;"	s	class:Property
Char	src/libs/gui_tk/gui_tk.h	/^typedef uint32_t Char;$/;"	t	namespace:GUI
CharacterPosition	src/platform/visualc/ntddcdrm.h	/^  UCHAR  CharacterPosition : 4;$/;"	m	struct:_CDROM_TOC_CD_TEXT_DATA_BLOCK
CheckBreakpoint	src/debug/debug.cpp	/^bool CBreakpoint::CheckBreakpoint(Bitu seg, Bitu off)$/;"	f	class:CBreakpoint
CheckConfig	src/shell/shell_cmds.cpp	/^bool DOS_Shell::CheckConfig(char* cmd_in,char*line) {$/;"	f	class:DOS_Shell
CheckDMAEnd	src/hardware/sblaster.cpp	/^static void CheckDMAEnd(void) {$/;"	f	file:
CheckErrors	src/hardware/serialport/directserial_os2.cpp	/^void CDirectSerial::CheckErrors() {$/;"	f	class:CDirectSerial
CheckErrors	src/hardware/serialport/directserial_posix.cpp	/^void CDirectSerial::CheckErrors() {$/;"	f	class:CDirectSerial
CheckErrors	src/hardware/serialport/directserial_win32.cpp	/^void CDirectSerial::CheckErrors() {$/;"	f	class:CDirectSerial
CheckEvent	src/gui/sdl_mapper.cpp	/^	bool CheckEvent(SDL_Event * event) {$/;"	f	class:C4AxisBindGroup
CheckEvent	src/gui/sdl_mapper.cpp	/^	bool CheckEvent(SDL_Event * event) {$/;"	f	class:CCHBindGroup
CheckEvent	src/gui/sdl_mapper.cpp	/^	bool CheckEvent(SDL_Event * event) {$/;"	f	class:CFCSBindGroup
CheckEvent	src/gui/sdl_mapper.cpp	/^	bool CheckEvent(SDL_Event * event) {$/;"	f	class:CKeyBindGroup
CheckEvent	src/gui/sdl_mapper.cpp	/^	virtual bool CheckEvent(SDL_Event * event) {$/;"	f	class:CStickBindGroup
CheckIntBreakpoint	src/debug/debug.cpp	/^bool CBreakpoint::CheckIntBreakpoint(PhysPt adr, Bit8u intNr, Bit16u ahValue)$/;"	f	class:CBreakpoint
CheckPaletteBit16u	src/gui/render_16.h	88;"	d
CheckPaletteBit16u	src/gui/render_32.h	88;"	d
CheckPaletteBit16u	src/gui/render_8.h	106;"	d
CheckPaletteBit16u	src/gui/render_9.h	106;"	d
CheckPaletteBit32u	src/gui/render_16.h	89;"	d
CheckPaletteBit32u	src/gui/render_32.h	89;"	d
CheckPaletteBit32u	src/gui/render_8.h	107;"	d
CheckPaletteBit32u	src/gui/render_9.h	107;"	d
CheckPaletteBit8u	src/gui/render_16.h	87;"	d
CheckPaletteBit8u	src/gui/render_32.h	87;"	d
CheckPaletteBit8u	src/gui/render_8.h	105;"	d
CheckPaletteBit8u	src/gui/render_9.h	105;"	d
CheckRM	src/cpu/core_normal/helpers.h	27;"	d
CheckValue	src/misc/setup.cpp	/^bool Prop_int::CheckValue(Value const& in, bool warn) {$/;"	f	class:Prop_int
CheckValue	src/misc/setup.cpp	/^bool Prop_string::CheckValue(Value const& in, bool warn){$/;"	f	class:Prop_string
CheckValue	src/misc/setup.cpp	/^bool Property::CheckValue(Value const& in, bool warn){$/;"	f	class:Property
Check_Palette	src/gui/render.cpp	/^static void Check_Palette(void) {$/;"	f	file:
Checkbox	src/libs/gui_tk/gui_tk.h	/^	Checkbox(Window *parent, int x, int y, int w, int h) : BorderedWindow(parent,x,y,w,h,16,0,0,0), ActionEventSource("GUI::Checkbox"), checked(0) {}$/;"	f	class:GUI::Checkbox
Checkbox	src/libs/gui_tk/gui_tk.h	/^class Checkbox : public BorderedWindow, public ActionEventSource {$/;"	c	namespace:GUI
Checkbox	src/libs/gui_tk/gui_tk.h	/^template <typename STR> Checkbox::Checkbox(Window *parent, int x, int y, const STR text, int w, int h) :$/;"	f	class:GUI::Checkbox
Chip	src/hardware/adlib.h	/^struct Chip {$/;"	s	namespace:Adlib
Cj	src/debug/disasm_tables.h	/^	Cj,$/;"	e	enum:__anon111
Clear	src/cpu/core_dyn_x86/cache.h	/^void CacheBlock::Clear(void) {$/;"	f	class:CacheBlock
Clear	src/cpu/core_dyn_x86/risc_x86.h	/^	void Clear(void) {$/;"	f	class:GenReg
Clear	src/cpu/core_dynrec/cache.h	/^void CacheBlockDynRec::Clear(void) {$/;"	f	class:CacheBlockDynRec
Clear	src/cpu/core_dynrec/save/cache.h	/^void CacheBlockDynRec::Clear(void) {$/;"	f	class:CacheBlockDynRec
Clear	src/dos/dos_classes.cpp	/^void DOS_ParamBlock::Clear(void) {$/;"	f	class:DOS_ParamBlock
Clear	src/dos/drive_cache.cpp	/^void DOS_Drive_Cache::Clear(void)$/;"	f	class:DOS_Drive_Cache
ClearAnsi	src/dos/dev_con.h	/^void device_CON::ClearAnsi(void){$/;"	f	class:device_CON
ClearRelease	src/cpu/core_dyn_x86/cache.h	/^	void ClearRelease(void) {$/;"	f	class:CodePageHandler
ClearRelease	src/cpu/core_dynrec/cache.h	/^	void ClearRelease(void) {$/;"	f	class:CodePageHandlerDynRec
ClearRelease	src/cpu/core_dynrec/save/cache.h	/^	void ClearRelease(void) {$/;"	f	class:CodePageHandlerDynRec
ClearTracks	src/dos/cdrom_image.cpp	/^void CDROM_Interface_Image::ClearTracks()$/;"	f	class:CDROM_Interface_Image
Clear_Request	include/dma.h	/^	void Clear_Request(void) {$/;"	f	class:DmaChannel
Click	src/gui/sdl_mapper.cpp	/^	virtual void Click(void) {}$/;"	f	class:CButton
Click	src/gui/sdl_mapper.cpp	/^	void Click(void) {$/;"	f	class:CBindButton
Click	src/gui/sdl_mapper.cpp	/^	void Click(void) {$/;"	f	class:CCheckButton
Click	src/gui/sdl_mapper.cpp	/^	void Click(void) {$/;"	f	class:CEventButton
ClientConnect	src/hardware/serialport/nullmodem.cpp	/^void CNullModem::ClientConnect(){$/;"	f	class:CNullModem
ClipCursorArea	src/ints/mouse.cpp	/^void ClipCursorArea(Bit16s& x1, Bit16s& x2, Bit16s& y1, Bit16s& y2,$/;"	f
Close	src/dos/cdrom_ioctl_win32.cpp	/^void CDROM_Interface_Ioctl::Close(void) {$/;"	f	class:CDROM_Interface_Ioctl
Close	src/dos/dev_con.h	/^bool device_CON::Close() {$/;"	f	class:device_CON
Close	src/dos/dos_devices.cpp	/^	virtual bool Close() { return true; }$/;"	f	class:device_NUL
Close	src/dos/dos_devices.cpp	/^bool DOS_Device::Close() {$/;"	f	class:DOS_Device
Close	src/dos/dos_mscdex.cpp	/^	bool Close(){return false;}$/;"	f	class:device_MSCDEX
Close	src/dos/drive_fat.cpp	/^bool fatFile::Close() {$/;"	f	class:fatFile
Close	src/dos/drive_iso.cpp	/^bool isoFile::Close()$/;"	f	class:isoFile
Close	src/dos/drive_local.cpp	/^bool localFile::Close() {$/;"	f	class:localFile
Close	src/dos/drive_virtual.cpp	/^bool Virtual_File::Close(){$/;"	f	class:Virtual_File
Close	src/gui/midi_alsa.h	/^	void Close(void) {$/;"	f	class:MidiHandler_alsa
Close	src/gui/midi_coreaudio.h	/^	void Close(void) {$/;"	f	class:MidiHandler_coreaudio
Close	src/gui/midi_coremidi.h	/^	void Close(void) {$/;"	f	class:MidiHandler_coremidi
Close	src/gui/midi_oss.h	/^	void Close(void) {$/;"	f	class:MidiHandler_oss
Close	src/gui/midi_win32.h	/^	void Close(void) {$/;"	f	class:MidiHandler_win32
Close	src/hardware/serialport/serialport.cpp	/^bool device_COM::Close() {$/;"	f	class:device_COM
Close	src/ints/ems.cpp	/^	bool Close(){return false;}$/;"	f	class:device_EMM
Close	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD Close(CodecInst* pinst) {$/;"	f
CloseFiles	src/dos/dos_classes.cpp	/^void DOS_PSP::CloseFiles(void)$/;"	f	class:DOS_PSP
CloseSecondDMAController	src/hardware/dma.cpp	/^void CloseSecondDMAController(void) {$/;"	f
CloseSocket	src/hardware/ipx.cpp	/^static void CloseSocket(void) {$/;"	f	file:
Cnt	src/hardware/fmopl.cpp	/^	UINT32	Cnt;		\/* frequency counter			*\/$/;"	m	struct:__anon153	file:
Cnt	src/hardware/ymf262.cpp	/^	UINT32	Cnt;		\/* frequency counter			*\/$/;"	m	struct:__anon190	file:
CodePageHandler	src/cpu/core_dyn_x86/cache.h	/^	CodePageHandler() {$/;"	f	class:CodePageHandler
CodePageHandler	src/cpu/core_dyn_x86/cache.h	/^class CodePageHandler : public PageHandler {$/;"	c
CodePageHandlerDynRec	src/cpu/core_dynrec/cache.h	/^	CodePageHandlerDynRec() {$/;"	f	class:CodePageHandlerDynRec
CodePageHandlerDynRec	src/cpu/core_dynrec/cache.h	/^class CodePageHandlerDynRec : public PageHandler {$/;"	c
CodePageHandlerDynRec	src/cpu/core_dynrec/save/cache.h	/^	CodePageHandlerDynRec() {$/;"	f	class:CodePageHandlerDynRec
CodePageHandlerDynRec	src/cpu/core_dynrec/save/cache.h	/^class CodePageHandlerDynRec : public PageHandler {$/;"	c
CodecInst	src/libs/zmbv/zmbv_vfw.cpp	/^CodecInst::CodecInst() {$/;"	f	class:CodecInst
CodecInst	src/libs/zmbv/zmbv_vfw.h	/^class CodecInst {$/;"	c
CodecVector	src/libs/zmbv/zmbv.h	/^	struct CodecVector {$/;"	s	class:VideoCodec
Color	src/libs/gui_tk/gui_tk.cpp	/^namespace Color {$/;"	n	namespace:GUI	file:
Color	src/libs/gui_tk/gui_tk.h	/^namespace Color {$/;"	n	namespace:GUI
ColorTable	src/hardware/vga.cpp	/^Bit32u ColorTable[16];$/;"	v
ComSpecInf0	src/dos/scsidefs.h	/^    BYTE    ComSpecInf0;        \/\/ Command Specific Information MSB$/;"	m	struct:__anon123
ComSpecInf1	src/dos/scsidefs.h	/^    BYTE    ComSpecInf1;        \/\/ Command Specific Information MID$/;"	m	struct:__anon123
ComSpecInf2	src/dos/scsidefs.h	/^    BYTE    ComSpecInf2;        \/\/ Command Specific Information MID$/;"	m	struct:__anon123
ComSpecInf3	src/dos/scsidefs.h	/^    BYTE    ComSpecInf3;        \/\/ Command Specific Information LSB$/;"	m	struct:__anon123
CommandLine	include/programs.h	/^class CommandLine {$/;"	c
CommandLine	src/misc/setup.cpp	/^CommandLine::CommandLine(char const * const name,char const * const cmdline) {$/;"	f	class:CommandLine
CommandLine	src/misc/setup.cpp	/^CommandLine::CommandLine(int argc,char const * const argv[]) {$/;"	f	class:CommandLine
CommandTail	include/dos_inc.h	/^struct CommandTail{$/;"	s
CompareShortname	src/dos/drive_cache.cpp	/^int DOS_Drive_Cache::CompareShortname(const char* compareName, const char* shortName)$/;"	f	class:DOS_Drive_Cache
Compress	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::Compress(ICCOMPRESS* icinfo, DWORD dwSize) {$/;"	f	class:CodecInst
CompressBegin	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::CompressBegin(LPBITMAPINFOHEADER lpbiIn, LPBITMAPINFOHEADER lpbiOut) {$/;"	f	class:CodecInst
CompressEnd	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::CompressEnd() {$/;"	f	class:CodecInst
CompressGetFormat	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::CompressGetFormat(LPBITMAPINFOHEADER lpbiIn, LPBITMAPINFOHEADER lpbiOut) {$/;"	f	class:CodecInst
CompressGetSize	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::CompressGetSize(LPBITMAPINFOHEADER lpbiIn, LPBITMAPINFOHEADER lpbiOut) {$/;"	f	class:CodecInst
CompressQuery	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::CompressQuery(LPBITMAPINFOHEADER lpbiIn, LPBITMAPINFOHEADER lpbiOut) {$/;"	f	class:CodecInst
ComputeInterrupts	src/hardware/serialport/serialport.cpp	/^void CSerial::ComputeInterrupts () {$/;"	f	class:CSerial
Config	include/control.h	/^	Config(CommandLine * cmd):cmdline(cmd),secure_mode(false){}$/;"	f	class:Config
Config	include/control.h	/^class Config{$/;"	c
ConfigName	src/gui/sdl_mapper.cpp	/^	void ConfigName(char * buf) {$/;"	f	class:CJAxisBind
ConfigName	src/gui/sdl_mapper.cpp	/^	void ConfigName(char * buf) {$/;"	f	class:CJButtonBind
ConfigName	src/gui/sdl_mapper.cpp	/^	void ConfigName(char * buf) {$/;"	f	class:CJHatBind
ConfigName	src/gui/sdl_mapper.cpp	/^	void ConfigName(char * buf) {$/;"	f	class:CKeyBind
ConfigStart	src/gui/sdl_mapper.cpp	/^	const char * ConfigStart(void) {$/;"	f	class:CKeyBindGroup	file:
ConfigStart	src/gui/sdl_mapper.cpp	/^	const char * ConfigStart(void) {$/;"	f	class:CStickBindGroup	file:
Configure	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::Configure(HWND hwnd) {$/;"	f	class:CodecInst
ConfigureDialogProc	src/libs/zmbv/zmbv_vfw.cpp	/^static BOOL CALLBACK ConfigureDialogProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam) {$/;"	f	file:
Conforming	include/cpu.h	/^	Bitu Conforming(void) {$/;"	f	class:Descriptor
ConnectToServer	src/hardware/ipx.cpp	/^bool ConnectToServer(char const *strAddr) {$/;"	f
Control	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Control : 4;$/;"	m	struct:_CDROM_TOC_FULL_TOC_DATA_BLOCK
Control	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Control : 4;$/;"	m	struct:_SUB_Q_CURRENT_POSITION
Control	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Control : 4;$/;"	m	struct:_TRACK_DATA
ControlCode	src/platform/visualc/ntddscsi.h	/^  ULONG  ControlCode; $/;"	m	struct:_SRB_IO_CONTROL
ConvDblWord	src/misc/support.cxx	/^double ConvDblWord(char * word) {$/;"	f
ConvDecWord	src/misc/support.cxx	/^Bits ConvDecWord(char * word) {$/;"	f
ConvHexWord	src/misc/support.cxx	/^Bits ConvHexWord(char * word) {$/;"	f
CopyEntry	src/dos/drive_cache.cpp	/^void DOS_Drive_Cache::CopyEntry(CFileInfo* dir, CFileInfo* from) {$/;"	f	class:DOS_Drive_Cache
CopyFileTable	src/dos/dos_classes.cpp	/^void DOS_PSP::CopyFileTable(DOS_PSP* srcpsp,bool createchildpsp)$/;"	f	class:DOS_PSP
Count	src/hardware/tandy_sound.cpp	/^	int Count[4];$/;"	m	struct:SN76496	file:
CountOfClusters	src/dos/drives.h	/^	Bit32u CountOfClusters;$/;"	m	class:fatDrive
Create	src/dos/dos_classes.cpp	/^void DOS_FCB::Create(bool _extended) {$/;"	f	class:DOS_FCB
CreateAutoexec	src/shell/shell.cpp	/^void AutoexecObject::CreateAutoexec(void) {$/;"	f	class:AutoexecObject
CreateAxisBind	src/gui/sdl_mapper.cpp	/^	CBind * CreateAxisBind(Bitu axis,bool positive) {$/;"	f	class:CStickBindGroup	file:
CreateBindGroups	src/gui/sdl_mapper.cpp	/^static void CreateBindGroups(void) {$/;"	f	file:
CreateButtonBind	src/gui/sdl_mapper.cpp	/^	CBind * CreateButtonBind(Bitu button) {$/;"	f	class:CStickBindGroup	file:
CreateCacheBlock	src/cpu/core_dyn_x86/decoder.h	/^static CacheBlock * CreateCacheBlock(CodePageHandler * codepage,PhysPt start,Bitu max_opcodes) {$/;"	f
CreateCacheBlock	src/cpu/core_dynrec/decoder.h	/^static CacheBlockDynRec * CreateCacheBlock(CodePageHandlerDynRec * codepage,PhysPt start,Bitu max_opcodes) {$/;"	f
CreateCacheBlock	src/cpu/core_dynrec/save/decoder.h	/^static CacheBlockDynRec * CreateCacheBlock(CodePageHandlerDynRec * codepage,PhysPt start,Bitu max_opcodes) {$/;"	f
CreateConfigBind	src/gui/sdl_mapper.cpp	/^	CBind * CreateConfigBind(char *& buf) {$/;"	f	class:CKeyBindGroup
CreateConfigBind	src/gui/sdl_mapper.cpp	/^	CBind * CreateConfigBind(char *& buf) {$/;"	f	class:CStickBindGroup
CreateDefaultBinds	src/gui/sdl_mapper.cpp	/^static void CreateDefaultBinds(void) {$/;"	f	file:
CreateDir	src/misc/cross.cpp	/^void Cross::CreateDir(std::string const& in) {$/;"	f	class:Cross
CreateEntry	src/dos/drive_cache.cpp	/^void DOS_Drive_Cache::CreateEntry(CFileInfo* dir, const char* name, bool is_directory) {$/;"	f	class:DOS_Drive_Cache
CreateEventBind	src/gui/sdl_mapper.cpp	/^	CBind * CreateEventBind(SDL_Event * event) {$/;"	f	class:CKeyBindGroup
CreateEventBind	src/gui/sdl_mapper.cpp	/^	CBind * CreateEventBind(SDL_Event * event) {$/;"	f	class:CStickBindGroup
CreateHatBind	src/gui/sdl_mapper.cpp	/^	CBind * CreateHatBind(Bitu hat,Bit8u value) {$/;"	f	class:CStickBindGroup	file:
CreateKeyBind	src/gui/sdl_mapper.cpp	/^	CBind * CreateKeyBind(SDLKey _key) {$/;"	f	class:CKeyBindGroup
CreateLayout	src/gui/sdl_mapper.cpp	/^static void CreateLayout(void) {$/;"	f	file:
CreatePlatformConfigDir	src/misc/cross.cpp	/^void Cross::CreatePlatformConfigDir(std::string& in) {$/;"	f	class:Cross
CreateShortName	src/dos/drive_cache.cpp	/^void DOS_Drive_Cache::CreateShortName(CFileInfo* curDir, CFileInfo* info) {$/;"	f	class:DOS_Drive_Cache
CreateShortNameID	src/dos/drive_cache.cpp	/^Bitu DOS_Drive_Cache::CreateShortNameID(CFileInfo* curDir, const char* name) {$/;"	f	class:DOS_Drive_Cache
CreateStringBind	src/gui/sdl_mapper.cpp	/^static void CreateStringBind(char * line) {$/;"	f	file:
Cross	include/cross.h	/^class Cross {$/;"	c
Ctrl	src/libs/gui_tk/gui_tk.h	/^		Alt, Ctrl, Shift, Windows$/;"	e	enum:GUI::Key::Special
CurMode	src/ints/int10_modes.cpp	/^VideoModeBlock * CurMode;$/;"	v
CurrentPosition	src/platform/visualc/ntddcdrm.h	/^  SUB_Q_CURRENT_POSITION  CurrentPosition;$/;"	m	union:_SUB_Q_CHANNEL_DATA
Cyan	src/libs/gui_tk/gui_tk.h	/^const RGB Cyan = Green|Blue;$/;"	m	namespace:GUI::Color
CyanMask	src/libs/gui_tk/gui_tk.h	/^const RGB CyanMask = GreenMask|BlueMask;$/;"	m	namespace:GUI::Color
CycleAllDisks	src/dos/drives.cpp	/^void DriveManager::CycleAllDisks(void) {$/;"	f	class:DriveManager
DAA	src/cpu/arminst.h	503;"	d
DAA	src/cpu/instructions.h	499;"	d
DAC_CLOCK	src/hardware/tandy_sound.cpp	33;"	d	file:
DAC_READ	src/hardware/vga_dac.cpp	/^enum {DAC_READ,DAC_WRITE};$/;"	e	enum:__anon185	file:
DAC_WRITE	src/hardware/vga_dac.cpp	/^enum {DAC_READ,DAC_WRITE};$/;"	e	enum:__anon185	file:
DAS	src/cpu/arminst.h	528;"	d
DAS	src/cpu/instructions.h	524;"	d
DASMLine	src/debug/debug_inc.h	/^struct DASMLine {$/;"	s
DATATYPE	src/gui/render_16.h	252;"	d
DATATYPE	src/gui/render_16.h	41;"	d
DATATYPE	src/gui/render_32.h	162;"	d
DATATYPE	src/gui/render_32.h	41;"	d
DATATYPE	src/gui/render_8.h	29;"	d
DATATYPE	src/gui/render_9.h	33;"	d
DATA_LENGTH	src/dos/drives.h	294;"	d
DATA_LENGTH	src/dos/drives.h	297;"	d
DATA_TRANSFERS_TAKE_CYCLES	src/dos/dos.cpp	45;"	d	file:
DA_bh	src/cpu/core_dyn_x86.cpp	/^	DA_bh,DA_bl$/;"	e	enum:DynAccess	file:
DA_bl	src/cpu/core_dyn_x86.cpp	/^	DA_bh,DA_bl$/;"	e	enum:DynAccess	file:
DA_d	src/cpu/core_dyn_x86.cpp	/^	DA_d,DA_w,$/;"	e	enum:DynAccess	file:
DA_w	src/cpu/core_dyn_x86.cpp	/^	DA_d,DA_w,$/;"	e	enum:DynAccess	file:
DBGBlock	src/debug/debug_inc.h	/^struct DBGBlock {$/;"	s
DBGUI_StartUp	src/debug/debug_gui.cpp	/^void DBGUI_StartUp(void) {$/;"	f
DBPP	src/gui/render_scalers.cpp	44;"	d	file:
DBPP	src/gui/render_scalers.cpp	47;"	d	file:
DBPP	src/gui/render_scalers.cpp	50;"	d	file:
DBPP	src/gui/render_scalers.cpp	53;"	d	file:
DBPP	src/gui/render_scalers.cpp	56;"	d	file:
DBPP	src/gui/render_scalers.cpp	59;"	d	file:
DBPP	src/gui/render_scalers.cpp	62;"	d	file:
DBPP	src/gui/render_scalers.cpp	65;"	d	file:
DBPP	src/gui/render_scalers.cpp	68;"	d	file:
DBPP	src/gui/render_scalers.cpp	71;"	d	file:
DB_FASTCALL	config.h	233;"	d
DB_FASTCALL	config.h	235;"	d
DC_OFFSET_FADE	src/hardware/sblaster.cpp	288;"	d	file:
DD_SCSI_DEVICE_NAME	src/platform/visualc/ntddscsi.h	38;"	d
DD_SCSI_DEVICE_NAME_U	src/platform/visualc/ntddscsi.h	39;"	d
DEBUG	src/debug/debug.cpp	/^	DEBUG()		{ pDebugcom	= this;	active = false; };$/;"	f	class:DEBUG
DEBUG	src/debug/debug.cpp	/^class DEBUG : public Program {$/;"	c	file:
DEBUG_Breakpoint	src/debug/debug.cpp	/^bool DEBUG_Breakpoint(void)$/;"	f
DEBUG_CheckExecuteBreakpoint	src/debug/debug.cpp	/^void DEBUG_CheckExecuteBreakpoint(Bit16u seg, Bit32u off)$/;"	f
DEBUG_CheckKeys	src/debug/debug.cpp	/^Bit32u DEBUG_CheckKeys(void) {$/;"	f
DEBUG_DrawScreen	src/debug/debug.cpp	/^void DEBUG_DrawScreen(void) {$/;"	f
DEBUG_Enable	src/debug/debug.cpp	/^void DEBUG_Enable(bool pressed) {$/;"	f
DEBUG_EnableDebugger	src/debug/debug.cpp	/^Bitu DEBUG_EnableDebugger(void)$/;"	f
DEBUG_ExitLoop	src/debug/debug.cpp	/^bool DEBUG_ExitLoop(void)$/;"	f
DEBUG_HeavyIsBreakpoint	src/debug/debug.cpp	/^bool DEBUG_HeavyIsBreakpoint(void) {$/;"	f
DEBUG_HeavyLogInstruction	src/debug/debug.cpp	/^void DEBUG_HeavyLogInstruction(void) {$/;"	f
DEBUG_HeavyWriteLogInstruction	src/debug/debug.cpp	/^void DEBUG_HeavyWriteLogInstruction(void) {$/;"	f
DEBUG_Init	src/debug/debug.cpp	/^void DEBUG_Init(Section* sec) {$/;"	f
DEBUG_IntBreakpoint	src/debug/debug.cpp	/^bool DEBUG_IntBreakpoint(Bit8u intNum)$/;"	f
DEBUG_Loop	src/debug/debug.cpp	/^Bitu DEBUG_Loop(void) {$/;"	f
DEBUG_ProgramStart	src/debug/debug.cpp	/^static void DEBUG_ProgramStart(Program * * make) {$/;"	f	file:
DEBUG_RaiseTimerIrq	src/debug/debug.cpp	/^static void DEBUG_RaiseTimerIrq(void) {$/;"	f	file:
DEBUG_RefreshPage	src/debug/debug_gui.cpp	/^void DEBUG_RefreshPage(char scroll) {$/;"	f
DEBUG_SetupConsole	src/debug/debug.cpp	/^void DEBUG_SetupConsole(void)$/;"	f
DEBUG_ShowMsg	src/debug/debug_gui.cpp	/^void DEBUG_ShowMsg(char const* format,...) {$/;"	f
DEBUG_ShutDown	src/debug/debug.cpp	/^static void DEBUG_ShutDown(Section * sec) $/;"	f	file:
DEBUG_VAR_BUF_LEN	src/debug/debug.cpp	2118;"	d	file:
DEBUG_VAR_BUF_LEN	src/debug/debug.cpp	2150;"	d	file:
DECB	src/cpu/arminst.h	214;"	d
DECB	src/cpu/instructions.h	210;"	d
DECD	src/cpu/arminst.h	226;"	d
DECD	src/cpu/instructions.h	222;"	d
DECW	src/cpu/arminst.h	220;"	d
DECW	src/cpu/instructions.h	216;"	d
DEFAULT_CONFIG_FILE	src/misc/cross.cpp	65;"	d	file:
DEFAULT_SRB_TIMEOUT	src/dos/wnaspi32.h	50;"	d
DELAY	src/cpu/core_dynrec/risc_mipsel32.h	384;"	d
DELAY	src/cpu/core_dynrec/save/risc_mipsel32.h	384;"	d
DESC_286_CALL_GATE	include/cpu.h	195;"	d
DESC_286_INT_GATE	include/cpu.h	197;"	d
DESC_286_TRAP_GATE	include/cpu.h	198;"	d
DESC_286_TSS_A	include/cpu.h	192;"	d
DESC_286_TSS_B	include/cpu.h	194;"	d
DESC_386_CALL_GATE	include/cpu.h	202;"	d
DESC_386_INT_GATE	include/cpu.h	203;"	d
DESC_386_TRAP_GATE	include/cpu.h	204;"	d
DESC_386_TSS_A	include/cpu.h	200;"	d
DESC_386_TSS_B	include/cpu.h	201;"	d
DESC_CODE_N_C_A	include/cpu.h	221;"	d
DESC_CODE_N_C_NA	include/cpu.h	222;"	d
DESC_CODE_N_NC_A	include/cpu.h	217;"	d
DESC_CODE_N_NC_NA	include/cpu.h	218;"	d
DESC_CODE_R_C_A	include/cpu.h	223;"	d
DESC_CODE_R_C_NA	include/cpu.h	224;"	d
DESC_CODE_R_NC_A	include/cpu.h	219;"	d
DESC_CODE_R_NC_NA	include/cpu.h	220;"	d
DESC_DATA_ED_RO_A	include/cpu.h	212;"	d
DESC_DATA_ED_RO_NA	include/cpu.h	211;"	d
DESC_DATA_ED_RW_A	include/cpu.h	214;"	d
DESC_DATA_ED_RW_NA	include/cpu.h	213;"	d
DESC_DATA_EU_RO_A	include/cpu.h	208;"	d
DESC_DATA_EU_RO_NA	include/cpu.h	207;"	d
DESC_DATA_EU_RW_A	include/cpu.h	210;"	d
DESC_DATA_EU_RW_NA	include/cpu.h	209;"	d
DESC_INVALID	include/cpu.h	191;"	d
DESC_LDT	include/cpu.h	193;"	d
DESC_TASK_GATE	include/cpu.h	196;"	d
DH_FPU_SAVE_REINIT	src/cpu/core_dyn_x86.cpp	241;"	d	file:
DH_FPU_SAVE_REINIT	src/cpu/core_dyn_x86.cpp	250;"	d	file:
DIGITAL_COPY_PERMITTED	src/platform/visualc/ntddcdrm.h	289;"	d
DIMULD	src/cpu/arminst.h	812;"	d
DIMULD	src/cpu/instructions.h	808;"	d
DIMULW	src/cpu/arminst.h	800;"	d
DIMULW	src/cpu/instructions.h	796;"	d
DIR	src/platform/visualc/dirent.h	/^} DIR;$/;"	t	typeref:struct:my_dir
DIRALPHABETICAL	include/dos_system.h	/^	enum TDirSort { NOSORT, ALPHABETICAL, DIRALPHABETICAL, ALPHABETICALREV, DIRALPHABETICALREV };$/;"	e	enum:DOS_Drive_Cache::TDirSort
DIRALPHABETICALREV	include/dos_system.h	/^	enum TDirSort { NOSORT, ALPHABETICAL, DIRALPHABETICAL, ALPHABETICALREV, DIRALPHABETICALREV };$/;"	e	enum:DOS_Drive_Cache::TDirSort
DIRECTSERIAL_AVAILIBLE	src/hardware/serialport/directserial_os2.h	29;"	d
DIRECTSERIAL_AVAILIBLE	src/hardware/serialport/directserial_posix.h	32;"	d
DIRECTSERIAL_AVAILIBLE	src/hardware/serialport/directserial_win32.h	32;"	d
DIRENT_HAS_D_TYPE	config.h	100;"	d
DISNEY	src/hardware/disney.cpp	/^	DISNEY(Section* configuration):Module_base(configuration) {$/;"	f	class:DISNEY
DISNEY	src/hardware/disney.cpp	/^class DISNEY: public Module_base {$/;"	c	file:
DISNEY_BASE	src/hardware/disney.cpp	28;"	d	file:
DISNEY_CallBack	src/hardware/disney.cpp	/^static void DISNEY_CallBack(Bitu len) {$/;"	f	file:
DISNEY_Init	src/hardware/disney.cpp	/^void DISNEY_Init(Section* sec) {$/;"	f
DISNEY_PlayStereo	src/hardware/disney.cpp	/^static void DISNEY_PlayStereo(Bitu len, Bit8u* l, Bit8u* r) {$/;"	f	file:
DISNEY_SIZE	src/hardware/disney.cpp	30;"	d	file:
DISNEY_ShutDown	src/hardware/disney.cpp	/^static void DISNEY_ShutDown(Section* sec){$/;"	f	file:
DISNEY_analyze	src/hardware/disney.cpp	/^static void DISNEY_analyze(Bitu channel){$/;"	f	file:
DISNEY_disable	src/hardware/disney.cpp	/^static void DISNEY_disable(Bitu) {$/;"	f	file:
DISNEY_enable	src/hardware/disney.cpp	/^static void DISNEY_enable(Bitu freq) {$/;"	f	file:
DIVB	src/cpu/arminst.h	676;"	d
DIVB	src/cpu/instructions.h	672;"	d
DIVD	src/cpu/arminst.h	702;"	d
DIVD	src/cpu/instructions.h	698;"	d
DIVW	src/cpu/arminst.h	689;"	d
DIVW	src/cpu/instructions.h	685;"	d
DMA	src/hardware/dma.cpp	/^	DMA(Section* configuration):Module_base(configuration){$/;"	f	class:DMA
DMA	src/hardware/dma.cpp	/^class DMA:public Module_base{$/;"	c	file:
DMA16	include/dma.h	/^	Bit8u DMA16;$/;"	m	class:DmaChannel
DMAEvent	include/dma.h	/^enum DMAEvent {$/;"	g
DMA_16_Read	include/modules.h	/^static void (* DMA_16_Read)(Bit32u chan,Bit8u * data,Bit16u size);$/;"	v
DMA_16_Write	include/modules.h	/^static void (* DMA_16_Write)(Bit32u chan,Bit8u * data,Bit16u size);$/;"	v
DMA_8_Read	include/modules.h	/^static void (* DMA_8_Read)(Bit32u chan,Bit8u * data,Bit16u size);$/;"	v
DMA_8_Write	include/modules.h	/^static void (* DMA_8_Write)(Bit32u chan,Bit8u * data,Bit16u size);$/;"	v
DMA_BUFSIZE	src/hardware/sblaster.cpp	56;"	d	file:
DMA_BlockRead	src/hardware/dma.cpp	/^static void DMA_BlockRead(PhysPt pt,void * data,Bitu size) {$/;"	f	file:
DMA_BlockWrite	src/hardware/dma.cpp	/^static void DMA_BlockWrite(PhysPt pt,void * data,Bitu size) {$/;"	f	file:
DMA_CallBack	include/dma.h	/^typedef void (* DMA_CallBack)(DmaChannel * chan,DMAEvent event);$/;"	t
DMA_Destroy	src/hardware/dma.cpp	/^void DMA_Destroy(Section* sec){$/;"	f
DMA_Init	src/hardware/dma.cpp	/^void DMA_Init(Section* sec) {$/;"	f
DMA_MASKED	include/dma.h	/^	DMA_MASKED,$/;"	e	enum:DMAEvent
DMA_MODES	src/hardware/sblaster.cpp	/^enum DMA_MODES {$/;"	g	file:
DMA_REACHED_TC	include/dma.h	/^	DMA_REACHED_TC,$/;"	e	enum:DMAEvent
DMA_ReadHandler	include/dma.h	/^	IO_ReadHandleObject DMA_ReadHandler[0x11];$/;"	m	class:DmaController
DMA_Read_Port	src/hardware/dma.cpp	/^static Bitu DMA_Read_Port(Bitu port,Bitu iolen) {$/;"	f	file:
DMA_Silent_Event	src/hardware/sblaster.cpp	/^static void DMA_Silent_Event(Bitu val) {$/;"	f	file:
DMA_TRANSFEREND	include/dma.h	/^	DMA_TRANSFEREND$/;"	e	enum:DMAEvent
DMA_UNMASKED	include/dma.h	/^	DMA_UNMASKED,$/;"	e	enum:DMAEvent
DMA_WriteHandler	include/dma.h	/^	IO_WriteHandleObject DMA_WriteHandler[0x11];$/;"	m	class:DmaController
DMA_Write_Port	src/hardware/dma.cpp	/^static void DMA_Write_Port(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
DOFLAG_AF	src/cpu/flags.cpp	483;"	d	file:
DOFLAG_PF	src/cpu/flags.cpp	481;"	d	file:
DOFLAG_SFb	src/cpu/flags.cpp	489;"	d	file:
DOFLAG_SFd	src/cpu/flags.cpp	491;"	d	file:
DOFLAG_SFw	src/cpu/flags.cpp	490;"	d	file:
DOFLAG_ZFb	src/cpu/flags.cpp	485;"	d	file:
DOFLAG_ZFd	src/cpu/flags.cpp	487;"	d	file:
DOFLAG_ZFw	src/cpu/flags.cpp	486;"	d	file:
DOP_ADC	src/cpu/core_dyn_x86.cpp	/^	DOP_ADD,DOP_ADC,$/;"	e	enum:DualOps	file:
DOP_ADC	src/cpu/core_dynrec/decoder_basic.h	/^	DOP_ADD,DOP_ADC,$/;"	e	enum:DualOps
DOP_ADC	src/cpu/core_dynrec/save/decoder_basic.h	/^	DOP_ADD,DOP_ADC,$/;"	e	enum:DualOps
DOP_ADD	src/cpu/core_dyn_x86.cpp	/^	DOP_ADD,DOP_ADC,$/;"	e	enum:DualOps	file:
DOP_ADD	src/cpu/core_dynrec/decoder_basic.h	/^	DOP_ADD,DOP_ADC,$/;"	e	enum:DualOps
DOP_ADD	src/cpu/core_dynrec/save/decoder_basic.h	/^	DOP_ADD,DOP_ADC,$/;"	e	enum:DualOps
DOP_AND	src/cpu/core_dyn_x86.cpp	/^	DOP_AND,DOP_OR,$/;"	e	enum:DualOps	file:
DOP_AND	src/cpu/core_dynrec/decoder_basic.h	/^	DOP_AND,DOP_OR,$/;"	e	enum:DualOps
DOP_AND	src/cpu/core_dynrec/save/decoder_basic.h	/^	DOP_AND,DOP_OR,$/;"	e	enum:DualOps
DOP_CMP	src/cpu/core_dyn_x86.cpp	/^	DOP_CMP,DOP_XOR,$/;"	e	enum:DualOps	file:
DOP_CMP	src/cpu/core_dynrec/decoder_basic.h	/^	DOP_CMP,DOP_XOR,$/;"	e	enum:DualOps
DOP_CMP	src/cpu/core_dynrec/save/decoder_basic.h	/^	DOP_CMP,DOP_XOR,$/;"	e	enum:DualOps
DOP_MOV	src/cpu/core_dyn_x86.cpp	/^	DOP_MOV,$/;"	e	enum:DualOps	file:
DOP_MOV	src/cpu/core_dynrec/decoder_basic.h	/^	DOP_MOV,$/;"	e	enum:DualOps
DOP_MOV	src/cpu/core_dynrec/save/decoder_basic.h	/^	DOP_MOV,$/;"	e	enum:DualOps
DOP_OR	src/cpu/core_dyn_x86.cpp	/^	DOP_AND,DOP_OR,$/;"	e	enum:DualOps	file:
DOP_OR	src/cpu/core_dynrec/decoder_basic.h	/^	DOP_AND,DOP_OR,$/;"	e	enum:DualOps
DOP_OR	src/cpu/core_dynrec/save/decoder_basic.h	/^	DOP_AND,DOP_OR,$/;"	e	enum:DualOps
DOP_SBB	src/cpu/core_dyn_x86.cpp	/^	DOP_SUB,DOP_SBB,$/;"	e	enum:DualOps	file:
DOP_SBB	src/cpu/core_dynrec/decoder_basic.h	/^	DOP_SUB,DOP_SBB,$/;"	e	enum:DualOps
DOP_SBB	src/cpu/core_dynrec/save/decoder_basic.h	/^	DOP_SUB,DOP_SBB,$/;"	e	enum:DualOps
DOP_SUB	src/cpu/core_dyn_x86.cpp	/^	DOP_SUB,DOP_SBB,$/;"	e	enum:DualOps	file:
DOP_SUB	src/cpu/core_dynrec/decoder_basic.h	/^	DOP_SUB,DOP_SBB,$/;"	e	enum:DualOps
DOP_SUB	src/cpu/core_dynrec/save/decoder_basic.h	/^	DOP_SUB,DOP_SBB,$/;"	e	enum:DualOps
DOP_TEST	src/cpu/core_dyn_x86.cpp	/^	DOP_TEST,$/;"	e	enum:DualOps	file:
DOP_TEST	src/cpu/core_dynrec/decoder_basic.h	/^	DOP_TEST,$/;"	e	enum:DualOps
DOP_TEST	src/cpu/core_dynrec/save/decoder_basic.h	/^	DOP_TEST,$/;"	e	enum:DualOps
DOP_XCHG	src/cpu/core_dyn_x86.cpp	/^	DOP_XCHG,$/;"	e	enum:DualOps	file:
DOP_XCHG	src/cpu/core_dynrec/decoder_basic.h	/^	DOP_XCHG,$/;"	e	enum:DualOps
DOP_XCHG	src/cpu/core_dynrec/save/decoder_basic.h	/^	DOP_XCHG,$/;"	e	enum:DualOps
DOP_XOR	src/cpu/core_dyn_x86.cpp	/^	DOP_CMP,DOP_XOR,$/;"	e	enum:DualOps	file:
DOP_XOR	src/cpu/core_dynrec/decoder_basic.h	/^	DOP_CMP,DOP_XOR,$/;"	e	enum:DualOps
DOP_XOR	src/cpu/core_dynrec/save/decoder_basic.h	/^	DOP_CMP,DOP_XOR,$/;"	e	enum:DualOps
DOS	src/dos/dos.cpp	/^	DOS(Section* configuration):Module_base(configuration){$/;"	f	class:DOS
DOS	src/dos/dos.cpp	/^class DOS:public Module_base{$/;"	c	file:
DOSBOX_ADLIB_H	src/hardware/adlib.h	2;"	d
DOSBOX_BIOS_DISK_H	include/bios_disk.h	20;"	d
DOSBOX_BIOS_H	include/bios.h	20;"	d
DOSBOX_CALLBACK_H	include/callback.h	22;"	d
DOSBOX_CLOCKSYNC	src/ints/bios.cpp	328;"	d	file:
DOSBOX_CLOCKSYNC	src/ints/bios.cpp	362;"	d	file:
DOSBOX_CONTROL_H	include/control.h	22;"	d
DOSBOX_CPU_H	include/cpu.h	22;"	d
DOSBOX_CROSS_H	include/cross.h	22;"	d
DOSBOX_CROSS_H	src/cpu/core_dynrec/cross.h	22;"	d
DOSBOX_CROSS_H	src/cpu/core_dynrec/save/cross.h	22;"	d
DOSBOX_DIRECTSERIAL_OS2_H	src/hardware/serialport/directserial_os2.h	23;"	d
DOSBOX_DIRECTSERIAL_POSIX_H	src/hardware/serialport/directserial_posix.h	23;"	d
DOSBOX_DIRECTSERIAL_WIN32_H	src/hardware/serialport/directserial_win32.h	23;"	d
DOSBOX_DMA_H	include/dma.h	22;"	d
DOSBOX_DOSBOX_H	include/dosbox.h	22;"	d
DOSBOX_DOS_INC_H	include/dos_inc.h	22;"	d
DOSBOX_DOS_SYSTEM_H	include/dos_system.h	22;"	d
DOSBOX_FPU_H	include/fpu.h	20;"	d
DOSBOX_HARDWARE_H	include/hardware.h	20;"	d
DOSBOX_INOUT_H	include/inout.h	22;"	d
DOSBOX_IPXSERVER_H_	include/ipxserver.h	20;"	d
DOSBOX_IPX_H	include/ipx.h	22;"	d
DOSBOX_Init	src/dosbox.cpp	/^void DOSBOX_Init(void) {$/;"	f
DOSBOX_JOYSTICK_H	include/joystick.h	21;"	d
DOSBOX_KEYBOARD_H	include/keyboard.h	20;"	d
DOSBOX_LOGGING_H	include/logging.h	2;"	d
DOSBOX_MAPPER_H	include/mapper.h	20;"	d
DOSBOX_MEM_H	include/mem.h	20;"	d
DOSBOX_MIXER_H	include/mixer.h	20;"	d
DOSBOX_MOUSE_H	include/mouse.h	23;"	d
DOSBOX_NULLMODEM_WIN32_H	src/hardware/serialport/nullmodem.h	23;"	d
DOSBOX_PAGING_H	include/paging.h	22;"	d
DOSBOX_PIC_H	include/pic.h	20;"	d
DOSBOX_PROGRAMS_H	include/programs.h	22;"	d
DOSBOX_REGS_H	include/regs.h	20;"	d
DOSBOX_RENDER_H	include/render.h	20;"	d
DOSBOX_RealInit	src/dosbox.cpp	/^static void DOSBOX_RealInit(Section * sec) {$/;"	f	file:
DOSBOX_RunMachine	src/dosbox.cpp	/^void DOSBOX_RunMachine(void){$/;"	f
DOSBOX_SERIALMODEM_H	src/hardware/serialport/softmodem.h	22;"	d
DOSBOX_SERIALPORT_H	include/serialport.h	22;"	d
DOSBOX_SETUP_H	include/setup.h	22;"	d
DOSBOX_SHELL_H	include/shell.h	22;"	d
DOSBOX_SUPPORT_H	include/support.h	22;"	d
DOSBOX_SetLoop	src/dosbox.cpp	/^void DOSBOX_SetLoop(LoopHandler * handler) {$/;"	f
DOSBOX_SetNormalLoop	src/dosbox.cpp	/^void DOSBOX_SetNormalLoop() {$/;"	f
DOSBOX_TIMER_H	include/timer.h	20;"	d
DOSBOX_UnlockSpeed	src/dosbox.cpp	/^static void DOSBOX_UnlockSpeed( bool pressed ) {$/;"	f	file:
DOSBOX_VGA_H	include/vga.h	22;"	d
DOSBOX_VIDEO_H	include/video.h	22;"	d
DOSERR_ACCESS_CODE_INVALID	include/dos_inc.h	239;"	d
DOSERR_ACCESS_DENIED	include/dos_inc.h	232;"	d
DOSERR_DATA_INVALID	include/dos_inc.h	240;"	d
DOSERR_ENVIRONMENT_INVALID	include/dos_inc.h	237;"	d
DOSERR_FILE_ALREADY_EXISTS	include/dos_inc.h	247;"	d
DOSERR_FILE_NOT_FOUND	include/dos_inc.h	229;"	d
DOSERR_FIXUP_OVERFLOW	include/dos_inc.h	242;"	d
DOSERR_FORMAT_INVALID	include/dos_inc.h	238;"	d
DOSERR_FUNCTION_NUMBER_INVALID	include/dos_inc.h	228;"	d
DOSERR_INSUFFICIENT_MEMORY	include/dos_inc.h	235;"	d
DOSERR_INVALID_DRIVE	include/dos_inc.h	243;"	d
DOSERR_INVALID_HANDLE	include/dos_inc.h	233;"	d
DOSERR_MB_ADDRESS_INVALID	include/dos_inc.h	236;"	d
DOSERR_MCB_DESTROYED	include/dos_inc.h	234;"	d
DOSERR_NONE	include/dos_inc.h	227;"	d
DOSERR_NOT_SAME_DEVICE	include/dos_inc.h	245;"	d
DOSERR_NO_MORE_FILES	include/dos_inc.h	246;"	d
DOSERR_PATH_NOT_FOUND	include/dos_inc.h	230;"	d
DOSERR_REMOVE_CURRENT_DIRECTORY	include/dos_inc.h	244;"	d
DOSERR_RESERVED	include/dos_inc.h	241;"	d
DOSERR_TOO_MANY_OPEN_FILES	include/dos_inc.h	231;"	d
DOSNAMEBUF	src/dos/dos.cpp	63;"	d	file:
DOS_20Handler	src/dos/dos.cpp	/^static Bitu DOS_20Handler(void) {$/;"	f	file:
DOS_21Handler	src/dos/dos.cpp	/^static Bitu DOS_21Handler(void) {$/;"	f	file:
DOS_25Handler	src/dos/dos.cpp	/^static Bitu DOS_25Handler(void) {$/;"	f	file:
DOS_26Handler	src/dos/dos.cpp	/^static Bitu DOS_26Handler(void) {$/;"	f	file:
DOS_27Handler	src/dos/dos.cpp	/^static Bitu DOS_27Handler(void) {$/;"	f	file:
DOS_ATTR_ARCHIVE	include/dos_system.h	/^	DOS_ATTR_ARCHIVE=	0x20,$/;"	e	enum:__anon16
DOS_ATTR_DEVICE	include/dos_system.h	/^	DOS_ATTR_DEVICE=	0x40$/;"	e	enum:__anon16
DOS_ATTR_DIRECTORY	include/dos_system.h	/^	DOS_ATTR_DIRECTORY=	0x10,$/;"	e	enum:__anon16
DOS_ATTR_HIDDEN	include/dos_system.h	/^	DOS_ATTR_HIDDEN=	0x02,$/;"	e	enum:__anon16
DOS_ATTR_READ_ONLY	include/dos_system.h	/^	DOS_ATTR_READ_ONLY=	0x01,$/;"	e	enum:__anon16
DOS_ATTR_SYSTEM	include/dos_system.h	/^	DOS_ATTR_SYSTEM=	0x04,$/;"	e	enum:__anon16
DOS_ATTR_VOLUME	include/dos_system.h	/^	DOS_ATTR_VOLUME=	0x08,$/;"	e	enum:__anon16
DOS_AddDevice	src/dos/dos_devices.cpp	/^void DOS_AddDevice(DOS_Device * adddev) {$/;"	f
DOS_AddMultiplexHandler	src/dos/dos_misc.cpp	/^void DOS_AddMultiplexHandler(MultiplexHandler * handler) {$/;"	f
DOS_AllocateMemory	src/dos/dos_memory.cpp	/^bool DOS_AllocateMemory(Bit16u * segment,Bit16u * blocks) {$/;"	f
DOS_Block	include/dos_inc.h	/^struct DOS_Block {$/;"	s
DOS_BuildUMBChain	src/dos/dos_memory.cpp	/^void DOS_BuildUMBChain(bool umb_active,bool ems_active) {$/;"	f
DOS_CDS_SEG	include/dos_inc.h	87;"	d
DOS_CONDRV_SEG	include/dos_inc.h	83;"	d
DOS_CONSTRING_SEG	include/dos_inc.h	84;"	d
DOS_COPYBUFSIZE	src/dos/dos.cpp	38;"	d	file:
DOS_Canonicalize	src/dos/dos_files.cpp	/^bool DOS_Canonicalize(char const * const name,char * const big) {$/;"	f
DOS_CaseMapFunc	src/dos/dos_tables.cpp	/^static Bitu DOS_CaseMapFunc(void) {$/;"	f	file:
DOS_ChangeDir	src/dos/dos_files.cpp	/^bool DOS_ChangeDir(char const * const dir) {$/;"	f
DOS_ChildPSP	src/dos/dos_execute.cpp	/^bool DOS_ChildPSP(Bit16u segment, Bit16u size) {$/;"	f
DOS_CloseFile	src/dos/dos_files.cpp	/^bool DOS_CloseFile(Bit16u entry) {$/;"	f
DOS_CompressMemory	src/dos/dos_memory.cpp	/^static void DOS_CompressMemory(void) {$/;"	f	file:
DOS_CreateFile	src/dos/dos_files.cpp	/^bool DOS_CreateFile(char const * name,Bit16u attributes,Bit16u * entry) {$/;"	f
DOS_CreateTempFile	src/dos/dos_files.cpp	/^bool DOS_CreateTempFile(char * const name,Bit16u * entry) {$/;"	f
DOS_DEVICES	include/dos_inc.h	77;"	d
DOS_DIRDEPTH	include/dos_system.h	41;"	d
DOS_DRIVES	include/dos_inc.h	76;"	d
DOS_DTA	include/dos_inc.h	/^	DOS_DTA(RealPt addr) { SetPt(addr); }$/;"	f	class:DOS_DTA
DOS_DTA	include/dos_inc.h	/^class DOS_DTA:public MemStruct{$/;"	c
DOS_Date	include/dos_inc.h	/^struct DOS_Date {$/;"	s
DOS_DelDevice	src/dos/dos_devices.cpp	/^void DOS_DelDevice(DOS_Device * dev) {$/;"	f
DOS_DelMultiplexHandler	src/dos/dos_misc.cpp	/^void DOS_DelMultiplexHandler(MultiplexHandler * handler) {$/;"	f
DOS_Device	include/dos_system.h	/^	DOS_Device():DOS_File(),devnum(0){};$/;"	f	class:DOS_Device
DOS_Device	include/dos_system.h	/^	DOS_Device(const DOS_Device& orig):DOS_File(orig) {$/;"	f	class:DOS_Device
DOS_Device	include/dos_system.h	/^class DOS_Device : public DOS_File {$/;"	c
DOS_DeviceHeader	src/dos/dos_mscdex.cpp	/^	DOS_DeviceHeader(PhysPt ptr)				{ pt = ptr; };$/;"	f	class:DOS_DeviceHeader
DOS_DeviceHeader	src/dos/dos_mscdex.cpp	/^class DOS_DeviceHeader:public MemStruct$/;"	c	file:
DOS_Drive	include/dos_system.h	/^class DOS_Drive {$/;"	c
DOS_Drive	src/dos/drives.cpp	/^DOS_Drive::DOS_Drive() {$/;"	f	class:DOS_Drive
DOS_Drive_Cache	include/dos_system.h	/^class DOS_Drive_Cache {$/;"	c
DOS_Drive_Cache	src/dos/drive_cache.cpp	/^DOS_Drive_Cache::DOS_Drive_Cache(const char* path)$/;"	f	class:DOS_Drive_Cache
DOS_Drive_Cache	src/dos/drive_cache.cpp	/^DOS_Drive_Cache::DOS_Drive_Cache(void)$/;"	f	class:DOS_Drive_Cache
DOS_DuplicateEntry	src/dos/dos_files.cpp	/^bool DOS_DuplicateEntry(Bit16u entry,Bit16u * newentry) {$/;"	f
DOS_Execute	src/dos/dos_execute.cpp	/^bool DOS_Execute(char * name,PhysPt block_pt,Bit8u flags) {$/;"	f
DOS_FCB	include/dos_inc.h	/^class DOS_FCB: public MemStruct {$/;"	c
DOS_FCB	src/dos/dos_classes.cpp	/^DOS_FCB::DOS_FCB(Bit16u seg,Bit16u off) { $/;"	f	class:DOS_FCB
DOS_FCBClose	src/dos/dos_files.cpp	/^bool DOS_FCBClose(Bit16u seg,Bit16u offset) {$/;"	f
DOS_FCBCreate	src/dos/dos_files.cpp	/^bool DOS_FCBCreate(Bit16u seg,Bit16u offset) { $/;"	f
DOS_FCBDeleteFile	src/dos/dos_files.cpp	/^bool DOS_FCBDeleteFile(Bit16u seg,Bit16u offset){$/;"	f
DOS_FCBFindFirst	src/dos/dos_files.cpp	/^bool DOS_FCBFindFirst(Bit16u seg,Bit16u offset) {$/;"	f
DOS_FCBFindNext	src/dos/dos_files.cpp	/^bool DOS_FCBFindNext(Bit16u seg,Bit16u offset) {$/;"	f
DOS_FCBGetFileSize	src/dos/dos_files.cpp	/^bool DOS_FCBGetFileSize(Bit16u seg,Bit16u offset) {$/;"	f
DOS_FCBNAME	include/dos_system.h	40;"	d
DOS_FCBOpen	src/dos/dos_files.cpp	/^bool DOS_FCBOpen(Bit16u seg,Bit16u offset) { $/;"	f
DOS_FCBRandomRead	src/dos/dos_files.cpp	/^Bit8u DOS_FCBRandomRead(Bit16u seg,Bit16u offset,Bit16u numRec,bool restore) {$/;"	f
DOS_FCBRandomWrite	src/dos/dos_files.cpp	/^Bit8u DOS_FCBRandomWrite(Bit16u seg,Bit16u offset,Bit16u numRec,bool restore) {$/;"	f
DOS_FCBRead	src/dos/dos_files.cpp	/^Bit8u DOS_FCBRead(Bit16u seg,Bit16u offset,Bit16u recno) {$/;"	f
DOS_FCBRenameFile	src/dos/dos_files.cpp	/^bool DOS_FCBRenameFile(Bit16u seg, Bit16u offset){$/;"	f
DOS_FCBSetRandomRecord	src/dos/dos_files.cpp	/^void DOS_FCBSetRandomRecord(Bit16u seg, Bit16u offset) {$/;"	f
DOS_FCBWrite	src/dos/dos_files.cpp	/^Bit8u DOS_FCBWrite(Bit16u seg,Bit16u offset,Bit16u recno)$/;"	f
DOS_FILES	include/dos_inc.h	75;"	d
DOS_FILESTART	src/dos/dos_files.cpp	34;"	d	file:
DOS_FIRST_SHELL	include/dos_inc.h	88;"	d
DOS_File	include/dos_system.h	/^	DOS_File():flags(0)		{ name=0; refCtr = 0; hdrive=0xff; };$/;"	f	class:DOS_File
DOS_File	include/dos_system.h	/^class DOS_File {$/;"	c
DOS_File	src/dos/dos_devices.cpp	/^DOS_File::DOS_File(const DOS_File& orig) {$/;"	f	class:DOS_File
DOS_FileExists	src/dos/dos_files.cpp	/^bool DOS_FileExists(char const * const name) {$/;"	f
DOS_FindDevice	src/dos/dos_devices.cpp	/^Bit8u DOS_FindDevice(char const * name) {$/;"	f
DOS_FindFirst	src/dos/dos_files.cpp	/^bool DOS_FindFirst(char * search,Bit16u attr,bool fcb_findfirst) {$/;"	f
DOS_FindNext	src/dos/dos_files.cpp	/^bool DOS_FindNext(void) {$/;"	f
DOS_FlushFile	src/dos/dos_files.cpp	/^bool DOS_FlushFile(Bit16u entry) {$/;"	f
DOS_ForceDuplicateEntry	src/dos/dos_files.cpp	/^bool DOS_ForceDuplicateEntry(Bit16u entry,Bit16u newentry) {$/;"	f
DOS_FreeMemory	src/dos/dos_memory.cpp	/^bool DOS_FreeMemory(Bit16u segment) {$/;"	f
DOS_FreeProcessMemory	src/dos/dos_memory.cpp	/^void DOS_FreeProcessMemory(Bit16u pspseg) {$/;"	f
DOS_GetAllocationInfo	src/dos/dos_files.cpp	/^bool DOS_GetAllocationInfo(Bit8u drive,Bit16u * _bytes_sector,Bit8u * _sectors_cluster,Bit16u * _total_clusters) {$/;"	f
DOS_GetCurrentDir	src/dos/dos_files.cpp	/^bool DOS_GetCurrentDir(Bit8u drive,char * const buffer) {$/;"	f
DOS_GetDefaultDrive	src/dos/dos_files.cpp	/^Bit8u DOS_GetDefaultDrive(void) {$/;"	f
DOS_GetFileAttr	src/dos/dos_files.cpp	/^bool DOS_GetFileAttr(char const * const name,Bit16u * attr) {$/;"	f
DOS_GetFileDate	src/dos/dos_files.cpp	/^bool DOS_GetFileDate(Bit16u entry, Bit16u* otime, Bit16u* odate) {$/;"	f
DOS_GetFreeDiskSpace	src/dos/dos_files.cpp	/^bool DOS_GetFreeDiskSpace(Bit8u drive,Bit16u * bytes,Bit8u * sectors,Bit16u * clusters,Bit16u * free) {$/;"	f
DOS_GetLoadedLayout	src/dos/dos_keyboard_layout.cpp	/^const char* DOS_GetLoadedLayout(void) {$/;"	f
DOS_GetMemAllocStrategy	src/dos/dos_memory.cpp	/^Bit16u DOS_GetMemAllocStrategy() {$/;"	f
DOS_GetMemory	src/dos/dos_tables.cpp	/^Bit16u DOS_GetMemory(Bit16u pages) {$/;"	f
DOS_GetSTDINStatus	src/dos/dos_ioctl.cpp	/^bool DOS_GetSTDINStatus(void) {$/;"	f
DOS_INFOBLOCK_SEG	include/dos_inc.h	82;"	d
DOS_IOCTL	src/dos/dos_ioctl.cpp	/^bool DOS_IOCTL(void) {$/;"	f
DOS_InfoBlock	include/dos_inc.h	/^	DOS_InfoBlock			() {};$/;"	f	class:DOS_InfoBlock
DOS_InfoBlock	include/dos_inc.h	/^class DOS_InfoBlock:public MemStruct {$/;"	c
DOS_Init	src/dos/dos.cpp	/^void DOS_Init(Section* sec) {$/;"	f
DOS_KeyboardLayout	src/dos/dos_keyboard_layout.cpp	/^	DOS_KeyboardLayout(Section* configuration):Module_base(configuration){$/;"	f	class:DOS_KeyboardLayout
DOS_KeyboardLayout	src/dos/dos_keyboard_layout.cpp	/^class DOS_KeyboardLayout: public Module_base {$/;"	c	file:
DOS_KeyboardLayout_Init	src/dos/dos_keyboard_layout.cpp	/^void DOS_KeyboardLayout_Init(Section* sec) {$/;"	f
DOS_KeyboardLayout_ShutDown	src/dos/dos_keyboard_layout.cpp	/^void DOS_KeyboardLayout_ShutDown(Section* \/*sec*\/) {$/;"	f
DOS_LayoutKey	src/dos/dos_keyboard_layout.cpp	/^bool DOS_LayoutKey(Bitu key, Bit8u flags1, Bit8u flags2, Bit8u flags3) {$/;"	f
DOS_LinkUMBsToMemChain	src/dos/dos_memory.cpp	/^bool DOS_LinkUMBsToMemChain(Bit16u linkstate) {$/;"	f
DOS_LoadKeyboardLayout	src/dos/dos_keyboard_layout.cpp	/^Bitu DOS_LoadKeyboardLayout(const char * layoutname, Bit32s codepage, const char * codepagefile) {$/;"	f
DOS_MCB	include/dos_inc.h	/^	DOS_MCB(Bit16u seg) { SetPt(seg); }$/;"	f	class:DOS_MCB
DOS_MCB	include/dos_inc.h	/^class DOS_MCB : public MemStruct{$/;"	c
DOS_MEM_START	include/dos_inc.h	89;"	d
DOS_MakeDir	src/dos/dos_files.cpp	/^bool DOS_MakeDir(char const * const dir) {$/;"	f
DOS_MakeName	src/dos/dos_files.cpp	/^bool DOS_MakeName(char const * const name,char * const fullname,Bit8u * drive) {$/;"	f
DOS_MultiplexFunctions	src/dos/dos_misc.cpp	/^static bool DOS_MultiplexFunctions(void) {$/;"	f	file:
DOS_NAMELENGTH	include/dos_system.h	38;"	d
DOS_NAMELENGTH_ASCII	include/dos_system.h	39;"	d
DOS_NOT_INHERIT	include/dos_system.h	/^enum { OPEN_READ=0,OPEN_WRITE=1,OPEN_READWRITE=2, DOS_NOT_INHERIT=128};$/;"	e	enum:__anon17
DOS_NewPSP	src/dos/dos_execute.cpp	/^bool DOS_NewPSP(Bit16u segment, Bit16u size) {$/;"	f
DOS_OpenFile	src/dos/dos_files.cpp	/^bool DOS_OpenFile(char const * name,Bit8u flags,Bit16u * entry) {$/;"	f
DOS_OpenFileExtended	src/dos/dos_files.cpp	/^bool DOS_OpenFileExtended(char const * name, Bit16u flags, Bit16u createAttr, Bit16u action, Bit16u *entry, Bit16u* status) {$/;"	f
DOS_PATHLENGTH	include/dos_system.h	42;"	d
DOS_PRIVATE_SEGMENT	include/dos_inc.h	91;"	d
DOS_PRIVATE_SEGMENT_END	include/dos_inc.h	92;"	d
DOS_PSP	include/dos_inc.h	/^	DOS_PSP						(Bit16u segment)		{ SetPt(segment);seg=segment;};$/;"	f	class:DOS_PSP
DOS_PSP	include/dos_inc.h	/^class DOS_PSP :public MemStruct {$/;"	c
DOS_PackDate	include/dos_inc.h	/^INLINE Bit16u DOS_PackDate(Bit16u year,Bit16u mon,Bit16u day) {$/;"	f
DOS_PackTime	include/dos_inc.h	/^INLINE Bit16u DOS_PackTime(Bit16u hour,Bit16u min,Bit16u sec) {$/;"	f
DOS_ParamBlock	include/dos_inc.h	/^	DOS_ParamBlock(PhysPt addr) {pt=addr;}$/;"	f	class:DOS_ParamBlock
DOS_ParamBlock	include/dos_inc.h	/^class DOS_ParamBlock:public MemStruct {$/;"	c
DOS_ReadFile	src/dos/dos_files.cpp	/^bool DOS_ReadFile(Bit16u entry,Bit8u * data,Bit16u * amount) {$/;"	f
DOS_RemoveDir	src/dos/dos_files.cpp	/^bool DOS_RemoveDir(char const * const dir) {$/;"	f
DOS_Rename	src/dos/dos_files.cpp	/^bool DOS_Rename(char const * const oldname,char const * const newname) {$/;"	f
DOS_ResizeMemory	src/dos/dos_memory.cpp	/^bool DOS_ResizeMemory(Bit16u segment,Bit16u * blocks) {$/;"	f
DOS_SDA	include/dos_inc.h	/^	DOS_SDA(Bit16u _seg,Bit16u _offs) { SetPt(_seg,_offs); }$/;"	f	class:DOS_SDA
DOS_SDA	include/dos_inc.h	/^class DOS_SDA : public MemStruct {$/;"	c
DOS_SDA_OFS	include/dos_inc.h	86;"	d
DOS_SDA_SEG	include/dos_inc.h	85;"	d
DOS_SEEK_CUR	include/dos_system.h	/^enum { DOS_SEEK_SET=0,DOS_SEEK_CUR=1,DOS_SEEK_END=2};$/;"	e	enum:__anon18
DOS_SEEK_END	include/dos_system.h	/^enum { DOS_SEEK_SET=0,DOS_SEEK_CUR=1,DOS_SEEK_END=2};$/;"	e	enum:__anon18
DOS_SEEK_SET	include/dos_system.h	/^enum { DOS_SEEK_SET=0,DOS_SEEK_CUR=1,DOS_SEEK_END=2};$/;"	e	enum:__anon18
DOS_SeekFile	src/dos/dos_files.cpp	/^bool DOS_SeekFile(Bit16u entry,Bit32u * pos,Bit32u type) {$/;"	f
DOS_SetDefaultDrive	src/dos/dos_files.cpp	/^void DOS_SetDefaultDrive(Bit8u drive) {$/;"	f
DOS_SetDrive	src/dos/dos_files.cpp	/^bool DOS_SetDrive(Bit8u drive) {$/;"	f
DOS_SetError	src/dos/dos.cpp	/^void DOS_SetError(Bit16u code) {$/;"	f
DOS_SetFileAttr	src/dos/dos_files.cpp	/^bool DOS_SetFileAttr(char const * const name,Bit16u \/*attr*\/) $/;"	f
DOS_SetMemAllocStrategy	src/dos/dos_memory.cpp	/^bool DOS_SetMemAllocStrategy(Bit16u strat) {$/;"	f
DOS_SetupDevices	src/dos/dos_devices.cpp	/^void DOS_SetupDevices(void) {$/;"	f
DOS_SetupFiles	src/dos/dos_files.cpp	/^void DOS_SetupFiles (void) {$/;"	f
DOS_SetupMemory	src/dos/dos_memory.cpp	/^void DOS_SetupMemory(void) {$/;"	f
DOS_SetupMisc	src/dos/dos_misc.cpp	/^void DOS_SetupMisc(void) {$/;"	f
DOS_SetupPrograms	src/dos/dos_programs.cpp	/^void DOS_SetupPrograms(void) {$/;"	f
DOS_SetupTables	src/dos/dos_tables.cpp	/^void DOS_SetupTables(void) {$/;"	f
DOS_Shell	include/shell.h	/^class DOS_Shell : public Program {$/;"	c
DOS_Shell	src/shell/shell.cpp	/^DOS_Shell::DOS_Shell():Program(){$/;"	f	class:DOS_Shell
DOS_ShutDown	src/dos/dos.cpp	/^void DOS_ShutDown(Section* sec) {$/;"	f
DOS_SwitchKeyboardLayout	src/dos/dos_keyboard_layout.cpp	/^Bitu DOS_SwitchKeyboardLayout(const char* new_layout) {$/;"	f
DOS_TEMPSIZE	include/dos_system.h	43;"	d
DOS_TableCase	src/dos/dos_tables.cpp	/^struct DOS_TableCase {	$/;"	s	file:
DOS_TableLowCase	src/dos/dos_tables.cpp	/^RealPt DOS_TableLowCase;$/;"	v
DOS_TableUpCase	src/dos/dos_tables.cpp	/^RealPt DOS_TableUpCase;$/;"	v
DOS_Terminate	src/dos/dos_execute.cpp	/^bool DOS_Terminate(bool tsr,Bit8u exitcode) {$/;"	f
DOS_UnlinkFile	src/dos/dos_files.cpp	/^bool DOS_UnlinkFile(char const * const name) {$/;"	f
DOS_UpdatePSPName	src/dos/dos_execute.cpp	/^void DOS_UpdatePSPName(void) {$/;"	f
DOS_Version	include/dos_inc.h	/^struct DOS_Version {$/;"	s
DOS_WriteFile	src/dos/dos_files.cpp	/^bool DOS_WriteFile(Bit16u entry,Bit8u * data,Bit16u * amount) {$/;"	f
DOS_default_handler	src/dos/dos_memory.cpp	/^static Bitu DOS_default_handler(void) {$/;"	f	file:
DO_PREFIX_ADDR	src/cpu/core_simple.cpp	69;"	d	file:
DO_PREFIX_REP	src/cpu/core_simple.cpp	75;"	d	file:
DO_PREFIX_REP	src/cpu/core_verysimple.cpp	67;"	d	file:
DO_PREFIX_SEG	src/cpu/core_simple.cpp	63;"	d	file:
DO_PREFIX_SEG	src/cpu/core_verysimple.cpp	62;"	d	file:
DPL	include/cpu.h	/^	Bitu DPL(void) {$/;"	f	class:Descriptor
DRCD_REG_BYTE	src/cpu/core_dynrec.cpp	104;"	d	file:
DRCD_REG_VAL	src/cpu/core_dynrec.cpp	97;"	d	file:
DRCD_REG_WORD	src/cpu/core_dynrec.cpp	106;"	d	file:
DRCD_SEG_PHYS	src/cpu/core_dynrec.cpp	101;"	d	file:
DRCD_SEG_VAL	src/cpu/core_dynrec.cpp	99;"	d	file:
DRC_CALL_CONV	src/cpu/core_dynrec/risc_armv4le-common.h	40;"	d
DRC_CALL_CONV	src/cpu/core_dynrec/risc_mipsel32.h	40;"	d
DRC_CALL_CONV	src/cpu/core_dynrec/risc_x64.h	37;"	d
DRC_CALL_CONV	src/cpu/core_dynrec/risc_x86.h	38;"	d
DRC_CALL_CONV	src/cpu/core_dynrec/risc_x86.h	41;"	d
DRC_CALL_CONV	src/cpu/core_dynrec/save/risc_armv4le-common.h	40;"	d
DRC_CALL_CONV	src/cpu/core_dynrec/save/risc_mipsel32.h	40;"	d
DRC_CALL_CONV	src/cpu/core_dynrec/save/risc_x64.h	37;"	d
DRC_CALL_CONV	src/cpu/core_dynrec/save/risc_x86.h	38;"	d
DRC_CALL_CONV	src/cpu/core_dynrec/save/risc_x86.h	41;"	d
DRC_FC	src/cpu/core_dynrec/risc_armv4le-common.h	41;"	d
DRC_FC	src/cpu/core_dynrec/risc_mipsel32.h	41;"	d
DRC_FC	src/cpu/core_dynrec/risc_x64.h	38;"	d
DRC_FC	src/cpu/core_dynrec/risc_x86.h	39;"	d
DRC_FC	src/cpu/core_dynrec/risc_x86.h	42;"	d
DRC_FC	src/cpu/core_dynrec/save/risc_armv4le-common.h	41;"	d
DRC_FC	src/cpu/core_dynrec/save/risc_mipsel32.h	41;"	d
DRC_FC	src/cpu/core_dynrec/save/risc_x64.h	38;"	d
DRC_FC	src/cpu/core_dynrec/save/risc_x86.h	39;"	d
DRC_FC	src/cpu/core_dynrec/save/risc_x86.h	42;"	d
DRC_FLAGS_INVALIDATION	src/cpu/core_dynrec/risc_armv4le-common.h	32;"	d
DRC_FLAGS_INVALIDATION	src/cpu/core_dynrec/risc_mipsel32.h	32;"	d
DRC_FLAGS_INVALIDATION	src/cpu/core_dynrec/risc_x64.h	29;"	d
DRC_FLAGS_INVALIDATION	src/cpu/core_dynrec/risc_x86.h	29;"	d
DRC_FLAGS_INVALIDATION	src/cpu/core_dynrec/save/risc_armv4le-common.h	32;"	d
DRC_FLAGS_INVALIDATION	src/cpu/core_dynrec/save/risc_mipsel32.h	32;"	d
DRC_FLAGS_INVALIDATION	src/cpu/core_dynrec/save/risc_x64.h	29;"	d
DRC_FLAGS_INVALIDATION	src/cpu/core_dynrec/save/risc_x86.h	29;"	d
DRC_FLAGS_INVALIDATION_DCODE	src/cpu/core_dynrec/risc_armv4le-common.h	34;"	d
DRC_FLAGS_INVALIDATION_DCODE	src/cpu/core_dynrec/risc_mipsel32.h	34;"	d
DRC_FLAGS_INVALIDATION_DCODE	src/cpu/core_dynrec/risc_x64.h	31;"	d
DRC_FLAGS_INVALIDATION_DCODE	src/cpu/core_dynrec/risc_x86.h	31;"	d
DRC_FLAGS_INVALIDATION_DCODE	src/cpu/core_dynrec/save/risc_armv4le-common.h	34;"	d
DRC_FLAGS_INVALIDATION_DCODE	src/cpu/core_dynrec/save/risc_mipsel32.h	34;"	d
DRC_FLAGS_INVALIDATION_DCODE	src/cpu/core_dynrec/save/risc_x64.h	31;"	d
DRC_FLAGS_INVALIDATION_DCODE	src/cpu/core_dynrec/save/risc_x86.h	31;"	d
DRC_PTR_SIZE_IM	src/cpu/core_dynrec/risc_armv4le-common.h	37;"	d
DRC_PTR_SIZE_IM	src/cpu/core_dynrec/risc_mipsel32.h	37;"	d
DRC_PTR_SIZE_IM	src/cpu/core_dynrec/risc_x64.h	34;"	d
DRC_PTR_SIZE_IM	src/cpu/core_dynrec/risc_x86.h	34;"	d
DRC_PTR_SIZE_IM	src/cpu/core_dynrec/save/risc_armv4le-common.h	37;"	d
DRC_PTR_SIZE_IM	src/cpu/core_dynrec/save/risc_mipsel32.h	37;"	d
DRC_PTR_SIZE_IM	src/cpu/core_dynrec/save/risc_x64.h	34;"	d
DRC_PTR_SIZE_IM	src/cpu/core_dynrec/save/risc_x86.h	34;"	d
DRC_REG_EAX	src/cpu/core_dynrec.cpp	78;"	d	file:
DRC_REG_EBP	src/cpu/core_dynrec.cpp	83;"	d	file:
DRC_REG_EBX	src/cpu/core_dynrec.cpp	81;"	d	file:
DRC_REG_ECX	src/cpu/core_dynrec.cpp	79;"	d	file:
DRC_REG_EDI	src/cpu/core_dynrec.cpp	85;"	d	file:
DRC_REG_EDX	src/cpu/core_dynrec.cpp	80;"	d	file:
DRC_REG_ESI	src/cpu/core_dynrec.cpp	84;"	d	file:
DRC_REG_ESP	src/cpu/core_dynrec.cpp	82;"	d	file:
DRC_SEG_CS	src/cpu/core_dynrec.cpp	89;"	d	file:
DRC_SEG_DS	src/cpu/core_dynrec.cpp	91;"	d	file:
DRC_SEG_ES	src/cpu/core_dynrec.cpp	88;"	d	file:
DRC_SEG_FS	src/cpu/core_dynrec.cpp	92;"	d	file:
DRC_SEG_GS	src/cpu/core_dynrec.cpp	93;"	d	file:
DRC_SEG_SS	src/cpu/core_dynrec.cpp	90;"	d	file:
DRC_USE_REGS_ADDR	src/cpu/core_dynrec/risc_armv4le-common.h	44;"	d
DRC_USE_REGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-common.h	44;"	d
DRC_USE_SEGS_ADDR	src/cpu/core_dynrec/risc_armv4le-common.h	46;"	d
DRC_USE_SEGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-common.h	46;"	d
DREG	src/cpu/core_dyn_x86.cpp	158;"	d	file:
DRIVES_Init	src/dos/drives.cpp	/^void DRIVES_Init(Section* sec) {$/;"	f
DSHLD	src/cpu/arminst.h	936;"	d
DSHLD	src/cpu/instructions.h	932;"	d
DSHLW	src/cpu/arminst.h	926;"	d
DSHLW	src/cpu/instructions.h	922;"	d
DSHRD	src/cpu/arminst.h	955;"	d
DSHRD	src/cpu/instructions.h	951;"	d
DSHRW	src/cpu/arminst.h	945;"	d
DSHRW	src/cpu/instructions.h	941;"	d
DSP_ACK_16BIT	src/hardware/sblaster.cpp	52;"	d	file:
DSP_ADC_CallBack	src/hardware/sblaster.cpp	/^static void DSP_ADC_CallBack(DmaChannel * chan, DMAEvent event) {$/;"	f	file:
DSP_AddData	src/hardware/sblaster.cpp	/^static void DSP_AddData(Bit8u val) {$/;"	f	file:
DSP_BUFSIZE	src/hardware/sblaster.cpp	57;"	d	file:
DSP_ChangeMode	src/hardware/sblaster.cpp	/^static void DSP_ChangeMode(DSP_MODES mode) {$/;"	f	file:
DSP_ChangeStereo	src/hardware/sblaster.cpp	/^static void DSP_ChangeStereo(bool stereo) {$/;"	f	file:
DSP_DACSIZE	src/hardware/sblaster.cpp	58;"	d	file:
DSP_DMA_16	src/hardware/sblaster.cpp	/^	DSP_DMA_16,DSP_DMA_16_ALIASED,$/;"	e	enum:DMA_MODES	file:
DSP_DMA_16_ALIASED	src/hardware/sblaster.cpp	/^	DSP_DMA_16,DSP_DMA_16_ALIASED,$/;"	e	enum:DMA_MODES	file:
DSP_DMA_2	src/hardware/sblaster.cpp	/^	DSP_DMA_2,DSP_DMA_3,DSP_DMA_4,DSP_DMA_8,$/;"	e	enum:DMA_MODES	file:
DSP_DMA_3	src/hardware/sblaster.cpp	/^	DSP_DMA_2,DSP_DMA_3,DSP_DMA_4,DSP_DMA_8,$/;"	e	enum:DMA_MODES	file:
DSP_DMA_4	src/hardware/sblaster.cpp	/^	DSP_DMA_2,DSP_DMA_3,DSP_DMA_4,DSP_DMA_8,$/;"	e	enum:DMA_MODES	file:
DSP_DMA_8	src/hardware/sblaster.cpp	/^	DSP_DMA_2,DSP_DMA_3,DSP_DMA_4,DSP_DMA_8,$/;"	e	enum:DMA_MODES	file:
DSP_DMA_CallBack	src/hardware/sblaster.cpp	/^static void DSP_DMA_CallBack(DmaChannel * chan, DMAEvent event) {$/;"	f	file:
DSP_DMA_NONE	src/hardware/sblaster.cpp	/^	DSP_DMA_NONE,$/;"	e	enum:DMA_MODES	file:
DSP_DoCommand	src/hardware/sblaster.cpp	/^static void DSP_DoCommand(void) {$/;"	f	file:
DSP_DoDMATransfer	src/hardware/sblaster.cpp	/^static void DSP_DoDMATransfer(DMA_MODES mode,Bitu freq,bool stereo) {$/;"	f	file:
DSP_DoReset	src/hardware/sblaster.cpp	/^static void DSP_DoReset(Bit8u val) {$/;"	f	file:
DSP_DoWrite	src/hardware/sblaster.cpp	/^static void DSP_DoWrite(Bit8u val) {$/;"	f	file:
DSP_E2_DMA_CallBack	src/hardware/sblaster.cpp	/^static void DSP_E2_DMA_CallBack(DmaChannel * chan, DMAEvent event) {$/;"	f	file:
DSP_FlushData	src/hardware/sblaster.cpp	/^static INLINE void DSP_FlushData(void) {$/;"	f	file:
DSP_MAJOR	src/hardware/sblaster.cpp	41;"	d	file:
DSP_MINOR	src/hardware/sblaster.cpp	42;"	d	file:
DSP_MODES	src/hardware/sblaster.cpp	/^enum DSP_MODES {$/;"	g	file:
DSP_NO_COMMAND	src/hardware/sblaster.cpp	54;"	d	file:
DSP_PrepareDMA_New	src/hardware/sblaster.cpp	/^static void DSP_PrepareDMA_New(DMA_MODES mode,Bitu length,bool autoinit,bool stereo) {$/;"	f	file:
DSP_PrepareDMA_Old	src/hardware/sblaster.cpp	/^static void DSP_PrepareDMA_Old(DMA_MODES mode,bool autoinit,bool sign) {$/;"	f	file:
DSP_READ_DATA	src/hardware/sblaster.cpp	48;"	d	file:
DSP_READ_STATUS	src/hardware/sblaster.cpp	51;"	d	file:
DSP_RESET	src/hardware/sblaster.cpp	47;"	d	file:
DSP_RaiseIRQEvent	src/hardware/sblaster.cpp	/^static void DSP_RaiseIRQEvent(Bitu val) {$/;"	f	file:
DSP_ReadData	src/hardware/sblaster.cpp	/^static Bit8u DSP_ReadData(void) {$/;"	f	file:
DSP_Reset	src/hardware/sblaster.cpp	/^static void DSP_Reset(void) {$/;"	f	file:
DSP_SB16_ONLY	src/hardware/sblaster.cpp	734;"	d	file:
DSP_SB2_ABOVE	src/hardware/sblaster.cpp	735;"	d	file:
DSP_S_HIGHSPEED	src/hardware/sblaster.cpp	/^enum {DSP_S_RESET,DSP_S_NORMAL,DSP_S_HIGHSPEED};$/;"	e	enum:__anon168	file:
DSP_S_NORMAL	src/hardware/sblaster.cpp	/^enum {DSP_S_RESET,DSP_S_NORMAL,DSP_S_HIGHSPEED};$/;"	e	enum:__anon168	file:
DSP_S_RESET	src/hardware/sblaster.cpp	/^enum {DSP_S_RESET,DSP_S_NORMAL,DSP_S_HIGHSPEED};$/;"	e	enum:__anon168	file:
DSP_SetSpeaker	src/hardware/sblaster.cpp	/^static void DSP_SetSpeaker(bool how) {$/;"	f	file:
DSP_WRITE_DATA	src/hardware/sblaster.cpp	49;"	d	file:
DSP_WRITE_STATUS	src/hardware/sblaster.cpp	50;"	d	file:
DSP_cmd_len_sb	src/hardware/sblaster.cpp	/^static Bit8u DSP_cmd_len_sb[256] = {$/;"	v	file:
DSP_cmd_len_sb16	src/hardware/sblaster.cpp	/^static Bit8u DSP_cmd_len_sb16[256] = {$/;"	v	file:
DSTDATATYPE	src/gui/render_16.h	253;"	d
DSTDATATYPE	src/gui/render_16.h	42;"	d
DSTDATATYPE	src/gui/render_32.h	163;"	d
DSTDATATYPE	src/gui/render_32.h	42;"	d
DSTDATATYPE	src/gui/render_8.h	31;"	d
DSTDATATYPE	src/gui/render_9.h	35;"	d
DS_ANALYZING	src/hardware/disney.cpp	64;"	d	file:
DS_FINISH	src/hardware/disney.cpp	63;"	d	file:
DS_IDLE	src/hardware/disney.cpp	61;"	d	file:
DS_RUNNING	src/hardware/disney.cpp	62;"	d	file:
DTAExtendName	src/dos/dos_files.cpp	/^static void DTAExtendName(char * const name,char * const filename,char * const ext) {$/;"	f	file:
DTYPE_CDROM	src/dos/scsidefs.h	272;"	d
DTYPE_COMM	src/dos/scsidefs.h	276;"	d
DTYPE_CROM	src/dos/scsidefs.h	271;"	d
DTYPE_DASD	src/dos/scsidefs.h	266;"	d
DTYPE_JUKE	src/dos/scsidefs.h	275;"	d
DTYPE_OPTI	src/dos/scsidefs.h	274;"	d
DTYPE_PRNT	src/dos/scsidefs.h	268;"	d
DTYPE_PROC	src/dos/scsidefs.h	269;"	d
DTYPE_RESH	src/dos/scsidefs.h	278;"	d
DTYPE_RESL	src/dos/scsidefs.h	277;"	d
DTYPE_SCAN	src/dos/scsidefs.h	273;"	d
DTYPE_SEQD	src/dos/scsidefs.h	267;"	d
DTYPE_UNKNOWN	src/dos/scsidefs.h	279;"	d
DTYPE_WORM	src/dos/scsidefs.h	270;"	d
DTable	src/debug/disasm_tables.h	/^static Dentry DTable[256]={$/;"	v
DW_INDEX	include/regs.h	74;"	d
DW_INDEX	include/regs.h	81;"	d
DX	src/gui/sdl_mapper.cpp	1777;"	d	file:
DYNFLG_ACTIVE	src/cpu/core_dyn_x86.cpp	136;"	d	file:
DYNFLG_CHANGED	src/cpu/core_dyn_x86.cpp	135;"	d	file:
DYNFLG_HAS16	src/cpu/core_dyn_x86.cpp	131;"	d	file:
DYNFLG_HAS8	src/cpu/core_dyn_x86.cpp	132;"	d	file:
DYNFLG_LOAD	src/cpu/core_dyn_x86.cpp	133;"	d	file:
DYNFLG_SAVE	src/cpu/core_dyn_x86.cpp	134;"	d	file:
DYN_HASH_SHIFT	src/cpu/core_dyn_x86.cpp	60;"	d	file:
DYN_HASH_SHIFT	src/cpu/core_dynrec.cpp	62;"	d	file:
DYN_LEA_MEM_MEM	src/cpu/core_dynrec/decoder_basic.h	435;"	d
DYN_LEA_MEM_MEM	src/cpu/core_dynrec/save/decoder_basic.h	433;"	d
DYN_LEA_MEM_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	441;"	d
DYN_LEA_MEM_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	447;"	d
DYN_LEA_MEM_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	453;"	d
DYN_LEA_MEM_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	459;"	d
DYN_LEA_MEM_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	439;"	d
DYN_LEA_MEM_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	445;"	d
DYN_LEA_MEM_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	451;"	d
DYN_LEA_MEM_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	457;"	d
DYN_LEA_REG_VAL_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	440;"	d
DYN_LEA_REG_VAL_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	446;"	d
DYN_LEA_REG_VAL_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	452;"	d
DYN_LEA_REG_VAL_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	458;"	d
DYN_LEA_REG_VAL_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	438;"	d
DYN_LEA_REG_VAL_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	444;"	d
DYN_LEA_REG_VAL_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	450;"	d
DYN_LEA_REG_VAL_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	456;"	d
DYN_LEA_SEG_PHYS_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	439;"	d
DYN_LEA_SEG_PHYS_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	445;"	d
DYN_LEA_SEG_PHYS_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	451;"	d
DYN_LEA_SEG_PHYS_REG_VAL	src/cpu/core_dynrec/decoder_basic.h	457;"	d
DYN_LEA_SEG_PHYS_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	437;"	d
DYN_LEA_SEG_PHYS_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	443;"	d
DYN_LEA_SEG_PHYS_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	449;"	d
DYN_LEA_SEG_PHYS_REG_VAL	src/cpu/core_dynrec/save/decoder_basic.h	455;"	d
DYN_LINKS	src/cpu/core_dyn_x86.cpp	62;"	d	file:
DYN_LINKS	src/cpu/core_dynrec.cpp	64;"	d	file:
DYN_LOG	src/cpu/core_dyn_x86.cpp	67;"	d	file:
DYN_LOG	src/cpu/core_dynrec.cpp	69;"	d	file:
DYN_PAGE_HASH	src/cpu/core_dyn_x86.cpp	61;"	d	file:
DYN_PAGE_HASH	src/cpu/core_dynrec.cpp	63;"	d	file:
D_AAA	src/cpu/core_full/support.h	/^	D_AAA,D_AAS,$/;"	e	enum:__anon97
D_AAS	src/cpu/core_full/support.h	/^	D_AAA,D_AAS,$/;"	e	enum:__anon97
D_CBW	src/cpu/core_full/support.h	/^	D_CBW,D_CWDE,$/;"	e	enum:__anon97
D_CDQ	src/cpu/core_full/support.h	/^	D_CWD,D_CDQ,$/;"	e	enum:__anon97
D_CLC	src/cpu/core_full/support.h	/^	D_CLI,D_STI,D_STC,D_CLC,D_CMC,D_CLD,D_STD,$/;"	e	enum:__anon97
D_CLD	src/cpu/core_full/support.h	/^	D_CLI,D_STI,D_STC,D_CLC,D_CMC,D_CLD,D_STD,$/;"	e	enum:__anon97
D_CLI	src/cpu/core_full/support.h	/^	D_CLI,D_STI,D_STC,D_CLC,D_CMC,D_CLD,D_STD,$/;"	e	enum:__anon97
D_CLTS	src/cpu/core_full/support.h	/^	D_HLT,D_CLTS,$/;"	e	enum:__anon97
D_CMC	src/cpu/core_full/support.h	/^	D_CLI,D_STI,D_STC,D_CLC,D_CMC,D_CLD,D_STD,$/;"	e	enum:__anon97
D_CPUID	src/cpu/core_full/support.h	/^	D_CPUID,$/;"	e	enum:__anon97
D_CWD	src/cpu/core_full/support.h	/^	D_CWD,D_CDQ,$/;"	e	enum:__anon97
D_CWDE	src/cpu/core_full/support.h	/^	D_CBW,D_CWDE,$/;"	e	enum:__anon97
D_DAA	src/cpu/core_full/support.h	/^	D_DAA,D_DAS,$/;"	e	enum:__anon97
D_DAS	src/cpu/core_full/support.h	/^	D_DAA,D_DAS,$/;"	e	enum:__anon97
D_ENTERd	src/cpu/core_full/support.h	/^	D_ENTERw,D_ENTERd,$/;"	e	enum:__anon97
D_ENTERw	src/cpu/core_full/support.h	/^	D_ENTERw,D_ENTERd,$/;"	e	enum:__anon97
D_HLT	src/cpu/core_full/support.h	/^	D_HLT,D_CLTS,$/;"	e	enum:__anon97
D_ICEBP	src/cpu/core_full/support.h	/^	D_LOCK,D_ICEBP,$/;"	e	enum:__anon97
D_IRETd	src/cpu/core_full/support.h	/^	D_IRETw,D_IRETd,$/;"	e	enum:__anon97
D_IRETw	src/cpu/core_full/support.h	/^	D_IRETw,D_IRETd,$/;"	e	enum:__anon97
D_LAHF	src/cpu/core_full/support.h	/^	D_SAHF,D_LAHF,$/;"	e	enum:__anon97
D_LEAVEd	src/cpu/core_full/support.h	/^	D_LEAVEw,D_LEAVEd,$/;"	e	enum:__anon97
D_LEAVEw	src/cpu/core_full/support.h	/^	D_LEAVEw,D_LEAVEd,$/;"	e	enum:__anon97
D_LOCK	src/cpu/core_full/support.h	/^	D_LOCK,D_ICEBP,$/;"	e	enum:__anon97
D_NOP	src/cpu/core_full/support.h	/^	D_NOP,D_WAIT,$/;"	e	enum:__anon97
D_POPAd	src/cpu/core_full/support.h	/^	D_POPAw,D_POPAd,$/;"	e	enum:__anon97
D_POPAw	src/cpu/core_full/support.h	/^	D_POPAw,D_POPAd,$/;"	e	enum:__anon97
D_POPF	src/cpu/core_full/support.h	/^	D_POPF,D_PUSHF,$/;"	e	enum:__anon97
D_POPSEGd	src/cpu/core_full/support.h	/^	D_POPSEGw,D_POPSEGd,$/;"	e	enum:__anon97
D_POPSEGw	src/cpu/core_full/support.h	/^	D_POPSEGw,D_POPSEGd,$/;"	e	enum:__anon97
D_PUSHAd	src/cpu/core_full/support.h	/^	D_PUSHAw,D_PUSHAd,$/;"	e	enum:__anon97
D_PUSHAw	src/cpu/core_full/support.h	/^	D_PUSHAw,D_PUSHAd,$/;"	e	enum:__anon97
D_PUSHF	src/cpu/core_full/support.h	/^	D_POPF,D_PUSHF,$/;"	e	enum:__anon97
D_RETFd	src/cpu/core_full/support.h	/^	D_RETFw,D_RETFd,$/;"	e	enum:__anon97
D_RETFdIw	src/cpu/core_full/support.h	/^	D_RETFwIw,D_RETFdIw,$/;"	e	enum:__anon97
D_RETFw	src/cpu/core_full/support.h	/^	D_RETFw,D_RETFd,$/;"	e	enum:__anon97
D_RETFwIw	src/cpu/core_full/support.h	/^	D_RETFwIw,D_RETFdIw,$/;"	e	enum:__anon97
D_SAHF	src/cpu/core_full/support.h	/^	D_SAHF,D_LAHF,$/;"	e	enum:__anon97
D_SETALC	src/cpu/core_full/support.h	/^	D_SETALC,$/;"	e	enum:__anon97
D_STC	src/cpu/core_full/support.h	/^	D_CLI,D_STI,D_STC,D_CLC,D_CMC,D_CLD,D_STD,$/;"	e	enum:__anon97
D_STD	src/cpu/core_full/support.h	/^	D_CLI,D_STI,D_STC,D_CLC,D_CMC,D_CLD,D_STD,$/;"	e	enum:__anon97
D_STI	src/cpu/core_full/support.h	/^	D_CLI,D_STI,D_STC,D_CLC,D_CMC,D_CLD,D_STD,$/;"	e	enum:__anon97
D_WAIT	src/cpu/core_full/support.h	/^	D_NOP,D_WAIT,$/;"	e	enum:__anon97
D_XLAT	src/cpu/core_full/support.h	/^	D_XLAT,$/;"	e	enum:__anon97
DasmI386	src/debug/debug_disasm.cpp	/^Bitu DasmI386(char* buffer, PhysPt pc, Bitu cur_ip, bool bit32)$/;"	f
DasmLastOperandSize	src/debug/debug_disasm.cpp	/^int DasmLastOperandSize()$/;"	f
DataBuffer	src/platform/visualc/ntddscsi.h	/^  PVOID  DataBuffer;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
DataBufferOffset	src/platform/visualc/ntddscsi.h	/^  ULONG_PTR DataBufferOffset;$/;"	m	struct:_SCSI_PASS_THROUGH
DataIn	src/platform/visualc/ntddscsi.h	/^  UCHAR  DataIn;$/;"	m	struct:_SCSI_PASS_THROUGH
DataIn	src/platform/visualc/ntddscsi.h	/^  UCHAR  DataIn;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
DataLength	src/platform/visualc/ntddcdrm.h	/^  UCHAR  DataLength[2];$/;"	m	struct:_SUB_Q_HEADER
DataTransferLength	src/platform/visualc/ntddscsi.h	/^  ULONG  DataTransferLength;$/;"	m	struct:_SCSI_PASS_THROUGH
DataTransferLength	src/platform/visualc/ntddscsi.h	/^  ULONG  DataTransferLength;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
DeActivateAll	src/gui/sdl_mapper.cpp	/^void CEvent::DeActivateAll(void) {$/;"	f	class:CEvent
DeActivateBind	src/gui/sdl_mapper.cpp	/^	void DeActivateBind(bool ev_trigger) {$/;"	f	class:CBind
DeActivateEvent	src/gui/sdl_mapper.cpp	/^	void DeActivateEvent(bool \/*ev_trigger*\/) {$/;"	f	class:CTriggeredEvent
DeActivateEvent	src/gui/sdl_mapper.cpp	/^	void DeActivateEvent(bool ev_trigger) {$/;"	f	class:CContinuousEvent
DeactivateBindList	src/gui/sdl_mapper.cpp	/^void CBindGroup::DeactivateBindList(CBindList * list,bool ev_trigger) {$/;"	f	class:CBindGroup
DebugPageHandler	src/debug/debug.cpp	/^class DebugPageHandler : public PageHandler {$/;"	c	file:
DecodeHatPosition	src/gui/sdl_mapper.cpp	/^	void DecodeHatPosition(Uint8 hat_pos) {$/;"	f	class:CFCSBindGroup	file:
Decompress	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::Decompress(ICDECOMPRESS* icinfo, DWORD dwSize) {$/;"	f	class:CodecInst
DecompressBegin	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::DecompressBegin(LPBITMAPINFOHEADER lpbiIn, LPBITMAPINFOHEADER lpbiOut) {$/;"	f	class:CodecInst
DecompressEnd	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::DecompressEnd() {$/;"	f	class:CodecInst
DecompressGetFormat	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::DecompressGetFormat(LPBITMAPINFOHEADER lpbiIn, LPBITMAPINFOHEADER lpbiOut) {$/;"	f	class:CodecInst
DecompressGetPalette	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::DecompressGetPalette(LPBITMAPINFOHEADER lpbiIn, LPBITMAPINFOHEADER lpbiOut) {$/;"	f	class:CodecInst
DecompressQuery	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::DecompressQuery(LPBITMAPINFOHEADER lpbiIn, LPBITMAPINFOHEADER lpbiOut) {$/;"	f	class:CodecInst
DecreaseFrameSkip	src/gui/render.cpp	/^void DecreaseFrameSkip(bool pressed) {$/;"	f
DecreaseHue	src/hardware/vga_other.cpp	/^static void DecreaseHue(bool pressed) {$/;"	f	file:
DefaultKeys	src/gui/sdl_mapper.cpp	/^} DefaultKeys[]={$/;"	v	typeref:struct:__anon146	file:
DelCacheBlock	src/cpu/core_dyn_x86/cache.h	/^	void DelCacheBlock(CacheBlock * block) {$/;"	f	class:CodePageHandler
DelCacheBlock	src/cpu/core_dynrec/cache.h	/^	void DelCacheBlock(CacheBlockDynRec * block) {$/;"	f	class:CodePageHandlerDynRec
DelCacheBlock	src/cpu/core_dynrec/save/cache.h	/^	void DelCacheBlock(CacheBlockDynRec * block) {$/;"	f	class:CodePageHandlerDynRec
DelayEntry	src/hardware/pcspeaker.cpp	/^struct DelayEntry {$/;"	s	file:
Delete	src/libs/gui_tk/gui_tk.h	/^		Home, End, PageUp, PageDown, Insert, Delete, Menu,$/;"	e	enum:GUI::Key::Special
DeleteAll	src/debug/debug.cpp	/^void CBreakpoint::DeleteAll() $/;"	f	class:CBreakpoint
DeleteAll	src/debug/debug.cpp	/^void CDebugVar::DeleteAll(void) $/;"	f	class:CDebugVar
DeleteBreakpoint	src/debug/debug.cpp	/^bool CBreakpoint::DeleteBreakpoint(PhysPt where) $/;"	f	class:CBreakpoint
DeleteByIndex	src/debug/debug.cpp	/^bool CBreakpoint::DeleteByIndex(Bit16u index) $/;"	f	class:CBreakpoint
DeleteEntry	src/dos/drive_cache.cpp	/^void DOS_Drive_Cache::DeleteEntry(const char* path, bool ignoreLastDir)$/;"	f	class:DOS_Drive_Cache
Dentry	src/debug/disasm_tables.h	/^struct Dentry {$/;"	s
Descriptor	include/cpu.h	/^	Descriptor() { saved.fill[0]=saved.fill[1]=0; }$/;"	f	class:Descriptor
Descriptor	include/cpu.h	/^class Descriptor$/;"	c
DescriptorTable	include/cpu.h	/^class DescriptorTable {$/;"	c
DestroyConditionFlags	src/cpu/flags.cpp	/^void DestroyConditionFlags(void) {$/;"	f
DetermineMode_ET3K	src/hardware/vga_tseng.cpp	/^void DetermineMode_ET3K() {$/;"	f
DetermineMode_ET4K	src/hardware/vga_tseng.cpp	/^void DetermineMode_ET4K() {$/;"	f
DetermineMode_PVGA1A	src/hardware/vga_paradise.cpp	/^void DetermineMode_PVGA1A() {$/;"	f
DeviceClaimed	src/platform/visualc/ntddscsi.h	/^	BOOLEAN  DeviceClaimed;$/;"	m	struct:_SCSI_INQUIRY_DATA
Devices	src/dos/dos_devices.cpp	/^DOS_Device * Devices[DOS_DEVICES];$/;"	v
Dial	src/hardware/serialport/softmodem.cpp	/^bool CSerialModem::Dial(char * host) {$/;"	f	class:CSerialModem
DirIterator	src/dos/drives.h	/^	struct DirIterator {$/;"	s	class:isoDrive
DirectColorModeInfo	src/ints/int10_vesa.cpp	/^	Bit8u DirectColorModeInfo;$/;"	m	struct:MODE_INFO	file:
Disconnect	src/hardware/serialport/nullmodem.cpp	/^void CNullModem::Disconnect() {$/;"	f	class:CNullModem
DisconnectFromServer	src/hardware/ipx.cpp	/^void DisconnectFromServer(bool unexpected) {$/;"	f
DiskData	src/platform/visualc/ntddcdrm.h	/^  ULONG  DiskData;$/;"	m	struct:_CDROM_DISK_DATA
DiskGeometryList	src/ints/bios_disk.cpp	/^diskGeo DiskGeometryList[] = {$/;"	v
DiskOffset	src/platform/visualc/ntddcdrm.h	/^	LARGE_INTEGER  DiskOffset;$/;"	m	struct:__RAW_READ_INFO
DisplayMount	src/dos/dos_programs.cpp	/^	void DisplayMount(void) {$/;"	f	class:INTRO
DllMain	include/modules.h	/^BOOL APIENTRY DllMain( HANDLE hModule, $/;"	f
DllMain	src/libs/zmbv/drvproc.cpp	/^BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD, LPVOID) {$/;"	f
DmaChannel	include/dma.h	/^class DmaChannel {$/;"	c
DmaChannel	src/hardware/dma.cpp	/^DmaChannel::DmaChannel(Bit8u num, bool dma16) {$/;"	f	class:DmaChannel
DmaChannels	include/dma.h	/^	DmaChannel *DmaChannels[4];$/;"	m	class:DmaController
DmaController	include/dma.h	/^	DmaController(Bit8u num) {$/;"	f	class:DmaController
DmaController	include/dma.h	/^class DmaController {$/;"	c
DmaControllers	src/hardware/dma.cpp	/^DmaController *DmaControllers[2];$/;"	v
DoCallBack	include/dma.h	/^	void DoCallBack(DMAEvent event) {$/;"	f	class:DmaChannel
DoCommand	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::DoCommand() {$/;"	f	class:CSerialModem
DoCommand	src/shell/shell_cmds.cpp	/^void DOS_Shell::DoCommand(char * line) {$/;"	f	class:DOS_Shell
DoPS2Callback	src/ints/mouse.cpp	/^void DoPS2Callback(Bit16u data, Bit16s mouseX, Bit16s mouseY) {$/;"	f
DoString	src/cpu/core_normal/string.h	/^static void DoString(STRING_OP type) {$/;"	f
Down	src/libs/gui_tk/gui_tk.h	/^		Up, Down, Left, Right, Backspace, Tab, Backtab, Enter, Escape,$/;"	e	enum:GUI::Key::Special
Draw	src/gui/sdl_mapper.cpp	/^	virtual void Draw(void) {$/;"	f	class:CButton
Draw	src/gui/sdl_mapper.cpp	/^	void Draw(void) {$/;"	f	class:CCaptionButton
Draw	src/gui/sdl_mapper.cpp	/^	void Draw(void) {$/;"	f	class:CCheckButton
Draw	src/gui/sdl_mapper.cpp	/^	void Draw(void) {$/;"	f	class:CTextButton
DrawBars	src/debug/debug_gui.cpp	/^static void DrawBars(void) {$/;"	f	file:
DrawButtons	src/gui/sdl_mapper.cpp	/^static void DrawButtons(void) {$/;"	f	file:
DrawCode	src/debug/debug.cpp	/^static void DrawCode(void) {$/;"	f	file:
DrawCursor	src/ints/mouse.cpp	/^void DrawCursor() {$/;"	f
DrawCursorText	src/ints/mouse.cpp	/^void DrawCursorText() {	$/;"	f
DrawData	src/debug/debug.cpp	/^static void DrawData(void) {$/;"	f	file:
DrawRegisters	src/debug/debug.cpp	/^static void DrawRegisters(void) {$/;"	f	file:
DrawText	src/gui/sdl_mapper.cpp	/^static void DrawText(Bitu x,Bitu y,const char * text,Bit8u color) {$/;"	f	file:
DrawToolbar	src/gui/render_8.h	84;"	d
DrawToolbar	src/gui/render_9.h	84;"	d
DrawToolbarGX	src/gui/render_16.h	115;"	d
DrawToolbarGX	src/gui/render_32.h	115;"	d
DrawToolbarGX	src/gui/render_8.h	133;"	d
DrawToolbarGX	src/gui/render_9.h	133;"	d
DrawVariables	src/debug/debug.cpp	/^static void DrawVariables(void) {$/;"	f	file:
Draw_RegisterLayout	src/debug/debug_gui.cpp	/^static void Draw_RegisterLayout(void) {$/;"	f	file:
Drawable	src/libs/gui_tk/gui_tk.cpp	/^Drawable::Drawable(Drawable &src, RGB clear) :$/;"	f	class:GUI::Drawable
Drawable	src/libs/gui_tk/gui_tk.cpp	/^Drawable::Drawable(Drawable &src, int x, int y, int w, int h) :$/;"	f	class:GUI::Drawable
Drawable	src/libs/gui_tk/gui_tk.cpp	/^Drawable::Drawable(int w, int h, RGB clear) :$/;"	f	class:GUI::Drawable
Drawable	src/libs/gui_tk/gui_tk.h	/^class Drawable {$/;"	c	namespace:GUI
DriveInfo	src/dos/drives.h	/^	static struct DriveInfo {$/;"	s	class:DriveManager
DriveManager	src/dos/drives.h	/^class DriveManager {$/;"	c
DriverProc	src/libs/zmbv/drvproc.cpp	/^LRESULT PASCAL DriverProc(DWORD dwDriverID, HDRVR hDriver, UINT uiMessage, LPARAM lParam1, LPARAM lParam2) {$/;"	f
Drives	src/dos/dos_files.cpp	/^DOS_Drive * Drives[DOS_DRIVES];$/;"	v
DualOps	src/cpu/core_dyn_x86.cpp	/^enum DualOps {$/;"	g	file:
DualOps	src/cpu/core_dynrec/decoder_basic.h	/^enum DualOps {$/;"	g
DualOps	src/cpu/core_dynrec/save/decoder_basic.h	/^enum DualOps {$/;"	g
DualWrite	src/hardware/adlib.cpp	/^void Module::DualWrite( Bit8u index, Bit8u reg, Bit8u val ) {$/;"	f	class:Adlib::Module
DynAccess	src/cpu/core_dyn_x86.cpp	/^enum DynAccess {$/;"	g	file:
DynDecode	src/cpu/core_dyn_x86/decoder.h	/^static struct DynDecode {$/;"	s
DynDecode	src/cpu/core_dynrec/decoder_basic.h	/^static struct DynDecode {$/;"	s
DynDecode	src/cpu/core_dynrec/save/decoder_basic.h	/^static struct DynDecode {$/;"	s
DynReg	src/cpu/core_dyn_x86.cpp	/^struct DynReg {$/;"	s	file:
DynRegs	src/cpu/core_dyn_x86.cpp	/^static DynReg DynRegs[G_MAX];$/;"	v	file:
DynRunException	src/cpu/core_dyn_x86/decoder.h	/^static BlockReturn DynRunException(Bit32u eip_add,Bit32u cycle_sub,Bit32u dflags) {$/;"	f
DynRunException	src/cpu/core_dynrec/decoder_basic.h	/^static BlockReturn DynRunException(Bit32u eip_add,Bit32u cycle_sub) {$/;"	f
DynRunException	src/cpu/core_dynrec/save/decoder_basic.h	/^static BlockReturn DynRunException(Bit32u eip_add,Bit32u cycle_sub) {$/;"	f
DynState	src/cpu/core_dyn_x86.cpp	/^struct DynState {$/;"	s	file:
Dynamic_Functionality	src/ints/int10_misc.cpp	/^struct Dynamic_Functionality {$/;"	s	file:
E2_incr_table	src/hardware/sblaster.cpp	/^static int E2_incr_table[4][9] = {$/;"	v	file:
EALookupTable	src/cpu/core_simple.cpp	129;"	d	file:
EALookupTable	src/cpu/core_verysimple.cpp	125;"	d	file:
EAPoint	src/cpu/core_full.cpp	/^typedef PhysPt EAPoint;$/;"	t	file:
EATREE	src/fpu/fpu.cpp	/^static void EATREE(Bitu _rm){$/;"	f	file:
EATable	src/cpu/core_normal/table_ea.h	/^static GetEAHandler EATable[512]={$/;"	v
EAXId	src/cpu/core_normal/helpers.h	133;"	d
EA_16_00_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_00_n(void) { return BaseDS+(Bit16u)(reg_bx+(Bit16s)reg_si); }$/;"	f
EA_16_01_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_01_n(void) { return BaseDS+(Bit16u)(reg_bx+(Bit16s)reg_di); }$/;"	f
EA_16_02_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_02_n(void) { return BaseSS+(Bit16u)(reg_bp+(Bit16s)reg_si); }$/;"	f
EA_16_03_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_03_n(void) { return BaseSS+(Bit16u)(reg_bp+(Bit16s)reg_di); }$/;"	f
EA_16_04_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_04_n(void) { return BaseDS+(Bit16u)(reg_si); }$/;"	f
EA_16_05_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_05_n(void) { return BaseDS+(Bit16u)(reg_di); }$/;"	f
EA_16_06_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_06_n(void) { return BaseDS+(Bit16u)(Fetchw());}$/;"	f
EA_16_07_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_07_n(void) { return BaseDS+(Bit16u)(reg_bx); }$/;"	f
EA_16_40_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_40_n(void) { return BaseDS+(Bit16u)(reg_bx+(Bit16s)reg_si+Fetchbs()); }$/;"	f
EA_16_41_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_41_n(void) { return BaseDS+(Bit16u)(reg_bx+(Bit16s)reg_di+Fetchbs()); }$/;"	f
EA_16_42_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_42_n(void) { return BaseSS+(Bit16u)(reg_bp+(Bit16s)reg_si+Fetchbs()); }$/;"	f
EA_16_43_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_43_n(void) { return BaseSS+(Bit16u)(reg_bp+(Bit16s)reg_di+Fetchbs()); }$/;"	f
EA_16_44_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_44_n(void) { return BaseDS+(Bit16u)(reg_si+Fetchbs()); }$/;"	f
EA_16_45_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_45_n(void) { return BaseDS+(Bit16u)(reg_di+Fetchbs()); }$/;"	f
EA_16_46_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_46_n(void) { return BaseSS+(Bit16u)(reg_bp+Fetchbs()); }$/;"	f
EA_16_47_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_47_n(void) { return BaseDS+(Bit16u)(reg_bx+Fetchbs()); }$/;"	f
EA_16_80_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_80_n(void) { return BaseDS+(Bit16u)(reg_bx+(Bit16s)reg_si+Fetchws()); }$/;"	f
EA_16_81_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_81_n(void) { return BaseDS+(Bit16u)(reg_bx+(Bit16s)reg_di+Fetchws()); }$/;"	f
EA_16_82_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_82_n(void) { return BaseSS+(Bit16u)(reg_bp+(Bit16s)reg_si+Fetchws()); }$/;"	f
EA_16_83_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_83_n(void) { return BaseSS+(Bit16u)(reg_bp+(Bit16s)reg_di+Fetchws()); }$/;"	f
EA_16_84_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_84_n(void) { return BaseDS+(Bit16u)(reg_si+Fetchws()); }$/;"	f
EA_16_85_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_85_n(void) { return BaseDS+(Bit16u)(reg_di+Fetchws()); }$/;"	f
EA_16_86_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_86_n(void) { return BaseSS+(Bit16u)(reg_bp+Fetchws()); }$/;"	f
EA_16_87_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_16_87_n(void) { return BaseDS+(Bit16u)(reg_bx+Fetchws()); }$/;"	f
EA_32_00_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_00_n(void) { return BaseDS+reg_eax; }$/;"	f
EA_32_01_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_01_n(void) { return BaseDS+reg_ecx; }$/;"	f
EA_32_02_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_02_n(void) { return BaseDS+reg_edx; }$/;"	f
EA_32_03_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_03_n(void) { return BaseDS+reg_ebx; }$/;"	f
EA_32_04_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_04_n(void) { return Sib(0);}$/;"	f
EA_32_05_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_05_n(void) { return BaseDS+Fetchd(); }$/;"	f
EA_32_06_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_06_n(void) { return BaseDS+reg_esi; }$/;"	f
EA_32_07_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_07_n(void) { return BaseDS+reg_edi; }$/;"	f
EA_32_40_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_40_n(void) { return BaseDS+reg_eax+Fetchbs(); }$/;"	f
EA_32_41_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_41_n(void) { return BaseDS+reg_ecx+Fetchbs(); }$/;"	f
EA_32_42_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_42_n(void) { return BaseDS+reg_edx+Fetchbs(); }$/;"	f
EA_32_43_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_43_n(void) { return BaseDS+reg_ebx+Fetchbs(); }$/;"	f
EA_32_44_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_44_n(void) { PhysPt temp=Sib(1);return temp+Fetchbs();}$/;"	f
EA_32_45_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_45_n(void) { return BaseSS+reg_ebp+Fetchbs(); }$/;"	f
EA_32_46_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_46_n(void) { return BaseDS+reg_esi+Fetchbs(); }$/;"	f
EA_32_47_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_47_n(void) { return BaseDS+reg_edi+Fetchbs(); }$/;"	f
EA_32_80_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_80_n(void) { return BaseDS+reg_eax+Fetchds(); }$/;"	f
EA_32_81_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_81_n(void) { return BaseDS+reg_ecx+Fetchds(); }$/;"	f
EA_32_82_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_82_n(void) { return BaseDS+reg_edx+Fetchds(); }$/;"	f
EA_32_83_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_83_n(void) { return BaseDS+reg_ebx+Fetchds(); }$/;"	f
EA_32_84_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_84_n(void) { PhysPt temp=Sib(2);return temp+Fetchds();}$/;"	f
EA_32_85_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_85_n(void) { return BaseSS+reg_ebp+Fetchds(); }$/;"	f
EA_32_86_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_86_n(void) { return BaseDS+reg_esi+Fetchds(); }$/;"	f
EA_32_87_n	src/cpu/core_normal/table_ea.h	/^static PhysPt EA_32_87_n(void) { return BaseDS+reg_edi+Fetchds(); }$/;"	f
EA_LookupHandler	src/cpu/core_normal/table_ea.h	/^typedef PhysPt (*EA_LookupHandler)(void);$/;"	t
EBreakpoint	src/debug/debug.cpp	/^enum EBreakpoint { BKPNT_UNKNOWN, BKPNT_PHYSICAL, BKPNT_INTERRUPT, BKPNT_MEMORY, BKPNT_MEMORY_PROT, BKPNT_MEMORY_LINEAR };$/;"	g	file:
ECBAddr	include/ipx.h	/^	RealPt ECBAddr;$/;"	m	class:ECBClass
ECBAmount	src/hardware/ipx.cpp	/^Bitu ECBAmount = 0;$/;"	v
ECBClass	include/ipx.h	/^class ECBClass {$/;"	c
ECBClass	src/hardware/ipx.cpp	/^ECBClass::ECBClass(Bit16u segment, Bit16u offset) {$/;"	f	class:ECBClass
ECBList	src/hardware/ipx.cpp	/^ECBClass *ECBList;  \/\/ Linked list of ECB's$/;"	v
ECBSerialNumber	src/hardware/ipx.cpp	/^Bitu ECBSerialNumber = 0;$/;"	v
EGA16_CopyRow	src/ints/int10_char.cpp	/^static INLINE void EGA16_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) {$/;"	f	file:
EGA16_FillRow	src/ints/int10_char.cpp	/^static INLINE void EGA16_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u attr) {$/;"	f	file:
EGAVGA_ARCH_CASE	include/dosbox.h	70;"	d
EGA_RIL	src/ints/int10_misc.cpp	/^static void EGA_RIL(Bit16u dx, Bitu& port, Bitu& regs) {$/;"	f	file:
EG_ATT	src/hardware/fmopl.cpp	116;"	d	file:
EG_ATT	src/hardware/ymf262.cpp	97;"	d	file:
EG_DEC	src/hardware/fmopl.cpp	117;"	d	file:
EG_DEC	src/hardware/ymf262.cpp	98;"	d	file:
EG_OFF	src/hardware/fmopl.cpp	120;"	d	file:
EG_OFF	src/hardware/ymf262.cpp	101;"	d	file:
EG_REL	src/hardware/fmopl.cpp	119;"	d	file:
EG_REL	src/hardware/ymf262.cpp	100;"	d	file:
EG_SH	src/hardware/fmopl.cpp	87;"	d	file:
EG_SH	src/hardware/ymf262.cpp	68;"	d	file:
EG_SUS	src/hardware/fmopl.cpp	118;"	d	file:
EG_SUS	src/hardware/ymf262.cpp	99;"	d	file:
EMM_AllocateMemory	src/ints/ems.cpp	/^static Bit8u EMM_AllocateMemory(Bit16u pages,Bit16u & dhandle,bool can_allocate_zpages) {$/;"	f	file:
EMM_AllocateSystemHandle	src/ints/ems.cpp	/^static Bit8u EMM_AllocateSystemHandle(Bit16u pages) {$/;"	f	file:
EMM_FEAT_NOSUP	src/ints/ems.cpp	69;"	d	file:
EMM_FUNC_NOSUP	src/ints/ems.cpp	58;"	d	file:
EMM_GetFreePages	src/ints/ems.cpp	/^static Bit16u EMM_GetFreePages(void) {$/;"	f	file:
EMM_GetPagesForAllHandles	src/ints/ems.cpp	/^static Bit8u EMM_GetPagesForAllHandles(PhysPt table,Bit16u & handles) {$/;"	f	file:
EMM_HARD_MAL	src/ints/ems.cpp	56;"	d	file:
EMM_Handle	src/ints/ems.cpp	/^struct EMM_Handle {$/;"	s	file:
EMM_ILL_PHYS	src/ints/ems.cpp	65;"	d	file:
EMM_INVALID_HANDLE	src/ints/ems.cpp	57;"	d	file:
EMM_INVALID_SUB	src/ints/ems.cpp	68;"	d	file:
EMM_LOG_OUT_RANGE	src/ints/ems.cpp	64;"	d	file:
EMM_MAX_HANDLES	src/ints/ems.cpp	38;"	d	file:
EMM_MAX_PAGES	src/ints/ems.cpp	40;"	d	file:
EMM_MAX_PHYS	src/ints/ems.cpp	41;"	d	file:
EMM_MOVE_OVLAP	src/ints/ems.cpp	70;"	d	file:
EMM_MOVE_OVLAPI	src/ints/ems.cpp	71;"	d	file:
EMM_MapPage	src/ints/ems.cpp	/^static Bit8u EMM_MapPage(Bitu phys_page,Bit16u handle,Bit16u log_page) {$/;"	f	file:
EMM_MapSegment	src/ints/ems.cpp	/^static Bit8u EMM_MapSegment(Bitu segment,Bit16u handle,Bit16u log_page) {$/;"	f	file:
EMM_Mapping	src/ints/ems.cpp	/^struct EMM_Mapping {$/;"	s	file:
EMM_NOT_FOUND	src/ints/ems.cpp	72;"	d	file:
EMM_NO_ERROR	src/ints/ems.cpp	54;"	d	file:
EMM_NO_SAVED_PAGE_MAP	src/ints/ems.cpp	67;"	d	file:
EMM_OUT_OF_HANDLES	src/ints/ems.cpp	59;"	d	file:
EMM_OUT_OF_LOG	src/ints/ems.cpp	62;"	d	file:
EMM_OUT_OF_PHYS	src/ints/ems.cpp	61;"	d	file:
EMM_PAGEFRAME	src/ints/ems.cpp	36;"	d	file:
EMM_PAGEFRAME4K	src/hardware/dma.cpp	32;"	d	file:
EMM_PAGEFRAME4K	src/ints/ems.cpp	37;"	d	file:
EMM_PAGE_MAP_SAVED	src/ints/ems.cpp	66;"	d	file:
EMM_PAGE_SIZE	src/ints/ems.cpp	39;"	d	file:
EMM_PartialPageMapping	src/ints/ems.cpp	/^static Bit8u EMM_PartialPageMapping(void) {$/;"	f	file:
EMM_ReallocatePages	src/ints/ems.cpp	/^static Bit8u EMM_ReallocatePages(Bit16u handle,Bit16u & pages) {$/;"	f	file:
EMM_ReleaseMemory	src/ints/ems.cpp	/^static Bit8u EMM_ReleaseMemory(Bit16u handle) {$/;"	f	file:
EMM_RestoreMappingTable	src/ints/ems.cpp	/^static Bit8u EMM_RestoreMappingTable(void) {$/;"	f	file:
EMM_RestorePageMap	src/ints/ems.cpp	/^static Bit8u EMM_RestorePageMap(Bit16u handle) {$/;"	f	file:
EMM_SAVEMAP_ERROR	src/ints/ems.cpp	60;"	d	file:
EMM_SOFT_MAL	src/ints/ems.cpp	55;"	d	file:
EMM_SavePageMap	src/ints/ems.cpp	/^static Bit8u EMM_SavePageMap(Bit16u handle) {$/;"	f	file:
EMM_VERSION	src/ints/ems.cpp	43;"	d	file:
EMM_ZERO_PAGES	src/ints/ems.cpp	63;"	d	file:
EMS	src/ints/ems.cpp	/^	EMS(Section* configuration):Module_base(configuration){$/;"	f	class:EMS
EMS	src/ints/ems.cpp	/^class EMS: public Module_base {$/;"	c	file:
EMS_Init	src/ints/ems.cpp	/^void EMS_Init(Section* sec) {$/;"	f
EMS_ShutDown	src/ints/ems.cpp	/^void EMS_ShutDown(Section* sec) {$/;"	f
ENABLE_V86_STARTUP	src/ints/ems.cpp	50;"	d	file:
ENABLE_VCPI	src/ints/ems.cpp	49;"	d	file:
END_DMA_Event	src/hardware/sblaster.cpp	/^static void END_DMA_Event(Bitu val) {$/;"	f	file:
ENVIRON_INCLUDED	config.h	103;"	d
ENVIRON_INCLUDED	src/platform/visualc/config.h	47;"	d
ENVIRON_LINKED	config.h	106;"	d
ENVIRON_LINKED	src/platform/visualc/config.h	50;"	d
ENV_BITS	src/hardware/fmopl.cpp	94;"	d	file:
ENV_BITS	src/hardware/ymf262.cpp	75;"	d	file:
ENV_KEEPFREE	src/dos/dos_execute.cpp	59;"	d	file:
ENV_LEN	src/hardware/fmopl.cpp	95;"	d	file:
ENV_LEN	src/hardware/ymf262.cpp	76;"	d	file:
ENV_QUIET	src/hardware/fmopl.cpp	518;"	d	file:
ENV_QUIET	src/hardware/ymf262.cpp	472;"	d	file:
ENV_STEP	src/hardware/fmopl.cpp	96;"	d	file:
ENV_STEP	src/hardware/ymf262.cpp	77;"	d	file:
ERROR_PRIORITY	include/serialport.h	190;"	d
ESC	src/libs/gui_tk/gui_tk.h	/^	enum SpecialChar { CR = '\\r', LF = '\\n', BS = '\\b', Tab = '\\t', Space = ' ', ESC = 27 };$/;"	e	enum:GUI::Font::SpecialChar
ESRList	src/hardware/ipx.cpp	/^ECBClass* ESRList;	\/\/ ECBs waiting to be ESR notified$/;"	v
EXCEPTION	src/cpu/core_full.cpp	55;"	d	file:
EXCEPTION	src/cpu/core_normal/support.h	41;"	d
EXCEPTION_GP	include/cpu.h	176;"	d
EXCEPTION_GP	src/cpu/core_normal/prefix_0f.h	/^		if (cpu.pmode && cpu.cpl) EXCEPTION(EXCEPTION_GP);$/;"	v
EXCEPTION_GP	src/cpu/core_normal/prefix_none.h	/^		if (cpu.pmode && cpu.cpl) EXCEPTION(EXCEPTION_GP);$/;"	v
EXCEPTION_GP	src/cpu/core_normal/verysimple_prefix_none.h	/^		if (cpu.pmode && cpu.cpl) EXCEPTION(EXCEPTION_GP);$/;"	v
EXCEPTION_NP	include/cpu.h	174;"	d
EXCEPTION_PF	include/cpu.h	177;"	d
EXCEPTION_SS	include/cpu.h	175;"	d
EXCEPTION_TS	include/cpu.h	173;"	d
EXCEPTION_UD	include/cpu.h	172;"	d
EXE_Header	src/dos/dos_execute.cpp	/^struct EXE_Header {$/;"	s	file:
EXTENT_LOCATION	src/dos/drives.h	293;"	d
EXTENT_LOCATION	src/dos/drives.h	296;"	d
E_Exit	src/misc/support.cxx	/^void E_Exit(const char * format,...) {$/;"	f
Eb	src/debug/disasm_tables.h	/^	Eb,Ev,Ew,Ep,$/;"	e	enum:__anon111
EditableBackground	src/libs/gui_tk/gui_tk.cpp	/^RGB EditableBackground = 0xffffffff;$/;"	m	namespace:GUI::Color	file:
EmptyCache	include/dos_system.h	/^	virtual void EmptyCache(void) { dirCache.EmptyCache(); };$/;"	f	class:DOS_Drive
EmptyCache	src/dos/drive_cache.cpp	/^void DOS_Drive_Cache::EmptyCache(void)$/;"	f	class:DOS_Drive_Cache
EmptyCache	src/dos/drives.h	/^	virtual void EmptyCache(void){}$/;"	f	class:isoDrive
EmptyCache	src/dos/drives.h	/^	void EmptyCache(void){}$/;"	f	class:Virtual_Drive
Enable	src/gui/sdl_mapper.cpp	/^	void Enable(bool yes) { $/;"	f	class:CButton
Enable	src/hardware/mixer.cpp	/^void MixerChannel::Enable(bool _yesno) {$/;"	f	class:MixerChannel
End	src/libs/gui_tk/gui_tk.h	/^		Home, End, PageUp, PageDown, Insert, Delete, Menu,$/;"	e	enum:GUI::Key::Special
EndScaler	src/gui/render_16.h	85;"	d
EndScaler	src/gui/render_32.h	85;"	d
EndScaler	src/gui/render_8.h	103;"	d
EndScaler	src/gui/render_9.h	103;"	d
EndScalerCommon	src/gui/render_16.h	80;"	d
EndScalerCommon	src/gui/render_32.h	80;"	d
EndScalerCommon	src/gui/render_8.h	98;"	d
EndScalerCommon	src/gui/render_9.h	98;"	d
EndScalerGX	src/gui/render_16.h	134;"	d
EndScalerGX	src/gui/render_32.h	134;"	d
EndScalerGX	src/gui/render_8.h	152;"	d
EndScalerGX	src/gui/render_9.h	152;"	d
EndingF	src/platform/visualc/ntddcdrm.h	/^  UCHAR  EndingF;$/;"	m	struct:_CDROM_PLAY_AUDIO_MSF
EndingM	src/platform/visualc/ntddcdrm.h	/^  UCHAR  EndingM;$/;"	m	struct:_CDROM_PLAY_AUDIO_MSF
EndingS	src/platform/visualc/ntddcdrm.h	/^  UCHAR  EndingS;$/;"	m	struct:_CDROM_PLAY_AUDIO_MSF
Enter	src/libs/gui_tk/gui_tk.h	/^		Up, Down, Left, Right, Backspace, Tab, Backtab, Enter, Escape,$/;"	e	enum:GUI::Key::Special
EnterConnectedState	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::EnterConnectedState(void) {$/;"	f	class:CSerialModem
EnterIdleState	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::EnterIdleState(void){$/;"	f	class:CSerialModem
Ep	src/debug/disasm_tables.h	/^	Eb,Ev,Ew,Ep,$/;"	e	enum:__anon111
ErrTerm	src/hardware/vga_xga.cpp	/^	Bit16u ErrTerm;$/;"	m	struct:XGAStatus	file:
ErrorCode	src/dos/scsidefs.h	/^    BYTE    ErrorCode;          \/\/ Error Code (70H or 71H)$/;"	m	struct:__anon123
Escape	src/libs/gui_tk/gui_tk.h	/^		Up, Down, Left, Right, Backspace, Tab, Backtab, Enter, Escape,$/;"	e	enum:GUI::Key::Special
Etype	include/setup.h	/^	enum Etype { V_NONE, V_HEX, V_BOOL, V_INT, V_STRING, V_DOUBLE,V_CURRENT} type;$/;"	g	class:Value
Ev	src/debug/disasm_tables.h	/^	Eb,Ev,Ew,Ep,$/;"	e	enum:__anon111
Ew	src/debug/disasm_tables.h	/^	Eb,Ev,Ew,Ep,$/;"	e	enum:__anon111
Execute	src/shell/shell_misc.cpp	/^bool DOS_Shell::Execute(char * name,char * args) {$/;"	f	class:DOS_Shell
ExecuteDestroy	src/misc/setup.cpp	/^void Section::ExecuteDestroy(bool destroyall) {$/;"	f	class:Section
ExecuteInit	src/misc/setup.cpp	/^void Section::ExecuteInit(bool initall) {$/;"	f	class:Section
Expand16Table	src/hardware/vga.cpp	/^Bit32u Expand16Table[4][16];$/;"	v
ExpandDot	src/shell/shell_cmds.cpp	/^static char* ExpandDot(char*args, char* buffer) {$/;"	f	file:
ExpandName	src/dos/drive_cache.cpp	/^void DOS_Drive_Cache::ExpandName(char* path)$/;"	f	class:DOS_Drive_Cache
ExpandTable	src/hardware/vga.cpp	/^Bit32u ExpandTable[256];$/;"	v
Extended	src/dos/dos_classes.cpp	/^bool DOS_FCB::Extended(void) {$/;"	f	class:DOS_FCB
ExtensionFlag	src/platform/visualc/ntddcdrm.h	/^  UCHAR  ExtensionFlag : 1;$/;"	m	struct:_CDROM_TOC_CD_TEXT_DATA_BLOCK
F	src/platform/visualc/ntddcdrm.h	/^  UCHAR  F;$/;"	m	struct:_CDROM_SEEK_AUDIO_MSF
F1	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
F10	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
F11	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
F12	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
F2	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
F3	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
F4	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
F5	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
F6	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
F7	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
F8	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
F9	src/libs/gui_tk/gui_tk.h	/^		F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12,$/;"	e	enum:GUI::Key::Special
FAT12	src/dos/drive_fat.cpp	36;"	d	file:
FAT16	src/dos/drive_fat.cpp	37;"	d	file:
FAT32	src/dos/drive_fat.cpp	38;"	d	file:
FB	src/hardware/fmopl.cpp	/^	UINT8   FB;			\/* feedback shift value			*\/$/;"	m	struct:__anon153	file:
FB	src/hardware/ymf262.cpp	/^	UINT8   FB;			\/* feedback shift value			*\/$/;"	m	struct:__anon190	file:
FB_PNOISE	src/hardware/tandy_sound.cpp	45;"	d	file:
FB_WNOISE	src/hardware/tandy_sound.cpp	41;"	d	file:
FCB_ERR_EOF	src/dos/dos_files.cpp	40;"	d	file:
FCB_ERR_NODATA	src/dos/dos_files.cpp	39;"	d	file:
FCB_ERR_WRITE	src/dos/dos_files.cpp	41;"	d	file:
FCB_Parsename	src/dos/dos_files.cpp	/^Bit8u FCB_Parsename(Bit16u seg,Bit16u offset,Bit8u parser ,char *string, Bit8u *change) {$/;"	f
FCB_READ_NODATA	src/dos/dos_files.cpp	37;"	d	file:
FCB_READ_PARTIAL	src/dos/dos_files.cpp	38;"	d	file:
FCB_SEP	src/dos/dos_files.cpp	727;"	d	file:
FCB_SUCCESS	src/dos/dos_files.cpp	36;"	d	file:
FCR_OFFSET	include/serialport.h	333;"	d
FC_ADDR	src/cpu/core_dynrec/risc_armv4le-o3.h	34;"	d
FC_ADDR	src/cpu/core_dynrec/risc_armv4le-s3.h	34;"	d
FC_ADDR	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	39;"	d
FC_ADDR	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	39;"	d
FC_ADDR	src/cpu/core_dynrec/risc_armv4le-thumb.h	39;"	d
FC_ADDR	src/cpu/core_dynrec/risc_mipsel32.h	69;"	d
FC_ADDR	src/cpu/core_dynrec/risc_x64.h	58;"	d
FC_ADDR	src/cpu/core_dynrec/risc_x86.h	65;"	d
FC_ADDR	src/cpu/core_dynrec/save/risc_armv4le-o3.h	34;"	d
FC_ADDR	src/cpu/core_dynrec/save/risc_armv4le-s3.h	34;"	d
FC_ADDR	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	39;"	d
FC_ADDR	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	39;"	d
FC_ADDR	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	39;"	d
FC_ADDR	src/cpu/core_dynrec/save/risc_mipsel32.h	69;"	d
FC_ADDR	src/cpu/core_dynrec/save/risc_x64.h	58;"	d
FC_ADDR	src/cpu/core_dynrec/save/risc_x86.h	65;"	d
FC_OP1	src/cpu/core_dynrec/risc_armv4le-o3.h	37;"	d
FC_OP1	src/cpu/core_dynrec/risc_armv4le-s3.h	37;"	d
FC_OP1	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	42;"	d
FC_OP1	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	42;"	d
FC_OP1	src/cpu/core_dynrec/risc_armv4le-thumb.h	42;"	d
FC_OP1	src/cpu/core_dynrec/risc_mipsel32.h	72;"	d
FC_OP1	src/cpu/core_dynrec/risc_x64.h	61;"	d
FC_OP1	src/cpu/core_dynrec/risc_x86.h	68;"	d
FC_OP1	src/cpu/core_dynrec/save/risc_armv4le-o3.h	37;"	d
FC_OP1	src/cpu/core_dynrec/save/risc_armv4le-s3.h	37;"	d
FC_OP1	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	42;"	d
FC_OP1	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	42;"	d
FC_OP1	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	42;"	d
FC_OP1	src/cpu/core_dynrec/save/risc_mipsel32.h	72;"	d
FC_OP1	src/cpu/core_dynrec/save/risc_x64.h	61;"	d
FC_OP1	src/cpu/core_dynrec/save/risc_x86.h	68;"	d
FC_OP2	src/cpu/core_dynrec/risc_armv4le-o3.h	40;"	d
FC_OP2	src/cpu/core_dynrec/risc_armv4le-s3.h	40;"	d
FC_OP2	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	45;"	d
FC_OP2	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	45;"	d
FC_OP2	src/cpu/core_dynrec/risc_armv4le-thumb.h	45;"	d
FC_OP2	src/cpu/core_dynrec/risc_mipsel32.h	75;"	d
FC_OP2	src/cpu/core_dynrec/risc_x64.h	64;"	d
FC_OP2	src/cpu/core_dynrec/risc_x86.h	71;"	d
FC_OP2	src/cpu/core_dynrec/save/risc_armv4le-o3.h	40;"	d
FC_OP2	src/cpu/core_dynrec/save/risc_armv4le-s3.h	40;"	d
FC_OP2	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	45;"	d
FC_OP2	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	45;"	d
FC_OP2	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	45;"	d
FC_OP2	src/cpu/core_dynrec/save/risc_mipsel32.h	75;"	d
FC_OP2	src/cpu/core_dynrec/save/risc_x64.h	64;"	d
FC_OP2	src/cpu/core_dynrec/save/risc_x86.h	71;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/risc_armv4le-o3.h	53;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/risc_armv4le-s3.h	53;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	58;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	58;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/risc_armv4le-thumb.h	58;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/risc_mipsel32.h	88;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-o3.h	53;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-s3.h	53;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	58;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	58;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	58;"	d
FC_REGS_ADDR	src/cpu/core_dynrec/save/risc_mipsel32.h	88;"	d
FC_RETOP	src/cpu/core_dynrec/risc_armv4le-o3.h	31;"	d
FC_RETOP	src/cpu/core_dynrec/risc_armv4le-s3.h	31;"	d
FC_RETOP	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	36;"	d
FC_RETOP	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	36;"	d
FC_RETOP	src/cpu/core_dynrec/risc_armv4le-thumb.h	36;"	d
FC_RETOP	src/cpu/core_dynrec/risc_mipsel32.h	66;"	d
FC_RETOP	src/cpu/core_dynrec/risc_x64.h	53;"	d
FC_RETOP	src/cpu/core_dynrec/risc_x86.h	60;"	d
FC_RETOP	src/cpu/core_dynrec/save/risc_armv4le-o3.h	31;"	d
FC_RETOP	src/cpu/core_dynrec/save/risc_armv4le-s3.h	31;"	d
FC_RETOP	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	36;"	d
FC_RETOP	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	36;"	d
FC_RETOP	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	36;"	d
FC_RETOP	src/cpu/core_dynrec/save/risc_mipsel32.h	66;"	d
FC_RETOP	src/cpu/core_dynrec/save/risc_x64.h	53;"	d
FC_RETOP	src/cpu/core_dynrec/save/risc_x86.h	60;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/risc_armv4le-o3.h	58;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/risc_armv4le-s3.h	58;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	63;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	63;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/risc_armv4le-thumb.h	63;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/risc_mipsel32.h	93;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-o3.h	58;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-s3.h	58;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	63;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	63;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	63;"	d
FC_SEGS_ADDR	src/cpu/core_dynrec/save/risc_mipsel32.h	93;"	d
FC_TMP_BA1	src/cpu/core_dynrec/risc_armv4le-o3.h	43;"	d
FC_TMP_BA1	src/cpu/core_dynrec/risc_armv4le-s3.h	43;"	d
FC_TMP_BA1	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	48;"	d
FC_TMP_BA1	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	48;"	d
FC_TMP_BA1	src/cpu/core_dynrec/risc_armv4le-thumb.h	48;"	d
FC_TMP_BA1	src/cpu/core_dynrec/risc_mipsel32.h	78;"	d
FC_TMP_BA1	src/cpu/core_dynrec/risc_x64.h	67;"	d
FC_TMP_BA1	src/cpu/core_dynrec/risc_x86.h	74;"	d
FC_TMP_BA1	src/cpu/core_dynrec/save/risc_armv4le-o3.h	43;"	d
FC_TMP_BA1	src/cpu/core_dynrec/save/risc_armv4le-s3.h	43;"	d
FC_TMP_BA1	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	48;"	d
FC_TMP_BA1	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	48;"	d
FC_TMP_BA1	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	48;"	d
FC_TMP_BA1	src/cpu/core_dynrec/save/risc_mipsel32.h	78;"	d
FC_TMP_BA1	src/cpu/core_dynrec/save/risc_x64.h	67;"	d
FC_TMP_BA1	src/cpu/core_dynrec/save/risc_x86.h	74;"	d
FC_TMP_BA2	src/cpu/core_dynrec/risc_armv4le-o3.h	46;"	d
FC_TMP_BA2	src/cpu/core_dynrec/risc_armv4le-s3.h	46;"	d
FC_TMP_BA2	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	51;"	d
FC_TMP_BA2	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	51;"	d
FC_TMP_BA2	src/cpu/core_dynrec/risc_armv4le-thumb.h	51;"	d
FC_TMP_BA2	src/cpu/core_dynrec/risc_mipsel32.h	81;"	d
FC_TMP_BA2	src/cpu/core_dynrec/risc_x64.h	70;"	d
FC_TMP_BA2	src/cpu/core_dynrec/risc_x86.h	77;"	d
FC_TMP_BA2	src/cpu/core_dynrec/save/risc_armv4le-o3.h	46;"	d
FC_TMP_BA2	src/cpu/core_dynrec/save/risc_armv4le-s3.h	46;"	d
FC_TMP_BA2	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	51;"	d
FC_TMP_BA2	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	51;"	d
FC_TMP_BA2	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	51;"	d
FC_TMP_BA2	src/cpu/core_dynrec/save/risc_mipsel32.h	81;"	d
FC_TMP_BA2	src/cpu/core_dynrec/save/risc_x64.h	70;"	d
FC_TMP_BA2	src/cpu/core_dynrec/save/risc_x86.h	77;"	d
FINAL_SH	src/hardware/fmopl.cpp	76;"	d	file:
FINAL_SH	src/hardware/fmopl.cpp	80;"	d	file:
FINAL_SH	src/hardware/ymf262.cpp	57;"	d	file:
FINAL_SH	src/hardware/ymf262.cpp	61;"	d	file:
FIXED_HAS_DOUBLE	src/misc/fixed.h	27;"	d
FIXED_HAS_LONG	src/misc/fixed.h	30;"	d
FKTransparent	src/gui/render_16.h	56;"	d
FKTransparent	src/gui/render_32.h	56;"	d
FKTransparent	src/gui/render_8.h	59;"	d
FKTransparent	src/gui/render_9.h	59;"	d
FLAG_AC	include/regs.h	40;"	d
FLAG_AF	include/regs.h	28;"	d
FLAG_CF	include/regs.h	26;"	d
FLAG_DF	include/regs.h	35;"	d
FLAG_ID	include/regs.h	41;"	d
FLAG_IF	include/regs.h	34;"	d
FLAG_IOPL	include/regs.h	37;"	d
FLAG_NT	include/regs.h	38;"	d
FLAG_OF	include/regs.h	31;"	d
FLAG_PF	include/regs.h	27;"	d
FLAG_SF	include/regs.h	30;"	d
FLAG_TF	include/regs.h	33;"	d
FLAG_VM	include/regs.h	39;"	d
FLAG_ZF	include/regs.h	29;"	d
FLOAT_RESOLUTION	src/misc/fixed.cpp	29;"	d	file:
FLOAT_RESOLUTIONf	src/misc/fixed.cpp	30;"	d	file:
FMASK_ALL	include/regs.h	45;"	d
FMASK_NORMAL	include/regs.h	44;"	d
FMASK_TEST	include/regs.h	43;"	d
FM_KEYOFF	src/hardware/fmopl.cpp	/^INLINE void FM_KEYOFF(OPL_SLOT *SLOT, UINT32 key_clr)$/;"	f
FM_KEYOFF	src/hardware/ymf262.cpp	/^INLINE void FM_KEYOFF(OPL3_SLOT *SLOT, UINT32 key_clr)$/;"	f
FM_KEYON	src/hardware/fmopl.cpp	/^INLINE void FM_KEYON(OPL_SLOT *SLOT, UINT32 key_set)$/;"	f
FM_KEYON	src/hardware/ymf262.cpp	/^INLINE void FM_KEYON(OPL3_SLOT *SLOT, UINT32 key_set)$/;"	f
FM_OPL	src/hardware/fmopl.cpp	/^} FM_OPL;$/;"	t	typeref:struct:fm_opl_f	file:
FPUD_ARITH1	src/fpu/fpu_instructions_x86.h	213;"	d
FPUD_ARITH1	src/fpu/fpu_instructions_x86.h	229;"	d
FPUD_ARITH1	src/fpu/fpu_instructions_x86.h	743;"	d
FPUD_ARITH1	src/fpu/fpu_instructions_x86.h	760;"	d
FPUD_ARITH1_EA	src/fpu/fpu_instructions_x86.h	251;"	d
FPUD_ARITH1_EA	src/fpu/fpu_instructions_x86.h	265;"	d
FPUD_ARITH1_EA	src/fpu/fpu_instructions_x86.h	783;"	d
FPUD_ARITH1_EA	src/fpu/fpu_instructions_x86.h	798;"	d
FPUD_ARITH2	src/fpu/fpu_instructions_x86.h	285;"	d
FPUD_ARITH2	src/fpu/fpu_instructions_x86.h	298;"	d
FPUD_ARITH2	src/fpu/fpu_instructions_x86.h	819;"	d
FPUD_ARITH2	src/fpu/fpu_instructions_x86.h	834;"	d
FPUD_ARITH3	src/fpu/fpu_instructions_x86.h	317;"	d
FPUD_ARITH3	src/fpu/fpu_instructions_x86.h	333;"	d
FPUD_ARITH3	src/fpu/fpu_instructions_x86.h	855;"	d
FPUD_ARITH3	src/fpu/fpu_instructions_x86.h	872;"	d
FPUD_ARITH3_EA	src/fpu/fpu_instructions_x86.h	355;"	d
FPUD_ARITH3_EA	src/fpu/fpu_instructions_x86.h	369;"	d
FPUD_ARITH3_EA	src/fpu/fpu_instructions_x86.h	895;"	d
FPUD_ARITH3_EA	src/fpu/fpu_instructions_x86.h	910;"	d
FPUD_COMPARE	src/fpu/fpu_instructions_x86.h	408;"	d
FPUD_COMPARE	src/fpu/fpu_instructions_x86.h	952;"	d
FPUD_COMPARE_EA	src/fpu/fpu_instructions_x86.h	423;"	d
FPUD_COMPARE_EA	src/fpu/fpu_instructions_x86.h	969;"	d
FPUD_EXAMINE	src/fpu/fpu_instructions_x86.h	436;"	d
FPUD_EXAMINE	src/fpu/fpu_instructions_x86.h	984;"	d
FPUD_FYL2X	src/fpu/fpu_instructions_x86.h	1042;"	d
FPUD_FYL2X	src/fpu/fpu_instructions_x86.h	1059;"	d
FPUD_FYL2X	src/fpu/fpu_instructions_x86.h	488;"	d
FPUD_FYL2X	src/fpu/fpu_instructions_x86.h	503;"	d
FPUD_LOAD	src/fpu/fpu_instructions_x86.h	34;"	d
FPUD_LOAD	src/fpu/fpu_instructions_x86.h	42;"	d
FPUD_LOAD	src/fpu/fpu_instructions_x86.h	543;"	d
FPUD_LOAD	src/fpu/fpu_instructions_x86.h	554;"	d
FPUD_LOAD_CONST	src/fpu/fpu_instructions_x86.h	1082;"	d
FPUD_LOAD_CONST	src/fpu/fpu_instructions_x86.h	524;"	d
FPUD_LOAD_EA	src/fpu/fpu_instructions_x86.h	572;"	d
FPUD_LOAD_EA	src/fpu/fpu_instructions_x86.h	581;"	d
FPUD_LOAD_EA	src/fpu/fpu_instructions_x86.h	58;"	d
FPUD_LOAD_EA	src/fpu/fpu_instructions_x86.h	63;"	d
FPUD_PTAN	src/fpu/fpu_instructions_x86.h	148;"	d
FPUD_PTAN	src/fpu/fpu_instructions_x86.h	675;"	d
FPUD_REMINDER	src/fpu/fpu_instructions_x86.h	388;"	d
FPUD_REMINDER	src/fpu/fpu_instructions_x86.h	930;"	d
FPUD_SINCOS	src/fpu/fpu_instructions_x86.h	121;"	d
FPUD_SINCOS	src/fpu/fpu_instructions_x86.h	649;"	d
FPUD_STORE	src/fpu/fpu_instructions_x86.h	597;"	d
FPUD_STORE	src/fpu/fpu_instructions_x86.h	612;"	d
FPUD_STORE	src/fpu/fpu_instructions_x86.h	76;"	d
FPUD_STORE	src/fpu/fpu_instructions_x86.h	88;"	d
FPUD_TRIG	src/fpu/fpu_instructions_x86.h	107;"	d
FPUD_TRIG	src/fpu/fpu_instructions_x86.h	633;"	d
FPUD_WITH_POP	src/fpu/fpu_instructions_x86.h	1001;"	d
FPUD_WITH_POP	src/fpu/fpu_instructions_x86.h	1018;"	d
FPUD_WITH_POP	src/fpu/fpu_instructions_x86.h	451;"	d
FPUD_WITH_POP	src/fpu/fpu_instructions_x86.h	466;"	d
FPUD_XTRACT	src/fpu/fpu_instructions_x86.h	176;"	d
FPUD_XTRACT	src/fpu/fpu_instructions_x86.h	191;"	d
FPUD_XTRACT	src/fpu/fpu_instructions_x86.h	702;"	d
FPUD_XTRACT	src/fpu/fpu_instructions_x86.h	719;"	d
FPU_ESC	src/cpu/core_normal/helpers.h	136;"	d
FPU_ESC0_EA	src/fpu/fpu.cpp	/^void FPU_ESC0_EA(Bitu rm,PhysPt addr) {$/;"	f
FPU_ESC0_Normal	src/fpu/fpu.cpp	/^void FPU_ESC0_Normal(Bitu rm) {$/;"	f
FPU_ESC1_EA	src/fpu/fpu.cpp	/^void FPU_ESC1_EA(Bitu rm,PhysPt addr) {$/;"	f
FPU_ESC1_Normal	src/fpu/fpu.cpp	/^void FPU_ESC1_Normal(Bitu rm) {$/;"	f
FPU_ESC2_EA	src/fpu/fpu.cpp	/^void FPU_ESC2_EA(Bitu rm,PhysPt addr) {$/;"	f
FPU_ESC2_Normal	src/fpu/fpu.cpp	/^void FPU_ESC2_Normal(Bitu rm) {$/;"	f
FPU_ESC3_EA	src/fpu/fpu.cpp	/^void FPU_ESC3_EA(Bitu rm,PhysPt addr) {$/;"	f
FPU_ESC3_Normal	src/fpu/fpu.cpp	/^void FPU_ESC3_Normal(Bitu rm) {$/;"	f
FPU_ESC4_EA	src/fpu/fpu.cpp	/^void FPU_ESC4_EA(Bitu rm,PhysPt addr) {$/;"	f
FPU_ESC4_Normal	src/fpu/fpu.cpp	/^void FPU_ESC4_Normal(Bitu rm) {$/;"	f
FPU_ESC5_EA	src/fpu/fpu.cpp	/^void FPU_ESC5_EA(Bitu rm,PhysPt addr) {$/;"	f
FPU_ESC5_Normal	src/fpu/fpu.cpp	/^void FPU_ESC5_Normal(Bitu rm) {$/;"	f
FPU_ESC6_EA	src/fpu/fpu.cpp	/^void FPU_ESC6_EA(Bitu rm,PhysPt addr) {$/;"	f
FPU_ESC6_Normal	src/fpu/fpu.cpp	/^void FPU_ESC6_Normal(Bitu rm) {$/;"	f
FPU_ESC7_EA	src/fpu/fpu.cpp	/^void FPU_ESC7_EA(Bitu rm,PhysPt addr) {$/;"	f
FPU_ESC7_Normal	src/fpu/fpu.cpp	/^void FPU_ESC7_Normal(Bitu rm) {$/;"	f
FPU_F2XM1	src/fpu/fpu_instructions.h	/^static void FPU_F2XM1(void){$/;"	f
FPU_F2XM1	src/fpu/fpu_instructions_x86.h	/^static void FPU_F2XM1(void){$/;"	f
FPU_FABS	src/fpu/fpu_instructions.h	/^static void FPU_FABS(void){$/;"	f
FPU_FABS	src/fpu/fpu_instructions_x86.h	/^static void FPU_FABS(void){$/;"	f
FPU_FADD	src/fpu/fpu_instructions.h	/^static void FPU_FADD(Bitu op1, Bitu op2){$/;"	f
FPU_FADD	src/fpu/fpu_instructions_x86.h	/^static void FPU_FADD(Bitu op1, Bitu op2){$/;"	f
FPU_FADD_EA	src/fpu/fpu_instructions.h	/^static INLINE void FPU_FADD_EA(Bitu op1){$/;"	f
FPU_FADD_EA	src/fpu/fpu_instructions_x86.h	/^static void FPU_FADD_EA(Bitu op1){$/;"	f
FPU_FBLD	src/fpu/fpu_instructions.h	/^static void FPU_FBLD(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FBLD	src/fpu/fpu_instructions_x86.h	/^static void FPU_FBLD(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FBST	src/fpu/fpu_instructions.h	/^static void FPU_FBST(PhysPt addr) {$/;"	f
FPU_FBST	src/fpu/fpu_instructions_x86.h	/^static void FPU_FBST(PhysPt addr) {$/;"	f
FPU_FCHS	src/fpu/fpu_instructions.h	/^static void FPU_FCHS(void){$/;"	f
FPU_FCHS	src/fpu/fpu_instructions_x86.h	/^static void FPU_FCHS(void){$/;"	f
FPU_FCLEX	src/fpu/fpu_instructions.h	/^static void FPU_FCLEX(void){$/;"	f
FPU_FCLEX	src/fpu/fpu_instructions_x86.h	/^static void FPU_FCLEX(void){$/;"	f
FPU_FCOM	src/fpu/fpu_instructions.h	/^static void FPU_FCOM(Bitu st, Bitu other){$/;"	f
FPU_FCOM	src/fpu/fpu_instructions_x86.h	/^static void FPU_FCOM(Bitu op1, Bitu op2){$/;"	f
FPU_FCOM_EA	src/fpu/fpu_instructions.h	/^static INLINE void FPU_FCOM_EA(Bitu op1){$/;"	f
FPU_FCOM_EA	src/fpu/fpu_instructions_x86.h	/^static void FPU_FCOM_EA(Bitu op1){$/;"	f
FPU_FCOS	src/fpu/fpu_instructions.h	/^static void FPU_FCOS(void){$/;"	f
FPU_FCOS	src/fpu/fpu_instructions_x86.h	/^static void FPU_FCOS(void){$/;"	f
FPU_FDECSTP	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void FPU_FDECSTP(){$/;"	f
FPU_FDECSTP	src/cpu/core_dynrec/dyn_fpu.h	/^static void FPU_FDECSTP(){$/;"	f
FPU_FDECSTP	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void FPU_FDECSTP(){$/;"	f
FPU_FDIV	src/fpu/fpu_instructions.h	/^static void FPU_FDIV(Bitu st, Bitu other){$/;"	f
FPU_FDIV	src/fpu/fpu_instructions_x86.h	/^static void FPU_FDIV(Bitu op1, Bitu op2){$/;"	f
FPU_FDIVR	src/fpu/fpu_instructions.h	/^static void FPU_FDIVR(Bitu st, Bitu other){$/;"	f
FPU_FDIVR	src/fpu/fpu_instructions_x86.h	/^static void FPU_FDIVR(Bitu op1, Bitu op2){$/;"	f
FPU_FDIVR_EA	src/fpu/fpu_instructions.h	/^static INLINE void FPU_FDIVR_EA(Bitu op1){$/;"	f
FPU_FDIVR_EA	src/fpu/fpu_instructions_x86.h	/^static void FPU_FDIVR_EA(Bitu op1){$/;"	f
FPU_FDIV_EA	src/fpu/fpu_instructions.h	/^static INLINE void FPU_FDIV_EA(Bitu op1){$/;"	f
FPU_FDIV_EA	src/fpu/fpu_instructions_x86.h	/^static void FPU_FDIV_EA(Bitu op1){$/;"	f
FPU_FFREE	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void FPU_FFREE(Bitu st) {$/;"	f
FPU_FFREE	src/cpu/core_dynrec/dyn_fpu.h	/^static void FPU_FFREE(Bitu st) {$/;"	f
FPU_FFREE	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void FPU_FFREE(Bitu st) {$/;"	f
FPU_FINCSTP	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void FPU_FINCSTP(){$/;"	f
FPU_FINCSTP	src/cpu/core_dynrec/dyn_fpu.h	/^static void FPU_FINCSTP(){$/;"	f
FPU_FINCSTP	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void FPU_FINCSTP(){$/;"	f
FPU_FINIT	src/fpu/fpu_instructions.h	/^static void FPU_FINIT(void) {$/;"	f
FPU_FINIT	src/fpu/fpu_instructions_x86.h	/^static void FPU_FINIT(void) {$/;"	f
FPU_FLD1	src/fpu/fpu_instructions.h	/^static void FPU_FLD1(void){$/;"	f
FPU_FLD1	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLD1(void){$/;"	f
FPU_FLD80	src/fpu/fpu_instructions.h	/^static Real64 FPU_FLD80(PhysPt addr) {$/;"	f
FPU_FLDCW	src/fpu/fpu.cpp	/^void FPU_FLDCW(PhysPt addr){$/;"	f
FPU_FLDCW_DH	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FLDCW_DH(PhysPt addr){$/;"	f
FPU_FLDENV	src/fpu/fpu_instructions.h	/^static void FPU_FLDENV(PhysPt addr){$/;"	f
FPU_FLDENV	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLDENV(PhysPt addr){$/;"	f
FPU_FLDENV_DH	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FLDENV_DH(PhysPt addr){$/;"	f
FPU_FLDL2E	src/fpu/fpu_instructions.h	/^static void FPU_FLDL2E(void){$/;"	f
FPU_FLDL2E	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLDL2E(void){$/;"	f
FPU_FLDL2T	src/fpu/fpu_instructions.h	/^static void FPU_FLDL2T(void){$/;"	f
FPU_FLDL2T	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLDL2T(void){$/;"	f
FPU_FLDLG2	src/fpu/fpu_instructions.h	/^static void FPU_FLDLG2(void){$/;"	f
FPU_FLDLG2	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLDLG2(void){$/;"	f
FPU_FLDLN2	src/fpu/fpu_instructions.h	/^static void FPU_FLDLN2(void){$/;"	f
FPU_FLDLN2	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLDLN2(void){$/;"	f
FPU_FLDPI	src/fpu/fpu_instructions.h	/^static void FPU_FLDPI(void){$/;"	f
FPU_FLDPI	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLDPI(void){$/;"	f
FPU_FLDZ	src/fpu/fpu_instructions.h	/^static void FPU_FLDZ(void){$/;"	f
FPU_FLDZ	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLDZ(void){$/;"	f
FPU_FLD_16	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FLD_16(PhysPt addr) {$/;"	f
FPU_FLD_32	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FLD_32(PhysPt addr) {$/;"	f
FPU_FLD_64	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FLD_64(PhysPt addr) {$/;"	f
FPU_FLD_80	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FLD_80(PhysPt addr) {$/;"	f
FPU_FLD_F32	src/fpu/fpu_instructions.h	/^static void FPU_FLD_F32(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FLD_F32	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLD_F32(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FLD_F32_EA	src/fpu/fpu_instructions.h	/^static INLINE void FPU_FLD_F32_EA(PhysPt addr) {$/;"	f
FPU_FLD_F32_EA	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLD_F32_EA(PhysPt addr) {$/;"	f
FPU_FLD_F64	src/fpu/fpu_instructions.h	/^static void FPU_FLD_F64(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FLD_F64	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLD_F64(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FLD_F64_EA	src/fpu/fpu_instructions.h	/^static INLINE void FPU_FLD_F64_EA(PhysPt addr) {$/;"	f
FPU_FLD_F64_EA	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLD_F64_EA(PhysPt addr) {$/;"	f
FPU_FLD_F80	src/fpu/fpu_instructions.h	/^static void FPU_FLD_F80(PhysPt addr) {$/;"	f
FPU_FLD_F80	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLD_F80(PhysPt addr) {$/;"	f
FPU_FLD_I16	src/fpu/fpu_instructions.h	/^static void FPU_FLD_I16(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FLD_I16	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLD_I16(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FLD_I16_EA	src/fpu/fpu_instructions.h	/^static INLINE void FPU_FLD_I16_EA(PhysPt addr) {$/;"	f
FPU_FLD_I16_EA	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLD_I16_EA(PhysPt addr) {$/;"	f
FPU_FLD_I32	src/fpu/fpu_instructions.h	/^static void FPU_FLD_I32(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FLD_I32	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLD_I32(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FLD_I32_EA	src/fpu/fpu_instructions.h	/^static INLINE void FPU_FLD_I32_EA(PhysPt addr) {$/;"	f
FPU_FLD_I32_EA	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLD_I32_EA(PhysPt addr) {$/;"	f
FPU_FLD_I64	src/fpu/fpu_instructions.h	/^static void FPU_FLD_I64(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FLD_I64	src/fpu/fpu_instructions_x86.h	/^static void FPU_FLD_I64(PhysPt addr,Bitu store_to) {$/;"	f
FPU_FMUL	src/fpu/fpu_instructions.h	/^static void FPU_FMUL(Bitu st, Bitu other){$/;"	f
FPU_FMUL	src/fpu/fpu_instructions_x86.h	/^static void FPU_FMUL(Bitu op1, Bitu op2){$/;"	f
FPU_FMUL_EA	src/fpu/fpu_instructions.h	/^static INLINE void FPU_FMUL_EA(Bitu op1){$/;"	f
FPU_FMUL_EA	src/fpu/fpu_instructions_x86.h	/^static void FPU_FMUL_EA(Bitu op1){$/;"	f
FPU_FNINIT_DH	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FNINIT_DH(void){$/;"	f
FPU_FNOP	src/fpu/fpu_instructions.h	/^static void FPU_FNOP(void){$/;"	f
FPU_FNOP	src/fpu/fpu_instructions_x86.h	/^static void FPU_FNOP(void){$/;"	f
FPU_FNSTCW	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void FPU_FNSTCW(PhysPt addr){$/;"	f
FPU_FNSTCW	src/cpu/core_dynrec/dyn_fpu.h	/^static void FPU_FNSTCW(PhysPt addr){$/;"	f
FPU_FNSTCW	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void FPU_FNSTCW(PhysPt addr){$/;"	f
FPU_FNSTCW_DH	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FNSTCW_DH(PhysPt addr){$/;"	f
FPU_FPATAN	src/fpu/fpu_instructions.h	/^static void FPU_FPATAN(void){$/;"	f
FPU_FPATAN	src/fpu/fpu_instructions_x86.h	/^static void FPU_FPATAN(void){$/;"	f
FPU_FPOP	src/fpu/fpu_instructions.h	/^static void FPU_FPOP(void){$/;"	f
FPU_FPOP	src/fpu/fpu_instructions_x86.h	/^static void FPU_FPOP(void){$/;"	f
FPU_FPREM	src/fpu/fpu_instructions.h	/^static void FPU_FPREM(void){$/;"	f
FPU_FPREM	src/fpu/fpu_instructions_x86.h	/^static void FPU_FPREM(void){$/;"	f
FPU_FPREM1	src/fpu/fpu_instructions.h	/^static void FPU_FPREM1(void){$/;"	f
FPU_FPREM1	src/fpu/fpu_instructions_x86.h	/^static void FPU_FPREM1(void){$/;"	f
FPU_FPTAN	src/fpu/fpu_instructions.h	/^static void FPU_FPTAN(void){$/;"	f
FPU_FPTAN	src/fpu/fpu_instructions_x86.h	/^static void FPU_FPTAN(void){$/;"	f
FPU_FRNDINT	src/fpu/fpu_instructions.h	/^static void FPU_FRNDINT(void){$/;"	f
FPU_FRNDINT	src/fpu/fpu_instructions_x86.h	/^static void FPU_FRNDINT(void){$/;"	f
FPU_FRSTOR	src/fpu/fpu_instructions.h	/^static void FPU_FRSTOR(PhysPt addr){$/;"	f
FPU_FRSTOR	src/fpu/fpu_instructions_x86.h	/^static void FPU_FRSTOR(PhysPt addr){$/;"	f
FPU_FRSTOR_DH	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FRSTOR_DH(PhysPt addr){$/;"	f
FPU_FSAVE	src/fpu/fpu_instructions.h	/^static void FPU_FSAVE(PhysPt addr){$/;"	f
FPU_FSAVE	src/fpu/fpu_instructions_x86.h	/^static void FPU_FSAVE(PhysPt addr){$/;"	f
FPU_FSAVE_DH	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FSAVE_DH(PhysPt addr){$/;"	f
FPU_FSCALE	src/fpu/fpu_instructions.h	/^static void FPU_FSCALE(void){$/;"	f
FPU_FSCALE	src/fpu/fpu_instructions_x86.h	/^static void FPU_FSCALE(void){$/;"	f
FPU_FSIN	src/fpu/fpu_instructions.h	/^static void FPU_FSIN(void){$/;"	f
FPU_FSIN	src/fpu/fpu_instructions_x86.h	/^static void FPU_FSIN(void){$/;"	f
FPU_FSINCOS	src/fpu/fpu_instructions.h	/^static void FPU_FSINCOS(void){$/;"	f
FPU_FSINCOS	src/fpu/fpu_instructions_x86.h	/^static void FPU_FSINCOS(void){$/;"	f
FPU_FSQRT	src/fpu/fpu_instructions.h	/^static void FPU_FSQRT(void){$/;"	f
FPU_FSQRT	src/fpu/fpu_instructions_x86.h	/^static void FPU_FSQRT(void){$/;"	f
FPU_FST	src/fpu/fpu_instructions.h	/^static void FPU_FST(Bitu st, Bitu other){$/;"	f
FPU_FST	src/fpu/fpu_instructions_x86.h	/^static void FPU_FST(Bitu stv, Bitu other){$/;"	f
FPU_FSTENV	src/fpu/fpu_instructions.h	/^static void FPU_FSTENV(PhysPt addr){$/;"	f
FPU_FSTENV	src/fpu/fpu_instructions_x86.h	/^static void FPU_FSTENV(PhysPt addr){$/;"	f
FPU_FSTENV_DH	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FSTENV_DH(PhysPt addr){$/;"	f
FPU_FST_16	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FST_16(PhysPt addr) {$/;"	f
FPU_FST_32	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FST_32(PhysPt addr) {$/;"	f
FPU_FST_64	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FST_64(PhysPt addr) {$/;"	f
FPU_FST_80	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void FPU_FST_80(PhysPt addr) {$/;"	f
FPU_FST_F32	src/fpu/fpu_instructions.h	/^static void FPU_FST_F32(PhysPt addr) {$/;"	f
FPU_FST_F32	src/fpu/fpu_instructions_x86.h	/^static void FPU_FST_F32(PhysPt addr) {$/;"	f
FPU_FST_F64	src/fpu/fpu_instructions.h	/^static void FPU_FST_F64(PhysPt addr) {$/;"	f
FPU_FST_F64	src/fpu/fpu_instructions_x86.h	/^static void FPU_FST_F64(PhysPt addr) {$/;"	f
FPU_FST_F80	src/fpu/fpu_instructions.h	/^static void FPU_FST_F80(PhysPt addr) {$/;"	f
FPU_FST_F80	src/fpu/fpu_instructions_x86.h	/^static void FPU_FST_F80(PhysPt addr) {$/;"	f
FPU_FST_I16	src/fpu/fpu_instructions.h	/^static void FPU_FST_I16(PhysPt addr) {$/;"	f
FPU_FST_I16	src/fpu/fpu_instructions_x86.h	/^static void FPU_FST_I16(PhysPt addr) {$/;"	f
FPU_FST_I32	src/fpu/fpu_instructions.h	/^static void FPU_FST_I32(PhysPt addr) {$/;"	f
FPU_FST_I32	src/fpu/fpu_instructions_x86.h	/^static void FPU_FST_I32(PhysPt addr) {$/;"	f
FPU_FST_I64	src/fpu/fpu_instructions.h	/^static void FPU_FST_I64(PhysPt addr) {$/;"	f
FPU_FST_I64	src/fpu/fpu_instructions_x86.h	/^static void FPU_FST_I64(PhysPt addr) {$/;"	f
FPU_FSUB	src/fpu/fpu_instructions.h	/^static void FPU_FSUB(Bitu st, Bitu other){$/;"	f
FPU_FSUB	src/fpu/fpu_instructions_x86.h	/^static void FPU_FSUB(Bitu op1, Bitu op2){$/;"	f
FPU_FSUBR	src/fpu/fpu_instructions.h	/^static void FPU_FSUBR(Bitu st, Bitu other){$/;"	f
FPU_FSUBR	src/fpu/fpu_instructions_x86.h	/^static void FPU_FSUBR(Bitu op1, Bitu op2){$/;"	f
FPU_FSUBR_EA	src/fpu/fpu_instructions.h	/^static INLINE void FPU_FSUBR_EA(Bitu op1){$/;"	f
FPU_FSUBR_EA	src/fpu/fpu_instructions_x86.h	/^static void FPU_FSUBR_EA(Bitu op1){$/;"	f
FPU_FSUB_EA	src/fpu/fpu_instructions.h	/^static INLINE void FPU_FSUB_EA(Bitu op1){$/;"	f
FPU_FSUB_EA	src/fpu/fpu_instructions_x86.h	/^static void FPU_FSUB_EA(Bitu op1){$/;"	f
FPU_FTST	src/fpu/fpu_instructions.h	/^static void FPU_FTST(void){$/;"	f
FPU_FTST	src/fpu/fpu_instructions_x86.h	/^static void FPU_FTST(void){$/;"	f
FPU_FUCOM	src/fpu/fpu_instructions.h	/^static void FPU_FUCOM(Bitu st, Bitu other){$/;"	f
FPU_FUCOM	src/fpu/fpu_instructions_x86.h	/^static void FPU_FUCOM(Bitu op1, Bitu op2){$/;"	f
FPU_FXAM	src/fpu/fpu_instructions.h	/^static void FPU_FXAM(void){$/;"	f
FPU_FXAM	src/fpu/fpu_instructions_x86.h	/^static void FPU_FXAM(void){$/;"	f
FPU_FXCH	src/fpu/fpu_instructions.h	/^static void FPU_FXCH(Bitu st, Bitu other){$/;"	f
FPU_FXCH	src/fpu/fpu_instructions_x86.h	/^static void FPU_FXCH(Bitu stv, Bitu other){$/;"	f
FPU_FXTRACT	src/fpu/fpu_instructions.h	/^static void FPU_FXTRACT(void) {$/;"	f
FPU_FXTRACT	src/fpu/fpu_instructions_x86.h	/^static void FPU_FXTRACT(void) {$/;"	f
FPU_FYL2X	src/fpu/fpu_instructions.h	/^static void FPU_FYL2X(void){$/;"	f
FPU_FYL2X	src/fpu/fpu_instructions_x86.h	/^static void FPU_FYL2X(void){$/;"	f
FPU_FYL2XP1	src/fpu/fpu_instructions.h	/^static void FPU_FYL2XP1(void){$/;"	f
FPU_FYL2XP1	src/fpu/fpu_instructions_x86.h	/^static void FPU_FYL2XP1(void){$/;"	f
FPU_GET_TOP	include/fpu.h	/^INLINE Bitu FPU_GET_TOP(void) {$/;"	f
FPU_GetTag	src/fpu/fpu.cpp	/^Bit16u FPU_GetTag(void){$/;"	f
FPU_Init	src/fpu/fpu.cpp	/^void FPU_Init(Section*) {$/;"	f
FPU_PREP_PUSH	src/fpu/fpu_instructions.h	/^static void FPU_PREP_PUSH(void){$/;"	f
FPU_PREP_PUSH	src/fpu/fpu_instructions_x86.h	/^static void FPU_PREP_PUSH(void){$/;"	f
FPU_PUSH	src/fpu/fpu_instructions.h	/^static void FPU_PUSH(double in){$/;"	f
FPU_P_Reg	include/fpu.h	/^} FPU_P_Reg;$/;"	t	typeref:struct:__anon22
FPU_Reg	include/fpu.h	/^} FPU_Reg;$/;"	t	typeref:union:__anon19
FPU_Round	include/fpu.h	/^enum FPU_Round {$/;"	g
FPU_SET_C0	include/fpu.h	/^INLINE void FPU_SET_C0(Bitu C){$/;"	f
FPU_SET_C1	include/fpu.h	/^INLINE void FPU_SET_C1(Bitu C){$/;"	f
FPU_SET_C2	include/fpu.h	/^INLINE void FPU_SET_C2(Bitu C){$/;"	f
FPU_SET_C3	include/fpu.h	/^INLINE void FPU_SET_C3(Bitu C){$/;"	f
FPU_SET_TOP	include/fpu.h	/^INLINE void FPU_SET_TOP(Bitu val){$/;"	f
FPU_ST80	src/fpu/fpu_instructions.h	/^static void FPU_ST80(PhysPt addr,Bitu reg) {$/;"	f
FPU_SetCW	include/fpu.h	/^INLINE void FPU_SetCW(Bitu word){$/;"	f
FPU_SetTag	include/fpu.h	/^INLINE void FPU_SetTag(Bit16u tag){$/;"	f
FPU_Tag	include/fpu.h	/^enum FPU_Tag {$/;"	g
FPU_rec	include/fpu.h	/^} FPU_rec;$/;"	t	typeref:struct:__anon23
FREQ_MASK	src/hardware/fmopl.cpp	91;"	d	file:
FREQ_MASK	src/hardware/ymf262.cpp	72;"	d	file:
FREQ_SH	src/hardware/fmopl.cpp	86;"	d	file:
FREQ_SH	src/hardware/ymf262.cpp	67;"	d	file:
FROUND	src/fpu/fpu_instructions.h	/^static double FROUND(double in){$/;"	f
F_OK	include/cross.h	51;"	d
F_OK	src/cpu/core_dynrec/cross.h	46;"	d
F_OK	src/cpu/core_dynrec/save/cross.h	46;"	d
Fetchb	src/cpu/core_full/loadwrite.h	44;"	d
Fetchb	src/cpu/core_simple.cpp	106;"	d	file:
Fetchb	src/cpu/core_verysimple.cpp	96;"	d	file:
Fetchbs	src/cpu/core_full/loadwrite.h	48;"	d
Fetchbs	src/cpu/core_normal/support.h	32;"	d
Fetchd	src/cpu/core_full/loadwrite.h	46;"	d
Fetchd	src/cpu/core_simple.cpp	/^static INLINE Bit32u Fetchd() {$/;"	f	file:
Fetchd	src/cpu/core_verysimple.cpp	/^static INLINE Bit32u Fetchd() {$/;"	f	file:
Fetchds	src/cpu/core_full/loadwrite.h	50;"	d
Fetchds	src/cpu/core_normal/support.h	34;"	d
Fetchw	src/cpu/core_full/loadwrite.h	45;"	d
Fetchw	src/cpu/core_simple.cpp	/^static INLINE Bit16u Fetchw() {$/;"	f	file:
Fetchw	src/cpu/core_verysimple.cpp	/^static INLINE Bit16u Fetchw() {$/;"	f	file:
Fetchws	src/cpu/core_full/loadwrite.h	49;"	d
Fetchws	src/cpu/core_normal/support.h	33;"	d
FieldRepUCode	src/dos/scsidefs.h	/^    BYTE    FieldRepUCode;      \/\/ Field Replaceable Unit Code$/;"	m	struct:__anon123
FileClose	src/dos/dos_classes.cpp	/^void DOS_FCB::FileClose(Bit8u & _fhandle) {$/;"	f	class:DOS_FCB
FileCreate	src/dos/drive_fat.cpp	/^bool fatDrive::FileCreate(DOS_File **file, char *name, Bit16u attributes) {$/;"	f	class:fatDrive
FileCreate	src/dos/drive_iso.cpp	/^bool isoDrive::FileCreate(DOS_File **file, char *name, Bit16u attributes)$/;"	f	class:isoDrive
FileCreate	src/dos/drive_local.cpp	/^bool cdromDrive::FileCreate(DOS_File * * file,char * name,Bit16u attributes) {$/;"	f	class:cdromDrive
FileCreate	src/dos/drive_local.cpp	/^bool localDrive::FileCreate(DOS_File * * file,char * name,Bit16u attributes) {$/;"	f	class:localDrive
FileCreate	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::FileCreate(DOS_File * * file,char * name,Bit16u attributes) {$/;"	f	class:Virtual_Drive
FileExists	src/dos/drive_fat.cpp	/^bool fatDrive::FileExists(const char *name) {$/;"	f	class:fatDrive
FileExists	src/dos/drive_iso.cpp	/^bool isoDrive::FileExists(const char *name)$/;"	f	class:isoDrive
FileExists	src/dos/drive_local.cpp	/^bool localDrive::FileExists(const char* name) {$/;"	f	class:localDrive
FileExists	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::FileExists(const char* name){$/;"	f	class:Virtual_Drive
FileOpen	src/dos/dos_classes.cpp	/^void DOS_FCB::FileOpen(Bit8u _fhandle) {$/;"	f	class:DOS_FCB
FileOpen	src/dos/drive_fat.cpp	/^bool fatDrive::FileOpen(DOS_File **file, char *name, Bit32u \/*flags*\/) {$/;"	f	class:fatDrive
FileOpen	src/dos/drive_iso.cpp	/^bool isoDrive::FileOpen(DOS_File **file, char *name, Bit32u flags)$/;"	f	class:isoDrive
FileOpen	src/dos/drive_local.cpp	/^bool cdromDrive::FileOpen(DOS_File * * file,char * name,Bit32u flags) {$/;"	f	class:cdromDrive
FileOpen	src/dos/drive_local.cpp	/^bool localDrive::FileOpen(DOS_File * * file,char * name,Bit32u flags) {$/;"	f	class:localDrive
FileOpen	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::FileOpen(DOS_File * * file,char * name,Bit32u flags) {$/;"	f	class:Virtual_Drive
FileStat	src/dos/drive_fat.cpp	/^bool fatDrive::FileStat(const char * \/*name*\/, FileStat_Block *const \/*stat_block*\/) {$/;"	f	class:fatDrive
FileStat	src/dos/drive_iso.cpp	/^bool isoDrive::FileStat(const char *name, FileStat_Block *const stat_block)$/;"	f	class:isoDrive
FileStat	src/dos/drive_local.cpp	/^bool localDrive::FileStat(const char* name, FileStat_Block * const stat_block) {$/;"	f	class:localDrive
FileStat	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::FileStat(const char* name, FileStat_Block * const stat_block){$/;"	f	class:Virtual_Drive
FileStat_Block	include/dos_system.h	/^struct FileStat_Block {$/;"	s
FileUnlink	src/dos/drive_fat.cpp	/^bool fatDrive::FileUnlink(char * name) {$/;"	f	class:fatDrive
FileUnlink	src/dos/drive_iso.cpp	/^bool isoDrive::FileUnlink(char *name)$/;"	f	class:isoDrive
FileUnlink	src/dos/drive_local.cpp	/^bool cdromDrive::FileUnlink(char * name) {$/;"	f	class:cdromDrive
FileUnlink	src/dos/drive_local.cpp	/^bool localDrive::FileUnlink(char * name) {$/;"	f	class:localDrive
FileUnlink	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::FileUnlink(char * name) {$/;"	f	class:Virtual_Drive
Files	src/dos/dos_files.cpp	/^DOS_File * Files[DOS_FILES];$/;"	v
FillFlags	src/cpu/flags.cpp	/^Bitu FillFlags(void) {$/;"	f
FillFlagsNoCFOF	src/cpu/flags.cpp	/^void FillFlagsNoCFOF(void) {$/;"	f
FillTable	src/hardware/vga.cpp	/^Bit32u FillTable[16];$/;"	v
FillUp	src/hardware/mixer.cpp	/^void MixerChannel::FillUp(void) {$/;"	f	class:MixerChannel
FindCacheBlock	src/cpu/core_dyn_x86/cache.h	/^	CacheBlock * FindCacheBlock(Bitu start) {$/;"	f	class:CodePageHandler
FindCacheBlock	src/cpu/core_dynrec/cache.h	/^	CacheBlockDynRec * FindCacheBlock(Bitu start) {$/;"	f	class:CodePageHandlerDynRec
FindCacheBlock	src/cpu/core_dynrec/save/cache.h	/^	CacheBlockDynRec * FindCacheBlock(Bitu start) {$/;"	f	class:CodePageHandlerDynRec
FindCommand	src/misc/setup.cpp	/^bool CommandLine::FindCommand(unsigned int which,std::string & value) {$/;"	f	class:CommandLine
FindDirInfo	src/dos/drive_cache.cpp	/^DOS_Drive_Cache::CFileInfo* DOS_Drive_Cache::FindDirInfo(const char* path, char* expandedPath) {$/;"	f	class:DOS_Drive_Cache
FindDynReg	src/cpu/core_dyn_x86/risc_x86.h	/^static GenReg * FindDynReg(DynReg * dynreg,bool stale=false) {$/;"	f
FindEntry	src/misc/setup.cpp	/^bool CommandLine::FindEntry(char const * const name,cmd_it & it,bool neednext) {$/;"	f	class:CommandLine
FindEntryByHandle	src/dos/dos_classes.cpp	/^Bit16u DOS_PSP::FindEntryByHandle(Bit8u handle)$/;"	f	class:DOS_PSP
FindExist	src/misc/setup.cpp	/^bool CommandLine::FindExist(char const * const name,bool remove) {$/;"	f	class:CommandLine
FindFirst	src/dos/drive_cache.cpp	/^bool DOS_Drive_Cache::FindFirst(char* path, Bitu& id) {$/;"	f	class:DOS_Drive_Cache
FindFirst	src/dos/drive_fat.cpp	/^bool fatDrive::FindFirst(char *_dir, DOS_DTA &dta,bool \/*fcb_findfirst*\/) {$/;"	f	class:fatDrive
FindFirst	src/dos/drive_iso.cpp	/^bool isoDrive::FindFirst(char *dir, DOS_DTA &dta, bool fcb_findfirst)$/;"	f	class:isoDrive
FindFirst	src/dos/drive_local.cpp	/^bool cdromDrive::FindFirst(char * _dir,DOS_DTA & dta,bool fcb_findfirst) {$/;"	f	class:cdromDrive
FindFirst	src/dos/drive_local.cpp	/^bool localDrive::FindFirst(char * _dir,DOS_DTA & dta,bool fcb_findfirst) {$/;"	f	class:localDrive
FindFirst	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::FindFirst(char * _dir,DOS_DTA & dta,bool fcb_findfirst) {$/;"	f	class:Virtual_Drive
FindFreeFileEntry	src/dos/dos_classes.cpp	/^Bit16u DOS_PSP::FindFreeFileEntry(void)$/;"	f	class:DOS_PSP
FindHex	src/misc/setup.cpp	/^bool CommandLine::FindHex(char const * const name,int & value,bool remove) {$/;"	f	class:CommandLine
FindInt	src/misc/setup.cpp	/^bool CommandLine::FindInt(char const * const name,int & value,bool remove) {$/;"	f	class:CommandLine
FindNext	src/dos/drive_cache.cpp	/^bool DOS_Drive_Cache::FindNext(Bitu id, char* &result) {$/;"	f	class:DOS_Drive_Cache
FindNext	src/dos/drive_fat.cpp	/^bool fatDrive::FindNext(DOS_DTA &dta) {$/;"	f	class:fatDrive
FindNext	src/dos/drive_iso.cpp	/^bool isoDrive::FindNext(DOS_DTA &dta)$/;"	f	class:isoDrive
FindNext	src/dos/drive_local.cpp	/^bool localDrive::FindNext(DOS_DTA & dta) {$/;"	f	class:localDrive
FindNext	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::FindNext(DOS_DTA & dta) {$/;"	f	class:Virtual_Drive
FindNextInternal	src/dos/drive_fat.cpp	/^bool fatDrive::FindNextInternal(Bit32u dirClustNumber, DOS_DTA &dta, direntry *foundEntry) {$/;"	f	class:fatDrive
FindString	src/misc/setup.cpp	/^bool CommandLine::FindString(char const * const name,std::string & value,bool remove) {$/;"	f	class:CommandLine
FindStringBegin	src/misc/setup.cpp	/^bool CommandLine::FindStringBegin(char const* const begin,std::string & value, bool remove) {$/;"	f	class:CommandLine
FindStringRemain	src/misc/setup.cpp	/^bool CommandLine::FindStringRemain(char const * const name,std::string & value) {$/;"	f	class:CommandLine
FindVar	src/debug/debug.cpp	/^CDebugVar* CDebugVar::FindVar(PhysPt pt)$/;"	f	class:CDebugVar
Find_Type_And_Opl	src/hardware/sblaster.cpp	/^	void Find_Type_And_Opl(Section_prop* config,SB_TYPES& type, OPL_Mode& opl_mode){$/;"	f	class:SBLASTER	file:
FinishSetMode	src/ints/int10_modes.cpp	/^static void FinishSetMode(bool clearmem) {$/;"	f	file:
FinishSetMode_ET3K	src/hardware/vga_tseng.cpp	/^void FinishSetMode_ET3K(Bitu crtc_base, VGA_ModeExtraData* modeData) {$/;"	f
FinishSetMode_ET4K	src/hardware/vga_tseng.cpp	/^void FinishSetMode_ET4K(Bitu crtc_base, VGA_ModeExtraData* modeData) {$/;"	f
FinishSetMode_PVGA1A	src/hardware/vga_paradise.cpp	/^void FinishSetMode_PVGA1A(Bitu \/*crtc_base*\/, VGA_ModeExtraData* modeData) {$/;"	f
FirstTrack	src/platform/visualc/ntddcdrm.h	/^  UCHAR  FirstTrack;$/;"	m	struct:_CDROM_TOC
FixedPoint	src/misc/fixed.cpp	/^FixedPoint::FixedPoint(bool bInternal, long nVal)$/;"	f	class:FixedPoint
FixedPoint	src/misc/fixed.cpp	/^FixedPoint::FixedPoint(const FixedPoint& fixedVal)$/;"	f	class:FixedPoint
FixedPoint	src/misc/fixed.cpp	/^FixedPoint::FixedPoint(const FixedPoint* fixedVal)$/;"	f	class:FixedPoint
FixedPoint	src/misc/fixed.cpp	/^FixedPoint::FixedPoint(double floatVal)$/;"	f	class:FixedPoint
FixedPoint	src/misc/fixed.cpp	/^FixedPoint::FixedPoint(float floatVal)$/;"	f	class:FixedPoint
FixedPoint	src/misc/fixed.cpp	/^FixedPoint::FixedPoint(int nVal)$/;"	f	class:FixedPoint
FixedPoint	src/misc/fixed.cpp	/^FixedPoint::FixedPoint(long long nVal)$/;"	f	class:FixedPoint
FixedPoint	src/misc/fixed.cpp	/^FixedPoint::FixedPoint(long nVal)$/;"	f	class:FixedPoint
FixedPoint	src/misc/fixed.cpp	/^FixedPoint::FixedPoint(short nVal)$/;"	f	class:FixedPoint
FixedPoint	src/misc/fixed.cpp	/^FixedPoint::FixedPoint(void)$/;"	f	class:FixedPoint
FixedPoint	src/misc/fixed.h	/^class FixedPoint$/;"	c
FlagReadOnlyMedium	src/dos/drive_local.cpp	/^void localFile::FlagReadOnlyMedium(void) {$/;"	f	class:localFile
FlushBuffer	src/hardware/serialport/misc_util.cpp	/^void TCPClientSocket::FlushBuffer() {$/;"	f	class:TCPClientSocket
Font	src/libs/gui_tk/gui_tk.h	/^	Font() {};$/;"	f	class:GUI::Font
Font	src/libs/gui_tk/gui_tk.h	/^class Font {$/;"	c	namespace:GUI
FontMask	src/hardware/vga_draw.cpp	/^static Bit32u FontMask[2]={0xffffffff,0x0};$/;"	v	file:
ForceDynReg	src/cpu/core_dyn_x86/risc_x86.h	/^static GenReg * ForceDynReg(GenReg * genreg,DynReg * dynreg) {$/;"	f
ForcedKeyboard	src/gui/render_16.h	55;"	d
ForcedKeyboard	src/gui/render_32.h	55;"	d
ForcedKeyboard	src/gui/render_8.h	58;"	d
ForcedKeyboard	src/gui/render_9.h	58;"	d
Format	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Format : 4;$/;"	m	struct:_CDROM_READ_TOC_EX
Format	src/platform/visualc/ntddcdrm.h	/^  UCHAR Format;$/;"	m	struct:_CDROM_SUB_Q_DATA_FORMAT
FormatCode	src/platform/visualc/ntddcdrm.h	/^  UCHAR  FormatCode;$/;"	m	struct:_SUB_Q_CURRENT_POSITION
FormatCode	src/platform/visualc/ntddcdrm.h	/^  UCHAR  FormatCode;$/;"	m	struct:_SUB_Q_MEDIA_CATALOG_NUMBER
FormatCode	src/platform/visualc/ntddcdrm.h	/^  UCHAR  FormatCode;$/;"	m	struct:_SUB_Q_TRACK_ISRC
FormatNumber	src/shell/shell_cmds.cpp	/^static void FormatNumber(Bitu num,char * buf) {$/;"	f	file:
ForwardPIT	src/hardware/pcspeaker.cpp	/^static void ForwardPIT(float newindex) {$/;"	f	file:
Frame	src/libs/gui_tk/gui_tk.h	/^	Frame(Window *parent, int x, int y, int w, int h) : BorderedWindow(parent,x,y,w,h,5,5,5,5), ActionEventSource("GUI::Frame"), selected(0) {}$/;"	f	class:GUI::Frame
Frame	src/libs/gui_tk/gui_tk.h	/^	template <typename T> Frame(Window *parent, int x, int y, int w, int h, const T text) :$/;"	f	class:GUI::Frame
Frame	src/libs/gui_tk/gui_tk.h	/^class Frame : public BorderedWindow, public ActionEventSource, protected ActionEventSource_Callback {$/;"	c	namespace:GUI
FrameBlock	src/libs/zmbv/zmbv.h	/^	struct FrameBlock {$/;"	s	class:VideoCodec
FreeDirIterator	src/dos/drive_iso.cpp	/^void isoDrive::FreeDirIterator(const int dirIterator)$/;"	f	class:isoDrive
FullData	src/cpu/core_full/support.h	/^struct FullData {$/;"	s
Function_wrapper	include/setup.h	/^		Function_wrapper(SectionFunction const _fun,bool _ch){$/;"	f	struct:Section::Function_wrapper
Function_wrapper	include/setup.h	/^	struct Function_wrapper {$/;"	s	class:Section
G	src/libs/gui_tk/gui_tk.h	/^static inline int G(RGB val) { return ((val&Color::GreenMask)>>Color::GreenShift); }$/;"	f	namespace:GUI::Color
G1	src/debug/disasm_tables.h	/^	G1,G2,G3b,G3v,G4,G5,$/;"	e	enum:__anon111
G1_Table	src/debug/disasm_tables.h	/^static char * G1_Table[8]={"add ","or ","adc ","sbb ","and ","sub ","xor ","cmp "};$/;"	v
G2	src/debug/disasm_tables.h	/^	G1,G2,G3b,G3v,G4,G5,$/;"	e	enum:__anon111
G2_Table	src/debug/disasm_tables.h	/^static char * G2_Table[8]={"rol ","ror ","rcl ","rcr ","shl ","shr ","sal ","sar "};$/;"	v
G3b	src/debug/disasm_tables.h	/^	G1,G2,G3b,G3v,G4,G5,$/;"	e	enum:__anon111
G3b_Table	src/debug/disasm_tables.h	/^static Dentry G3b_Table[8]={$/;"	v
G3v	src/debug/disasm_tables.h	/^	G1,G2,G3b,G3v,G4,G5,$/;"	e	enum:__anon111
G3v_Table	src/debug/disasm_tables.h	/^static Dentry G3v_Table[8]={$/;"	v
G4	src/debug/disasm_tables.h	/^	G1,G2,G3b,G3v,G4,G5,$/;"	e	enum:__anon111
G4_Table	src/debug/disasm_tables.h	/^static char * G4_Table[8]={$/;"	v
G5	src/debug/disasm_tables.h	/^	G1,G2,G3b,G3v,G4,G5,$/;"	e	enum:__anon111
G5_Table	src/debug/disasm_tables.h	/^static Dentry G5_Table[8]={$/;"	v
GCC_ATTRIBUTE	config.h	239;"	d
GCC_ATTRIBUTE	config.h	241;"	d
GCC_ATTRIBUTE	src/platform/visualc/config.h	58;"	d
GCC_UNLIKELY	config.h	245;"	d
GCC_UNLIKELY	config.h	247;"	d
GCC_UNLIKELY	src/platform/visualc/config.h	59;"	d
GDTDescriptorTable	include/cpu.h	/^class GDTDescriptorTable : public DescriptorTable {$/;"	c
GEMMIS_VERSION	src/ints/ems.cpp	44;"	d	file:
GEMMIS_seg	src/ints/ems.cpp	/^static Bit16u GEMMIS_seg; $/;"	v	file:
GETFLAG	include/regs.h	49;"	d
GETFLAGBOOL	include/regs.h	50;"	d
GETFLAG_IOPL	include/regs.h	52;"	d
GETIP	src/cpu/core_normal/prefix_none.h	/^		CPU_HLT(GETIP);$/;"	v
GETIP	src/cpu/core_normal/verysimple_prefix_none.h	/^		CPU_HLT(GETIP);$/;"	v
GETIP	src/cpu/core_simple.cpp	98;"	d	file:
GETIP	src/cpu/core_verysimple.cpp	88;"	d	file:
GET_FUNCTION	include/modules.h	103;"	d
GFX_CAN_15	include/video.h	42;"	d
GFX_CAN_16	include/video.h	43;"	d
GFX_CAN_32	include/video.h	44;"	d
GFX_CAN_8	include/video.h	41;"	d
GFX_CAN_RANDOM	include/video.h	56;"	d
GFX_CallBackFunctions_t	include/video.h	/^} GFX_CallBackFunctions_t;$/;"	t	typeref:enum:__anon61
GFX_CallBackRedraw	include/video.h	/^	GFX_CallBackRedraw$/;"	e	enum:__anon61
GFX_CallBackReset	include/video.h	/^	GFX_CallBackReset,$/;"	e	enum:__anon61
GFX_CallBackStop	include/video.h	/^	GFX_CallBackStop,$/;"	e	enum:__anon61
GFX_CallBack_t	include/video.h	/^typedef void (*GFX_CallBack_t)( GFX_CallBackFunctions_t function );$/;"	t
GFX_HARDWARE	include/video.h	54;"	d
GFX_LOVE_15	include/video.h	47;"	d
GFX_LOVE_16	include/video.h	48;"	d
GFX_LOVE_32	include/video.h	49;"	d
GFX_LOVE_8	include/video.h	46;"	d
GFX_PalEntry	include/video.h	/^struct GFX_PalEntry {$/;"	s
GFX_REGS	src/ints/int10_modes.cpp	35;"	d	file:
GFX_RGBONLY	include/video.h	51;"	d
GFX_SCALING	include/video.h	53;"	d
GRP2B	src/cpu/arminst.h	825;"	d
GRP2B	src/cpu/instructions.h	821;"	d
GRP2D	src/cpu/arminst.h	892;"	d
GRP2D	src/cpu/instructions.h	888;"	d
GRP2W	src/cpu/arminst.h	859;"	d
GRP2W	src/cpu/instructions.h	855;"	d
GUI	src/libs/gui_tk/gui_tk.cpp	/^namespace GUI {$/;"	n	file:
GUI	src/libs/gui_tk/gui_tk.h	/^namespace GUI {$/;"	n
GUI__TOOLKIT_H	src/libs/gui_tk/gui_tk.h	108;"	d
G_CS	src/cpu/core_dyn_x86.cpp	/^	G_ES,G_CS,G_SS,G_DS,G_FS,G_GS,$/;"	e	enum:__anon93	file:
G_CYCLES	src/cpu/core_dyn_x86.cpp	/^	G_EA,G_STACK,G_CYCLES,$/;"	e	enum:__anon93	file:
G_DS	src/cpu/core_dyn_x86.cpp	/^	G_ES,G_CS,G_SS,G_DS,G_FS,G_GS,$/;"	e	enum:__anon93	file:
G_Descriptor	include/cpu.h	/^struct G_Descriptor {$/;"	s
G_EA	src/cpu/core_dyn_x86.cpp	/^	G_EA,G_STACK,G_CYCLES,$/;"	e	enum:__anon93	file:
G_EAX	src/cpu/core_dyn_x86.cpp	/^	G_EAX,G_ECX,G_EDX,G_EBX,$/;"	e	enum:__anon93	file:
G_EBP	src/cpu/core_dyn_x86.cpp	/^	G_ESP,G_EBP,G_ESI,G_EDI,$/;"	e	enum:__anon93	file:
G_EBX	src/cpu/core_dyn_x86.cpp	/^	G_EAX,G_ECX,G_EDX,G_EBX,$/;"	e	enum:__anon93	file:
G_ECX	src/cpu/core_dyn_x86.cpp	/^	G_EAX,G_ECX,G_EDX,G_EBX,$/;"	e	enum:__anon93	file:
G_EDI	src/cpu/core_dyn_x86.cpp	/^	G_ESP,G_EBP,G_ESI,G_EDI,$/;"	e	enum:__anon93	file:
G_EDX	src/cpu/core_dyn_x86.cpp	/^	G_EAX,G_ECX,G_EDX,G_EBX,$/;"	e	enum:__anon93	file:
G_EIP	src/cpu/core_dyn_x86.cpp	/^	G_FLAGS,G_NEWESP,G_EIP,$/;"	e	enum:__anon93	file:
G_ES	src/cpu/core_dyn_x86.cpp	/^	G_ES,G_CS,G_SS,G_DS,G_FS,G_GS,$/;"	e	enum:__anon93	file:
G_ESI	src/cpu/core_dyn_x86.cpp	/^	G_ESP,G_EBP,G_ESI,G_EDI,$/;"	e	enum:__anon93	file:
G_ESP	src/cpu/core_dyn_x86.cpp	/^	G_ESP,G_EBP,G_ESI,G_EDI,$/;"	e	enum:__anon93	file:
G_EXIT	src/cpu/core_dyn_x86.cpp	/^	G_EXIT,$/;"	e	enum:__anon93	file:
G_FLAGS	src/cpu/core_dyn_x86.cpp	/^	G_FLAGS,G_NEWESP,G_EIP,$/;"	e	enum:__anon93	file:
G_FS	src/cpu/core_dyn_x86.cpp	/^	G_ES,G_CS,G_SS,G_DS,G_FS,G_GS,$/;"	e	enum:__anon93	file:
G_GS	src/cpu/core_dyn_x86.cpp	/^	G_ES,G_CS,G_SS,G_DS,G_FS,G_GS,$/;"	e	enum:__anon93	file:
G_MAX	src/cpu/core_dyn_x86.cpp	/^	G_MAX,$/;"	e	enum:__anon93	file:
G_NEWESP	src/cpu/core_dyn_x86.cpp	/^	G_FLAGS,G_NEWESP,G_EIP,$/;"	e	enum:__anon93	file:
G_SHIFT	src/cpu/core_dyn_x86.cpp	/^	G_TMPB,G_TMPW,G_SHIFT,$/;"	e	enum:__anon93	file:
G_SS	src/cpu/core_dyn_x86.cpp	/^	G_ES,G_CS,G_SS,G_DS,G_FS,G_GS,$/;"	e	enum:__anon93	file:
G_STACK	src/cpu/core_dyn_x86.cpp	/^	G_EA,G_STACK,G_CYCLES,$/;"	e	enum:__anon93	file:
G_TMPB	src/cpu/core_dyn_x86.cpp	/^	G_TMPB,G_TMPW,G_SHIFT,$/;"	e	enum:__anon93	file:
G_TMPW	src/cpu/core_dyn_x86.cpp	/^	G_TMPB,G_TMPW,G_SHIFT,$/;"	e	enum:__anon93	file:
Gb	src/debug/disasm_tables.h	/^	Gb,Gv,$/;"	e	enum:__anon111
GenReg	src/cpu/core_dyn_x86/risc_x86.h	/^	GenReg(Bit8u _index) {$/;"	f	class:GenReg
GenReg	src/cpu/core_dyn_x86/risc_x86.h	/^class GenReg {$/;"	c
GenReg32	include/regs.h	/^union GenReg32 {$/;"	u
Generate	src/hardware/adlib.cpp	/^		virtual void Generate( MixerChannel* chan, Bitu samples ) {$/;"	f	struct:OPL2::Handler
Generate	src/hardware/adlib.cpp	/^		virtual void Generate( MixerChannel* chan, Bitu samples ) {$/;"	f	struct:THEOPL3::Handler
GenerateDMASound	src/hardware/sblaster.cpp	/^static void GenerateDMASound(Bitu size) {$/;"	f	file:
GetAbstractName	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetAbstractName(Bit16u drive, PhysPt data) { $/;"	f	class:CMscdex
GetActivityCount	src/gui/sdl_mapper.cpp	/^	virtual Bitu GetActivityCount(void) {$/;"	f	class:CContinuousEvent
GetActivityCount	src/gui/sdl_mapper.cpp	/^	virtual Bitu GetActivityCount(void) {$/;"	f	class:CJAxisEvent
GetAddress	src/debug/debug.cpp	/^Bit32u GetAddress(Bit16u seg, Bit32u offset)$/;"	f
GetAdr	src/debug/debug.cpp	/^	PhysPt	GetAdr (void) { return adr;  };$/;"	f	class:CDebugVar
GetAttr	src/dos/dos_classes.cpp	/^void DOS_FCB::GetAttr(Bit8u& attr) {$/;"	f	class:DOS_FCB
GetAudioStatus	src/dos/cdrom.cpp	/^bool CDROM_Interface_Fake :: GetAudioStatus	(bool& playing, bool& pause) $/;"	f	class:CDROM_Interface_Fake
GetAudioStatus	src/dos/cdrom.cpp	/^bool CDROM_Interface_SDL::GetAudioStatus (bool& playing, bool& pause)$/;"	f	class:CDROM_Interface_SDL
GetAudioStatus	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::GetAudioStatus(bool& playing, bool& pause)$/;"	f	class:CDROM_Interface_Aspi
GetAudioStatus	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::GetAudioStatus(bool& playing, bool& pause)$/;"	f	class:CDROM_Interface_Image
GetAudioStatus	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::GetAudioStatus(bool& playing, bool& pause) {$/;"	f	class:CDROM_Interface_Ioctl
GetAudioStatus	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetAudioStatus(Bit8u subUnit, bool& playing, bool& pause, TMSF& start, TMSF& end)$/;"	f	class:CMscdex
GetAudioSub	src/dos/cdrom.cpp	/^bool CDROM_Interface_Fake :: GetAudioSub (unsigned char& attr, unsigned char& track, unsigned char& index, TMSF& relPos, TMSF& absPos)$/;"	f	class:CDROM_Interface_Fake
GetAudioSub	src/dos/cdrom.cpp	/^bool CDROM_Interface_SDL::GetAudioSub (unsigned char& attr, unsigned char& track, unsigned char& index, TMSF& relPos, TMSF& absPos)$/;"	f	class:CDROM_Interface_SDL
GetAudioSub	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::GetAudioSub(unsigned char& attr, unsigned char& track, unsigned char& index, TMSF& relPos, TMSF& absPos)$/;"	f	class:CDROM_Interface_Aspi
GetAudioSub	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::GetAudioSub(unsigned char& attr, unsigned char& track, unsigned char& index, TMSF& relPos, TMSF& absPos)$/;"	f	class:CDROM_Interface_Image
GetAudioSub	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::GetAudioSub(unsigned char& attr, unsigned char& track, unsigned char& index, TMSF& relPos, TMSF& absPos) {$/;"	f	class:CDROM_Interface_Ioctl
GetAudioTrackInfo	src/dos/cdrom.cpp	/^bool CDROM_Interface_Fake :: GetAudioTrackInfo	(int track, TMSF& start, unsigned char& attr)$/;"	f	class:CDROM_Interface_Fake
GetAudioTrackInfo	src/dos/cdrom.cpp	/^bool CDROM_Interface_SDL::GetAudioTrackInfo (int track, TMSF& start, unsigned char& attr)$/;"	f	class:CDROM_Interface_SDL
GetAudioTrackInfo	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::GetAudioTrackInfo	(int track, TMSF& start, unsigned char& attr)$/;"	f	class:CDROM_Interface_Aspi
GetAudioTrackInfo	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::GetAudioTrackInfo(int track, TMSF& start, unsigned char& attr)$/;"	f	class:CDROM_Interface_Image
GetAudioTrackInfo	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::GetAudioTrackInfo(int track, TMSF& start, unsigned char& attr) {$/;"	f	class:CDROM_Interface_Ioctl
GetAudioTracks	src/dos/cdrom.cpp	/^bool CDROM_Interface_Fake :: GetAudioTracks	(int& stTrack, int& end, TMSF& leadOut)$/;"	f	class:CDROM_Interface_Fake
GetAudioTracks	src/dos/cdrom.cpp	/^bool CDROM_Interface_SDL::GetAudioTracks	(int& stTrack, int& end, TMSF& leadOut)$/;"	f	class:CDROM_Interface_SDL
GetAudioTracks	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::GetAudioTracks(int& stTrack, int& endTrack, TMSF& leadOut) $/;"	f	class:CDROM_Interface_Aspi
GetAudioTracks	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::GetAudioTracks(int& stTrack, int& end, TMSF& leadOut)$/;"	f	class:CDROM_Interface_Image
GetAudioTracks	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::GetAudioTracks(int& stTrack, int& endTrack, TMSF& leadOut) {$/;"	f	class:CDROM_Interface_Ioctl
GetAudioTracksAll	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::GetAudioTracksAll(void) {$/;"	f	class:CDROM_Interface_Ioctl
GetBase	include/cpu.h	/^	PhysPt	GetBase			(void)			{ return table_base;	}$/;"	f	class:DescriptorTable
GetBase	include/cpu.h	/^	PhysPt GetBase (void) { $/;"	f	class:Descriptor
GetBiosType	src/ints/bios_disk.cpp	/^Bit8u imageDisk::GetBiosType(void) {$/;"	f	class:imageDisk
GetCDInfo	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetCDInfo(Bit8u subUnit, Bit8u& tr1, Bit8u& tr2, TMSF& leadOut)$/;"	f	class:CMscdex
GetChannel	include/dma.h	/^	DmaChannel * GetChannel(Bit8u chan) {$/;"	f	class:DmaController
GetClock_ET3K	src/hardware/vga_tseng.cpp	/^Bitu GetClock_ET3K() {$/;"	f
GetClock_ET4K	src/hardware/vga_tseng.cpp	/^Bitu GetClock_ET4K() {$/;"	f
GetClock_PVGA1A	src/hardware/vga_paradise.cpp	/^Bitu GetClock_PVGA1A() {$/;"	f
GetCopyrightName	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetCopyrightName(Bit16u drive, PhysPt data) {	$/;"	f	class:CMscdex
GetCount	src/misc/setup.cpp	/^unsigned int CommandLine::GetCount(void) {$/;"	f	class:CommandLine
GetCueFrame	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::GetCueFrame(int &frames, istream &in)$/;"	f	class:CDROM_Interface_Image
GetCueKeyword	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::GetCueKeyword(string &keyword, istream &in)$/;"	f	class:CDROM_Interface_Image
GetCueString	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::GetCueString(string &str, istream &in)$/;"	f	class:CDROM_Interface_Image
GetCurrentPos	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetCurrentPos(Bit8u subUnit, TMSF& pos)$/;"	f	class:CMscdex
GetDMAChannel	src/hardware/dma.cpp	/^DmaChannel * GetDMAChannel(Bit8u chan) {$/;"	f
GetDTA	include/dos_inc.h	/^	Bit32u GetDTA(void) { return (Bit32u)sGet(sSDA,current_dta); }$/;"	f	class:DOS_SDA
GetDefaultBuffer	src/dos/dos_mscdex.cpp	/^PhysPt CMscdex::GetDefaultBuffer(void) {$/;"	f	class:CMscdex
GetDescriptor	include/cpu.h	/^	bool GetDescriptor	(Bitu selector, Descriptor& desc) {$/;"	f	class:DescriptorTable
GetDescriptor	include/cpu.h	/^	bool GetDescriptor(Bitu selector, Descriptor& desc) {$/;"	f	class:GDTDescriptorTable
GetDescriptorInfo	src/debug/debug.cpp	/^bool GetDescriptorInfo(char* selname, char* out1, char* out2)$/;"	f
GetDeviceChain	src/dos/dos_classes.cpp	/^Bit32u DOS_InfoBlock::GetDeviceChain(void) {$/;"	f	class:DOS_InfoBlock
GetDeviceStatus	src/dos/dos_mscdex.cpp	/^Bit32u CMscdex::GetDeviceStatus(Bit8u subUnit)$/;"	f	class:CMscdex
GetDirID	include/dos_inc.h	/^	Bit16u	GetDirID(void)				{ return (Bit16u)sGet(sDTA,dirID); };$/;"	f	class:DOS_DTA
GetDirIDCluster	include/dos_inc.h	/^	Bit16u	GetDirIDCluster(void)		{ return (Bit16u)sGet(sDTA,dirCluster); };$/;"	f	class:DOS_DTA
GetDirIterator	src/dos/drive_iso.cpp	/^int isoDrive::GetDirIterator(const isoDirEntry* de)$/;"	f	class:isoDrive
GetDirectoryEntry	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetDirectoryEntry(Bit16u drive, bool copyFlag, PhysPt pathname, PhysPt buffer, Bit16u& error)$/;"	f	class:CMscdex
GetDocumentationName	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetDocumentationName(Bit16u drive, PhysPt data) { $/;"	f	class:CMscdex
GetDosDriveNumber	src/ints/bios_disk.cpp	/^static Bitu GetDosDriveNumber(Bitu biosNum) {$/;"	f	file:
GetDrive	include/dos_inc.h	/^	Bit8u GetDrive(void) { return (Bit8u)sGet(sSDA,current_drive); }$/;"	f	class:DOS_SDA
GetDrive	include/dos_system.h	/^	Bit8u GetDrive(void) { return hdrive;}$/;"	f	class:DOS_File
GetDrive	src/dos/dos_classes.cpp	/^Bit8u DOS_FCB::GetDrive(void) {$/;"	f	class:DOS_FCB
GetDriverInfo	src/dos/dos_mscdex.cpp	/^void CMscdex::GetDriverInfo	(PhysPt data) {$/;"	f	class:CMscdex
GetDrives	src/dos/dos_mscdex.cpp	/^void CMscdex::GetDrives(PhysPt data)$/;"	f	class:CMscdex
GetEADirect	src/cpu/core_normal/table_ea.h	177;"	d
GetEAHandler	src/cpu/core_simple.cpp	/^typedef PhysPt (*GetEAHandler)(void);$/;"	t	file:
GetEAHandler	src/cpu/core_verysimple.cpp	/^typedef PhysPt (*GetEAHandler)(void);$/;"	t	file:
GetEAa	src/cpu/core_normal/helpers.h	20;"	d
GetEArb	src/cpu/modrm.h	55;"	d
GetEArd	src/cpu/modrm.h	61;"	d
GetEArw	src/cpu/modrm.h	58;"	d
GetEnvCount	src/misc/programs.cpp	/^Bitu Program::GetEnvCount(void) {$/;"	f	class:Program
GetEnvNum	src/misc/programs.cpp	/^bool Program::GetEnvNum(Bitu num,std::string & result) {$/;"	f	class:Program
GetEnvStr	src/misc/programs.cpp	/^bool Program::GetEnvStr(const char * entry,std::string & result) {$/;"	f	class:Program
GetEnvironment	include/dos_inc.h	/^	Bit16u	GetEnvironment		(void)					{ return (Bit16u)sGet(sPSP,environment);	};$/;"	f	class:DOS_PSP
GetExpandName	src/dos/drive_cache.cpp	/^char* DOS_Drive_Cache::GetExpandName(const char* path)$/;"	f	class:DOS_Drive_Cache
GetFileAttr	src/dos/drive_fat.cpp	/^bool fatDrive::GetFileAttr(char *name, Bit16u *attr) {$/;"	f	class:fatDrive
GetFileAttr	src/dos/drive_iso.cpp	/^bool isoDrive::GetFileAttr(char *name, Bit16u *attr)$/;"	f	class:isoDrive
GetFileAttr	src/dos/drive_local.cpp	/^bool cdromDrive::GetFileAttr(char * name,Bit16u * attr) {$/;"	f	class:cdromDrive
GetFileAttr	src/dos/drive_local.cpp	/^bool localDrive::GetFileAttr(char * name,Bit16u * attr) {$/;"	f	class:localDrive
GetFileAttr	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::GetFileAttr(char * name,Bit16u * attr) {$/;"	f	class:Virtual_Drive
GetFileHandle	src/dos/dos_classes.cpp	/^Bit8u DOS_PSP::GetFileHandle(Bit16u index) $/;"	f	class:DOS_PSP
GetFileName	include/dos_inc.h	/^	void GetFileName(char * const _name) { MEM_BlockRead(pt+offsetof(sMCB,filename),_name,8);_name[8]=0;}$/;"	f	class:DOS_MCB
GetFileName	include/programs.h	/^	const char * GetFileName(){ return file_name.c_str();}$/;"	f	class:CommandLine
GetFirstDrive	src/dos/dos_mscdex.cpp	/^	Bit16u		GetFirstDrive		(void)	{ return dinfo[0].drive; };$/;"	f	class:CMscdex
GetFreeID	src/dos/drive_cache.cpp	/^Bit16u DOS_Drive_Cache::GetFreeID(CFileInfo* dir)$/;"	f	class:DOS_Drive_Cache
GetHexValue	src/debug/debug.cpp	/^Bit32u GetHexValue(char* str, char*& hex)$/;"	f
GetHostAdapter	src/dos/cdrom_aspi_win32.cpp	/^BYTE CDROM_Interface_Aspi::GetHostAdapter(char* hardwareID)$/;"	f	class:CDROM_Interface_Aspi
GetHostReadPt	src/cpu/core_dyn_x86/cache.h	/^	HostPt GetHostReadPt(Bitu phys_page) { $/;"	f	class:CodePageHandler
GetHostReadPt	src/cpu/core_dynrec/cache.h	/^	HostPt GetHostReadPt(Bitu phys_page) { $/;"	f	class:CodePageHandlerDynRec
GetHostReadPt	src/cpu/core_dynrec/save/cache.h	/^	HostPt GetHostReadPt(Bitu phys_page) { $/;"	f	class:CodePageHandlerDynRec
GetHostReadPt	src/cpu/paging.cpp	/^HostPt PageHandler::GetHostReadPt(Bitu \/*phys_page*\/) {$/;"	f	class:PageHandler
GetHostReadPt	src/hardware/memory.cpp	/^	HostPt GetHostReadPt(Bitu phys_page) {$/;"	f	class:RAMPageHandler
GetHostReadPt	src/hardware/vga_memory.cpp	/^	HostPt GetHostReadPt( Bitu phys_page ) {$/;"	f	class:VGA_LFB_Handler
GetHostReadPt	src/hardware/vga_memory.cpp	/^	HostPt GetHostReadPt(Bitu phys_page) {$/;"	f	class:VGA_Map_Handler
GetHostReadPt	src/hardware/vga_memory.cpp	/^	HostPt GetHostReadPt(Bitu phys_page) {$/;"	f	class:VGA_PCJR_Handler
GetHostReadPt	src/hardware/vga_memory.cpp	/^	HostPt GetHostReadPt(Bitu phys_page) {$/;"	f	class:VGA_TANDY_PageHandler
GetHostWritePt	src/cpu/core_dyn_x86/cache.h	/^	HostPt GetHostWritePt(Bitu phys_page) { $/;"	f	class:CodePageHandler
GetHostWritePt	src/cpu/core_dynrec/cache.h	/^	HostPt GetHostWritePt(Bitu phys_page) { $/;"	f	class:CodePageHandlerDynRec
GetHostWritePt	src/cpu/core_dynrec/save/cache.h	/^	HostPt GetHostWritePt(Bitu phys_page) { $/;"	f	class:CodePageHandlerDynRec
GetHostWritePt	src/cpu/paging.cpp	/^HostPt PageHandler::GetHostWritePt(Bitu \/*phys_page*\/) {$/;"	f	class:PageHandler
GetHostWritePt	src/hardware/memory.cpp	/^	HostPt GetHostWritePt(Bitu phys_page) {$/;"	f	class:RAMPageHandler
GetHostWritePt	src/hardware/vga_memory.cpp	/^	HostPt GetHostWritePt( Bitu phys_page ) {$/;"	f	class:VGA_LFB_Handler
GetHostWritePt	src/hardware/vga_memory.cpp	/^	HostPt GetHostWritePt(Bitu phys_page) {$/;"	f	class:VGA_Map_Handler
GetHostWritePt	src/hardware/vga_memory.cpp	/^	HostPt GetHostWritePt(Bitu phys_page) {$/;"	f	class:VGA_PCJR_Handler
GetHostWritePt	src/hardware/vga_memory.cpp	/^	HostPt GetHostWritePt(Bitu phys_page) {$/;"	f	class:VGA_TANDY_PageHandler
GetIOCTLAdapter	src/dos/cdrom_aspi_win32.cpp	/^void CDROM_Interface_Aspi::GetIOCTLAdapter(HANDLE hF,int * iDA,int * iDT,int * iDL)$/;"	f	class:CDROM_Interface_Aspi
GetIP	src/cpu/core_full/loadwrite.h	3;"	d
GetInfo	src/dos/drives.cpp	/^char * DOS_Drive::GetInfo(void) {$/;"	f	class:DOS_Drive
GetInfo	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::GetInfo(ICINFO* icinfo, DWORD dwSize) {$/;"	f	class:CodecInst
GetInformation	src/dos/dev_con.h	/^Bit16u device_CON::GetInformation(void) {$/;"	f	class:device_CON
GetInformation	src/dos/dos_devices.cpp	/^	Bit16u GetInformation(void) { return 0x80A0; }$/;"	f	class:device_LPT1
GetInformation	src/dos/dos_devices.cpp	/^	virtual Bit16u GetInformation(void) { return 0x8084; }$/;"	f	class:device_NUL
GetInformation	src/dos/dos_devices.cpp	/^Bit16u DOS_Device::GetInformation(void) { $/;"	f	class:DOS_Device
GetInformation	src/dos/dos_mscdex.cpp	/^	Bit16u GetInformation(void){return 0xc880;}$/;"	f	class:device_MSCDEX
GetInformation	src/dos/drive_fat.cpp	/^Bit16u fatFile::GetInformation(void) {$/;"	f	class:fatFile
GetInformation	src/dos/drive_iso.cpp	/^Bit16u isoFile::GetInformation(void)$/;"	f	class:isoFile
GetInformation	src/dos/drive_local.cpp	/^Bit16u localFile::GetInformation(void) {$/;"	f	class:localFile
GetInformation	src/dos/drive_virtual.cpp	/^Bit16u Virtual_File::GetInformation(void) {$/;"	f	class:Virtual_File
GetInformation	src/hardware/serialport/serialport.cpp	/^Bit16u device_COM::GetInformation(void) {$/;"	f	class:device_COM
GetInformation	src/ints/ems.cpp	/^	Bit16u GetInformation(void){return 0xc080;}$/;"	f	class:device_EMM
GetInputBitDepth	src/libs/zmbv/zmbv_vfw.cpp	/^static int GetInputBitDepth(const BITMAPINFOHEADER *lpbiIn) {$/;"	f	file:
GetInt22	include/dos_inc.h	/^	RealPt	GetInt22			(void)					{ return sGet(sPSP,int_22);			};$/;"	f	class:DOS_PSP
GetIntNr	src/debug/debug.cpp	/^	Bit8u					GetIntNr		(void)						{ if (GetType()==BKPNT_INTERRUPT)	return intNr;		else return 0; };$/;"	f	class:CBreakpoint
GetIt	include/dos_inc.h	/^	INLINE Bitu GetIt(Bitu size,PhysPt addr) {$/;"	f	class:MemStruct
GetKeyCode	src/gui/sdl_mapper.cpp	/^Bitu GetKeyCode(SDL_keysym keysym) {$/;"	f
GetLabel	include/dos_system.h	/^	char*		GetLabel			(void) { return label; };$/;"	f	class:DOS_Drive_Cache
GetLabel	include/dos_system.h	/^	virtual char const * GetLabel(){return dirCache.GetLabel();};$/;"	f	class:DOS_Drive
GetLabel	src/dos/drives.h	/^	virtual char const* GetLabel(void) {return discLabel;};$/;"	f	class:isoDrive
GetLimit	include/cpu.h	/^	Bitu	GetLimit		(void)			{ return table_limit;	}$/;"	f	class:DescriptorTable
GetLimit	include/cpu.h	/^	Bitu GetLimit (void) {$/;"	f	class:Descriptor
GetLocation	src/debug/debug.cpp	/^	PhysPt					GetLocation		(void)						{ if (GetType()!=BKPNT_INTERRUPT)	return location;	else return 0; };$/;"	f	class:CBreakpoint
GetLong	src/misc/fixed.cpp	/^long FixedPoint::GetLong(void)$/;"	f	class:FixedPoint
GetLongName	src/dos/drive_cache.cpp	/^Bits DOS_Drive_Cache::GetLongName(CFileInfo* curDir, char* shortName)$/;"	f	class:DOS_Drive_Cache
GetMediaByte	src/dos/drive_fat.cpp	/^Bit8u fatDrive::GetMediaByte(void) { return loadedDisk->GetBiosType(); }$/;"	f	class:fatDrive
GetMediaByte	src/dos/drive_iso.cpp	/^Bit8u isoDrive::GetMediaByte(void)$/;"	f	class:isoDrive
GetMediaByte	src/dos/drive_local.cpp	/^Bit8u localDrive::GetMediaByte(void) {$/;"	f	class:localDrive
GetMediaByte	src/dos/drive_virtual.cpp	/^Bit8u Virtual_Drive::GetMediaByte(void) {$/;"	f	class:Virtual_Drive
GetMediaStatus	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetMediaStatus(Bit8u subUnit, Bit8u& status)$/;"	f	class:CMscdex
GetMediaStatus	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetMediaStatus(Bit8u subUnit, bool& media, bool& changed, bool& trayOpen)$/;"	f	class:CMscdex
GetMediaTrayStatus	src/dos/cdrom.cpp	/^bool CDROM_Interface_Fake :: GetMediaTrayStatus	(bool& mediaPresent, bool& mediaChanged, bool& trayOpen)$/;"	f	class:CDROM_Interface_Fake
GetMediaTrayStatus	src/dos/cdrom.cpp	/^bool CDROM_Interface_SDL::GetMediaTrayStatus (bool& mediaPresent, bool& mediaChanged, bool& trayOpen)$/;"	f	class:CDROM_Interface_SDL
GetMediaTrayStatus	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::GetMediaTrayStatus(bool& mediaPresent, bool& mediaChanged, bool& trayOpen)$/;"	f	class:CDROM_Interface_Aspi
GetMediaTrayStatus	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::GetMediaTrayStatus(bool& mediaPresent, bool& mediaChanged, bool& trayOpen)$/;"	f	class:CDROM_Interface_Image
GetMediaTrayStatus	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::GetMediaTrayStatus(bool& mediaPresent, bool& mediaChanged, bool& trayOpen) {$/;"	f	class:CDROM_Interface_Ioctl
GetMemBase	src/hardware/memory.cpp	/^HostPt GetMemBase(void) { return MemBase; }$/;"	f
GetName	include/dos_system.h	/^	virtual char*	GetName(void)				{ return name; };$/;"	f	class:DOS_File
GetName	include/setup.h	/^	const char* GetName() const {return sectionname.c_str();}$/;"	f	class:Section
GetName	src/debug/debug.cpp	/^	char*	GetName(void) { return name; };$/;"	f	class:CDebugVar
GetName	src/dos/dos_classes.cpp	/^void DOS_FCB::GetName(char * fillname) {$/;"	f	class:DOS_FCB
GetName	src/gui/midi_alsa.h	/^	const char* GetName(void) { return "alsa"; }$/;"	f	class:MidiHandler_alsa
GetName	src/gui/midi_coreaudio.h	/^	const char * GetName(void) { return "coreaudio"; }$/;"	f	class:MidiHandler_coreaudio
GetName	src/gui/midi_coremidi.h	/^	const char * GetName(void) { return "coremidi"; }$/;"	f	class:MidiHandler_coremidi
GetName	src/gui/midi_oss.h	/^	const char * GetName(void) { return "oss";};$/;"	f	class:MidiHandler_oss
GetName	src/gui/midi_win32.h	/^	const char * GetName(void) { return "win32";};$/;"	f	class:MidiHandler_win32
GetName	src/gui/sdl_mapper.cpp	/^	char * GetName(void) { return entry; }$/;"	f	class:CEvent
GetNextDeviceHeader	src/dos/dos_mscdex.cpp	/^	RealPt	GetNextDeviceHeader	(void)			{ return sGet(sDeviceHeader,nextDeviceHeader);	};$/;"	f	class:DOS_DeviceHeader
GetNextDirEntry	src/dos/drive_iso.cpp	/^bool isoDrive::GetNextDirEntry(const int dirIteratorHandle, isoDirEntry* de)$/;"	f	class:isoDrive
GetNumDrives	src/dos/dos_mscdex.cpp	/^	Bit16u		GetNumDrives		(void)	{ return numDrives;			};$/;"	f	class:CMscdex
GetNumSubUnits	src/dos/dos_mscdex.cpp	/^	Bit8u	GetNumSubUnits		(void)			{ return sGet(sDeviceHeader,numSubUnits);		};$/;"	f	class:DOS_DeviceHeader
GetOffset	include/cpu.h	/^	Bitu GetOffset(void) {$/;"	f	class:Descriptor
GetOffset	src/debug/debug.cpp	/^	Bit32u					GetOffset		(void)						{ return offset; };$/;"	f	class:CBreakpoint
GetOnce	src/debug/debug.cpp	/^	bool					GetOnce			(void)						{ return once; };$/;"	f	class:CBreakpoint
GetPSP	include/dos_inc.h	/^	Bit16u GetPSP(void) { return (Bit16u)sGet(sSDA,current_psp); }$/;"	f	class:DOS_SDA
GetPSPSeg	include/dos_inc.h	/^	Bit16u GetPSPSeg(void) { return (Bit16u)sGet(sMCB,psp_segment);}$/;"	f	class:DOS_MCB
GetParent	include/dos_inc.h	/^	Bit16u	GetParent			(void)					{ return (Bit16u)sGet(sPSP,psp_parent);		};$/;"	f	class:DOS_PSP
GetPlatformConfigDir	src/misc/cross.cpp	/^void Cross::GetPlatformConfigDir(std::string& in) {$/;"	f	class:Cross
GetPlatformConfigName	src/misc/cross.cpp	/^void Cross::GetPlatformConfigName(std::string& in) {$/;"	f	class:Cross
GetPointer	src/dos/dos_classes.cpp	/^RealPt DOS_InfoBlock::GetPointer(void) {$/;"	f	class:DOS_InfoBlock
GetPropValue	src/misc/setup.cpp	/^string Section_line::GetPropValue(string const& \/* _property*\/) const {$/;"	f	class:Section_line
GetPropValue	src/misc/setup.cpp	/^string Section_prop::GetPropValue(string const& _property) const{$/;"	f	class:Section_prop
GetRM	src/cpu/modrm.h	26;"	d
GetRMEAa	src/cpu/core_normal/helpers.h	23;"	d
GetRMrb	src/cpu/modrm.h	42;"	d
GetRMrd	src/cpu/modrm.h	50;"	d
GetRMrw	src/cpu/modrm.h	46;"	d
GetRandom	src/dos/dos_classes.cpp	/^void DOS_FCB::GetRandom(Bit32u & _random) {$/;"	f	class:DOS_FCB
GetRealFileName	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::GetRealFileName(string &filename, string &pathname)$/;"	f	class:CDROM_Interface_Image
GetRecord	src/dos/dos_classes.cpp	/^void DOS_FCB::GetRecord(Bit16u & _cur_block,Bit8u & _cur_rec) {$/;"	f	class:DOS_FCB
GetRedirection	src/shell/shell.cpp	/^Bitu DOS_Shell::GetRedirection(char *s, char **ifn, char **ofn,bool * append) {$/;"	f	class:DOS_Shell
GetRegistryValue	src/dos/cdrom_aspi_win32.cpp	/^bool GetRegistryValue(HKEY& hKey,char* valueName, char* buffer, ULONG bufferSize)$/;"	f
GetRemoteAddressString	src/hardware/serialport/misc_util.cpp	/^bool TCPClientSocket::GetRemoteAddressString(Bit8u* buffer) {$/;"	f	class:TCPClientSocket
GetResult	src/dos/dos_classes.cpp	/^void DOS_DTA::GetResult(char * _name,Bit32u & _size,Bit16u & _date,Bit16u & _time,Bit8u & _attr) {$/;"	f	class:DOS_DTA
GetSearchDrive	src/dos/dos_classes.cpp	/^Bit8u DOS_DTA::GetSearchDrive(void) {$/;"	f	class:DOS_DTA
GetSearchParams	src/dos/dos_classes.cpp	/^void DOS_DTA::GetSearchParams(Bit8u & attr,char * pattern) {$/;"	f	class:DOS_DTA
GetSection	include/setup.h	/^	Section_prop *GetSection() { return section; }$/;"	f	class:Prop_multival
GetSection	include/setup.h	/^	const Section_prop *GetSection() const { return section; }$/;"	f	class:Prop_multival
GetSection	src/misc/setup.cpp	/^Section* Config::GetSection(int index){$/;"	f	class:Config
GetSection	src/misc/setup.cpp	/^Section* Config::GetSection(string const& _sectionname) const{$/;"	f	class:Config
GetSectionFromProperty	src/misc/setup.cpp	/^Section* Config::GetSectionFromProperty(char const * const prop) const{$/;"	f	class:Config
GetSegment	include/dos_inc.h	/^	Bit16u	GetSegment			(void)					{ return seg;						};$/;"	f	class:DOS_PSP
GetSegment	src/debug/debug.cpp	/^	Bit16u					GetSegment		(void)						{ return segment; };$/;"	f	class:CBreakpoint
GetSelector	include/cpu.h	/^	Bitu GetSelector(void) {$/;"	f	class:Descriptor
GetSeqData	src/dos/dos_classes.cpp	/^void DOS_FCB::GetSeqData(Bit8u & _fhandle,Bit16u & _rec_size) {$/;"	f	class:DOS_FCB
GetSetHandleName	src/ints/ems.cpp	/^static Bit8u GetSetHandleName(void) {$/;"	f	file:
GetShortName	src/dos/drive_cache.cpp	/^bool DOS_Drive_Cache::GetShortName(const char* fullname, char* shortname) {$/;"	f	class:DOS_Drive_Cache
GetSize	include/dos_inc.h	/^	Bit16u	GetSize				(void)					{ return (Bit16u)sGet(sPSP,next_seg);		};$/;"	f	class:DOS_PSP
GetSize	include/dos_inc.h	/^	Bit16u GetSize(void) { return (Bit16u)sGet(sMCB,size);}$/;"	f	class:DOS_MCB
GetSizeDateTime	src/dos/dos_classes.cpp	/^void DOS_FCB::GetSizeDateTime(Bit32u & _size,Bit16u & _date,Bit16u & _time) {$/;"	f	class:DOS_FCB
GetSourceData	src/gui/render_16.h	91;"	d
GetSourceData	src/gui/render_32.h	91;"	d
GetSourceData	src/gui/render_8.h	109;"	d
GetSourceData	src/gui/render_9.h	109;"	d
GetStack	include/dos_inc.h	/^	RealPt	GetStack			(void)					{ return sGet(sPSP,stack);			};$/;"	f	class:DOS_PSP
GetStartOfUMBChain	src/dos/dos_classes.cpp	/^Bit16u DOS_InfoBlock::GetStartOfUMBChain(void) {$/;"	f	class:DOS_InfoBlock
GetState	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::GetState(LPVOID pv, DWORD dwSize) { return 0; }$/;"	f	class:CodecInst
GetStatusWord	src/dos/dos_mscdex.cpp	/^Bit16u CMscdex::GetStatusWord(Bit8u subUnit,Bit16u status)$/;"	f	class:CMscdex
GetStringRemain	src/misc/setup.cpp	/^bool CommandLine::GetStringRemain(std::string & value) {$/;"	f	class:CommandLine
GetSubChannelData	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetSubChannelData(Bit8u subUnit, Bit8u& attr, Bit8u& track, Bit8u &index, TMSF& rel, TMSF& abs)$/;"	f	class:CMscdex
GetSubUnit	src/dos/dos_mscdex.cpp	/^Bit8u CMscdex::GetSubUnit(Bit16u _drive)$/;"	f	class:CMscdex
GetSystemFilePtr	src/dos/drive_local.cpp	/^FILE * localDrive::GetSystemFilePtr(char const * const name, char const * const type) {$/;"	f	class:localDrive
GetSystemFilename	src/dos/drive_local.cpp	/^bool localDrive::GetSystemFilename(char *sysName, char const * const dosName) {$/;"	f	class:localDrive
GetTOC	src/dos/cdrom_aspi_win32.cpp	/^DWORD CDROM_Interface_Aspi::GetTOC(LPTOC toc)$/;"	f	class:CDROM_Interface_Aspi
GetTempBuffer	src/dos/dos_mscdex.cpp	/^PhysPt CMscdex::GetTempBuffer(void) {$/;"	f	class:CMscdex
GetTicks	include/timer.h	27;"	d
GetTrack	src/dos/cdrom_image.cpp	/^int CDROM_Interface_Image::GetTrack(int sector)$/;"	f	class:CDROM_Interface_Image
GetTrackInfo	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetTrackInfo(Bit8u subUnit, Bit8u track, Bit8u& attr, TMSF& start)$/;"	f	class:CMscdex
GetType	include/dos_inc.h	/^	Bit8u GetType(void) { return (Bit8u)sGet(sMCB,type);}$/;"	f	class:DOS_MCB
GetType	src/debug/debug.cpp	/^	EBreakpoint				GetType			(void)						{ return type; };$/;"	f	class:CBreakpoint
GetUMBChainState	src/dos/dos_classes.cpp	/^Bit8u DOS_InfoBlock::GetUMBChainState(void) {$/;"	f	class:DOS_InfoBlock
GetUPC	src/dos/cdrom.h	/^	bool	GetUPC				(unsigned char& attr, char* upc) { attr = 0; strcpy(upc,"UPC"); return true; };$/;"	f	class:CDROM_Interface_Fake
GetUPC	src/dos/cdrom.h	/^	virtual bool	GetUPC				(unsigned char& attr, char* upc) { attr = 0; strcpy(upc,"UPC"); return true; };$/;"	f	class:CDROM_Interface_SDL
GetUPC	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::GetUPC(unsigned char& attr, char* upcdata)$/;"	f	class:CDROM_Interface_Aspi
GetUPC	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::GetUPC(unsigned char& attr, char* upc)$/;"	f	class:CDROM_Interface_Image
GetUPC	src/dos/cdrom_ioctl_linux.cpp	/^bool CDROM_Interface_Ioctl::GetUPC(unsigned char& attr, char* upc)$/;"	f	class:CDROM_Interface_Ioctl
GetUPC	src/dos/cdrom_ioctl_os2.cpp	/^bool CDROM_Interface_Ioctl::GetUPC(unsigned char& attr, char* upc){$/;"	f	class:CDROM_Interface_Ioctl
GetUPC	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::GetUPC(unsigned char& attr, char* upc) {$/;"	f	class:CDROM_Interface_Ioctl
GetUPC	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetUPC(Bit8u subUnit, Bit8u& attr, char* upc)$/;"	f	class:CMscdex
GetValue	include/setup.h	/^	Value const& GetValue() const { return value;}$/;"	f	class:Property
GetValue	src/debug/debug.cpp	/^	Bit16u					GetValue		(void)						{ if (GetType()!=BKPNT_PHYSICAL)	return ahValue;		else return 0; };$/;"	f	class:CBreakpoint
GetValue	src/gui/sdl_mapper.cpp	/^	Bits GetValue(void) {$/;"	f	class:CEvent
GetValues	src/misc/setup.cpp	/^const std::vector<Value>& Prop_multival::GetValues() const $/;"	f	class:Prop_multival
GetValues	src/misc/setup.cpp	/^const std::vector<Value>& Property::GetValues() const {$/;"	f	class:Property
GetVendor	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::GetVendor(BYTE HA_num, BYTE SCSI_Id, BYTE SCSI_Lun, char* szBuffer) $/;"	f	class:CDROM_Interface_Aspi
GetVersion	src/dos/dos_mscdex.cpp	/^	Bit16u		GetVersion			(void)	{ return (MSCDEX_VERSION_HIGH<<8)+MSCDEX_VERSION_LOW; };$/;"	f	class:CMscdex
GetVolumeName	src/dos/dos_mscdex.cpp	/^bool CMscdex::GetVolumeName(Bit8u subUnit, char* data) {	$/;"	f	class:CMscdex
GetVolumeSize	src/dos/dos_mscdex.cpp	/^Bit32u CMscdex::GetVolumeSize(Bit8u subUnit)$/;"	f	class:CMscdex
Get_Default_Value	include/setup.h	/^	Value const& Get_Default_Value() const { return default_value; }$/;"	f	class:Property
Get_Geometry	src/ints/bios_disk.cpp	/^void imageDisk::Get_Geometry(Bit32u * getHeads, Bit32u *getCyl, Bit32u *getSect, Bit32u *getSectSize) {$/;"	f	class:imageDisk
Get_RealPointer	include/callback.h	/^	RealPt Get_RealPointer(){ return CALLBACK_RealPointer(m_callback);}$/;"	f	class:CALLBACK_HandlerObject
Get_SSx_ESPx	src/cpu/cpu.cpp	/^	void Get_SSx_ESPx(Bitu level,Bitu & _ss,Bitu & _esp) {$/;"	f	class:TaskStateSegment
Get_arglength	src/misc/setup.cpp	/^Bit16u CommandLine::Get_arglength() {$/;"	f	class:CommandLine
Get_back	src/cpu/cpu.cpp	/^	Bitu Get_back(void) {$/;"	f	class:TaskStateSegment
Get_bool	src/misc/setup.cpp	/^bool Section_prop::Get_bool(string const& _propname) const {$/;"	f	class:Section_prop
Get_callback	include/callback.h	/^	Bit16u Get_callback(){return m_callback;}$/;"	f	class:CALLBACK_HandlerObject
Get_double	src/misc/setup.cpp	/^double Section_prop::Get_double(string const& _propname) const {$/;"	f	class:Section_prop
Get_help	src/misc/setup.cpp	/^char const* Property::Get_help() {$/;"	f	class:Property
Get_hex	src/misc/setup.cpp	/^Hex Section_prop::Get_hex(string const& _propname) const {$/;"	f	class:Section_prop
Get_int	src/misc/setup.cpp	/^int Section_prop::Get_int(string const&_propname) const {$/;"	f	class:Section_prop
Get_multival	src/misc/setup.cpp	/^Prop_multival* Section_prop::Get_multival(string const& _propname) const {$/;"	f	class:Section_prop
Get_multivalremain	src/misc/setup.cpp	/^Prop_multival_remain* Section_prop::Get_multivalremain(string const& _propname) const {$/;"	f	class:Section_prop
Get_path	src/misc/setup.cpp	/^Prop_path* Section_prop::Get_path(string const& _propname) const {$/;"	f	class:Section_prop
Get_prop	src/misc/setup.cpp	/^Property* Section_prop::Get_prop(int index){$/;"	f	class:Section_prop
Get_string	src/misc/setup.cpp	/^const char* Section_prop::Get_string(string const& _propname) const {$/;"	f	class:Section_prop
Get_type	include/setup.h	/^	Value::Etype Get_type(){return default_value.type;}$/;"	f	class:Property
Getchar	src/hardware/serialport/serialport.cpp	/^bool CSerial::Getchar(Bit8u* data, Bit8u* lsr, bool wait_dsr, Bitu timeout) {$/;"	f	class:CSerial
GetcharNonBlock	src/hardware/serialport/misc_util.cpp	/^Bits TCPClientSocket::GetcharNonBlock() {$/;"	f	class:TCPClientSocket
Getrb	src/cpu/modrm.h	29;"	d
Getrd	src/cpu/modrm.h	37;"	d
Getrw	src/cpu/modrm.h	33;"	d
Goto	src/shell/shell_batch.cpp	/^bool BatchFile::Goto(char * where) {$/;"	f	class:BatchFile
Green	src/libs/gui_tk/gui_tk.h	/^const RGB Green = Black|GreenMask;$/;"	m	namespace:GUI::Color
GreenMask	src/libs/gui_tk/gui_tk.h	/^const RGB GreenMask = 0x0000ff00;$/;"	m	namespace:GUI::Color
GreenMaskPos	src/ints/int10_vesa.cpp	/^	Bit8u GreenMaskPos;$/;"	m	struct:MODE_INFO	file:
GreenMaskSize	src/ints/int10_vesa.cpp	/^	Bit8u GreenMaskSize;$/;"	m	struct:MODE_INFO	file:
GreenShift	src/libs/gui_tk/gui_tk.h	/^const int GreenShift = 8;$/;"	m	namespace:GUI::Color
Grey50	src/libs/gui_tk/gui_tk.h	/^const RGB Grey50 = 0xff808080;$/;"	m	namespace:GUI::Color
Groups	src/cpu/core_full/optable.h	/^static OpCode Groups[16][8]={$/;"	v
Gv	src/debug/disasm_tables.h	/^	Gb,Gv,$/;"	e	enum:__anon111
HAND_DEVICE	include/dos_inc.h	/^enum { HAND_NONE=0,HAND_FILE,HAND_DEVICE};$/;"	e	enum:__anon13
HAND_FILE	include/dos_inc.h	/^enum { HAND_NONE=0,HAND_FILE,HAND_DEVICE};$/;"	e	enum:__anon13
HAND_NONE	include/dos_inc.h	/^enum { HAND_NONE=0,HAND_FILE,HAND_DEVICE};$/;"	e	enum:__anon13
HARDWARE	src/hardware/hardware.cpp	/^	HARDWARE(Section* configuration):Module_base(configuration){$/;"	f	class:HARDWARE
HARDWARE	src/hardware/hardware.cpp	/^class HARDWARE:public Module_base{$/;"	c	file:
HARDWARE_Destroy	src/hardware/hardware.cpp	/^void HARDWARE_Destroy(Section * sec) {$/;"	f
HARDWARE_Init	src/hardware/hardware.cpp	/^void HARDWARE_Init(Section * sec) {$/;"	f
HASTAT_BUS_FREE	src/dos/wnaspi32.h	102;"	d
HASTAT_BUS_RESET	src/dos/wnaspi32.h	107;"	d
HASTAT_COMMAND_TIMEOUT	src/dos/wnaspi32.h	105;"	d
HASTAT_DO_DU	src/dos/wnaspi32.h	101;"	d
HASTAT_MESSAGE_REJECT	src/dos/wnaspi32.h	106;"	d
HASTAT_OK	src/dos/wnaspi32.h	99;"	d
HASTAT_PARITY_ERROR	src/dos/wnaspi32.h	108;"	d
HASTAT_PHASE_ERR	src/dos/wnaspi32.h	103;"	d
HASTAT_REQUEST_SENSE_FAILED	src/dos/wnaspi32.h	109;"	d
HASTAT_SEL_TO	src/dos/wnaspi32.h	100;"	d
HASTAT_TIMEOUT	src/dos/wnaspi32.h	104;"	d
HAS_YM3812	src/hardware/adlib.cpp	64;"	d	file:
HAS_YMF262	src/hardware/adlib.cpp	100;"	d	file:
HAVE_DDRAW_H	src/platform/visualc/config.h	53;"	d
HAVE_INTTYPES_H	config.h	115;"	d
HAVE_MEMORY_H	config.h	121;"	d
HAVE_NETINET_IN_H	config.h	124;"	d
HAVE_PWD_H	config.h	127;"	d
HAVE_STDINT_H	config.h	130;"	d
HAVE_STDLIB_H	config.h	133;"	d
HAVE_STRINGS_H	config.h	136;"	d
HAVE_STRING_H	config.h	139;"	d
HAVE_SYS_SOCKET_H	config.h	142;"	d
HAVE_SYS_STAT_H	config.h	145;"	d
HAVE_SYS_TYPES_H	config.h	148;"	d
HAVE_UNISTD_H	config.h	151;"	d
HA_Count	src/dos/wnaspi32.h	/^    BYTE        HA_Count;                       \/\/ 08\/008 Number of host adapters present$/;"	m	struct:__anon124
HA_Identifier	src/dos/wnaspi32.h	/^    BYTE        HA_Identifier[16];              \/\/ 1A\/026 String describing the host adapter$/;"	m	struct:__anon124
HA_ManagerId	src/dos/wnaspi32.h	/^    BYTE        HA_ManagerId[16];               \/\/ 0A\/010 String describing the manager$/;"	m	struct:__anon124
HA_Rsvd1	src/dos/wnaspi32.h	/^    WORD        HA_Rsvd1;                       \/\/ 3A\/058 Reserved, MUST = 0$/;"	m	struct:__anon124
HA_SCSI_ID	src/dos/wnaspi32.h	/^    BYTE        HA_SCSI_ID;                     \/\/ 09\/009 SCSI ID of host adapter$/;"	m	struct:__anon124
HA_Unique	src/dos/wnaspi32.h	/^    BYTE        HA_Unique[16];                  \/\/ 2A\/042 Host Adapter Unique parameters$/;"	m	struct:__anon124
HELP	src/shell/shell_cmds.cpp	158;"	d	file:
HIGHESTBIT	src/ints/mouse.cpp	61;"	d	file:
HIGH_MEMORY_IN_USE	src/ints/xms.cpp	62;"	d	file:
HIGH_MEMORY_NOT_ALLOCATED	src/ints/xms.cpp	63;"	d	file:
HIGH_MEMORY_NOT_EXIST	src/ints/xms.cpp	61;"	d	file:
HLT_Decode	src/cpu/cpu.cpp	/^static Bits HLT_Decode(void) {$/;"	f	file:
HOST_EAX	src/cpu/core_dynrec/risc_x64.h	44;"	d
HOST_EAX	src/cpu/core_dynrec/risc_x86.h	/^	HOST_EAX=0,$/;"	e	enum:HostReg
HOST_EAX	src/cpu/core_dynrec/save/risc_x64.h	44;"	d
HOST_EAX	src/cpu/core_dynrec/save/risc_x86.h	/^	HOST_EAX=0,$/;"	e	enum:HostReg
HOST_EBP	src/cpu/core_dynrec/risc_x86.h	/^	HOST_EBP,$/;"	e	enum:HostReg
HOST_EBP	src/cpu/core_dynrec/save/risc_x86.h	/^	HOST_EBP,$/;"	e	enum:HostReg
HOST_EBX	src/cpu/core_dynrec/risc_x64.h	47;"	d
HOST_EBX	src/cpu/core_dynrec/risc_x86.h	/^	HOST_EBX,$/;"	e	enum:HostReg
HOST_EBX	src/cpu/core_dynrec/save/risc_x64.h	47;"	d
HOST_EBX	src/cpu/core_dynrec/save/risc_x86.h	/^	HOST_EBX,$/;"	e	enum:HostReg
HOST_ECX	src/cpu/core_dynrec/risc_x64.h	45;"	d
HOST_ECX	src/cpu/core_dynrec/risc_x86.h	/^	HOST_ECX,$/;"	e	enum:HostReg
HOST_ECX	src/cpu/core_dynrec/save/risc_x64.h	45;"	d
HOST_ECX	src/cpu/core_dynrec/save/risc_x86.h	/^	HOST_ECX,$/;"	e	enum:HostReg
HOST_EDI	src/cpu/core_dynrec/risc_x64.h	49;"	d
HOST_EDI	src/cpu/core_dynrec/risc_x86.h	/^	HOST_EDI$/;"	e	enum:HostReg
HOST_EDI	src/cpu/core_dynrec/save/risc_x64.h	49;"	d
HOST_EDI	src/cpu/core_dynrec/save/risc_x86.h	/^	HOST_EDI$/;"	e	enum:HostReg
HOST_EDX	src/cpu/core_dynrec/risc_x64.h	46;"	d
HOST_EDX	src/cpu/core_dynrec/risc_x86.h	/^	HOST_EDX,$/;"	e	enum:HostReg
HOST_EDX	src/cpu/core_dynrec/save/risc_x64.h	46;"	d
HOST_EDX	src/cpu/core_dynrec/save/risc_x86.h	/^	HOST_EDX,$/;"	e	enum:HostReg
HOST_ESI	src/cpu/core_dynrec/risc_x64.h	48;"	d
HOST_ESI	src/cpu/core_dynrec/risc_x86.h	/^	HOST_ESI,$/;"	e	enum:HostReg
HOST_ESI	src/cpu/core_dynrec/save/risc_x64.h	48;"	d
HOST_ESI	src/cpu/core_dynrec/save/risc_x86.h	/^	HOST_ESI,$/;"	e	enum:HostReg
HOST_ESP	src/cpu/core_dynrec/risc_x86.h	/^	HOST_ESP,$/;"	e	enum:HostReg
HOST_ESP	src/cpu/core_dynrec/save/risc_x86.h	/^	HOST_ESP,$/;"	e	enum:HostReg
HOST_a0	src/cpu/core_dynrec/risc_mipsel32.h	53;"	d
HOST_a0	src/cpu/core_dynrec/save/risc_mipsel32.h	53;"	d
HOST_a1	src/cpu/core_dynrec/risc_armv4le-common.h	72;"	d
HOST_a1	src/cpu/core_dynrec/risc_mipsel32.h	54;"	d
HOST_a1	src/cpu/core_dynrec/save/risc_armv4le-common.h	72;"	d
HOST_a1	src/cpu/core_dynrec/save/risc_mipsel32.h	54;"	d
HOST_a2	src/cpu/core_dynrec/risc_armv4le-common.h	73;"	d
HOST_a2	src/cpu/core_dynrec/save/risc_armv4le-common.h	73;"	d
HOST_a3	src/cpu/core_dynrec/risc_armv4le-common.h	74;"	d
HOST_a3	src/cpu/core_dynrec/save/risc_armv4le-common.h	74;"	d
HOST_a4	src/cpu/core_dynrec/risc_armv4le-common.h	75;"	d
HOST_a4	src/cpu/core_dynrec/save/risc_armv4le-common.h	75;"	d
HOST_ip	src/cpu/core_dynrec/risc_armv4le-common.h	85;"	d
HOST_ip	src/cpu/core_dynrec/save/risc_armv4le-common.h	85;"	d
HOST_lr	src/cpu/core_dynrec/risc_armv4le-common.h	87;"	d
HOST_lr	src/cpu/core_dynrec/save/risc_armv4le-common.h	87;"	d
HOST_pc	src/cpu/core_dynrec/risc_armv4le-common.h	88;"	d
HOST_pc	src/cpu/core_dynrec/save/risc_armv4le-common.h	88;"	d
HOST_r0	src/cpu/core_dynrec/risc_armv4le-common.h	52;"	d
HOST_r0	src/cpu/core_dynrec/save/risc_armv4le-common.h	52;"	d
HOST_r1	src/cpu/core_dynrec/risc_armv4le-common.h	53;"	d
HOST_r1	src/cpu/core_dynrec/save/risc_armv4le-common.h	53;"	d
HOST_r10	src/cpu/core_dynrec/risc_armv4le-common.h	63;"	d
HOST_r10	src/cpu/core_dynrec/save/risc_armv4le-common.h	63;"	d
HOST_r11	src/cpu/core_dynrec/risc_armv4le-common.h	64;"	d
HOST_r11	src/cpu/core_dynrec/save/risc_armv4le-common.h	64;"	d
HOST_r12	src/cpu/core_dynrec/risc_armv4le-common.h	65;"	d
HOST_r12	src/cpu/core_dynrec/save/risc_armv4le-common.h	65;"	d
HOST_r13	src/cpu/core_dynrec/risc_armv4le-common.h	66;"	d
HOST_r13	src/cpu/core_dynrec/save/risc_armv4le-common.h	66;"	d
HOST_r14	src/cpu/core_dynrec/risc_armv4le-common.h	67;"	d
HOST_r14	src/cpu/core_dynrec/save/risc_armv4le-common.h	67;"	d
HOST_r15	src/cpu/core_dynrec/risc_armv4le-common.h	68;"	d
HOST_r15	src/cpu/core_dynrec/save/risc_armv4le-common.h	68;"	d
HOST_r2	src/cpu/core_dynrec/risc_armv4le-common.h	54;"	d
HOST_r2	src/cpu/core_dynrec/save/risc_armv4le-common.h	54;"	d
HOST_r3	src/cpu/core_dynrec/risc_armv4le-common.h	55;"	d
HOST_r3	src/cpu/core_dynrec/save/risc_armv4le-common.h	55;"	d
HOST_r4	src/cpu/core_dynrec/risc_armv4le-common.h	56;"	d
HOST_r4	src/cpu/core_dynrec/save/risc_armv4le-common.h	56;"	d
HOST_r5	src/cpu/core_dynrec/risc_armv4le-common.h	57;"	d
HOST_r5	src/cpu/core_dynrec/save/risc_armv4le-common.h	57;"	d
HOST_r6	src/cpu/core_dynrec/risc_armv4le-common.h	58;"	d
HOST_r6	src/cpu/core_dynrec/save/risc_armv4le-common.h	58;"	d
HOST_r7	src/cpu/core_dynrec/risc_armv4le-common.h	59;"	d
HOST_r7	src/cpu/core_dynrec/save/risc_armv4le-common.h	59;"	d
HOST_r8	src/cpu/core_dynrec/risc_armv4le-common.h	61;"	d
HOST_r8	src/cpu/core_dynrec/save/risc_armv4le-common.h	61;"	d
HOST_r9	src/cpu/core_dynrec/risc_armv4le-common.h	62;"	d
HOST_r9	src/cpu/core_dynrec/save/risc_armv4le-common.h	62;"	d
HOST_s0	src/cpu/core_dynrec/risc_mipsel32.h	59;"	d
HOST_s0	src/cpu/core_dynrec/save/risc_mipsel32.h	59;"	d
HOST_sp	src/cpu/core_dynrec/risc_armv4le-common.h	86;"	d
HOST_sp	src/cpu/core_dynrec/save/risc_armv4le-common.h	86;"	d
HOST_t4	src/cpu/core_dynrec/risc_mipsel32.h	55;"	d
HOST_t4	src/cpu/core_dynrec/save/risc_mipsel32.h	55;"	d
HOST_t5	src/cpu/core_dynrec/risc_mipsel32.h	56;"	d
HOST_t5	src/cpu/core_dynrec/save/risc_mipsel32.h	56;"	d
HOST_t6	src/cpu/core_dynrec/risc_mipsel32.h	57;"	d
HOST_t6	src/cpu/core_dynrec/save/risc_mipsel32.h	57;"	d
HOST_t7	src/cpu/core_dynrec/risc_mipsel32.h	58;"	d
HOST_t7	src/cpu/core_dynrec/save/risc_mipsel32.h	58;"	d
HOST_t8	src/cpu/core_dynrec/risc_mipsel32.h	60;"	d
HOST_t8	src/cpu/core_dynrec/save/risc_mipsel32.h	60;"	d
HOST_t9	src/cpu/core_dynrec/risc_mipsel32.h	61;"	d
HOST_t9	src/cpu/core_dynrec/save/risc_mipsel32.h	61;"	d
HOST_v0	src/cpu/core_dynrec/risc_mipsel32.h	51;"	d
HOST_v0	src/cpu/core_dynrec/save/risc_mipsel32.h	51;"	d
HOST_v1	src/cpu/core_dynrec/risc_armv4le-common.h	76;"	d
HOST_v1	src/cpu/core_dynrec/risc_mipsel32.h	52;"	d
HOST_v1	src/cpu/core_dynrec/save/risc_armv4le-common.h	76;"	d
HOST_v1	src/cpu/core_dynrec/save/risc_mipsel32.h	52;"	d
HOST_v2	src/cpu/core_dynrec/risc_armv4le-common.h	77;"	d
HOST_v2	src/cpu/core_dynrec/save/risc_armv4le-common.h	77;"	d
HOST_v3	src/cpu/core_dynrec/risc_armv4le-common.h	78;"	d
HOST_v3	src/cpu/core_dynrec/save/risc_armv4le-common.h	78;"	d
HOST_v4	src/cpu/core_dynrec/risc_armv4le-common.h	79;"	d
HOST_v4	src/cpu/core_dynrec/save/risc_armv4le-common.h	79;"	d
HOST_v5	src/cpu/core_dynrec/risc_armv4le-common.h	81;"	d
HOST_v5	src/cpu/core_dynrec/save/risc_armv4le-common.h	81;"	d
HOST_v6	src/cpu/core_dynrec/risc_armv4le-common.h	82;"	d
HOST_v6	src/cpu/core_dynrec/save/risc_armv4le-common.h	82;"	d
HOST_v7	src/cpu/core_dynrec/risc_armv4le-common.h	83;"	d
HOST_v7	src/cpu/core_dynrec/save/risc_armv4le-common.h	83;"	d
HOST_v8	src/cpu/core_dynrec/risc_armv4le-common.h	84;"	d
HOST_v8	src/cpu/core_dynrec/save/risc_armv4le-common.h	84;"	d
HandleInputline	src/misc/setup.cpp	/^void Section_line::HandleInputline(string const& line){ $/;"	f	class:Section_line
HandleInputline	src/misc/setup.cpp	/^void Section_prop::HandleInputline(string const& gegevens){$/;"	f	class:Section_prop
HandleNameSearch	src/ints/ems.cpp	/^static Bit8u HandleNameSearch(void) {$/;"	f	file:
Handler	src/hardware/adlib.cpp	/^	struct Handler : public Adlib::Handler {$/;"	s	namespace:OPL2	file:
Handler	src/hardware/adlib.cpp	/^	struct Handler : public Adlib::Handler {$/;"	s	namespace:THEOPL3	file:
Handler	src/hardware/adlib.h	/^class Handler {$/;"	c	namespace:Adlib
HasDataTrack	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::HasDataTrack(void)$/;"	f	class:CDROM_Interface_Image
HasDrive	src/dos/dos_mscdex.cpp	/^bool CMscdex::HasDrive(Bit16u drive) {$/;"	f	class:CMscdex
Header	src/platform/visualc/ntddcdrm.h	/^  SUB_Q_HEADER  Header;$/;"	m	struct:_SUB_Q_CURRENT_POSITION
Header	src/platform/visualc/ntddcdrm.h	/^  SUB_Q_HEADER  Header;$/;"	m	struct:_SUB_Q_MEDIA_CATALOG_NUMBER
Header	src/platform/visualc/ntddcdrm.h	/^  SUB_Q_HEADER  Header;$/;"	m	struct:_SUB_Q_TRACK_ISRC
HeaderLength	src/platform/visualc/ntddscsi.h	/^  ULONG  HeaderLength; $/;"	m	struct:_SRB_IO_CONTROL
HelpCommand	src/hardware/ipx.cpp	/^	void HelpCommand(const char *helpStr) {$/;"	f	class:IPXNET
Hercules_Mode	src/ints/int10_modes.cpp	/^VideoModeBlock Hercules_Mode=$/;"	v
Hex	include/setup.h	/^	Hex():_hex(0) { };$/;"	f	class:Hex
Hex	include/setup.h	/^	Hex(int in):_hex(in) { };$/;"	f	class:Hex
Hex	include/setup.h	/^class Hex {$/;"	c
Home	src/libs/gui_tk/gui_tk.h	/^		Home, End, PageUp, PageDown, Insert, Delete, Menu,$/;"	e	enum:GUI::Key::Special
HostPt	include/mem.h	/^typedef Bit8u * HostPt;$/;"	t
HostReg	src/cpu/core_dynrec/risc_armv4le-common.h	/^typedef Bit8u HostReg;$/;"	t
HostReg	src/cpu/core_dynrec/risc_mipsel32.h	/^typedef Bit8u HostReg;$/;"	t
HostReg	src/cpu/core_dynrec/risc_x64.h	/^typedef Bit8u HostReg;$/;"	t
HostReg	src/cpu/core_dynrec/risc_x86.h	/^enum HostReg {$/;"	g
HostReg	src/cpu/core_dynrec/save/risc_armv4le-common.h	/^typedef Bit8u HostReg;$/;"	t
HostReg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^typedef Bit8u HostReg;$/;"	t
HostReg	src/cpu/core_dynrec/save/risc_x64.h	/^typedef Bit8u HostReg;$/;"	t
HostReg	src/cpu/core_dynrec/save/risc_x86.h	/^enum HostReg {$/;"	g
IDC_EMAIL	src/libs/zmbv/resource.h	8;"	d
IDC_HOMEPAGE	src/libs/zmbv/resource.h	7;"	d
IDC_SLIDER1	src/libs/zmbv/resource.h	9;"	d
IDD_ABOUT	src/libs/zmbv/resource.h	5;"	d
IDD_CONFIGURE	src/libs/zmbv/resource.h	6;"	d
IDIVB	src/cpu/arminst.h	716;"	d
IDIVB	src/cpu/instructions.h	712;"	d
IDIVD	src/cpu/arminst.h	742;"	d
IDIVD	src/cpu/instructions.h	738;"	d
IDIVW	src/cpu/arminst.h	729;"	d
IDIVW	src/cpu/instructions.h	725;"	d
IER	include/serialport.h	/^	Bit8u IER;	\/\/	r\/w				Interrupt Enable Register, also MSB of Divisor Latch$/;"	m	class:CSerial
IER_OFFSET	include/serialport.h	211;"	d
ILLEGAL	src/dos/dos_files.cpp	728;"	d	file:
IMGMOUNT	src/dos/dos_programs.cpp	/^class IMGMOUNT : public Program {$/;"	c	file:
IMGMOUNT_ProgramStart	src/dos/dos_programs.cpp	/^void IMGMOUNT_ProgramStart(Program * * make) {$/;"	f
IMGTYPE_FLOPPY	src/dos/drive_fat.cpp	32;"	d	file:
IMGTYPE_HDD	src/dos/drive_fat.cpp	34;"	d	file:
IMGTYPE_ISO	src/dos/drive_fat.cpp	33;"	d	file:
IMULB	src/cpu/arminst.h	755;"	d
IMULB	src/cpu/instructions.h	751;"	d
IMULD	src/cpu/arminst.h	782;"	d
IMULD	src/cpu/instructions.h	778;"	d
IMULW	src/cpu/arminst.h	768;"	d
IMULW	src/cpu/instructions.h	764;"	d
INCB	src/cpu/arminst.h	196;"	d
INCB	src/cpu/instructions.h	192;"	d
INCD	src/cpu/arminst.h	208;"	d
INCD	src/cpu/instructions.h	204;"	d
INCL	src/dos/dos_programs.cpp	42;"	d	file:
INCLUDEGUARD_SERIALDUMMY_H	src/hardware/serialport/serialdummy.h	22;"	d
INCL_DOSDEVICES	src/dos/cdrom_ioctl_os2.cpp	28;"	d	file:
INCL_DOSDEVICES	src/hardware/serialport/directserial_os2.cpp	35;"	d	file:
INCL_DOSDEVICES	src/hardware/serialport/directserial_os2.h	33;"	d
INCL_DOSDEVIOCTL	src/dos/cdrom_ioctl_os2.cpp	29;"	d	file:
INCL_DOSDEVIOCTL	src/hardware/serialport/directserial_os2.cpp	36;"	d	file:
INCL_DOSDEVIOCTL	src/hardware/serialport/directserial_os2.h	34;"	d
INCL_DOSERRORS	src/dos/cdrom_ioctl_os2.cpp	27;"	d	file:
INCL_DOSERRORS	src/dos/dos_programs.cpp	43;"	d	file:
INCL_DOSERRORS	src/dos/drive_cache.cpp	37;"	d	file:
INCL_DOSERRORS	src/hardware/serialport/directserial_os2.cpp	34;"	d	file:
INCL_DOSERRORS	src/hardware/serialport/directserial_os2.h	32;"	d
INCL_DOSFILEMGR	src/dos/cdrom_ioctl_os2.cpp	26;"	d	file:
INCL_DOSFILEMGR	src/dos/drive_cache.cpp	38;"	d	file:
INCL_DOSFILEMGR	src/hardware/serialport/directserial_os2.cpp	33;"	d	file:
INCL_DOSFILEMGR	src/hardware/serialport/directserial_os2.h	31;"	d
INCL_DOSPROCESS	src/hardware/serialport/directserial_os2.cpp	37;"	d	file:
INCL_DOSPROCESS	src/hardware/serialport/directserial_os2.h	35;"	d
INCW	src/cpu/arminst.h	202;"	d
INCW	src/cpu/instructions.h	198;"	d
INDEX	src/debug/debug_disasm.cpp	127;"	d	file:
INLINE	config.h	227;"	d
INLINE	config.h	229;"	d
INLINE	src/libs/zmbv/zmbv.h	21;"	d
INLINE	src/libs/zmbv/zmbv.h	23;"	d
INLINE	src/platform/visualc/config.h	1;"	d
INSTRUCTION_SIZE	src/debug/debug_disasm.cpp	823;"	d	file:
INT10_EGA_RIL_GetVersionPt	src/ints/int10_misc.cpp	/^RealPt INT10_EGA_RIL_GetVersionPt(void) {$/;"	f
INT10_EGA_RIL_ReadRegister	src/ints/int10_misc.cpp	/^void INT10_EGA_RIL_ReadRegister(Bit8u & bl, Bit16u dx) {$/;"	f
INT10_EGA_RIL_ReadRegisterRange	src/ints/int10_misc.cpp	/^void INT10_EGA_RIL_ReadRegisterRange(Bit8u & bl, Bit8u ch, Bit8u cl, Bit16u dx, PhysPt dst) {$/;"	f
INT10_EGA_RIL_ReadRegisterSet	src/ints/int10_misc.cpp	/^void INT10_EGA_RIL_ReadRegisterSet(Bit16u cx, PhysPt tbl) {$/;"	f
INT10_EGA_RIL_WriteRegister	src/ints/int10_misc.cpp	/^void INT10_EGA_RIL_WriteRegister(Bit8u & bl, Bit8u bh, Bit16u dx) {$/;"	f
INT10_EGA_RIL_WriteRegisterRange	src/ints/int10_misc.cpp	/^void INT10_EGA_RIL_WriteRegisterRange(Bit8u & bl, Bit8u ch, Bit8u cl, Bit16u dx, PhysPt src) {$/;"	f
INT10_EGA_RIL_WriteRegisterSet	src/ints/int10_misc.cpp	/^void INT10_EGA_RIL_WriteRegisterSet(Bit16u cx, PhysPt tbl) {$/;"	f
INT10_GetAllPaletteRegisters	src/ints/int10_pal.cpp	/^void INT10_GetAllPaletteRegisters(PhysPt data) {$/;"	f
INT10_GetDACBlock	src/ints/int10_pal.cpp	/^void INT10_GetDACBlock(Bit16u index,Bit16u count,PhysPt data) {$/;"	f
INT10_GetDACPage	src/ints/int10_pal.cpp	/^void INT10_GetDACPage(Bit8u* mode,Bit8u* page) {$/;"	f
INT10_GetFuncStateInformation	src/ints/int10_misc.cpp	/^void INT10_GetFuncStateInformation(PhysPt save) {$/;"	f
INT10_GetOverscanBorderColor	src/ints/int10_pal.cpp	/^void INT10_GetOverscanBorderColor(Bit8u * val) {$/;"	f
INT10_GetPelMask	src/ints/int10_pal.cpp	/^void INT10_GetPelMask(Bit8u & mask) {$/;"	f
INT10_GetPixel	src/ints/int10_put_pixel.cpp	/^void INT10_GetPixel(Bit16u x,Bit16u y,Bit8u page,Bit8u * color) {$/;"	f
INT10_GetSingleDacRegister	src/ints/int10_pal.cpp	/^void INT10_GetSingleDacRegister(Bit8u index,Bit8u * red,Bit8u * green,Bit8u * blue) {$/;"	f
INT10_GetSinglePaletteRegister	src/ints/int10_pal.cpp	/^void INT10_GetSinglePaletteRegister(Bit8u reg,Bit8u * val) {$/;"	f
INT10_Handler	src/ints/int10.cpp	/^static Bitu INT10_Handler(void) {$/;"	f	file:
INT10_Init	src/ints/int10.cpp	/^void INT10_Init(Section* \/*sec*\/) {$/;"	f
INT10_InitVGA	src/ints/int10.cpp	/^static void INT10_InitVGA(void) {$/;"	f	file:
INT10_LoadFont	src/ints/int10_memory.cpp	/^void INT10_LoadFont(PhysPt font,bool reload,Bitu count,Bitu offset,Bitu map,Bitu height) {$/;"	f
INT10_PerformGrayScaleSumming	src/ints/int10_pal.cpp	/^void INT10_PerformGrayScaleSumming(Bit16u start_reg,Bit16u count) {$/;"	f
INT10_PutPixel	src/ints/int10_put_pixel.cpp	/^void INT10_PutPixel(Bit16u x,Bit16u y,Bit8u page,Bit8u color) {$/;"	f
INT10_ReadCharAttr	src/ints/int10_char.cpp	/^void INT10_ReadCharAttr(Bit16u * result,Bit8u page) {$/;"	f
INT10_ReloadRomFonts	src/ints/int10_memory.cpp	/^void INT10_ReloadRomFonts(void) {$/;"	f
INT10_ScrollWindow	src/ints/int10_char.cpp	/^void INT10_ScrollWindow(Bit8u rul,Bit8u cul,Bit8u rlr,Bit8u clr,Bit8s nlines,Bit8u attr,Bit8u page) {$/;"	f
INT10_Seg40Init	src/ints/int10.cpp	/^static void INT10_Seg40Init(void) {$/;"	f	file:
INT10_SelectDACPage	src/ints/int10_pal.cpp	/^void INT10_SelectDACPage(Bit8u function,Bit8u mode) {$/;"	f
INT10_SetActivePage	src/ints/int10_char.cpp	/^void INT10_SetActivePage(Bit8u page) {$/;"	f
INT10_SetAllPaletteRegisters	src/ints/int10_pal.cpp	/^void INT10_SetAllPaletteRegisters(PhysPt data) {$/;"	f
INT10_SetBackgroundBorder	src/ints/int10_pal.cpp	/^void INT10_SetBackgroundBorder(Bit8u val) {$/;"	f
INT10_SetColorSelect	src/ints/int10_pal.cpp	/^void INT10_SetColorSelect(Bit8u val) {$/;"	f
INT10_SetCursorPos	src/ints/int10_char.cpp	/^void INT10_SetCursorPos(Bit8u row,Bit8u col,Bit8u page) {$/;"	f
INT10_SetCursorShape	src/ints/int10_char.cpp	/^void INT10_SetCursorShape(Bit8u first,Bit8u last) {$/;"	f
INT10_SetDACBlock	src/ints/int10_pal.cpp	/^void INT10_SetDACBlock(Bit16u index,Bit16u count,PhysPt data) {$/;"	f
INT10_SetOverscanBorderColor	src/ints/int10_pal.cpp	/^void INT10_SetOverscanBorderColor(Bit8u val) {$/;"	f
INT10_SetPelMask	src/ints/int10_pal.cpp	/^void INT10_SetPelMask(Bit8u mask) {$/;"	f
INT10_SetSingleDacRegister	src/ints/int10_pal.cpp	/^void INT10_SetSingleDacRegister(Bit8u index,Bit8u red,Bit8u green,Bit8u blue) {$/;"	f
INT10_SetSinglePaletteRegister	src/ints/int10_pal.cpp	/^void INT10_SetSinglePaletteRegister(Bit8u reg,Bit8u val) {$/;"	f
INT10_SetVideoMode	src/ints/int10_modes.cpp	/^bool INT10_SetVideoMode(Bitu mode) {$/;"	f
INT10_SetVideoMode_OTHER	src/ints/int10_modes.cpp	/^bool INT10_SetVideoMode_OTHER(Bitu mode,bool clearmem) {$/;"	f
INT10_SetupRomMemory	src/ints/int10_memory.cpp	/^void INT10_SetupRomMemory(void) {$/;"	f
INT10_SetupRomMemoryChecksum	src/ints/int10_memory.cpp	/^void INT10_SetupRomMemoryChecksum(void) {$/;"	f
INT10_SetupVESA	src/ints/int10_vesa.cpp	/^void INT10_SetupVESA(void) {$/;"	f
INT10_SetupVideoParameterTable	src/ints/int10_vptable.cpp	/^Bitu INT10_SetupVideoParameterTable(PhysPt basepos) {$/;"	f
INT10_TeletypeOutput	src/ints/int10_char.cpp	/^void INT10_TeletypeOutput(Bit8u chr,Bit8u attr) {$/;"	f
INT10_TeletypeOutputAttr	src/ints/int10_char.cpp	/^static INLINE void INT10_TeletypeOutputAttr(Bit8u chr,Bit8u attr,bool useattr,Bit8u page) {$/;"	f	file:
INT10_TeletypeOutputAttr	src/ints/int10_char.cpp	/^void INT10_TeletypeOutputAttr(Bit8u chr,Bit8u attr,bool useattr) {$/;"	f
INT10_ToggleBlinkingBit	src/ints/int10_pal.cpp	/^void INT10_ToggleBlinkingBit(Bit8u state) {$/;"	f
INT10_VideoState_GetSize	src/ints/int10_video_state.cpp	/^Bitu INT10_VideoState_GetSize(Bitu state) {$/;"	f
INT10_VideoState_Restore	src/ints/int10_video_state.cpp	/^bool INT10_VideoState_Restore(Bitu state,RealPt buffer) {$/;"	f
INT10_VideoState_Save	src/ints/int10_video_state.cpp	/^bool INT10_VideoState_Save(Bitu state,RealPt buffer) {$/;"	f
INT10_WriteChar	src/ints/int10_char.cpp	/^void INT10_WriteChar(Bit8u chr,Bit8u attr,Bit8u page,Bit16u count,bool showattr) {$/;"	f
INT10_WriteString	src/ints/int10_char.cpp	/^void INT10_WriteString(Bit8u row,Bit8u col,Bit8u flag,Bit8u attr,PhysPt string,Bit16u count,Bit8u page) {$/;"	f
INT11_Handler	src/ints/bios.cpp	/^static Bitu INT11_Handler(void) {$/;"	f	file:
INT12_Handler	src/ints/bios.cpp	/^static Bitu INT12_Handler(void) {$/;"	f	file:
INT13_DiskHandler	src/ints/bios_disk.cpp	/^static Bitu INT13_DiskHandler(void) {$/;"	f	file:
INT14_Handler	src/ints/bios.cpp	/^static Bitu INT14_Handler(void)$/;"	f	file:
INT15_Handler	src/ints/bios.cpp	/^static Bitu INT15_Handler(void) {$/;"	f	file:
INT16	src/debug/debug_disasm.cpp	/^typedef Bit16s INT16;$/;"	t	file:
INT16	src/hardware/fmopl.h	/^typedef signed short	INT16;   \/* signed 16bit   *\/$/;"	t
INT16	src/hardware/gameblaster.cpp	/^typedef Bit16s INT16;$/;"	t	file:
INT16	src/hardware/ymf262.h	/^typedef signed short	INT16;   \/* signed 16bit   *\/$/;"	t
INT16_Handler	src/ints/bios_keyboard.cpp	/^static Bitu INT16_Handler(void) {$/;"	f	file:
INT17_Handler	src/ints/bios.cpp	/^static Bitu INT17_Handler(void) {$/;"	f	file:
INT1A_Handler	src/ints/bios.cpp	/^static Bitu INT1A_Handler(void) {$/;"	f	file:
INT1C_Handler	src/ints/bios.cpp	/^static Bitu INT1C_Handler(void) {$/;"	f	file:
INT2A_Handler	src/dos/dos_misc.cpp	/^static Bitu INT2A_Handler(void) {$/;"	f	file:
INT2F_Handler	src/dos/dos_misc.cpp	/^static Bitu INT2F_Handler(void) {$/;"	f	file:
INT32	src/debug/debug_disasm.cpp	/^typedef Bit32s INT32;$/;"	t	file:
INT32	src/hardware/fmopl.h	/^typedef signed int		INT32;   \/* signed 32bit   *\/$/;"	t
INT32	src/hardware/ymf262.h	/^typedef signed int		INT32;   \/* signed 32bit   *\/$/;"	t
INT33_Handler	src/ints/mouse.cpp	/^static Bitu INT33_Handler(void) {$/;"	f	file:
INT4B_Handler	src/ints/ems.cpp	/^static Bitu INT4B_Handler() {$/;"	f	file:
INT67_Handler	src/ints/ems.cpp	/^static Bitu INT67_Handler(void) {$/;"	f	file:
INT70_Handler	src/ints/bios.cpp	/^static Bitu INT70_Handler(void) {$/;"	f	file:
INT74_Handler	src/ints/mouse.cpp	/^static Bitu INT74_Handler(void) {$/;"	f	file:
INT8	src/debug/debug_disasm.cpp	/^typedef Bit8s  INT8;$/;"	t	file:
INT8	src/hardware/fmopl.h	/^typedef signed char		INT8;    \/* signed  8bit   *\/$/;"	t
INT8	src/hardware/ymf262.h	/^typedef signed char		INT8;    \/* signed  8bit   *\/$/;"	t
INT8_Handler	src/ints/bios.cpp	/^static Bitu INT8_Handler(void) {$/;"	f	file:
INTRO	src/dos/dos_programs.cpp	/^class INTRO : public Program {$/;"	c	file:
INTRO_ProgramStart	src/dos/dos_programs.cpp	/^static void INTRO_ProgramStart(Program * * make) {$/;"	f	file:
IO	src/hardware/iohandler.cpp	/^	IO(Section* configuration):Module_base(configuration){$/;"	f	class:IO
IO	src/hardware/iohandler.cpp	/^class IO :public Module_base {$/;"	c	file:
IOCTL_CDROM_BASE	src/platform/visualc/ntddcdrm.h	36;"	d
IOCTL_CDROM_CHECK_VERIFY	src/platform/visualc/ntddcdrm.h	38;"	d
IOCTL_CDROM_CURRENT_POSITION	src/platform/visualc/ntddcdrm.h	145;"	d
IOCTL_CDROM_FIND_NEW_DEVICES	src/platform/visualc/ntddcdrm.h	41;"	d
IOCTL_CDROM_GET_CONTROL	src/platform/visualc/ntddcdrm.h	44;"	d
IOCTL_CDROM_GET_DRIVE_GEOMETRY	src/platform/visualc/ntddcdrm.h	47;"	d
IOCTL_CDROM_GET_LAST_SESSION	src/platform/visualc/ntddcdrm.h	50;"	d
IOCTL_CDROM_GET_VOLUME	src/platform/visualc/ntddcdrm.h	53;"	d
IOCTL_CDROM_MEDIA_CATALOG	src/platform/visualc/ntddcdrm.h	146;"	d
IOCTL_CDROM_PAUSE_AUDIO	src/platform/visualc/ntddcdrm.h	56;"	d
IOCTL_CDROM_PLAY_AUDIO_MSF	src/platform/visualc/ntddcdrm.h	59;"	d
IOCTL_CDROM_RAW_READ	src/platform/visualc/ntddcdrm.h	62;"	d
IOCTL_CDROM_READ_Q_CHANNEL	src/platform/visualc/ntddcdrm.h	65;"	d
IOCTL_CDROM_READ_TOC	src/platform/visualc/ntddcdrm.h	68;"	d
IOCTL_CDROM_READ_TOC_EX	src/platform/visualc/ntddcdrm.h	71;"	d
IOCTL_CDROM_RESUME_AUDIO	src/platform/visualc/ntddcdrm.h	74;"	d
IOCTL_CDROM_SEEK_AUDIO_MSF	src/platform/visualc/ntddcdrm.h	77;"	d
IOCTL_CDROM_SET_VOLUME	src/platform/visualc/ntddcdrm.h	80;"	d
IOCTL_CDROM_SIMBAD	src/platform/visualc/ntddcdrm.h	83;"	d
IOCTL_CDROM_STOP_AUDIO	src/platform/visualc/ntddcdrm.h	86;"	d
IOCTL_CDROM_SUB_Q_CHANNEL	src/platform/visualc/ntddcdrm.h	144;"	d
IOCTL_CDROM_TRACK_ISRC	src/platform/visualc/ntddcdrm.h	147;"	d
IOCTL_SCSI_BASE	src/platform/visualc/ntddscsi.h	41;"	d
IOCTL_SCSI_GET_ADDRESS	src/platform/visualc/ntddscsi.h	49;"	d
IOCTL_SCSI_GET_CAPABILITIES	src/platform/visualc/ntddscsi.h	46;"	d
IOCTL_SCSI_GET_INQUIRY_DATA	src/platform/visualc/ntddscsi.h	43;"	d
IOCTL_SCSI_MINIPORT	src/platform/visualc/ntddscsi.h	52;"	d
IOCTL_SCSI_PASS_THROUGH	src/platform/visualc/ntddscsi.h	55;"	d
IOCTL_SCSI_PASS_THROUGH_DIRECT	src/platform/visualc/ntddscsi.h	58;"	d
IOCTL_SCSI_RESCAN_BUS	src/platform/visualc/ntddscsi.h	61;"	d
IODELAY_READ_MICROS	src/hardware/iohandler.cpp	171;"	d	file:
IODELAY_READ_MICROSk	src/hardware/iohandler.cpp	193;"	d	file:
IODELAY_WRITE_MICROS	src/hardware/iohandler.cpp	172;"	d	file:
IODELAY_WRITE_MICROSk	src/hardware/iohandler.cpp	194;"	d	file:
IOF_Entry	src/hardware/iohandler.cpp	/^struct IOF_Entry {$/;"	s	file:
IOF_QUEUESIZE	src/hardware/iohandler.cpp	144;"	d	file:
IOFaultCore	src/hardware/iohandler.cpp	/^static Bits IOFaultCore(void) {$/;"	f	file:
IO_Base	include/inout.h	/^	IO_Base():installed(false){};$/;"	f	class:IO_Base
IO_Base	include/inout.h	/^class IO_Base{$/;"	c
IO_Destroy	src/hardware/iohandler.cpp	/^void IO_Destroy(Section*) {$/;"	f
IO_FreeReadHandler	include/modules.h	/^static void (* IO_FreeReadHandler)(Bit32u port);$/;"	v
IO_FreeReadHandler	src/hardware/iohandler.cpp	/^void IO_FreeReadHandler(Bitu port,Bitu mask,Bitu range) {$/;"	f
IO_FreeWriteHandler	include/modules.h	/^static void (* IO_FreeWriteHandler)(Bit32u port);$/;"	v
IO_FreeWriteHandler	src/hardware/iohandler.cpp	/^void IO_FreeWriteHandler(Bitu port,Bitu mask,Bitu range) {$/;"	f
IO_Init	src/hardware/iohandler.cpp	/^void IO_Init(Section * sect) {$/;"	f
IO_MA	include/inout.h	29;"	d
IO_MAX	include/inout.h	24;"	d
IO_MB	include/inout.h	26;"	d
IO_MD	include/inout.h	28;"	d
IO_MW	include/inout.h	27;"	d
IO_Read	include/inout.h	/^INLINE Bit8u IO_Read(Bitu port){$/;"	f
IO_ReadB	src/hardware/iohandler.cpp	/^Bitu IO_ReadB(Bitu port) {$/;"	f
IO_ReadBlocked	src/hardware/iohandler.cpp	/^static Bitu IO_ReadBlocked(Bitu \/*port*\/,Bitu \/*iolen*\/) {$/;"	f	file:
IO_ReadD	src/hardware/iohandler.cpp	/^Bitu IO_ReadD(Bitu port) {$/;"	f
IO_ReadDefault	src/hardware/iohandler.cpp	/^static Bitu IO_ReadDefault(Bitu port,Bitu iolen) {$/;"	f	file:
IO_ReadHandleObject	include/inout.h	/^class IO_ReadHandleObject: private IO_Base{$/;"	c
IO_ReadHandler	include/inout.h	/^typedef Bitu IO_ReadHandler(Bitu port,Bitu iolen);$/;"	t
IO_ReadHandler	include/modules.h	/^typedef Bit8u (* IO_ReadHandler)(Bit32u port);$/;"	t
IO_ReadW	src/hardware/iohandler.cpp	/^Bitu IO_ReadW(Bitu port) {$/;"	f
IO_RegisterReadHandler	include/modules.h	/^static void (* IO_RegisterReadHandler)(Bit32u port,IO_ReadHandler handler,char * name);$/;"	v
IO_RegisterReadHandler	src/hardware/iohandler.cpp	/^void IO_RegisterReadHandler(Bitu port,IO_ReadHandler * handler,Bitu mask,Bitu range) {$/;"	f
IO_RegisterWriteHandler	include/modules.h	/^static void (* IO_RegisterWriteHandler)(Bit32u port,IO_WriteHandler handler,char * name);$/;"	v
IO_RegisterWriteHandler	src/hardware/iohandler.cpp	/^void IO_RegisterWriteHandler(Bitu port,IO_WriteHandler * handler,Bitu mask,Bitu range) {$/;"	f
IO_SCSI_CAPABILITIES	src/platform/visualc/ntddscsi.h	/^} IO_SCSI_CAPABILITIES, *PIO_SCSI_CAPABILITIES;$/;"	t	typeref:struct:_IO_SCSI_CAPABILITIES
IO_USEC_read_delay	src/hardware/iohandler.cpp	/^inline void IO_USEC_read_delay() {$/;"	f
IO_USEC_read_delay_old	src/hardware/iohandler.cpp	/^inline void IO_USEC_read_delay_old() {$/;"	f
IO_USEC_write_delay	src/hardware/iohandler.cpp	/^inline void IO_USEC_write_delay() {$/;"	f
IO_USEC_write_delay_old	src/hardware/iohandler.cpp	/^inline void IO_USEC_write_delay_old() {$/;"	f
IO_Write	include/inout.h	/^INLINE void IO_Write(Bitu port,Bit8u val) {$/;"	f
IO_WriteB	src/hardware/iohandler.cpp	/^void IO_WriteB(Bitu port,Bitu val) {$/;"	f
IO_WriteBlocked	src/hardware/iohandler.cpp	/^static void IO_WriteBlocked(Bitu \/*port*\/,Bitu \/*val*\/,Bitu \/*iolen*\/) {$/;"	f	file:
IO_WriteD	src/hardware/iohandler.cpp	/^void IO_WriteD(Bitu port,Bitu val) {$/;"	f
IO_WriteDefault	src/hardware/iohandler.cpp	/^void IO_WriteDefault(Bitu port,Bitu val,Bitu iolen) {$/;"	f
IO_WriteHandleObject	include/inout.h	/^class IO_WriteHandleObject: private IO_Base{$/;"	c
IO_WriteHandler	include/inout.h	/^typedef void IO_WriteHandler(Bitu port,Bitu val,Bitu iolen);$/;"	t
IO_WriteHandler	include/modules.h	/^typedef void (* IO_WriteHandler)(Bit32u port,Bit8u value);$/;"	t
IO_WriteW	src/hardware/iohandler.cpp	/^void IO_WriteW(Bitu port,Bitu val) {$/;"	f
IPX	src/hardware/ipx.cpp	/^	IPX(Section* configuration):Module_base(configuration) {$/;"	f	class:IPX
IPX	src/hardware/ipx.cpp	/^class IPX: public Module_base {$/;"	c	file:
IPXBUFFERSIZE	include/ipx.h	107;"	d
IPXHeader	include/ipx.h	/^struct IPXHeader {$/;"	s
IPXNET	src/hardware/ipx.cpp	/^class IPXNET : public Program {$/;"	c	file:
IPXNET_ProgramStart	src/hardware/ipx.cpp	/^static void IPXNET_ProgramStart(Program * * make) {$/;"	f	file:
IPX_AES_EventHandler	src/hardware/ipx.cpp	/^static void IPX_AES_EventHandler(Bitu param)$/;"	f	file:
IPX_ClientLoop	src/hardware/ipx.cpp	/^static void IPX_ClientLoop(void) {$/;"	f	file:
IPX_ESRHandler	src/hardware/ipx.cpp	/^Bitu IPX_ESRHandler(void) {$/;"	f
IPX_Handler	src/hardware/ipx.cpp	/^Bitu IPX_Handler(void) {$/;"	f
IPX_Init	src/hardware/ipx.cpp	/^void IPX_Init(Section* sec) {$/;"	f
IPX_IntHandler	src/hardware/ipx.cpp	/^Bitu IPX_IntHandler(void) {$/;"	f
IPX_Multiplex	src/hardware/ipx.cpp	/^static bool IPX_Multiplex(void) {$/;"	f	file:
IPX_NetworkInit	src/hardware/ipx.cpp	/^void IPX_NetworkInit() {$/;"	f
IPX_ServerLoop	src/hardware/ipxserver.cpp	/^static void IPX_ServerLoop() {$/;"	f	file:
IPX_ShutDown	src/hardware/ipx.cpp	/^void IPX_ShutDown(Section* sec) {$/;"	f
IPX_StartServer	src/hardware/ipxserver.cpp	/^bool IPX_StartServer(Bit16u portnum) {$/;"	f
IPX_StopServer	src/hardware/ipxserver.cpp	/^void IPX_StopServer() {$/;"	f
IPX_isConnectedToServer	src/hardware/ipxserver.cpp	/^bool IPX_isConnectedToServer(Bits tableNum, IPaddress ** ptrAddr) {$/;"	f
IRQ1_Handler	src/ints/bios_keyboard.cpp	/^static Bitu IRQ1_Handler(void) {$/;"	f	file:
IRQHandler	src/hardware/fmopl.cpp	/^	OPL_IRQHANDLER    IRQHandler;	\/* IRQ handler					*\/$/;"	m	struct:fm_opl_f	file:
IRQHandler	src/hardware/ymf262.cpp	/^	OPL3_IRQHANDLER    IRQHandler;	\/* IRQ handler					*\/$/;"	m	struct:__anon192	file:
IRQParam	src/hardware/fmopl.cpp	/^	int IRQParam;					\/* IRQ parameter				*\/$/;"	m	struct:fm_opl_f	file:
IRQParam	src/hardware/ymf262.cpp	/^	int IRQParam;					\/* IRQ parameter				*\/$/;"	m	struct:__anon192	file:
IRQ_Activate	include/modules.h	/^static void (* IRQ_Activate)(Bit32u irq);$/;"	v
IRQ_Block	src/hardware/pic.cpp	/^struct IRQ_Block {$/;"	s	file:
IRQ_Deactivate	include/modules.h	/^static void (* IRQ_Deactivate)(Bit32u irq);$/;"	v
IRQ_EOIHandler	include/modules.h	/^typedef void (* IRQ_EOIHandler)(void);$/;"	t
IRQ_FreeEOIHandler	include/modules.h	/^static void (* IRQ_FreeEOIHandler)(Bit32u irq);$/;"	v
IRQ_RegisterEOIHandler	include/modules.h	/^static void (* IRQ_RegisterEOIHandler)(Bit32u irq,IRQ_EOIHandler handler,char * name);$/;"	v
IRQ_TandyDAC	src/ints/bios.cpp	/^static Bitu IRQ_TandyDAC(void) {$/;"	f	file:
ISO_DIRECTORY	src/dos/drives.h	301;"	d
ISO_FIRST_VD	src/dos/drives.h	305;"	d
ISO_FRAMESIZE	src/dos/drives.h	300;"	d
ISO_HIDDEN	src/dos/drives.h	302;"	d
ISO_MAXPATHNAME	src/dos/drives.h	304;"	d
ISO_MAX_FILENAME_LENGTH	src/dos/drives.h	303;"	d
ISO_MAX_HASH_TABLE_SIZE	src/dos/drives.h	308;"	d
ISR	include/serialport.h	/^	Bit8u ISR;	\/\/	r				Interrupt Status Register$/;"	m	class:CSerial
ISR_CLEAR_VAL	include/serialport.h	223;"	d
ISR_ERROR_VAL	include/serialport.h	224;"	d
ISR_MSR_VAL	include/serialport.h	227;"	d
ISR_OFFSET	include/serialport.h	221;"	d
ISR_RX_VAL	include/serialport.h	225;"	d
ISR_TX_VAL	include/serialport.h	226;"	d
IS_DIR	src/dos/drives.h	306;"	d
IS_EGAVGA_ARCH	include/dosbox.h	67;"	d
IS_HIDDEN	src/dos/drives.h	307;"	d
IS_TANDY_ARCH	include/dosbox.h	66;"	d
IS_VGA_ARCH	include/dosbox.h	68;"	d
Ib	src/debug/disasm_tables.h	/^	Ib,Ibs,Iw,Iv,Ap,$/;"	e	enum:__anon111
Ibs	src/debug/disasm_tables.h	/^	Ib,Ibs,Iw,Iv,Ap,$/;"	e	enum:__anon111
IllegalOption	src/cpu/core_dyn_x86.cpp	/^static void IllegalOption(const char* msg) {$/;"	f	file:
IllegalOptionDynrec	src/cpu/core_dynrec.cpp	/^static void IllegalOptionDynrec(const char* msg) {$/;"	f	file:
IllegalPageHandler	src/hardware/memory.cpp	/^	IllegalPageHandler() {$/;"	f	class:IllegalPageHandler
IllegalPageHandler	src/hardware/memory.cpp	/^class IllegalPageHandler : public PageHandler {$/;"	c	file:
Incr	src/hardware/fmopl.cpp	/^	UINT32	Incr;		\/* frequency counter step		*\/$/;"	m	struct:__anon153	file:
Incr	src/hardware/ymf262.cpp	/^	UINT32	Incr;		\/* frequency counter step		*\/$/;"	m	struct:__anon190	file:
IncreaseFrameSkip	src/gui/render.cpp	/^void IncreaseFrameSkip(bool pressed) {$/;"	f
IncreaseHue	src/hardware/vga_other.cpp	/^static void IncreaseHue(bool pressed) {$/;"	f	file:
IndexNumber	src/platform/visualc/ntddcdrm.h	/^  UCHAR  IndexNumber;$/;"	m	struct:_SUB_Q_CURRENT_POSITION
InfoByte0	src/dos/scsidefs.h	/^    BYTE    InfoByte0;          \/\/ Information MSB$/;"	m	struct:__anon123
InfoByte1	src/dos/scsidefs.h	/^    BYTE    InfoByte1;          \/\/ Information MID$/;"	m	struct:__anon123
InfoByte2	src/dos/scsidefs.h	/^    BYTE    InfoByte2;          \/\/ Information MID$/;"	m	struct:__anon123
InfoByte3	src/dos/scsidefs.h	/^    BYTE    InfoByte3;          \/\/ Information LSB$/;"	m	struct:__anon123
Init	src/dos/dos_classes.cpp	/^void DOS_SDA::Init() {$/;"	f	class:DOS_SDA
Init	src/dos/drives.cpp	/^void DriveManager::Init(Section* \/* sec *\/) {$/;"	f	class:DriveManager
Init	src/hardware/adlib.cpp	/^		virtual void Init( Bitu rate ) {$/;"	f	struct:OPL2::Handler
Init	src/hardware/adlib.cpp	/^		virtual void Init( Bitu rate ) {$/;"	f	struct:THEOPL3::Handler
Init	src/hardware/adlib.cpp	/^void Module::Init( Mode m ) {$/;"	f	class:Adlib::Module
Init	src/misc/setup.cpp	/^void Config::Init() {$/;"	f	class:Config
InitBiosSegment	src/ints/bios_keyboard.cpp	/^static void InitBiosSegment(void) {$/;"	f	file:
InitFlagsOptimization	src/cpu/core_dynrec/decoder_basic.h	/^static void InitFlagsOptimization(void) {$/;"	f
InitFlagsOptimization	src/cpu/core_dynrec/save/decoder_basic.h	/^static void InitFlagsOptimization(void) {$/;"	f
InitNewMedia	src/dos/cdrom.h	/^	virtual void	InitNewMedia		(void) {};$/;"	f	class:CDROM_Interface
InitNewMedia	src/dos/cdrom.h	/^	void	InitNewMedia		(void) { Close(); Open(); };$/;"	f	class:CDROM_Interface_Ioctl
InitNewMedia	src/dos/cdrom_image.cpp	/^void CDROM_Interface_Image::InitNewMedia()$/;"	f	class:CDROM_Interface_Image
InitNewMedia	src/dos/dos_mscdex.cpp	/^void CMscdex::InitNewMedia(Bit8u subUnit) {$/;"	f	class:CMscdex
InitPage	src/cpu/paging.cpp	/^	Bitu InitPage(Bitu lin_addr,bool writing) {$/;"	f	class:InitPageHandler
InitPage	src/cpu/paging.cpp	/^	void InitPage(Bitu lin_addr,Bitu val) {$/;"	f	class:InitPageUserROHandler
InitPageCheckOnly	src/cpu/paging.cpp	/^	Bitu InitPageCheckOnly(Bitu lin_addr,Bitu val) {$/;"	f	class:InitPageUserROHandler
InitPageCheckOnly	src/cpu/paging.cpp	/^	bool InitPageCheckOnly(Bitu lin_addr,bool writing) {$/;"	f	class:InitPageHandler
InitPageCheckPresence	src/cpu/paging.cpp	/^static INLINE void InitPageCheckPresence(PhysPt lin_addr,bool writing,X86PageEntry& table,X86PageEntry& entry) {$/;"	f	file:
InitPageCheckPresence_CheckOnly	src/cpu/paging.cpp	/^static INLINE bool InitPageCheckPresence_CheckOnly(PhysPt lin_addr,bool writing,X86PageEntry& table,X86PageEntry& entry) {$/;"	f	file:
InitPageForced	src/cpu/paging.cpp	/^	void InitPageForced(Bitu lin_addr) {$/;"	f	class:InitPageHandler
InitPageForced	src/cpu/paging.cpp	/^	void InitPageForced(Bitu lin_addr) {$/;"	f	class:InitPageUserROHandler
InitPageHandler	src/cpu/paging.cpp	/^	InitPageHandler() {$/;"	f	class:InitPageHandler
InitPageHandler	src/cpu/paging.cpp	/^class InitPageHandler : public PageHandler {$/;"	c	file:
InitPageUpdateLink	src/cpu/paging.cpp	/^static INLINE void InitPageUpdateLink(Bitu relink,PhysPt addr) {$/;"	f	file:
InitPageUserROHandler	src/cpu/paging.cpp	/^	InitPageUserROHandler() {$/;"	f	class:InitPageUserROHandler
InitPageUserROHandler	src/cpu/paging.cpp	/^class InitPageUserROHandler : public PageHandler {$/;"	c	file:
InitPage_CheckUseraccess	src/cpu/paging.cpp	/^static INLINE bool InitPage_CheckUseraccess(Bitu u1,Bitu u2) {$/;"	f	file:
InitTLBInt	src/cpu/paging.cpp	/^static INLINE void InitTLBInt(tlb_entry *bank) {$/;"	f	file:
Init_Registers	src/hardware/serialport/serialport.cpp	/^void CSerial::Init_Registers () {$/;"	f	class:CSerial
InitializeDrive	src/dos/drives.cpp	/^void DriveManager::InitializeDrive(int drive) {$/;"	f	class:DriveManager
InitializeJoysticks	src/gui/sdl_mapper.cpp	/^static void InitializeJoysticks(void) {$/;"	f	file:
InitiatorBusId	src/platform/visualc/ntddscsi.h	/^	UCHAR  InitiatorBusId;$/;"	m	struct:_SCSI_BUS_DATA
Input	src/libs/gui_tk/gui_tk.h	/^	Input(Window *parent, int x, int y, int w, int h = 0) :$/;"	f	class:GUI::Input
Input	src/libs/gui_tk/gui_tk.h	/^class Input : public Window, public Timer_Callback, public ActionEventSource {$/;"	c	namespace:GUI
InputCommand	src/shell/shell_misc.cpp	/^void DOS_Shell::InputCommand(char * line) {$/;"	f	class:DOS_Shell
InquiryData	src/platform/visualc/ntddscsi.h	/^	UCHAR  InquiryData[1];$/;"	m	struct:_SCSI_INQUIRY_DATA
InquiryDataLength	src/platform/visualc/ntddscsi.h	/^	ULONG  InquiryDataLength;$/;"	m	struct:_SCSI_INQUIRY_DATA
InquiryDataOffset	src/platform/visualc/ntddscsi.h	/^	ULONG  InquiryDataOffset;$/;"	m	struct:_SCSI_BUS_DATA
Insert	src/libs/gui_tk/gui_tk.h	/^		Home, End, PageUp, PageDown, Insert, Delete, Menu,$/;"	e	enum:GUI::Key::Special
InsertVariable	src/debug/debug.cpp	/^void CDebugVar::InsertVariable(char* name, PhysPt adr)$/;"	f	class:CDebugVar
Install	src/cpu/callback.cpp	/^void CALLBACK_HandlerObject::Install(CallBack_Handler handler,Bitu type,PhysPt addr,const char* description){$/;"	f	class:CALLBACK_HandlerObject
Install	src/cpu/callback.cpp	/^void CALLBACK_HandlerObject::Install(CallBack_Handler handler,Bitu type,const char* description){$/;"	f	class:CALLBACK_HandlerObject
Install	src/hardware/iohandler.cpp	/^void IO_ReadHandleObject::Install(Bitu port,IO_ReadHandler * handler,Bitu mask,Bitu range) {$/;"	f	class:IO_ReadHandleObject
Install	src/hardware/iohandler.cpp	/^void IO_WriteHandleObject::Install(Bitu port,IO_WriteHandler * handler,Bitu mask,Bitu range) {$/;"	f	class:IO_WriteHandleObject
Install	src/hardware/mixer.cpp	/^MixerChannel* MixerObject::Install(MIXER_Handler handler,Bitu freq,const char * name){$/;"	f	class:MixerObject
Install	src/shell/shell.cpp	/^void AutoexecObject::Install(const std::string &in) {$/;"	f	class:AutoexecObject
InstallBefore	src/shell/shell.cpp	/^void AutoexecObject::InstallBefore(const std::string &in) {$/;"	f	class:AutoexecObject
InstallationSuccessful	include/serialport.h	/^	bool InstallationSuccessful;\/\/ check after constructing. If$/;"	m	class:CSerial
Int10Data	src/ints/int10.h	/^} Int10Data;$/;"	t	typeref:struct:__anon196
InvalidHandle	src/ints/xms.cpp	/^static INLINE bool InvalidHandle(Bitu handle) {$/;"	f	file:
InvalidateFlags	src/cpu/core_dynrec/decoder_basic.h	/^static void InvalidateFlags(void) {$/;"	f
InvalidateFlags	src/cpu/core_dynrec/decoder_basic.h	/^static void InvalidateFlags(void* current_simple_function,Bitu flags_type) {$/;"	f
InvalidateFlags	src/cpu/core_dynrec/save/decoder_basic.h	/^static void InvalidateFlags(void) {$/;"	f
InvalidateFlags	src/cpu/core_dynrec/save/decoder_basic.h	/^static void InvalidateFlags(void* current_simple_function,Bitu flags_type) {$/;"	f
InvalidateFlagsPartially	src/cpu/core_dynrec/decoder_basic.h	/^static void InvalidateFlagsPartially(void* current_simple_function,Bitu flags_type) {$/;"	f
InvalidateFlagsPartially	src/cpu/core_dynrec/decoder_basic.h	/^static void InvalidateFlagsPartially(void* current_simple_function,DRC_PTR_SIZE_IM cpos,Bitu flags_type) {$/;"	f
InvalidateFlagsPartially	src/cpu/core_dynrec/save/decoder_basic.h	/^static void InvalidateFlagsPartially(void* current_simple_function,Bitu flags_type) {$/;"	f
InvalidateFlagsPartially	src/cpu/core_dynrec/save/decoder_basic.h	/^static void InvalidateFlagsPartially(void* current_simple_function,DRC_PTR_SIZE_IM cpos,Bitu flags_type) {$/;"	f
InvalidateRange	src/cpu/core_dyn_x86/cache.h	/^	bool InvalidateRange(Bitu start,Bitu end) {$/;"	f	class:CodePageHandler
InvalidateRange	src/cpu/core_dynrec/cache.h	/^	bool InvalidateRange(Bitu start,Bitu end) {$/;"	f	class:CodePageHandlerDynRec
InvalidateRange	src/cpu/core_dynrec/save/cache.h	/^	bool InvalidateRange(Bitu start,Bitu end) {$/;"	f	class:CodePageHandlerDynRec
Is386	include/cpu.h	/^	Bitu Is386(void) {$/;"	f	class:TSS_Descriptor
IsActive	src/debug/debug.cpp	/^	bool					IsActive		(void)						{ return active; };$/;"	f	class:CBreakpoint
IsActive	src/debug/debug.cpp	/^	bool IsActive() { return active; };$/;"	f	class:DEBUG
IsBreakpoint	src/debug/debug.cpp	/^bool CBreakpoint::IsBreakpoint(PhysPt adr) $/;"	f	class:CBreakpoint
IsBreakpointDrawn	src/debug/debug.cpp	/^bool CBreakpoint::IsBreakpointDrawn(PhysPt adr) $/;"	f	class:CBreakpoint
IsBusy	include/cpu.h	/^	Bitu IsBusy(void) {$/;"	f	class:TSS_Descriptor
IsCachedIn	src/dos/drive_cache.cpp	/^bool DOS_Drive_Cache::IsCachedIn(CFileInfo* curDir)$/;"	f	class:DOS_Drive_Cache
IsCdrw	src/platform/visualc/ntddcdrm.h	/^  UCHAR  IsCdrw : 1;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
IsEnhancedKey	src/ints/bios_keyboard.cpp	/^static bool IsEnhancedKey(Bit16u &key) {$/;"	f	file:
IsName	include/dos_system.h	/^	virtual bool	IsName(const char* _name)	{ if (!name) return false; return strcasecmp(name,_name)==0; };$/;"	f	class:DOS_File
IsOpen	include/dos_system.h	/^	virtual bool	IsOpen()					{ return open; };$/;"	f	class:DOS_File
IsTrigger	src/gui/sdl_mapper.cpp	/^	virtual bool IsTrigger(void) {$/;"	f	class:CContinuousEvent
IsTrigger	src/gui/sdl_mapper.cpp	/^	virtual bool IsTrigger(void) {$/;"	f	class:CTriggeredEvent
IsValid	src/cpu/cpu.cpp	/^	bool IsValid(void) {$/;"	f	class:TaskStateSegment
IsValidDrive	src/dos/dos_mscdex.cpp	/^bool CMscdex::IsValidDrive(Bit16u _drive)$/;"	f	class:CMscdex
Iv	src/debug/disasm_tables.h	/^	Ib,Ibs,Iw,Iv,Ap,$/;"	e	enum:__anon111
Iw	src/debug/disasm_tables.h	/^	Ib,Ibs,Iw,Iv,Ap,$/;"	e	enum:__anon111
JOYSTICK	src/hardware/joystick.cpp	/^	JOYSTICK(Section* configuration):Module_base(configuration){$/;"	f	class:JOYSTICK
JOYSTICK	src/hardware/joystick.cpp	/^class JOYSTICK:public Module_base{$/;"	c	file:
JOYSTICK_Button	src/hardware/joystick.cpp	/^void JOYSTICK_Button(Bitu which,Bitu num,bool pressed) {$/;"	f
JOYSTICK_Destroy	src/hardware/joystick.cpp	/^void JOYSTICK_Destroy(Section* sec) {$/;"	f
JOYSTICK_Enable	src/hardware/joystick.cpp	/^void JOYSTICK_Enable(Bitu which,bool enabled) {$/;"	f
JOYSTICK_GetButton	src/hardware/joystick.cpp	/^bool JOYSTICK_GetButton(Bitu which, Bitu num) {$/;"	f
JOYSTICK_GetMove_X	src/hardware/joystick.cpp	/^float JOYSTICK_GetMove_X(Bitu which) {$/;"	f
JOYSTICK_GetMove_Y	src/hardware/joystick.cpp	/^float JOYSTICK_GetMove_Y(Bitu which) {$/;"	f
JOYSTICK_Init	src/hardware/joystick.cpp	/^void JOYSTICK_Init(Section* sec) {$/;"	f
JOYSTICK_IsEnabled	src/hardware/joystick.cpp	/^bool JOYSTICK_IsEnabled(Bitu which) {$/;"	f
JOYSTICK_Move_X	src/hardware/joystick.cpp	/^void JOYSTICK_Move_X(Bitu which,float x) {$/;"	f
JOYSTICK_Move_Y	src/hardware/joystick.cpp	/^void JOYSTICK_Move_Y(Bitu which,float y) {$/;"	f
JOY_2AXIS	include/joystick.h	/^	JOY_2AXIS,$/;"	e	enum:JoystickType
JOY_4AXIS	include/joystick.h	/^	JOY_4AXIS,$/;"	e	enum:JoystickType
JOY_4AXIS_2	include/joystick.h	/^	JOY_4AXIS_2,$/;"	e	enum:JoystickType
JOY_AUTO	include/joystick.h	/^	JOY_AUTO,$/;"	e	enum:JoystickType
JOY_CH	include/joystick.h	/^	JOY_CH$/;"	e	enum:JoystickType
JOY_FCS	include/joystick.h	/^	JOY_FCS,$/;"	e	enum:JoystickType
JOY_NONE	include/joystick.h	/^	JOY_NONE,$/;"	e	enum:JoystickType
JOY_S_CONSTANT	src/hardware/joystick.cpp	33;"	d	file:
Jb	src/debug/disasm_tables.h	/^	Jb,Jv,$/;"	e	enum:__anon111
JoyStick	src/hardware/joystick.cpp	/^struct JoyStick {$/;"	s	file:
JoystickType	include/joystick.h	/^enum JoystickType {$/;"	g
JumpCond16_b	src/cpu/core_normal/support.h	48;"	d
JumpCond16_w	src/cpu/core_normal/support.h	54;"	d
JumpCond32_b	src/cpu/core_normal/support.h	60;"	d
JumpCond32_d	src/cpu/core_normal/support.h	66;"	d
Jv	src/debug/disasm_tables.h	/^	Jb,Jv,$/;"	e	enum:__anon111
KBD_0	include/keyboard.h	/^	KBD_1,	KBD_2,	KBD_3,	KBD_4,	KBD_5,	KBD_6,	KBD_7,	KBD_8,	KBD_9,	KBD_0,		$/;"	e	enum:KBD_KEYS
KBD_1	include/keyboard.h	/^	KBD_1,	KBD_2,	KBD_3,	KBD_4,	KBD_5,	KBD_6,	KBD_7,	KBD_8,	KBD_9,	KBD_0,		$/;"	e	enum:KBD_KEYS
KBD_2	include/keyboard.h	/^	KBD_1,	KBD_2,	KBD_3,	KBD_4,	KBD_5,	KBD_6,	KBD_7,	KBD_8,	KBD_9,	KBD_0,		$/;"	e	enum:KBD_KEYS
KBD_3	include/keyboard.h	/^	KBD_1,	KBD_2,	KBD_3,	KBD_4,	KBD_5,	KBD_6,	KBD_7,	KBD_8,	KBD_9,	KBD_0,		$/;"	e	enum:KBD_KEYS
KBD_4	include/keyboard.h	/^	KBD_1,	KBD_2,	KBD_3,	KBD_4,	KBD_5,	KBD_6,	KBD_7,	KBD_8,	KBD_9,	KBD_0,		$/;"	e	enum:KBD_KEYS
KBD_5	include/keyboard.h	/^	KBD_1,	KBD_2,	KBD_3,	KBD_4,	KBD_5,	KBD_6,	KBD_7,	KBD_8,	KBD_9,	KBD_0,		$/;"	e	enum:KBD_KEYS
KBD_6	include/keyboard.h	/^	KBD_1,	KBD_2,	KBD_3,	KBD_4,	KBD_5,	KBD_6,	KBD_7,	KBD_8,	KBD_9,	KBD_0,		$/;"	e	enum:KBD_KEYS
KBD_7	include/keyboard.h	/^	KBD_1,	KBD_2,	KBD_3,	KBD_4,	KBD_5,	KBD_6,	KBD_7,	KBD_8,	KBD_9,	KBD_0,		$/;"	e	enum:KBD_KEYS
KBD_8	include/keyboard.h	/^	KBD_1,	KBD_2,	KBD_3,	KBD_4,	KBD_5,	KBD_6,	KBD_7,	KBD_8,	KBD_9,	KBD_0,		$/;"	e	enum:KBD_KEYS
KBD_9	include/keyboard.h	/^	KBD_1,	KBD_2,	KBD_3,	KBD_4,	KBD_5,	KBD_6,	KBD_7,	KBD_8,	KBD_9,	KBD_0,		$/;"	e	enum:KBD_KEYS
KBD_CCD	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_CCI	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_DFS	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_EXIT	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_IFS	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_KEYS	include/keyboard.h	/^enum KBD_KEYS {$/;"	g
KBD_LAST	include/keyboard.h	/^	KBD_LAST,$/;"	e	enum:KBD_KEYS
KBD_LMC	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_LOCKKEY	include/keyboard.h	55;"	d
KBD_MMC	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_MNC	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_NONE	include/keyboard.h	/^	KBD_NONE,$/;"	e	enum:KBD_KEYS
KBD_NT	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_PT	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_RMC	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_SC	include/keyboard.h	/^	KBD_CCI,KBD_CCD,KBD_IFS,KBD_DFS,KBD_RMC,KBD_MNC,KBD_NT,KBD_PT,KBD_EXIT,KBD_LMC,KBD_SC,KBD_MMC$/;"	e	enum:KBD_KEYS
KBD_a	include/keyboard.h	/^	KBD_a,	KBD_s,	KBD_d,	KBD_f,	KBD_g,	KBD_h,	KBD_j,	KBD_k,	KBD_l,	KBD_z,$/;"	e	enum:KBD_KEYS
KBD_b	include/keyboard.h	/^	KBD_x,	KBD_c,	KBD_v,	KBD_b,	KBD_n,	KBD_m,	$/;"	e	enum:KBD_KEYS
KBD_backslash	include/keyboard.h	/^	KBD_grave,KBD_minus,KBD_equals,KBD_backslash,KBD_leftbracket,KBD_rightbracket,$/;"	e	enum:KBD_KEYS
KBD_backspace	include/keyboard.h	/^	KBD_esc,KBD_tab,KBD_backspace,KBD_enter,KBD_space,$/;"	e	enum:KBD_KEYS
KBD_c	include/keyboard.h	/^	KBD_x,	KBD_c,	KBD_v,	KBD_b,	KBD_n,	KBD_m,	$/;"	e	enum:KBD_KEYS
KBD_capslock	include/keyboard.h	/^	KBD_capslock,KBD_scrolllock,KBD_numlock,$/;"	e	enum:KBD_KEYS
KBD_comma	include/keyboard.h	/^	KBD_semicolon,KBD_quote,KBD_period,KBD_comma,KBD_slash,KBD_extra_lt_gt,$/;"	e	enum:KBD_KEYS
KBD_d	include/keyboard.h	/^	KBD_a,	KBD_s,	KBD_d,	KBD_f,	KBD_g,	KBD_h,	KBD_j,	KBD_k,	KBD_l,	KBD_z,$/;"	e	enum:KBD_KEYS
KBD_delete	include/keyboard.h	/^	KBD_insert,KBD_home,KBD_pageup,KBD_delete,KBD_end,KBD_pagedown,$/;"	e	enum:KBD_KEYS
KBD_down	include/keyboard.h	/^	KBD_left,KBD_up,KBD_down,KBD_right,$/;"	e	enum:KBD_KEYS
KBD_e	include/keyboard.h	/^	KBD_q,	KBD_w,	KBD_e,	KBD_r,	KBD_t,	KBD_y,	KBD_u,	KBD_i,	KBD_o,	KBD_p,	$/;"	e	enum:KBD_KEYS
KBD_end	include/keyboard.h	/^	KBD_insert,KBD_home,KBD_pageup,KBD_delete,KBD_end,KBD_pagedown,$/;"	e	enum:KBD_KEYS
KBD_enter	include/keyboard.h	/^	KBD_esc,KBD_tab,KBD_backspace,KBD_enter,KBD_space,$/;"	e	enum:KBD_KEYS
KBD_equals	include/keyboard.h	/^	KBD_grave,KBD_minus,KBD_equals,KBD_backslash,KBD_leftbracket,KBD_rightbracket,$/;"	e	enum:KBD_KEYS
KBD_esc	include/keyboard.h	/^	KBD_esc,KBD_tab,KBD_backspace,KBD_enter,KBD_space,$/;"	e	enum:KBD_KEYS
KBD_extra_lt_gt	include/keyboard.h	/^	KBD_semicolon,KBD_quote,KBD_period,KBD_comma,KBD_slash,KBD_extra_lt_gt,$/;"	e	enum:KBD_KEYS
KBD_f	include/keyboard.h	/^	KBD_a,	KBD_s,	KBD_d,	KBD_f,	KBD_g,	KBD_h,	KBD_j,	KBD_k,	KBD_l,	KBD_z,$/;"	e	enum:KBD_KEYS
KBD_f1	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_f10	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_f11	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_f12	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_f2	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_f3	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_f4	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_f5	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_f6	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_f7	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_f8	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_f9	include/keyboard.h	/^	KBD_f1,	KBD_f2,	KBD_f3,	KBD_f4,	KBD_f5,	KBD_f6,	KBD_f7,	KBD_f8,	KBD_f9,	KBD_f10,KBD_f11,KBD_f12,$/;"	e	enum:KBD_KEYS
KBD_g	include/keyboard.h	/^	KBD_a,	KBD_s,	KBD_d,	KBD_f,	KBD_g,	KBD_h,	KBD_j,	KBD_k,	KBD_l,	KBD_z,$/;"	e	enum:KBD_KEYS
KBD_grave	include/keyboard.h	/^	KBD_grave,KBD_minus,KBD_equals,KBD_backslash,KBD_leftbracket,KBD_rightbracket,$/;"	e	enum:KBD_KEYS
KBD_h	include/keyboard.h	/^	KBD_a,	KBD_s,	KBD_d,	KBD_f,	KBD_g,	KBD_h,	KBD_j,	KBD_k,	KBD_l,	KBD_z,$/;"	e	enum:KBD_KEYS
KBD_home	include/keyboard.h	/^	KBD_insert,KBD_home,KBD_pageup,KBD_delete,KBD_end,KBD_pagedown,$/;"	e	enum:KBD_KEYS
KBD_i	include/keyboard.h	/^	KBD_q,	KBD_w,	KBD_e,	KBD_r,	KBD_t,	KBD_y,	KBD_u,	KBD_i,	KBD_o,	KBD_p,	$/;"	e	enum:KBD_KEYS
KBD_insert	include/keyboard.h	/^	KBD_insert,KBD_home,KBD_pageup,KBD_delete,KBD_end,KBD_pagedown,$/;"	e	enum:KBD_KEYS
KBD_j	include/keyboard.h	/^	KBD_a,	KBD_s,	KBD_d,	KBD_f,	KBD_g,	KBD_h,	KBD_j,	KBD_k,	KBD_l,	KBD_z,$/;"	e	enum:KBD_KEYS
KBD_k	include/keyboard.h	/^	KBD_a,	KBD_s,	KBD_d,	KBD_f,	KBD_g,	KBD_h,	KBD_j,	KBD_k,	KBD_l,	KBD_z,$/;"	e	enum:KBD_KEYS
KBD_kp0	include/keyboard.h	/^	KBD_kp1,KBD_kp2,KBD_kp3,KBD_kp4,KBD_kp5,KBD_kp6,KBD_kp7,KBD_kp8,KBD_kp9,KBD_kp0,$/;"	e	enum:KBD_KEYS
KBD_kp1	include/keyboard.h	/^	KBD_kp1,KBD_kp2,KBD_kp3,KBD_kp4,KBD_kp5,KBD_kp6,KBD_kp7,KBD_kp8,KBD_kp9,KBD_kp0,$/;"	e	enum:KBD_KEYS
KBD_kp2	include/keyboard.h	/^	KBD_kp1,KBD_kp2,KBD_kp3,KBD_kp4,KBD_kp5,KBD_kp6,KBD_kp7,KBD_kp8,KBD_kp9,KBD_kp0,$/;"	e	enum:KBD_KEYS
KBD_kp3	include/keyboard.h	/^	KBD_kp1,KBD_kp2,KBD_kp3,KBD_kp4,KBD_kp5,KBD_kp6,KBD_kp7,KBD_kp8,KBD_kp9,KBD_kp0,$/;"	e	enum:KBD_KEYS
KBD_kp4	include/keyboard.h	/^	KBD_kp1,KBD_kp2,KBD_kp3,KBD_kp4,KBD_kp5,KBD_kp6,KBD_kp7,KBD_kp8,KBD_kp9,KBD_kp0,$/;"	e	enum:KBD_KEYS
KBD_kp5	include/keyboard.h	/^	KBD_kp1,KBD_kp2,KBD_kp3,KBD_kp4,KBD_kp5,KBD_kp6,KBD_kp7,KBD_kp8,KBD_kp9,KBD_kp0,$/;"	e	enum:KBD_KEYS
KBD_kp6	include/keyboard.h	/^	KBD_kp1,KBD_kp2,KBD_kp3,KBD_kp4,KBD_kp5,KBD_kp6,KBD_kp7,KBD_kp8,KBD_kp9,KBD_kp0,$/;"	e	enum:KBD_KEYS
KBD_kp7	include/keyboard.h	/^	KBD_kp1,KBD_kp2,KBD_kp3,KBD_kp4,KBD_kp5,KBD_kp6,KBD_kp7,KBD_kp8,KBD_kp9,KBD_kp0,$/;"	e	enum:KBD_KEYS
KBD_kp8	include/keyboard.h	/^	KBD_kp1,KBD_kp2,KBD_kp3,KBD_kp4,KBD_kp5,KBD_kp6,KBD_kp7,KBD_kp8,KBD_kp9,KBD_kp0,$/;"	e	enum:KBD_KEYS
KBD_kp9	include/keyboard.h	/^	KBD_kp1,KBD_kp2,KBD_kp3,KBD_kp4,KBD_kp5,KBD_kp6,KBD_kp7,KBD_kp8,KBD_kp9,KBD_kp0,$/;"	e	enum:KBD_KEYS
KBD_kpdivide	include/keyboard.h	/^	KBD_kpdivide,KBD_kpmultiply,KBD_kpminus,KBD_kpplus,KBD_kpenter,KBD_kpperiod,$/;"	e	enum:KBD_KEYS
KBD_kpenter	include/keyboard.h	/^	KBD_kpdivide,KBD_kpmultiply,KBD_kpminus,KBD_kpplus,KBD_kpenter,KBD_kpperiod,$/;"	e	enum:KBD_KEYS
KBD_kpminus	include/keyboard.h	/^	KBD_kpdivide,KBD_kpmultiply,KBD_kpminus,KBD_kpplus,KBD_kpenter,KBD_kpperiod,$/;"	e	enum:KBD_KEYS
KBD_kpmultiply	include/keyboard.h	/^	KBD_kpdivide,KBD_kpmultiply,KBD_kpminus,KBD_kpplus,KBD_kpenter,KBD_kpperiod,$/;"	e	enum:KBD_KEYS
KBD_kpperiod	include/keyboard.h	/^	KBD_kpdivide,KBD_kpmultiply,KBD_kpminus,KBD_kpplus,KBD_kpenter,KBD_kpperiod,$/;"	e	enum:KBD_KEYS
KBD_kpplus	include/keyboard.h	/^	KBD_kpdivide,KBD_kpmultiply,KBD_kpminus,KBD_kpplus,KBD_kpenter,KBD_kpperiod,$/;"	e	enum:KBD_KEYS
KBD_l	include/keyboard.h	/^	KBD_a,	KBD_s,	KBD_d,	KBD_f,	KBD_g,	KBD_h,	KBD_j,	KBD_k,	KBD_l,	KBD_z,$/;"	e	enum:KBD_KEYS
KBD_left	include/keyboard.h	/^	KBD_left,KBD_up,KBD_down,KBD_right,$/;"	e	enum:KBD_KEYS
KBD_leftalt	include/keyboard.h	/^	KBD_leftalt,KBD_rightalt,KBD_leftctrl,KBD_rightctrl,KBD_leftshift,KBD_rightshift,$/;"	e	enum:KBD_KEYS
KBD_leftbracket	include/keyboard.h	/^	KBD_grave,KBD_minus,KBD_equals,KBD_backslash,KBD_leftbracket,KBD_rightbracket,$/;"	e	enum:KBD_KEYS
KBD_leftctrl	include/keyboard.h	/^	KBD_leftalt,KBD_rightalt,KBD_leftctrl,KBD_rightctrl,KBD_leftshift,KBD_rightshift,$/;"	e	enum:KBD_KEYS
KBD_leftshift	include/keyboard.h	/^	KBD_leftalt,KBD_rightalt,KBD_leftctrl,KBD_rightctrl,KBD_leftshift,KBD_rightshift,$/;"	e	enum:KBD_KEYS
KBD_m	include/keyboard.h	/^	KBD_x,	KBD_c,	KBD_v,	KBD_b,	KBD_n,	KBD_m,	$/;"	e	enum:KBD_KEYS
KBD_minus	include/keyboard.h	/^	KBD_grave,KBD_minus,KBD_equals,KBD_backslash,KBD_leftbracket,KBD_rightbracket,$/;"	e	enum:KBD_KEYS
KBD_n	include/keyboard.h	/^	KBD_x,	KBD_c,	KBD_v,	KBD_b,	KBD_n,	KBD_m,	$/;"	e	enum:KBD_KEYS
KBD_numlock	include/keyboard.h	/^	KBD_capslock,KBD_scrolllock,KBD_numlock,$/;"	e	enum:KBD_KEYS
KBD_o	include/keyboard.h	/^	KBD_q,	KBD_w,	KBD_e,	KBD_r,	KBD_t,	KBD_y,	KBD_u,	KBD_i,	KBD_o,	KBD_p,	$/;"	e	enum:KBD_KEYS
KBD_p	include/keyboard.h	/^	KBD_q,	KBD_w,	KBD_e,	KBD_r,	KBD_t,	KBD_y,	KBD_u,	KBD_i,	KBD_o,	KBD_p,	$/;"	e	enum:KBD_KEYS
KBD_pagedown	include/keyboard.h	/^	KBD_insert,KBD_home,KBD_pageup,KBD_delete,KBD_end,KBD_pagedown,$/;"	e	enum:KBD_KEYS
KBD_pageup	include/keyboard.h	/^	KBD_insert,KBD_home,KBD_pageup,KBD_delete,KBD_end,KBD_pagedown,$/;"	e	enum:KBD_KEYS
KBD_pause	include/keyboard.h	/^	KBD_printscreen,KBD_pause,$/;"	e	enum:KBD_KEYS
KBD_period	include/keyboard.h	/^	KBD_semicolon,KBD_quote,KBD_period,KBD_comma,KBD_slash,KBD_extra_lt_gt,$/;"	e	enum:KBD_KEYS
KBD_printscreen	include/keyboard.h	/^	KBD_printscreen,KBD_pause,$/;"	e	enum:KBD_KEYS
KBD_q	include/keyboard.h	/^	KBD_q,	KBD_w,	KBD_e,	KBD_r,	KBD_t,	KBD_y,	KBD_u,	KBD_i,	KBD_o,	KBD_p,	$/;"	e	enum:KBD_KEYS
KBD_quote	include/keyboard.h	/^	KBD_semicolon,KBD_quote,KBD_period,KBD_comma,KBD_slash,KBD_extra_lt_gt,$/;"	e	enum:KBD_KEYS
KBD_r	include/keyboard.h	/^	KBD_q,	KBD_w,	KBD_e,	KBD_r,	KBD_t,	KBD_y,	KBD_u,	KBD_i,	KBD_o,	KBD_p,	$/;"	e	enum:KBD_KEYS
KBD_right	include/keyboard.h	/^	KBD_left,KBD_up,KBD_down,KBD_right,$/;"	e	enum:KBD_KEYS
KBD_rightalt	include/keyboard.h	/^	KBD_leftalt,KBD_rightalt,KBD_leftctrl,KBD_rightctrl,KBD_leftshift,KBD_rightshift,$/;"	e	enum:KBD_KEYS
KBD_rightbracket	include/keyboard.h	/^	KBD_grave,KBD_minus,KBD_equals,KBD_backslash,KBD_leftbracket,KBD_rightbracket,$/;"	e	enum:KBD_KEYS
KBD_rightctrl	include/keyboard.h	/^	KBD_leftalt,KBD_rightalt,KBD_leftctrl,KBD_rightctrl,KBD_leftshift,KBD_rightshift,$/;"	e	enum:KBD_KEYS
KBD_rightshift	include/keyboard.h	/^	KBD_leftalt,KBD_rightalt,KBD_leftctrl,KBD_rightctrl,KBD_leftshift,KBD_rightshift,$/;"	e	enum:KBD_KEYS
KBD_s	include/keyboard.h	/^	KBD_a,	KBD_s,	KBD_d,	KBD_f,	KBD_g,	KBD_h,	KBD_j,	KBD_k,	KBD_l,	KBD_z,$/;"	e	enum:KBD_KEYS
KBD_scrolllock	include/keyboard.h	/^	KBD_capslock,KBD_scrolllock,KBD_numlock,$/;"	e	enum:KBD_KEYS
KBD_semicolon	include/keyboard.h	/^	KBD_semicolon,KBD_quote,KBD_period,KBD_comma,KBD_slash,KBD_extra_lt_gt,$/;"	e	enum:KBD_KEYS
KBD_slash	include/keyboard.h	/^	KBD_semicolon,KBD_quote,KBD_period,KBD_comma,KBD_slash,KBD_extra_lt_gt,$/;"	e	enum:KBD_KEYS
KBD_space	include/keyboard.h	/^	KBD_esc,KBD_tab,KBD_backspace,KBD_enter,KBD_space,$/;"	e	enum:KBD_KEYS
KBD_t	include/keyboard.h	/^	KBD_q,	KBD_w,	KBD_e,	KBD_r,	KBD_t,	KBD_y,	KBD_u,	KBD_i,	KBD_o,	KBD_p,	$/;"	e	enum:KBD_KEYS
KBD_tab	include/keyboard.h	/^	KBD_esc,KBD_tab,KBD_backspace,KBD_enter,KBD_space,$/;"	e	enum:KBD_KEYS
KBD_u	include/keyboard.h	/^	KBD_q,	KBD_w,	KBD_e,	KBD_r,	KBD_t,	KBD_y,	KBD_u,	KBD_i,	KBD_o,	KBD_p,	$/;"	e	enum:KBD_KEYS
KBD_up	include/keyboard.h	/^	KBD_left,KBD_up,KBD_down,KBD_right,$/;"	e	enum:KBD_KEYS
KBD_v	include/keyboard.h	/^	KBD_x,	KBD_c,	KBD_v,	KBD_b,	KBD_n,	KBD_m,	$/;"	e	enum:KBD_KEYS
KBD_w	include/keyboard.h	/^	KBD_q,	KBD_w,	KBD_e,	KBD_r,	KBD_t,	KBD_y,	KBD_u,	KBD_i,	KBD_o,	KBD_p,	$/;"	e	enum:KBD_KEYS
KBD_x	include/keyboard.h	/^	KBD_x,	KBD_c,	KBD_v,	KBD_b,	KBD_n,	KBD_m,	$/;"	e	enum:KBD_KEYS
KBD_y	include/keyboard.h	/^	KBD_q,	KBD_w,	KBD_e,	KBD_r,	KBD_t,	KBD_y,	KBD_u,	KBD_i,	KBD_o,	KBD_p,	$/;"	e	enum:KBD_KEYS
KBD_z	include/keyboard.h	/^	KBD_a,	KBD_s,	KBD_d,	KBD_f,	KBD_g,	KBD_h,	KBD_j,	KBD_k,	KBD_l,	KBD_z,$/;"	e	enum:KBD_KEYS
KEYB	src/dos/dos_programs.cpp	/^class KEYB : public Program {$/;"	c	file:
KEYBOARD_AddBuffer	src/hardware/keyboard.cpp	/^static void KEYBOARD_AddBuffer(Bit8u data) {$/;"	f	file:
KEYBOARD_AddKey	src/hardware/keyboard.cpp	/^void KEYBOARD_AddKey(KBD_KEYS keytype,bool pressed) {$/;"	f
KEYBOARD_ClrBuffer	src/hardware/keyboard.cpp	/^void KEYBOARD_ClrBuffer(void) {$/;"	f
KEYBOARD_Init	src/hardware/keyboard.cpp	/^void KEYBOARD_Init(Section* sec) {$/;"	f
KEYBOARD_SetPort60	src/hardware/keyboard.cpp	/^static void KEYBOARD_SetPort60(Bit8u val) {$/;"	f	file:
KEYBOARD_TickHandler	src/hardware/keyboard.cpp	/^static void KEYBOARD_TickHandler(void) {$/;"	f	file:
KEYBOARD_TransferBuffer	src/hardware/keyboard.cpp	/^static void KEYBOARD_TransferBuffer(Bitu val) {$/;"	f	file:
KEYBUFSIZE	src/hardware/keyboard.cpp	29;"	d	file:
KEYB_FILENOTFOUND	include/dos_inc.h	/^	KEYB_FILENOTFOUND,$/;"	e	enum:__anon14
KEYB_INVALIDCPFILE	include/dos_inc.h	/^	KEYB_INVALIDCPFILE$/;"	e	enum:__anon14
KEYB_INVALIDFILE	include/dos_inc.h	/^	KEYB_INVALIDFILE,$/;"	e	enum:__anon14
KEYB_LAYOUTNOTFOUND	include/dos_inc.h	/^	KEYB_LAYOUTNOTFOUND,$/;"	e	enum:__anon14
KEYB_NOERROR	include/dos_inc.h	/^	KEYB_NOERROR=0,$/;"	e	enum:__anon14
KEYB_ProgramStart	src/dos/dos_programs.cpp	/^static void KEYB_ProgramStart(Program * * make) {$/;"	f	file:
KEYDELAY	src/hardware/keyboard.cpp	30;"	d	file:
KEY_BLANKCHK	src/dos/scsidefs.h	255;"	d
KEY_COPYABORT	src/dos/scsidefs.h	257;"	d
KEY_DATAPROT	src/dos/scsidefs.h	254;"	d
KEY_EQUAL	src/dos/scsidefs.h	258;"	d
KEY_HARDERROR	src/dos/scsidefs.h	251;"	d
KEY_ILLGLREQ	src/dos/scsidefs.h	252;"	d
KEY_MEDIUMERR	src/dos/scsidefs.h	250;"	d
KEY_MISCOMP	src/dos/scsidefs.h	260;"	d
KEY_NOSENSE	src/dos/scsidefs.h	247;"	d
KEY_NOTREADY	src/dos/scsidefs.h	249;"	d
KEY_RECERROR	src/dos/scsidefs.h	248;"	d
KEY_RESERVED	src/dos/scsidefs.h	261;"	d
KEY_UNITATT	src/dos/scsidefs.h	253;"	d
KEY_VENDSPEC	src/dos/scsidefs.h	256;"	d
KEY_VOLOVRFLW	src/dos/scsidefs.h	259;"	d
KSR	src/hardware/fmopl.cpp	/^	UINT8	KSR;		\/* key scale rate				*\/$/;"	m	struct:__anon153	file:
KSR	src/hardware/ymf262.cpp	/^	UINT8	KSR;		\/* key scale rate				*\/$/;"	m	struct:__anon190	file:
Key	src/libs/gui_tk/gui_tk.h	/^	Key(int character, Special special, bool shift, bool ctrl, bool alt, bool windows) :$/;"	f	class:GUI::Key
Key	src/libs/gui_tk/gui_tk.h	/^class Key {$/;"	c	namespace:GUI
KeyBlock	src/gui/sdl_mapper.cpp	/^struct KeyBlock {$/;"	s	file:
KeyCommands	src/hardware/keyboard.cpp	/^enum KeyCommands {$/;"	g	file:
KeyframeHeader	src/libs/zmbv/zmbv.h	/^	struct KeyframeHeader {$/;"	s	class:VideoCodec
L2E	include/fpu.h	96;"	d
L2T	include/fpu.h	97;"	d
LCR	include/serialport.h	/^	Bit8u LCR;	\/\/	r\/w				Line Control Register$/;"	m	class:CSerial
LCR_BREAK_MASK	include/serialport.h	242;"	d
LCR_DATABITS_5	include/serialport.h	252;"	d
LCR_DATABITS_6	include/serialport.h	253;"	d
LCR_DATABITS_7	include/serialport.h	254;"	d
LCR_DATABITS_8	include/serialport.h	255;"	d
LCR_DIVISOR_Enable_MASK	include/serialport.h	243;"	d
LCR_OFFSET	include/serialport.h	231;"	d
LCR_PARITY_EVEN	include/serialport.h	248;"	d
LCR_PARITY_MARK	include/serialport.h	249;"	d
LCR_PARITY_NONE	include/serialport.h	246;"	d
LCR_PARITY_ODD	include/serialport.h	247;"	d
LCR_PARITY_SPACE	include/serialport.h	250;"	d
LCR_PORTCONFIG_MASK	include/serialport.h	244;"	d
LCR_STOPBITS_1	include/serialport.h	257;"	d
LCR_STOPBITS_MORE_THAN_1	include/serialport.h	258;"	d
LDGFXROM	src/dos/dos_programs.cpp	/^class LDGFXROM : public Program {$/;"	c	file:
LDGFXROM_ProgramStart	src/dos/dos_programs.cpp	/^static void LDGFXROM_ProgramStart(Program * * make) {$/;"	f	file:
LEFT	src/hardware/gameblaster.cpp	30;"	d	file:
LF	src/libs/gui_tk/gui_tk.h	/^	enum SpecialChar { CR = '\\r', LF = '\\n', BS = '\\b', Tab = '\\t', Space = ' ', ESC = 27 };$/;"	e	enum:GUI::Font::SpecialChar
LFB_PAGES	src/hardware/memory.cpp	34;"	d	file:
LFO_AM	src/hardware/fmopl.cpp	/^static UINT32	LFO_AM;$/;"	v	file:
LFO_AM	src/hardware/ymf262.cpp	/^static UINT32	LFO_AM;$/;"	v	file:
LFO_AM_TAB_ELEMENTS	src/hardware/fmopl.cpp	538;"	d	file:
LFO_AM_TAB_ELEMENTS	src/hardware/ymf262.cpp	492;"	d	file:
LFO_PM	src/hardware/fmopl.cpp	/^static INT32	LFO_PM;$/;"	v	file:
LFO_PM	src/hardware/ymf262.cpp	/^static INT32	LFO_PM;$/;"	v	file:
LFO_SH	src/hardware/fmopl.cpp	88;"	d	file:
LFO_SH	src/hardware/ymf262.cpp	69;"	d	file:
LG2	include/fpu.h	99;"	d
LINEPITCH	src/gui/render_16.h	239;"	d
LINEPITCH	src/gui/render_32.h	149;"	d
LINEPITCH	src/gui/render_8.h	236;"	d
LINEPITCH	src/gui/render_9.h	236;"	d
LINE_IN_MAXLEN	src/misc/messages.cpp	35;"	d	file:
LINK_START	include/paging.h	58;"	d
LINK_TOTAL	src/cpu/paging.cpp	34;"	d	file:
LLDT	include/cpu.h	/^	bool LLDT(Bitu value)	{$/;"	f	class:GDTDescriptorTable
LN2	include/fpu.h	98;"	d
LOAD	src/dos/dos_execute.cpp	66;"	d	file:
LOADFIX	src/dos/dos_programs.cpp	/^class LOADFIX : public Program {$/;"	c	file:
LOADFIX_ProgramStart	src/dos/dos_programs.cpp	/^static void LOADFIX_ProgramStart(Program * * make) {$/;"	f	file:
LOADIP	src/cpu/core_simple.cpp	100;"	d	file:
LOADIP	src/cpu/core_verysimple.cpp	90;"	d	file:
LOADNGO	src/dos/dos_execute.cpp	65;"	d	file:
LOCAL_CFLAGS	Android.mk	/^LOCAL_CFLAGS := $(foreach D, $(CG_SUBDIRS), -I$(CG_SRCDIR)\/$(D)) \\$/;"	m
LOCAL_CPP_EXTENSION	Android.mk	/^LOCAL_CPP_EXTENSION := .cpp$/;"	m
LOCAL_LDLIBS	Android.mk	/^LOCAL_LDLIBS := -lGLESv1_CM -ldl -llog$/;"	m
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE := htdosbox$/;"	m
LOCAL_PATH	Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SRC_FILES	Android.mk	/^LOCAL_SRC_FILES := $(foreach F, $(CG_SUBDIRS), $(addprefix $(F)\/,$(notdir $(wildcard $(LOCAL_PATH)\/$(F)\/*.cpp))))$/;"	m
LOCAL_STATIC_LIBRARIES	Android.mk	/^LOCAL_STATIC_LIBRARIES := sdl_mixer sdl tremor stlport$/;"	m
LOG	include/logging.h	/^	LOG (LOG_TYPES type , LOG_SEVERITIES severity):$/;"	f	class:LOG
LOG	include/logging.h	/^	LOG(LOG_TYPES , LOG_SEVERITIES )										{ }$/;"	f	struct:LOG
LOG	include/logging.h	/^class LOG $/;"	c
LOG	include/logging.h	/^struct LOG$/;"	s
LOG	src/cpu/cpu.cpp	38;"	d	file:
LOG	src/cpu/cpu.cpp	40;"	d	file:
LOG	src/cpu/cpu.cpp	42;"	d	file:
LOGCPUMAX	src/debug/debug.cpp	/^const Bit32u LOGCPUMAX = 20000;$/;"	v
LOGO_1	src/gui/dosbox_logo.h	24;"	d
LOG_ALL	include/logging.h	/^	LOG_ALL,$/;"	e	enum:LOG_TYPES
LOG_BIOS	include/logging.h	/^	LOG_MOUSE,LOG_BIOS,LOG_GUI,LOG_MISC,$/;"	e	enum:LOG_TYPES
LOG_CPU	include/logging.h	/^	LOG_FPU,LOG_CPU,LOG_PAGING,$/;"	e	enum:LOG_TYPES
LOG_DMACONTROL	include/logging.h	/^	LOG_SB,LOG_DMACONTROL,$/;"	e	enum:LOG_TYPES
LOG_DOSMISC	include/logging.h	/^	LOG_FCB,LOG_FILES,LOG_IOCTL,LOG_EXEC,LOG_DOSMISC,$/;"	e	enum:LOG_TYPES
LOG_Destroy	src/debug/debug_gui.cpp	/^static void LOG_Destroy(Section*) {$/;"	f	file:
LOG_ERROR	include/logging.h	/^	LOG_ERROR$/;"	e	enum:LOG_SEVERITIES
LOG_EXEC	include/logging.h	/^	LOG_FCB,LOG_FILES,LOG_IOCTL,LOG_EXEC,LOG_DOSMISC,$/;"	e	enum:LOG_TYPES
LOG_FCB	include/logging.h	/^	LOG_FCB,LOG_FILES,LOG_IOCTL,LOG_EXEC,LOG_DOSMISC,$/;"	e	enum:LOG_TYPES
LOG_FILES	include/logging.h	/^	LOG_FCB,LOG_FILES,LOG_IOCTL,LOG_EXEC,LOG_DOSMISC,$/;"	e	enum:LOG_TYPES
LOG_FPU	include/logging.h	/^	LOG_FPU,LOG_CPU,LOG_PAGING,$/;"	e	enum:LOG_TYPES
LOG_GUI	include/logging.h	/^	LOG_MOUSE,LOG_BIOS,LOG_GUI,LOG_MISC,$/;"	e	enum:LOG_TYPES
LOG_INT10	include/logging.h	/^	LOG_VGA, LOG_VGAGFX,LOG_VGAMISC,LOG_INT10,$/;"	e	enum:LOG_TYPES
LOG_IO	include/logging.h	/^	LOG_IO,$/;"	e	enum:LOG_TYPES
LOG_IOCTL	include/logging.h	/^	LOG_FCB,LOG_FILES,LOG_IOCTL,LOG_EXEC,LOG_DOSMISC,$/;"	e	enum:LOG_TYPES
LOG_IPX	include/ipx.h	28;"	d
LOG_IPX	include/ipx.h	31;"	d
LOG_IPX	include/ipx.h	33;"	d
LOG_Init	src/debug/debug_gui.cpp	/^static void LOG_Init(Section * sec) {$/;"	f	file:
LOG_KEYBOARD	include/logging.h	/^	LOG_PIT,LOG_KEYBOARD,LOG_PIC,$/;"	e	enum:LOG_TYPES
LOG_MAX	include/logging.h	/^	LOG_MAX$/;"	e	enum:LOG_TYPES
LOG_MISC	include/logging.h	/^	LOG_MOUSE,LOG_BIOS,LOG_GUI,LOG_MISC,$/;"	e	enum:LOG_TYPES
LOG_MOUSE	include/logging.h	/^	LOG_MOUSE,LOG_BIOS,LOG_GUI,LOG_MISC,$/;"	e	enum:LOG_TYPES
LOG_MSG	include/logging.h	37;"	d
LOG_MSG	include/logging.h	62;"	d
LOG_NORMAL	include/logging.h	/^	LOG_NORMAL,$/;"	e	enum:LOG_SEVERITIES
LOG_PAGING	include/logging.h	/^	LOG_FPU,LOG_CPU,LOG_PAGING,$/;"	e	enum:LOG_TYPES
LOG_PIC	include/logging.h	/^	LOG_PIT,LOG_KEYBOARD,LOG_PIC,$/;"	e	enum:LOG_TYPES
LOG_PIT	include/logging.h	/^	LOG_PIT,LOG_KEYBOARD,LOG_PIC,$/;"	e	enum:LOG_TYPES
LOG_SB	include/logging.h	/^	LOG_SB,LOG_DMACONTROL,$/;"	e	enum:LOG_TYPES
LOG_SEVERITIES	include/logging.h	/^enum LOG_SEVERITIES {$/;"	g
LOG_StartUp	src/debug/debug_gui.cpp	/^void LOG_StartUp(void) {$/;"	f
LOG_TYPES	include/logging.h	/^enum LOG_TYPES {$/;"	g
LOG_VGA	include/logging.h	/^	LOG_VGA, LOG_VGAGFX,LOG_VGAMISC,LOG_INT10,$/;"	e	enum:LOG_TYPES
LOG_VGAGFX	include/logging.h	/^	LOG_VGA, LOG_VGAGFX,LOG_VGAMISC,LOG_INT10,$/;"	e	enum:LOG_TYPES
LOG_VGAMISC	include/logging.h	/^	LOG_VGA, LOG_VGAGFX,LOG_VGAMISC,LOG_INT10,$/;"	e	enum:LOG_TYPES
LOG_WARN	include/logging.h	/^	LOG_WARN,$/;"	e	enum:LOG_SEVERITIES
LONGTYPE	include/cross.h	36;"	d
LONGTYPE	include/cross.h	42;"	d
LONGTYPE	src/cpu/core_dynrec/cross.h	31;"	d
LONGTYPE	src/cpu/core_dynrec/cross.h	37;"	d
LONGTYPE	src/cpu/core_dynrec/save/cross.h	31;"	d
LONGTYPE	src/cpu/core_dynrec/save/cross.h	37;"	d
LOOP_E	src/cpu/core_dyn_x86/decoder.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LOOP_E	src/cpu/core_dynrec/decoder_basic.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LOOP_E	src/cpu/core_dynrec/save/decoder_basic.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LOOP_JCXZ	src/cpu/core_dyn_x86/decoder.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LOOP_JCXZ	src/cpu/core_dynrec/decoder_basic.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LOOP_JCXZ	src/cpu/core_dynrec/save/decoder_basic.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LOOP_NE	src/cpu/core_dyn_x86/decoder.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LOOP_NE	src/cpu/core_dynrec/decoder_basic.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LOOP_NE	src/cpu/core_dynrec/save/decoder_basic.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LOOP_NONE	src/cpu/core_dyn_x86/decoder.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LOOP_NONE	src/cpu/core_dynrec/decoder_basic.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LOOP_NONE	src/cpu/core_dynrec/save/decoder_basic.h	/^	LOOP_NONE,LOOP_NE,LOOP_E,LOOP_JCXZ$/;"	e	enum:LoopTypes
LPASPI32BUFF	src/dos/wnaspi32.h	/^ASPI32BUFF, *PASPI32BUFF, FAR *LPASPI32BUFF;$/;"	t	typeref:struct:tag_ASPI32BUFF
LPSRB	src/dos/wnaspi32.h	/^} SRB, *PSRB, FAR *LPSRB;$/;"	t	typeref:struct:__anon134
LPSRB_Abort	src/dos/wnaspi32.h	/^SRB_Abort, *PSRB_Abort, FAR *LPSRB_Abort;$/;"	t	typeref:struct:__anon127
LPSRB_BusDeviceReset	src/dos/wnaspi32.h	/^SRB_BusDeviceReset, *PSRB_BusDeviceReset, FAR *LPSRB_BusDeviceReset;$/;"	t	typeref:struct:__anon128
LPSRB_ExecSCSICmd	src/dos/wnaspi32.h	/^SRB_ExecSCSICmd, *PSRB_ExecSCSICmd, FAR *LPSRB_ExecSCSICmd;$/;"	t	typeref:struct:__anon126
LPSRB_GDEVBlock	src/dos/wnaspi32.h	/^SRB_GDEVBlock, *PSRB_GDEVBlock, FAR *LPSRB_GDEVBlock;$/;"	t	typeref:struct:__anon125
LPSRB_GetDiskInfo	src/dos/wnaspi32.h	/^SRB_GetDiskInfo, *PSRB_GetDiskInfo, FAR *LPSRB_GetDiskInfo;$/;"	t	typeref:struct:__anon129
LPSRB_GetSetTimeouts	src/dos/wnaspi32.h	/^SRB_GetSetTimeouts, *PSRB_GetSetTimeouts, FAR *LPSRB_GetSetTimeouts;$/;"	t	typeref:struct:__anon131
LPSRB_HAInquiry	src/dos/wnaspi32.h	/^SRB_HAInquiry, *PSRB_HAInquiry, FAR *LPSRB_HAInquiry;$/;"	t	typeref:struct:__anon124
LPSRB_RescanPort	src/dos/wnaspi32.h	/^SRB_RescanPort, *PSRB_RescanPort, FAR *LPSRB_RescanPort;$/;"	t	typeref:struct:__anon130
LPTOC	src/dos/wnaspi32.h	/^} TOC, *PTOC, FAR *LPTOC;$/;"	t	typeref:struct:__anon133
LSR	include/serialport.h	/^	Bit8u LSR;	\/\/	r				Line Status Register$/;"	m	class:CSerial
LSR_ERROR_MASK	include/serialport.h	288;"	d
LSR_FRAMING_ERROR_MASK	include/serialport.h	283;"	d
LSR_OFFSET	include/serialport.h	278;"	d
LSR_OVERRUN_ERROR_MASK	include/serialport.h	281;"	d
LSR_PARITY_ERROR_MASK	include/serialport.h	282;"	d
LSR_RX_BREAK_MASK	include/serialport.h	284;"	d
LSR_RX_DATA_READY_MASK	include/serialport.h	280;"	d
LSR_TX_EMPTY_MASK	include/serialport.h	286;"	d
LSR_TX_HOLDING_EMPTY_MASK	include/serialport.h	285;"	d
L_DOUBLE	src/cpu/core_full/support.h	/^	L_DOUBLE,$/;"	e	enum:__anon97
L_ERROR	src/cpu/core_full/support.h	/^	L_ERROR,$/;"	e	enum:__anon97
L_INTO	src/cpu/core_full/support.h	/^	L_INTO,$/;"	e	enum:__anon97
L_Ib	src/cpu/core_full/support.h	/^	L_Ib,L_Iw,L_Id,$/;"	e	enum:__anon97
L_Ibx	src/cpu/core_full/support.h	/^	L_Ibx,L_Iwx,L_Idx,				\/\/Sign extend$/;"	e	enum:__anon97
L_Id	src/cpu/core_full/support.h	/^	L_Ib,L_Iw,L_Id,$/;"	e	enum:__anon97
L_Idx	src/cpu/core_full/support.h	/^	L_Ibx,L_Iwx,L_Idx,				\/\/Sign extend$/;"	e	enum:__anon97
L_Ifd	src/cpu/core_full/support.h	/^	L_Ifw,L_Ifd,$/;"	e	enum:__anon97
L_Ifw	src/cpu/core_full/support.h	/^	L_Ifw,L_Ifd,$/;"	e	enum:__anon97
L_Iw	src/cpu/core_full/support.h	/^	L_Ib,L_Iw,L_Id,$/;"	e	enum:__anon97
L_Iwx	src/cpu/core_full/support.h	/^	L_Ibx,L_Iwx,L_Idx,				\/\/Sign extend$/;"	e	enum:__anon97
L_MODRM	src/cpu/core_full/support.h	/^	L_MODRM,L_MODRM_NVM,L_POPwRM,L_POPdRM,$/;"	e	enum:__anon97
L_MODRM_NVM	src/cpu/core_full/support.h	/^	L_MODRM,L_MODRM_NVM,L_POPwRM,L_POPdRM,$/;"	e	enum:__anon97
L_N	src/cpu/core_full/support.h	/^	L_N=0,$/;"	e	enum:__anon97
L_OP	src/cpu/core_full/support.h	/^	L_OP,$/;"	e	enum:__anon97
L_POPd	src/cpu/core_full/support.h	/^	L_POPw,L_POPd,$/;"	e	enum:__anon97
L_POPdRM	src/cpu/core_full/support.h	/^	L_MODRM,L_MODRM_NVM,L_POPwRM,L_POPdRM,$/;"	e	enum:__anon97
L_POPfd	src/cpu/core_full/support.h	/^	L_POPfw,L_POPfd,$/;"	e	enum:__anon97
L_POPfw	src/cpu/core_full/support.h	/^	L_POPfw,L_POPfd,$/;"	e	enum:__anon97
L_POPw	src/cpu/core_full/support.h	/^	L_POPw,L_POPd,$/;"	e	enum:__anon97
L_POPwRM	src/cpu/core_full/support.h	/^	L_MODRM,L_MODRM_NVM,L_POPwRM,L_POPdRM,$/;"	e	enum:__anon97
L_PREADD	src/cpu/core_full/support.h	/^	L_PREOP,L_PREADD,L_PREREP,L_PREREPNE,$/;"	e	enum:__anon97
L_PREOP	src/cpu/core_full/support.h	/^	L_PREOP,L_PREADD,L_PREREP,L_PREREPNE,$/;"	e	enum:__anon97
L_PREREP	src/cpu/core_full/support.h	/^	L_PREOP,L_PREADD,L_PREREP,L_PREREPNE,$/;"	e	enum:__anon97
L_PREREPNE	src/cpu/core_full/support.h	/^	L_PREOP,L_PREADD,L_PREREP,L_PREREPNE,$/;"	e	enum:__anon97
L_PRESEG	src/cpu/core_full/support.h	/^	L_PRESEG,$/;"	e	enum:__anon97
L_REGb	src/cpu/core_full/support.h	/^	L_REGb,L_REGw,L_REGd,$/;"	e	enum:__anon97
L_REGbIb	src/cpu/core_full/support.h	/^	L_REGbIb,L_REGwIw,L_REGdId,$/;"	e	enum:__anon97
L_REGd	src/cpu/core_full/support.h	/^	L_REGb,L_REGw,L_REGd,$/;"	e	enum:__anon97
L_REGdId	src/cpu/core_full/support.h	/^	L_REGbIb,L_REGwIw,L_REGdId,$/;"	e	enum:__anon97
L_REGw	src/cpu/core_full/support.h	/^	L_REGb,L_REGw,L_REGd,$/;"	e	enum:__anon97
L_REGwIw	src/cpu/core_full/support.h	/^	L_REGbIb,L_REGwIw,L_REGdId,$/;"	e	enum:__anon97
L_SEG	src/cpu/core_full/support.h	/^	L_SEG,$/;"	e	enum:__anon97
L_SKIP	src/cpu/core_full/support.h	/^	L_SKIP,$/;"	e	enum:__anon97
L_STRING	src/cpu/core_full/support.h	/^	L_STRING,$/;"	e	enum:__anon97
L_VAL	src/cpu/core_full/support.h	/^	L_VAL,$/;"	e	enum:__anon97
Label	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> Label(Window *parent, int x, int y, const STR text, int width = 0, const Font *font = Font::getFont("default"), RGB color = Color::Text) :$/;"	f	class:GUI::Label
Label	src/libs/gui_tk/gui_tk.h	/^class Label : public Window {$/;"	c	namespace:GUI
Lang	src/misc/messages.cpp	/^static list<MessageBlock> Lang;$/;"	v	file:
LastRegister	src/hardware/tandy_sound.cpp	/^	int LastRegister;	\/* last register written *\/$/;"	m	struct:SN76496	file:
LastTrack	src/platform/visualc/ntddcdrm.h	/^  UCHAR  LastTrack;$/;"	m	struct:_CDROM_TOC
LazyFlags	src/cpu/lazyflags.h	/^struct LazyFlags {$/;"	s
LbaFormat	src/platform/visualc/ntddcdrm.h	/^	UCHAR  LbaFormat;$/;"	m	struct:_CDROM_AUDIO_CONTROL
LeadInMsf	src/platform/visualc/ntddcdrm.h	/^  UCHAR  LeadInMsf[3];$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
LeadOutMsf	src/platform/visualc/ntddcdrm.h	/^  UCHAR  LeadOutMsf[3];$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Left	src/libs/gui_tk/gui_tk.h	/^		Up, Down, Left, Right, Backspace, Tab, Backtab, Enter, Escape,$/;"	e	enum:GUI::Key::Special
Left	src/libs/gui_tk/gui_tk.h	/^enum MouseButton { NoButton, Left, Right, Middle, WheelUp, WheelDown, WheelLeft, WheelRight };$/;"	e	enum:GUI::MouseButton
Length	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Length[2];$/;"	m	struct:_CDROM_TOC
Length	src/platform/visualc/ntddscsi.h	/^	ULONG  Length;$/;"	m	struct:_IO_SCSI_CAPABILITIES
Length	src/platform/visualc/ntddscsi.h	/^	ULONG  Length;$/;"	m	struct:_SCSI_ADDRESS
Length	src/platform/visualc/ntddscsi.h	/^  ULONG  Length; $/;"	m	struct:_SRB_IO_CONTROL
Length	src/platform/visualc/ntddscsi.h	/^  USHORT  Length;$/;"	m	struct:_SCSI_PASS_THROUGH
Length	src/platform/visualc/ntddscsi.h	/^  USHORT  Length;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
Light3D	src/libs/gui_tk/gui_tk.cpp	/^RGB Light3D = 0xfffcfcfc;$/;"	m	namespace:GUI::Color	file:
Linear	src/gui/render_scalers.h	/^	ScalerLineHandler_t Linear[5];$/;"	m	struct:__anon136
LinkBlock	src/hardware/memory.cpp	/^typedef struct LinkBlock {$/;"	s	file:
LinkBlocks	src/cpu/core_dynrec.cpp	/^CacheBlockDynRec * LinkBlocks(BlockReturn ret) {$/;"	f
LinkTo	src/cpu/core_dyn_x86/cache.h	/^	void LinkTo(Bitu index,CacheBlock * toblock) {$/;"	f	class:CacheBlock
LinkTo	src/cpu/core_dynrec/cache.h	/^	void LinkTo(Bitu index,CacheBlockDynRec * toblock) {$/;"	f	class:CacheBlockDynRec
LinkTo	src/cpu/core_dynrec/save/cache.h	/^	void LinkTo(Bitu index,CacheBlockDynRec * toblock) {$/;"	f	class:CacheBlockDynRec
ListMidi	src/hardware/mixer.cpp	/^	void ListMidi(){$/;"	f	class:MIXER	file:
Load	src/cpu/core_dyn_x86/risc_x86.h	/^	void Load(DynReg * _dynreg,bool stale=false) {$/;"	f	class:GenReg
Load	src/cpu/cpu.cpp	/^void Descriptor::Load(PhysPt address) {$/;"	f	class:Descriptor
LoadAF	src/cpu/lazyflags.h	83;"	d
LoadCF	src/cpu/lazyflags.h	79;"	d
LoadCueSheet	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::LoadCueSheet(char *cuefile)$/;"	f	class:CDROM_Interface_Image
LoadD	src/cpu/core_full.cpp	47;"	d	file:
LoadD	src/cpu/core_normal/string.h	11;"	d
LoadData	src/dos/dos_classes.cpp	/^void DOS_ParamBlock::LoadData(void) {$/;"	f	class:DOS_ParamBlock
LoadIP	src/cpu/core_full/loadwrite.h	2;"	d
LoadIsoFile	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::LoadIsoFile(char* filename)$/;"	f	class:CDROM_Interface_Image
LoadMb	src/cpu/core_full.cpp	35;"	d	file:
LoadMb	src/cpu/core_simple.cpp	36;"	d	file:
LoadMb	src/cpu/core_verysimple.cpp	36;"	d	file:
LoadMbs	src/cpu/core_full.cpp	39;"	d	file:
LoadMbs	src/cpu/core_normal/support.h	20;"	d
LoadMd	src/cpu/core_full.cpp	37;"	d	file:
LoadMd	src/cpu/core_simple.cpp	38;"	d	file:
LoadMd	src/cpu/core_verysimple.cpp	38;"	d	file:
LoadMds	src/cpu/core_full.cpp	41;"	d	file:
LoadMds	src/cpu/core_normal/support.h	22;"	d
LoadMessageFile	src/misc/messages.cpp	/^static void LoadMessageFile(const char * fname) {$/;"	f	file:
LoadMoveRegion	src/ints/ems.cpp	/^static void LoadMoveRegion(PhysPt data,MoveRegion & region) {$/;"	f	file:
LoadMw	src/cpu/core_full.cpp	36;"	d	file:
LoadMw	src/cpu/core_simple.cpp	37;"	d	file:
LoadMw	src/cpu/core_verysimple.cpp	37;"	d	file:
LoadMws	src/cpu/core_full.cpp	40;"	d	file:
LoadMws	src/cpu/core_normal/support.h	21;"	d
LoadOF	src/cpu/lazyflags.h	82;"	d
LoadRb	src/cpu/core_normal/support.h	24;"	d
LoadRd	src/cpu/core_normal/support.h	26;"	d
LoadRw	src/cpu/core_normal/support.h	25;"	d
LoadSF	src/cpu/lazyflags.h	81;"	d
LoadUnloadMedia	src/dos/cdrom.cpp	/^bool CDROM_Interface_SDL::LoadUnloadMedia(bool unload) $/;"	f	class:CDROM_Interface_SDL
LoadUnloadMedia	src/dos/cdrom.h	/^	bool	LoadUnloadMedia		(bool \/*unload*\/) { return true; };$/;"	f	class:CDROM_Interface_Fake
LoadUnloadMedia	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::LoadUnloadMedia(bool unload)$/;"	f	class:CDROM_Interface_Aspi
LoadUnloadMedia	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::LoadUnloadMedia(bool unload)$/;"	f	class:CDROM_Interface_Image
LoadUnloadMedia	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::LoadUnloadMedia(bool unload) {$/;"	f	class:CDROM_Interface_Ioctl
LoadUnloadMedia	src/dos/dos_mscdex.cpp	/^bool CMscdex::LoadUnloadMedia(Bit8u subUnit, bool unload)$/;"	f	class:CMscdex
LoadVars	src/debug/debug.cpp	/^bool CDebugVar::LoadVars(char* name)$/;"	f	class:CDebugVar
LoadZF	src/cpu/lazyflags.h	80;"	d
LogCPUInfo	src/debug/debug.cpp	/^static void LogCPUInfo(void) {$/;"	f	file:
LogGDT	src/debug/debug.cpp	/^static void LogGDT(void)$/;"	f	file:
LogIDT	src/debug/debug.cpp	/^static void LogIDT(void) {$/;"	f	file:
LogInstruction	src/debug/debug.cpp	/^static void LogInstruction(Bit16u segValue, Bit32u eipValue,  ofstream& out) {$/;"	f	file:
LogLDT	src/debug/debug.cpp	/^static void LogLDT(void) {$/;"	f	file:
LogPages	src/debug/debug.cpp	/^void LogPages(char* selname) {$/;"	f
LogicalBlocksPerSecond	src/platform/visualc/ntddcdrm.h	/^	USHORT  LogicalBlocksPerSecond;$/;"	m	struct:_CDROM_AUDIO_CONTROL
LoopHandler	include/dosbox.h	/^typedef Bitu (LoopHandler)(void);$/;"	t
LoopTypes	src/cpu/core_dyn_x86/decoder.h	/^enum LoopTypes {$/;"	g
LoopTypes	src/cpu/core_dynrec/decoder_basic.h	/^enum LoopTypes {$/;"	g
LoopTypes	src/cpu/core_dynrec/save/decoder_basic.h	/^enum LoopTypes {$/;"	g
Lun	src/platform/visualc/ntddscsi.h	/^	UCHAR  Lun;$/;"	m	struct:_SCSI_ADDRESS
Lun	src/platform/visualc/ntddscsi.h	/^	UCHAR  Lun;$/;"	m	struct:_SCSI_INQUIRY_DATA
Lun	src/platform/visualc/ntddscsi.h	/^  UCHAR  Lun;$/;"	m	struct:_SCSI_PASS_THROUGH
Lun	src/platform/visualc/ntddscsi.h	/^  UCHAR  Lun;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
M	src/platform/visualc/ntddcdrm.h	/^  UCHAR  M;$/;"	m	struct:_CDROM_SEEK_AUDIO_MSF
MAGIC1	src/dos/dos_execute.cpp	56;"	d	file:
MAGIC2	src/dos/dos_execute.cpp	57;"	d	file:
MAKEPROVOL	src/hardware/sblaster.cpp	1080;"	d	file:
MAKE_RETURN	src/hardware/cmos.cpp	119;"	d	file:
MAPPER_AddHandler	src/gui/sdl_mapper.cpp	/^void MAPPER_AddHandler(MAPPER_Handler * handler,MapKeys key,Bitu mods,char const * const eventname,char const * const buttonname) {$/;"	f
MAPPER_CheckEvent	src/gui/sdl_mapper.cpp	/^void MAPPER_CheckEvent(SDL_Event * event) {$/;"	f
MAPPER_Handler	include/mapper.h	/^typedef void (MAPPER_Handler)(bool pressed);$/;"	t
MAPPER_Init	src/gui/sdl_mapper.cpp	/^void MAPPER_Init(void) {$/;"	f
MAPPER_LoadBinds	src/gui/sdl_mapper.cpp	/^static bool MAPPER_LoadBinds(void) {$/;"	f	file:
MAPPER_LosingFocus	src/gui/sdl_mapper.cpp	/^void MAPPER_LosingFocus(void) {$/;"	f
MAPPER_Run	src/gui/sdl_mapper.cpp	/^void MAPPER_Run(bool pressed) {$/;"	f
MAPPER_SaveBinds	src/gui/sdl_mapper.cpp	/^static void MAPPER_SaveBinds(void) {$/;"	f	file:
MAPPER_StartUp	src/gui/sdl_mapper.cpp	/^void MAPPER_StartUp(Section * sec) {$/;"	f
MAPPER_UpdateJoysticks	src/gui/sdl_mapper.cpp	/^void MAPPER_UpdateJoysticks(void) {$/;"	f
MAPcount	src/hardware/vga_xga.cpp	/^	Bit16u MAPcount;$/;"	m	struct:XGAStatus	file:
MAXACTIVE	src/gui/sdl_mapper.cpp	68;"	d	file:
MAXBUTTON	src/gui/sdl_mapper.cpp	69;"	d	file:
MAXBUTTON_CAP	src/gui/sdl_mapper.cpp	70;"	d	file:
MAXENV	src/dos/dos_execute.cpp	58;"	d	file:
MAXIMUM_CDROM_SIZE	src/platform/visualc/ntddcdrm.h	91;"	d
MAXIMUM_NUMBER_TRACKS	src/platform/visualc/ntddcdrm.h	90;"	d
MAXLUN	src/dos/scsidefs.h	38;"	d
MAXOUT	src/hardware/fmopl.cpp	77;"	d	file:
MAXOUT	src/hardware/fmopl.cpp	81;"	d	file:
MAXOUT	src/hardware/ymf262.cpp	58;"	d	file:
MAXOUT	src/hardware/ymf262.cpp	62;"	d	file:
MAXSTICKS	src/gui/sdl_mapper.cpp	67;"	d	file:
MAXTARG	src/dos/scsidefs.h	39;"	d
MAX_ADAPTIVE_STEP_SIZE	src/hardware/sblaster.cpp	287;"	d	file:
MAX_ASPI_CDROM	src/dos/cdrom.h	5;"	d
MAX_ATT_INDEX	src/hardware/fmopl.cpp	98;"	d	file:
MAX_ATT_INDEX	src/hardware/ymf262.cpp	79;"	d	file:
MAX_AUDIO	include/mixer.h	43;"	d
MAX_AUDIO	include/modules.h	85;"	d
MAX_DISK_IMAGES	src/ints/bios_disk.cpp	30;"	d	file:
MAX_FILENAME_LENGTH	src/dos/cdrom_image.cpp	45;"	d	file:
MAX_HDD_IMAGES	include/bios_disk.h	72;"	d
MAX_INFO	src/debug/disasm_tables.h	24;"	d
MAX_LINE_LENGTH	src/dos/cdrom_image.cpp	44;"	d	file:
MAX_LINKS	src/hardware/memory.cpp	35;"	d	file:
MAX_LOG_BUFFER	src/debug/debug_gui.cpp	44;"	d	file:
MAX_MEMORY	src/hardware/memory.cpp	32;"	d	file:
MAX_NUM_HA	src/dos/scsidefs.h	41;"	d
MAX_OPENDIRS	include/dos_system.h	125;"	d
MAX_OPL3_CHIPS	src/hardware/ymf262.cpp	2485;"	d	file:
MAX_OPL_CHIPS	src/hardware/fmopl.cpp	2027;"	d	file:
MAX_OUTPUT	src/hardware/tandy_sound.cpp	34;"	d	file:
MAX_PAGE_ENTRIES	src/hardware/memory.cpp	33;"	d	file:
MAX_SCANCODES	src/gui/sdl_mapper.cpp	358;"	d	file:
MAX_SCANCODES	src/gui/sdl_mapper.cpp	365;"	d	file:
MAX_SCAN_CODE	include/bios.h	105;"	d
MAX_SCSI_LUNS	src/dos/scsidefs.h	40;"	d
MAX_SDLKEYS	src/gui/sdl_mapper.cpp	301;"	d	file:
MAX_SRB_TIMEOUT	src/dos/wnaspi32.h	49;"	d
MAX_SWAPPABLE_DISKS	include/bios_disk.h	36;"	d
MAX_VCO	include/vga.h	51;"	d
MAX_VJOY_BUTTONS	src/gui/sdl_mapper.cpp	523;"	d	file:
MCB_DOS	include/dos_inc.h	/^enum { MCB_FREE=0x0000,MCB_DOS=0x0008 };$/;"	e	enum:__anon10
MCB_FREE	include/dos_inc.h	/^enum { MCB_FREE=0x0000,MCB_DOS=0x0008 };$/;"	e	enum:__anon10
MCH_CGA	include/dosbox.h	/^	MCH_CGA,$/;"	e	enum:MachineType
MCH_EGA	include/dosbox.h	/^	MCH_EGA,$/;"	e	enum:MachineType
MCH_HERC	include/dosbox.h	/^	MCH_HERC,$/;"	e	enum:MachineType
MCH_PCJR	include/dosbox.h	/^	MCH_PCJR,$/;"	e	enum:MachineType
MCH_TANDY	include/dosbox.h	/^	MCH_TANDY,$/;"	e	enum:MachineType
MCH_VGA	include/dosbox.h	/^	MCH_VGA$/;"	e	enum:MachineType
MCR_DTR_MASK	include/serialport.h	269;"	d
MCR_LOOPBACK_Enable_MASK	include/serialport.h	273;"	d
MCR_OFFSET	include/serialport.h	262;"	d
MCR_OP1_MASK	include/serialport.h	271;"	d
MCR_OP2_MASK	include/serialport.h	272;"	d
MCR_RTS_MASK	include/serialport.h	270;"	d
MEM	src/dos/dos_programs.cpp	/^class MEM : public Program {$/;"	c	file:
MEMORY	src/hardware/memory.cpp	/^	MEMORY(Section* configuration):Module_base(configuration){$/;"	f	class:MEMORY
MEMORY	src/hardware/memory.cpp	/^class MEMORY:public Module_base{$/;"	c	file:
MEM_A20_Enable	src/hardware/memory.cpp	/^void MEM_A20_Enable(bool enabled) {$/;"	f
MEM_A20_Enabled	src/hardware/memory.cpp	/^bool MEM_A20_Enabled(void) {$/;"	f
MEM_AllocatePages	src/hardware/memory.cpp	/^MemHandle MEM_AllocatePages(Bitu pages,bool sequence) {$/;"	f
MEM_AllocatedPages	src/hardware/memory.cpp	/^Bitu MEM_AllocatedPages(MemHandle handle) $/;"	f
MEM_BlockCopy	src/hardware/memory.cpp	/^void MEM_BlockCopy(PhysPt dest,PhysPt src,Bitu size) {$/;"	f
MEM_BlockRead	src/hardware/memory.cpp	/^void MEM_BlockRead(PhysPt pt,void * data,Bitu size) {$/;"	f
MEM_BlockWrite	src/hardware/memory.cpp	/^void MEM_BlockWrite(PhysPt pt,void const * const data,Bitu size) {$/;"	f
MEM_CHANGED	src/hardware/vga_memory.cpp	51;"	d	file:
MEM_CHANGED	src/hardware/vga_memory.cpp	54;"	d	file:
MEM_FreeLargest	src/hardware/memory.cpp	/^Bitu MEM_FreeLargest(void) {$/;"	f
MEM_FreeTotal	src/hardware/memory.cpp	/^Bitu MEM_FreeTotal(void) {$/;"	f
MEM_GetNextFreePage	src/hardware/memory.cpp	/^MemHandle MEM_GetNextFreePage(void) {$/;"	f
MEM_GetPageHandler	src/hardware/memory.cpp	/^PageHandler * MEM_GetPageHandler(Bitu phys_page) {$/;"	f
MEM_Init	src/hardware/memory.cpp	/^void MEM_Init(Section * sec) {$/;"	f
MEM_NextHandle	src/hardware/memory.cpp	/^MemHandle MEM_NextHandle(MemHandle handle) {$/;"	f
MEM_NextHandleAt	src/hardware/memory.cpp	/^MemHandle MEM_NextHandleAt(MemHandle handle,Bitu where) {$/;"	f
MEM_PAGESIZE	include/mem.h	32;"	d
MEM_PAGE_SIZE	include/paging.h	37;"	d
MEM_ProgramStart	src/dos/dos_programs.cpp	/^static void MEM_ProgramStart(Program * * make) {$/;"	f	file:
MEM_ReAllocatePages	src/hardware/memory.cpp	/^bool MEM_ReAllocatePages(MemHandle & handle,Bitu pages,bool sequence) {$/;"	f
MEM_ReleasePages	src/hardware/memory.cpp	/^void MEM_ReleasePages(MemHandle handle) {$/;"	f
MEM_ResetPageHandler	src/hardware/memory.cpp	/^void MEM_ResetPageHandler(Bitu phys_page, Bitu pages) {$/;"	f
MEM_SetLFB	src/hardware/memory.cpp	/^void MEM_SetLFB(Bitu page, Bitu pages, PageHandler *handler, PageHandler *mmiohandler) {$/;"	f
MEM_SetPageHandler	src/hardware/memory.cpp	/^void MEM_SetPageHandler(Bitu phys_page,Bitu pages,PageHandler * handler) {$/;"	f
MEM_ShutDown	src/hardware/memory.cpp	/^static void MEM_ShutDown(Section * sec) {$/;"	f	file:
MEM_StrCopy	src/hardware/memory.cpp	/^void MEM_StrCopy(PhysPt pt,char * data,Bitu size) {$/;"	f
MEM_TotalPages	src/hardware/memory.cpp	/^Bitu MEM_TotalPages(void) {$/;"	f
MH	src/gui/render_16.h	54;"	d
MH	src/gui/render_32.h	54;"	d
MH	src/gui/render_8.h	57;"	d
MH	src/gui/render_9.h	57;"	d
MIDI_BUF	src/hardware/hardware.cpp	45;"	d	file:
MINIMUM_CDROM_READ_TOC_EX_SIZE	src/platform/visualc/ntddcdrm.h	92;"	d
MINOUT	src/hardware/fmopl.cpp	78;"	d	file:
MINOUT	src/hardware/fmopl.cpp	82;"	d	file:
MINOUT	src/hardware/ymf262.cpp	59;"	d	file:
MINOUT	src/hardware/ymf262.cpp	63;"	d	file:
MIN_ADAPTIVE_STEP_SIZE	src/hardware/sblaster.cpp	286;"	d	file:
MIN_ATT_INDEX	src/hardware/fmopl.cpp	99;"	d	file:
MIN_ATT_INDEX	src/hardware/ymf262.cpp	80;"	d	file:
MIN_AUDIO	include/mixer.h	44;"	d
MIN_AUDIO	include/modules.h	86;"	d
MIN_VCO	include/vga.h	50;"	d
MIPSEL	src/cpu/core_dynrec.cpp	142;"	d	file:
MIPcount	src/hardware/vga_xga.cpp	/^	Bit16u MIPcount;$/;"	m	struct:XGAStatus	file:
MIXER	src/hardware/mixer.cpp	/^class MIXER : public Program {$/;"	c	file:
MIXER_16MONO	include/mixer.h	/^	MIXER_16MONO,MIXER_16STEREO$/;"	e	enum:BlahModes
MIXER_16MONO	include/modules.h	81;"	d
MIXER_16STEREO	include/mixer.h	/^	MIXER_16MONO,MIXER_16STEREO$/;"	e	enum:BlahModes
MIXER_16STEREO	include/modules.h	82;"	d
MIXER_8MONO	include/mixer.h	/^	MIXER_8MONO,MIXER_8STEREO,$/;"	e	enum:BlahModes
MIXER_8MONO	include/modules.h	79;"	d
MIXER_8STEREO	include/mixer.h	/^	MIXER_8MONO,MIXER_8STEREO,$/;"	e	enum:BlahModes
MIXER_8STEREO	include/modules.h	80;"	d
MIXER_AddChannel	include/modules.h	/^MIXER_Channel *(* MIXER_AddChannel)(MIXER_MixHandler handler,Bit32u freq,char * name);$/;"	v
MIXER_AddChannel	src/hardware/mixer.cpp	/^MixerChannel * MIXER_AddChannel(MIXER_Handler handler,Bitu freq,const char * name) {$/;"	f
MIXER_BUFMASK	include/mixer.h	40;"	d
MIXER_BUFSIZE	include/mixer.h	39;"	d
MIXER_CLIP	src/hardware/mixer.cpp	/^static inline Bit16s MIXER_CLIP(Bits SAMP) {$/;"	f	file:
MIXER_CLIP	src/hardware/mixer.cpp	59;"	d	file:
MIXER_CallBack	src/hardware/mixer.cpp	/^static void MIXER_CallBack(void * userdata, Uint8 *stream, int len) {$/;"	f	file:
MIXER_Channel	src/hardware/mixer.cpp	/^struct MIXER_Channel {$/;"	s	file:
MIXER_DATA	src/hardware/sblaster.cpp	45;"	d	file:
MIXER_DelChannel	src/hardware/mixer.cpp	/^void MIXER_DelChannel(MixerChannel* delchan) {$/;"	f
MIXER_Enable	include/modules.h	/^void (* MIXER_Enable)(MIXER_Channel * chan,bool enable);$/;"	v
MIXER_FindChannel	src/hardware/mixer.cpp	/^MixerChannel * MIXER_FindChannel(const char * name) {$/;"	f
MIXER_Handler	include/mixer.h	/^typedef void (*MIXER_Handler)(Bitu len);$/;"	t
MIXER_INDEX	src/hardware/sblaster.cpp	44;"	d	file:
MIXER_Init	src/hardware/mixer.cpp	/^void MIXER_Init(Section* sec) {$/;"	f
MIXER_Mix	src/hardware/mixer.cpp	/^static void MIXER_Mix(void) {$/;"	f	file:
MIXER_MixData	src/hardware/mixer.cpp	/^static void MIXER_MixData(Bitu needed) {$/;"	f	file:
MIXER_MixHandler	include/mixer.h	/^typedef void (*MIXER_MixHandler)(Bit8u * sampdate,Bit32u len);$/;"	t
MIXER_MixHandler	include/modules.h	/^typedef void (* MIXER_MixHandler)(Bit8u * sampdate,Bit32u len);$/;"	t
MIXER_Mix_NoSound	src/hardware/mixer.cpp	/^static void MIXER_Mix_NoSound(void) {$/;"	f	file:
MIXER_ProgramStart	src/hardware/mixer.cpp	/^static void MIXER_ProgramStart(Program * * make) {$/;"	f	file:
MIXER_REMAIN	src/hardware/mixer.cpp	55;"	d	file:
MIXER_SHIFT	src/hardware/mixer.cpp	54;"	d	file:
MIXER_SSIZE	src/hardware/mixer.cpp	53;"	d	file:
MIXER_SetFreq	include/modules.h	/^void (* MIXER_SetFreq)(MIXER_Channel * chan,Bit32u freq);$/;"	v
MIXER_SetMode	include/modules.h	/^void (* MIXER_SetMode)(MIXER_Channel * chan,Bit8u mode);$/;"	v
MIXER_SetVolume	include/modules.h	/^void (* MIXER_SetVolume)(MIXER_Channel * chan,Bit8u vol);$/;"	v
MIXER_Stop	src/hardware/mixer.cpp	/^static void MIXER_Stop(Section* sec) {$/;"	f	file:
MIXER_VOLSHIFT	src/hardware/mixer.cpp	56;"	d	file:
MK_f1	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_f10	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_f11	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_f12	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_f2	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_f3	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_f4	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_f5	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_f6	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_f7	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_f8	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_f9	include/mapper.h	/^	MK_f1,MK_f2,MK_f3,MK_f4,MK_f5,MK_f6,MK_f7,MK_f8,MK_f9,MK_f10,MK_f11,MK_f12,$/;"	e	enum:MapKeys
MK_kpminus	include/mapper.h	/^	MK_return,MK_kpminus,MK_scrolllock,MK_printscreen,MK_pause$/;"	e	enum:MapKeys
MK_pause	include/mapper.h	/^	MK_return,MK_kpminus,MK_scrolllock,MK_printscreen,MK_pause$/;"	e	enum:MapKeys
MK_printscreen	include/mapper.h	/^	MK_return,MK_kpminus,MK_scrolllock,MK_printscreen,MK_pause$/;"	e	enum:MapKeys
MK_return	include/mapper.h	/^	MK_return,MK_kpminus,MK_scrolllock,MK_printscreen,MK_pause$/;"	e	enum:MapKeys
MK_scrolllock	include/mapper.h	/^	MK_return,MK_kpminus,MK_scrolllock,MK_printscreen,MK_pause$/;"	e	enum:MapKeys
MMOD1	include/mapper.h	36;"	d
MMOD2	include/mapper.h	37;"	d
MOD	src/debug/debug_disasm.cpp	123;"	d	file:
MODEMSPD	src/hardware/serialport/softmodem.h	30;"	d
MODEM_BUFFER_QUEUE_SIZE	src/hardware/serialport/softmodem.h	34;"	d
MODEM_DEFAULT_PORT	src/hardware/serialport/softmodem.h	36;"	d
MODEM_RING_EVENT	src/hardware/serialport/softmodem.h	40;"	d
MODEM_RX_POLLING	src/hardware/serialport/softmodem.h	39;"	d
MODEM_TX_EVENT	src/hardware/serialport/softmodem.h	38;"	d
MODE_DAC	src/hardware/sblaster.cpp	/^	MODE_DAC,$/;"	e	enum:DSP_MODES	file:
MODE_DMA	src/hardware/sblaster.cpp	/^	MODE_DMA,$/;"	e	enum:DSP_MODES	file:
MODE_DMA_MASKED	src/hardware/sblaster.cpp	/^	MODE_DMA_MASKED$/;"	e	enum:DSP_MODES	file:
MODE_DMA_PAUSE	src/hardware/sblaster.cpp	/^	MODE_DMA_PAUSE,$/;"	e	enum:DSP_MODES	file:
MODE_DUALOPL2	src/hardware/adlib.h	/^	MODE_DUALOPL2,$/;"	e	enum:Adlib::__anon147
MODE_INFO	src/ints/int10_vesa.cpp	/^struct MODE_INFO{$/;"	s	file:
MODE_NONE	src/hardware/sblaster.cpp	/^	MODE_NONE,$/;"	e	enum:DSP_MODES	file:
MODE_OPL2	src/hardware/adlib.h	/^	MODE_OPL2,$/;"	e	enum:Adlib::__anon147
MODE_OPL3	src/hardware/adlib.h	/^	MODE_OPL3,$/;"	e	enum:Adlib::__anon147
MODULE_FindHandler	include/modules.h	/^typedef bool (* MODULE_FindHandler)(char * name,void * * function);$/;"	t
MODULE_START_PROC	include/modules.h	98;"	d
MODULE_StartHandler	include/modules.h	/^typedef char *(* MODULE_StartHandler)(MODULE_FindHandler find_handler);$/;"	t
MOUNT	src/dos/dos_programs.cpp	/^class MOUNT : public Program {$/;"	c	file:
MOUNT_ProgramStart	src/dos/dos_programs.cpp	/^static void MOUNT_ProgramStart(Program * * make) {$/;"	f	file:
MOUSE_BD_Handler	src/ints/mouse.cpp	/^static Bitu MOUSE_BD_Handler(void) {$/;"	f	file:
MOUSE_BUTTONS	src/ints/mouse.cpp	54;"	d	file:
MOUSE_HAS_MOVED	src/ints/mouse.cpp	193;"	d	file:
MOUSE_IRQ	src/ints/mouse.cpp	55;"	d	file:
MOUSE_Init	src/ints/mouse.cpp	/^void MOUSE_Init(Section* \/*sec*\/) {$/;"	f
MOUSE_LEFT_PRESSED	src/ints/mouse.cpp	194;"	d	file:
MOUSE_LEFT_RELEASED	src/ints/mouse.cpp	195;"	d	file:
MOUSE_MIDDLE_PRESSED	src/ints/mouse.cpp	198;"	d	file:
MOUSE_MIDDLE_RELEASED	src/ints/mouse.cpp	199;"	d	file:
MOUSE_RIGHT_PRESSED	src/ints/mouse.cpp	196;"	d	file:
MOUSE_RIGHT_RELEASED	src/ints/mouse.cpp	197;"	d	file:
MOUSE_UserInt_CB_Handler	src/ints/mouse.cpp	/^Bitu MOUSE_UserInt_CB_Handler(void) {$/;"	f
MOV_REG_BYTE_FROM_HOST_REG_LOW	src/cpu/core_dynrec/decoder_basic.h	413;"	d
MOV_REG_BYTE_FROM_HOST_REG_LOW	src/cpu/core_dynrec/decoder_basic.h	430;"	d
MOV_REG_BYTE_FROM_HOST_REG_LOW	src/cpu/core_dynrec/save/decoder_basic.h	411;"	d
MOV_REG_BYTE_FROM_HOST_REG_LOW	src/cpu/core_dynrec/save/decoder_basic.h	428;"	d
MOV_REG_BYTE_TO_HOST_REG_LOW	src/cpu/core_dynrec/decoder_basic.h	411;"	d
MOV_REG_BYTE_TO_HOST_REG_LOW	src/cpu/core_dynrec/decoder_basic.h	428;"	d
MOV_REG_BYTE_TO_HOST_REG_LOW	src/cpu/core_dynrec/save/decoder_basic.h	409;"	d
MOV_REG_BYTE_TO_HOST_REG_LOW	src/cpu/core_dynrec/save/decoder_basic.h	426;"	d
MOV_REG_BYTE_TO_HOST_REG_LOW_CANUSEWORD	src/cpu/core_dynrec/decoder_basic.h	412;"	d
MOV_REG_BYTE_TO_HOST_REG_LOW_CANUSEWORD	src/cpu/core_dynrec/decoder_basic.h	429;"	d
MOV_REG_BYTE_TO_HOST_REG_LOW_CANUSEWORD	src/cpu/core_dynrec/save/decoder_basic.h	410;"	d
MOV_REG_BYTE_TO_HOST_REG_LOW_CANUSEWORD	src/cpu/core_dynrec/save/decoder_basic.h	427;"	d
MOV_REG_VAL_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	400;"	d
MOV_REG_VAL_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	417;"	d
MOV_REG_VAL_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	398;"	d
MOV_REG_VAL_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	415;"	d
MOV_REG_WORD16_FROM_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	407;"	d
MOV_REG_WORD16_FROM_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	424;"	d
MOV_REG_WORD16_FROM_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	405;"	d
MOV_REG_WORD16_FROM_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	422;"	d
MOV_REG_WORD16_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	403;"	d
MOV_REG_WORD16_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	420;"	d
MOV_REG_WORD16_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	401;"	d
MOV_REG_WORD16_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	418;"	d
MOV_REG_WORD32_FROM_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	408;"	d
MOV_REG_WORD32_FROM_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	425;"	d
MOV_REG_WORD32_FROM_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	406;"	d
MOV_REG_WORD32_FROM_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	423;"	d
MOV_REG_WORD32_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	404;"	d
MOV_REG_WORD32_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	421;"	d
MOV_REG_WORD32_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	402;"	d
MOV_REG_WORD32_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	419;"	d
MOV_REG_WORD_FROM_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	409;"	d
MOV_REG_WORD_FROM_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	426;"	d
MOV_REG_WORD_FROM_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	407;"	d
MOV_REG_WORD_FROM_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	424;"	d
MOV_REG_WORD_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	405;"	d
MOV_REG_WORD_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	422;"	d
MOV_REG_WORD_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	403;"	d
MOV_REG_WORD_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	420;"	d
MOV_SEG_PHYS_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	385;"	d
MOV_SEG_PHYS_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	392;"	d
MOV_SEG_PHYS_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	383;"	d
MOV_SEG_PHYS_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	390;"	d
MOV_SEG_VAL_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	383;"	d
MOV_SEG_VAL_TO_HOST_REG	src/cpu/core_dynrec/decoder_basic.h	390;"	d
MOV_SEG_VAL_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	381;"	d
MOV_SEG_VAL_TO_HOST_REG	src/cpu/core_dynrec/save/decoder_basic.h	388;"	d
MREG_AUTOANSWER_COUNT	src/hardware/serialport/softmodem.h	145;"	d
MREG_BACKSPACE_CHAR	src/hardware/serialport/softmodem.h	150;"	d
MREG_CR_CHAR	src/hardware/serialport/softmodem.h	148;"	d
MREG_ESCAPE_CHAR	src/hardware/serialport/softmodem.h	147;"	d
MREG_LF_CHAR	src/hardware/serialport/softmodem.h	149;"	d
MREG_RING_COUNT	src/hardware/serialport/softmodem.h	146;"	d
MSCDEX_AddDrive	src/dos/dos_mscdex.cpp	/^int MSCDEX_AddDrive(char driveLetter, const char* physicalPath, Bit8u& subUnit)$/;"	f
MSCDEX_ERROR_BAD_FORMAT	src/dos/dos_mscdex.cpp	42;"	d	file:
MSCDEX_ERROR_DRIVE_NOT_READY	src/dos/dos_mscdex.cpp	44;"	d	file:
MSCDEX_ERROR_UNKNOWN_DRIVE	src/dos/dos_mscdex.cpp	43;"	d	file:
MSCDEX_GetVolumeName	src/dos/dos_mscdex.cpp	/^bool MSCDEX_GetVolumeName(Bit8u subUnit, char* name)$/;"	f
MSCDEX_Handler	src/dos/dos_mscdex.cpp	/^static bool MSCDEX_Handler(void) {$/;"	f	file:
MSCDEX_HasDrive	src/dos/dos_mscdex.cpp	/^bool MSCDEX_HasDrive(char driveLetter)$/;"	f
MSCDEX_HasMediaChanged	src/dos/dos_mscdex.cpp	/^bool MSCDEX_HasMediaChanged(Bit8u subUnit)$/;"	f
MSCDEX_IOCTL_Input	src/dos/dos_mscdex.cpp	/^static Bit16u MSCDEX_IOCTL_Input(PhysPt buffer,Bit8u drive_unit) {$/;"	f	file:
MSCDEX_IOCTL_Optput	src/dos/dos_mscdex.cpp	/^static Bit16u MSCDEX_IOCTL_Optput(PhysPt buffer,Bit8u drive_unit) {$/;"	f	file:
MSCDEX_Init	src/dos/dos_mscdex.cpp	/^void MSCDEX_Init(Section* sec) $/;"	f
MSCDEX_Interrupt_Handler	src/dos/dos_mscdex.cpp	/^static Bitu MSCDEX_Interrupt_Handler(void) {$/;"	f	file:
MSCDEX_LOG	src/dos/dos_mscdex.cpp	34;"	d	file:
MSCDEX_MAX_DRIVES	src/dos/dos_mscdex.cpp	39;"	d	file:
MSCDEX_RemoveDrive	src/dos/dos_mscdex.cpp	/^int MSCDEX_RemoveDrive(char driveLetter)$/;"	f
MSCDEX_ReplaceDrive	src/dos/dos_mscdex.cpp	/^void MSCDEX_ReplaceDrive(CDROM_Interface* cdrom, Bit8u subUnit)$/;"	f
MSCDEX_SetCDInterface	src/dos/dos_mscdex.cpp	/^void MSCDEX_SetCDInterface(int intNr, int numCD)$/;"	f
MSCDEX_ShutDown	src/dos/dos_mscdex.cpp	/^void MSCDEX_ShutDown(Section* sec)$/;"	f
MSCDEX_Strategy_Handler	src/dos/dos_mscdex.cpp	/^static Bitu MSCDEX_Strategy_Handler(void) {$/;"	f	file:
MSCDEX_VERSION_HIGH	src/dos/dos_mscdex.cpp	37;"	d	file:
MSCDEX_VERSION_LOW	src/dos/dos_mscdex.cpp	38;"	d	file:
MSG_Add	src/misc/messages.cpp	/^void MSG_Add(const char * _name, const char* _val) {$/;"	f
MSG_Get	src/misc/messages.cpp	/^const char * MSG_Get(char const * msg) {$/;"	f
MSG_Init	src/misc/messages.cpp	/^void MSG_Init(Section_prop * section) {$/;"	f
MSG_Replace	src/misc/messages.cpp	/^void MSG_Replace(const char * _name, const char* _val) {$/;"	f
MSG_Write	src/misc/messages.cpp	/^void MSG_Write(const char * location) {$/;"	f
MSR_CD_MASK	include/serialport.h	321;"	d
MSR_CTS_MASK	include/serialport.h	318;"	d
MSR_DSR_MASK	include/serialport.h	319;"	d
MSR_LINE_MASK	include/serialport.h	312;"	d
MSR_OFFSET	include/serialport.h	301;"	d
MSR_PRIORITY	include/serialport.h	193;"	d
MSR_RI_MASK	include/serialport.h	320;"	d
MSR_dCD_MASK	include/serialport.h	317;"	d
MSR_dCTS_MASK	include/serialport.h	314;"	d
MSR_dDSR_MASK	include/serialport.h	315;"	d
MSR_dRI_MASK	include/serialport.h	316;"	d
MSR_delta_MASK	include/serialport.h	311;"	d
MULB	src/cpu/arminst.h	638;"	d
MULB	src/cpu/instructions.h	634;"	d
MULD	src/cpu/arminst.h	662;"	d
MULD	src/cpu/instructions.h	658;"	d
MULW	src/cpu/arminst.h	648;"	d
MULW	src/cpu/instructions.h	644;"	d
M_16M	include/mixer.h	/^	M_16M,M_16S$/;"	e	enum:MixerModes
M_16S	include/mixer.h	/^	M_16M,M_16S$/;"	e	enum:MixerModes
M_8M	include/mixer.h	/^	M_8M,M_8S,$/;"	e	enum:MixerModes
M_8S	include/mixer.h	/^	M_8M,M_8S,$/;"	e	enum:MixerModes
M_CGA16	include/vga.h	/^	M_CGA16, M_TANDY2, M_TANDY4, M_TANDY16, M_TANDY_TEXT,$/;"	e	enum:VGAModes
M_CGA2	include/vga.h	/^	M_CGA2, M_CGA4,$/;"	e	enum:VGAModes
M_CGA4	include/vga.h	/^	M_CGA2, M_CGA4,$/;"	e	enum:VGAModes
M_EA	src/cpu/core_full/support.h	/^	M_SEG,M_EA,$/;"	e	enum:__anon101
M_EGA	include/vga.h	/^	M_EGA, M_VGA,$/;"	e	enum:VGAModes
M_ERROR	include/vga.h	/^	M_ERROR$/;"	e	enum:VGAModes
M_Eb	src/cpu/core_full/support.h	/^	M_Ebx,M_Eb,M_Gb,M_EbGb,M_GbEb,$/;"	e	enum:__anon101
M_EbGb	src/cpu/core_full/support.h	/^	M_Ebx,M_Eb,M_Gb,M_EbGb,M_GbEb,$/;"	e	enum:__anon101
M_EbIb	src/cpu/core_full/support.h	/^	M_EbIb,M_EwIb,M_EdIb,$/;"	e	enum:__anon101
M_Ebx	src/cpu/core_full/support.h	/^	M_Ebx,M_Eb,M_Gb,M_EbGb,M_GbEb,$/;"	e	enum:__anon101
M_Ed	src/cpu/core_full/support.h	/^	M_Edx,M_Ed,M_Gd,M_EdGd,M_GdEd,M_EdxGdx,M_EdGdt,$/;"	e	enum:__anon101
M_EdGd	src/cpu/core_full/support.h	/^	M_Edx,M_Ed,M_Gd,M_EdGd,M_GdEd,M_EdxGdx,M_EdGdt,$/;"	e	enum:__anon101
M_EdGdCL	src/cpu/core_full/support.h	/^	M_EdId,M_EdIbx,M_EdGdIb,M_EdGdCL,$/;"	e	enum:__anon101
M_EdGdIb	src/cpu/core_full/support.h	/^	M_EdId,M_EdIbx,M_EdGdIb,M_EdGdCL,$/;"	e	enum:__anon101
M_EdGdt	src/cpu/core_full/support.h	/^	M_Edx,M_Ed,M_Gd,M_EdGd,M_GdEd,M_EdxGdx,M_EdGdt,$/;"	e	enum:__anon101
M_EdIb	src/cpu/core_full/support.h	/^	M_EbIb,M_EwIb,M_EdIb,$/;"	e	enum:__anon101
M_EdIbx	src/cpu/core_full/support.h	/^	M_EdId,M_EdIbx,M_EdGdIb,M_EdGdCL,$/;"	e	enum:__anon101
M_EdId	src/cpu/core_full/support.h	/^	M_EdId,M_EdIbx,M_EdGdIb,M_EdGdCL,$/;"	e	enum:__anon101
M_Edx	src/cpu/core_full/support.h	/^	M_Edx,M_Ed,M_Gd,M_EdGd,M_GdEd,M_EdxGdx,M_EdGdt,$/;"	e	enum:__anon101
M_EdxGdx	src/cpu/core_full/support.h	/^	M_Edx,M_Ed,M_Gd,M_EdGd,M_GdEd,M_EdxGdx,M_EdGdt,$/;"	e	enum:__anon101
M_Efd	src/cpu/core_full/support.h	/^	M_Efw,M_Efd,$/;"	e	enum:__anon101
M_Efw	src/cpu/core_full/support.h	/^	M_Efw,M_Efd,$/;"	e	enum:__anon101
M_Ew	src/cpu/core_full/support.h	/^	M_Ewx,M_Ew,M_Gw,M_EwGw,M_GwEw,M_EwxGwx,M_EwGwt,$/;"	e	enum:__anon101
M_EwGw	src/cpu/core_full/support.h	/^	M_Ewx,M_Ew,M_Gw,M_EwGw,M_GwEw,M_EwxGwx,M_EwGwt,$/;"	e	enum:__anon101
M_EwGwCL	src/cpu/core_full/support.h	/^	M_EwIw,M_EwIbx,M_EwxIbx,M_EwxIwx,M_EwGwIb,M_EwGwCL,$/;"	e	enum:__anon101
M_EwGwIb	src/cpu/core_full/support.h	/^	M_EwIw,M_EwIbx,M_EwxIbx,M_EwxIwx,M_EwGwIb,M_EwGwCL,$/;"	e	enum:__anon101
M_EwGwt	src/cpu/core_full/support.h	/^	M_Ewx,M_Ew,M_Gw,M_EwGw,M_GwEw,M_EwxGwx,M_EwGwt,$/;"	e	enum:__anon101
M_EwIb	src/cpu/core_full/support.h	/^	M_EbIb,M_EwIb,M_EdIb,$/;"	e	enum:__anon101
M_EwIbx	src/cpu/core_full/support.h	/^	M_EwIw,M_EwIbx,M_EwxIbx,M_EwxIwx,M_EwGwIb,M_EwGwCL,$/;"	e	enum:__anon101
M_EwIw	src/cpu/core_full/support.h	/^	M_EwIw,M_EwIbx,M_EwxIbx,M_EwxIwx,M_EwGwIb,M_EwGwCL,$/;"	e	enum:__anon101
M_Ewx	src/cpu/core_full/support.h	/^	M_Ewx,M_Ew,M_Gw,M_EwGw,M_GwEw,M_EwxGwx,M_EwGwt,$/;"	e	enum:__anon101
M_EwxGwx	src/cpu/core_full/support.h	/^	M_Ewx,M_Ew,M_Gw,M_EwGw,M_GwEw,M_EwxGwx,M_EwGwt,$/;"	e	enum:__anon101
M_EwxIbx	src/cpu/core_full/support.h	/^	M_EwIw,M_EwIbx,M_EwxIbx,M_EwxIwx,M_EwGwIb,M_EwGwCL,$/;"	e	enum:__anon101
M_EwxIwx	src/cpu/core_full/support.h	/^	M_EwIw,M_EwIbx,M_EwxIbx,M_EwxIwx,M_EwGwIb,M_EwGwCL,$/;"	e	enum:__anon101
M_GRP	src/cpu/core_full/support.h	/^	M_GRP,$/;"	e	enum:__anon101
M_GRP_1	src/cpu/core_full/support.h	/^	M_GRP_Ib,M_GRP_CL,M_GRP_1,$/;"	e	enum:__anon101
M_GRP_CL	src/cpu/core_full/support.h	/^	M_GRP_Ib,M_GRP_CL,M_GRP_1,$/;"	e	enum:__anon101
M_GRP_Ib	src/cpu/core_full/support.h	/^	M_GRP_Ib,M_GRP_CL,M_GRP_1,$/;"	e	enum:__anon101
M_Gb	src/cpu/core_full/support.h	/^	M_Ebx,M_Eb,M_Gb,M_EbGb,M_GbEb,$/;"	e	enum:__anon101
M_GbEb	src/cpu/core_full/support.h	/^	M_Ebx,M_Eb,M_Gb,M_EbGb,M_GbEb,$/;"	e	enum:__anon101
M_Gd	src/cpu/core_full/support.h	/^	M_Edx,M_Ed,M_Gd,M_EdGd,M_GdEd,M_EdxGdx,M_EdGdt,$/;"	e	enum:__anon101
M_GdEd	src/cpu/core_full/support.h	/^	M_Edx,M_Ed,M_Gd,M_EdGd,M_GdEd,M_EdxGdx,M_EdGdt,$/;"	e	enum:__anon101
M_Gw	src/cpu/core_full/support.h	/^	M_Ewx,M_Ew,M_Gw,M_EwGw,M_GwEw,M_EwxGwx,M_EwGwt,$/;"	e	enum:__anon101
M_GwEw	src/cpu/core_full/support.h	/^	M_Ewx,M_Ew,M_Gw,M_EwGw,M_GwEw,M_EwxGwx,M_EwGwt,$/;"	e	enum:__anon101
M_HERC_GFX	include/vga.h	/^	M_HERC_GFX, M_HERC_TEXT,$/;"	e	enum:VGAModes
M_HERC_TEXT	include/vga.h	/^	M_HERC_GFX, M_HERC_TEXT,$/;"	e	enum:VGAModes
M_Ib	src/cpu/core_full/support.h	/^	M_Ib,M_Iw,M_Id,$/;"	e	enum:__anon101
M_Id	src/cpu/core_full/support.h	/^	M_Ib,M_Iw,M_Id,$/;"	e	enum:__anon101
M_Iw	src/cpu/core_full/support.h	/^	M_Ib,M_Iw,M_Id,$/;"	e	enum:__anon101
M_LIN15	include/vga.h	/^	M_LIN4, M_LIN8, M_LIN15, M_LIN16, M_LIN32,$/;"	e	enum:VGAModes
M_LIN16	include/vga.h	/^	M_LIN4, M_LIN8, M_LIN15, M_LIN16, M_LIN32,$/;"	e	enum:VGAModes
M_LIN32	include/vga.h	/^	M_LIN4, M_LIN8, M_LIN15, M_LIN16, M_LIN32,$/;"	e	enum:VGAModes
M_LIN4	include/vga.h	/^	M_LIN4, M_LIN8, M_LIN15, M_LIN16, M_LIN32,$/;"	e	enum:VGAModes
M_LIN8	include/vga.h	/^	M_LIN4, M_LIN8, M_LIN15, M_LIN16, M_LIN32,$/;"	e	enum:VGAModes
M_None	src/cpu/core_full/support.h	/^	M_None=0,$/;"	e	enum:__anon101
M_POPd	src/cpu/core_full/support.h	/^	M_POPw,M_POPd,$/;"	e	enum:__anon101
M_POPw	src/cpu/core_full/support.h	/^	M_POPw,M_POPd,$/;"	e	enum:__anon101
M_SEG	src/cpu/core_full/support.h	/^	M_SEG,M_EA,$/;"	e	enum:__anon101
M_TANDY16	include/vga.h	/^	M_CGA16, M_TANDY2, M_TANDY4, M_TANDY16, M_TANDY_TEXT,$/;"	e	enum:VGAModes
M_TANDY2	include/vga.h	/^	M_CGA16, M_TANDY2, M_TANDY4, M_TANDY16, M_TANDY_TEXT,$/;"	e	enum:VGAModes
M_TANDY4	include/vga.h	/^	M_CGA16, M_TANDY2, M_TANDY4, M_TANDY16, M_TANDY_TEXT,$/;"	e	enum:VGAModes
M_TANDY_TEXT	include/vga.h	/^	M_CGA16, M_TANDY2, M_TANDY4, M_TANDY16, M_TANDY_TEXT,$/;"	e	enum:VGAModes
M_TEXT	include/vga.h	/^	M_TEXT,$/;"	e	enum:VGAModes
M_VGA	include/vga.h	/^	M_EGA, M_VGA,$/;"	e	enum:VGAModes
MachineType	include/dosbox.h	/^enum MachineType {$/;"	g
Magenta	src/libs/gui_tk/gui_tk.h	/^const RGB Magenta = Red|Blue;$/;"	m	namespace:GUI::Color
MagentaMask	src/libs/gui_tk/gui_tk.h	/^const RGB MagentaMask = RedMask|BlueMask;$/;"	m	namespace:GUI::Color
MakeAspectTable	src/gui/render.cpp	/^static Bitu MakeAspectTable(Bitu SourceHeight, Bitu AimHeight) {$/;"	f	file:
MakeCodePage	src/cpu/core_dyn_x86/decoder.h	/^static bool MakeCodePage(Bitu lin_addr,CodePageHandler * &cph) {$/;"	f
MakeCodePage	src/cpu/core_dynrec/decoder_basic.h	/^static bool MakeCodePage(Bitu lin_addr,CodePageHandlerDynRec * &cph) {$/;"	f
MakeCodePage	src/cpu/core_dynrec/save/decoder_basic.h	/^static bool MakeCodePage(Bitu lin_addr,CodePageHandlerDynRec * &cph) {$/;"	f
MakeDefaultBind	src/gui/sdl_mapper.cpp	/^	void MakeDefaultBind(char * buf) {$/;"	f	class:CHandlerEvent
MakeDir	src/dos/drive_fat.cpp	/^bool fatDrive::MakeDir(char *dir) {$/;"	f	class:fatDrive
MakeDir	src/dos/drive_iso.cpp	/^bool isoDrive::MakeDir(char *dir)$/;"	f	class:isoDrive
MakeDir	src/dos/drive_local.cpp	/^bool cdromDrive::MakeDir(char * dir) {$/;"	f	class:cdromDrive
MakeDir	src/dos/drive_local.cpp	/^bool localDrive::MakeDir(char * dir) {$/;"	f	class:localDrive
MakeDir	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::MakeDir(char * dir) {$/;"	f	class:Virtual_Drive
MakeEnv	src/dos/dos_execute.cpp	/^static bool MakeEnv(char * name,Bit16u * segment) {$/;"	f	file:
MakeNew	src/dos/dos_classes.cpp	/^void DOS_PSP::MakeNew(Bit16u mem_size) {$/;"	f	class:DOS_PSP
MakePairs	src/debug/debug_gui.cpp	/^static void MakePairs(void) {$/;"	f	file:
MakeSubWindows	src/debug/debug_gui.cpp	/^static void MakeSubWindows(void) {$/;"	f	file:
MakeVolume	src/hardware/mixer.cpp	/^	void MakeVolume(char * scan,float & vol0,float & vol1) {$/;"	f	class:MIXER
MapKeys	include/mapper.h	/^enum MapKeys {$/;"	g
MapSDLCode	src/gui/sdl_mapper.cpp	/^SDLKey MapSDLCode(Bitu skey) {$/;"	f
MaximumPhysicalPages	src/platform/visualc/ntddscsi.h	/^	ULONG  MaximumPhysicalPages;$/;"	m	struct:_IO_SCSI_CAPABILITIES
MaximumTransferLength	src/platform/visualc/ntddscsi.h	/^	ULONG  MaximumTransferLength;$/;"	m	struct:_IO_SCSI_CAPABILITIES
Mcval	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Mcval :1;$/;"	m	struct:_SUB_Q_MEDIA_CATALOG_NUMBER
MediaCatalog	src/platform/visualc/ntddcdrm.h	/^  SUB_Q_MEDIA_CATALOG_NUMBER  MediaCatalog;$/;"	m	union:_SUB_Q_CHANNEL_DATA
MediaCatalog	src/platform/visualc/ntddcdrm.h	/^  UCHAR  MediaCatalog[15];$/;"	m	struct:_SUB_Q_MEDIA_CATALOG_NUMBER
MemBase	src/hardware/memory.cpp	/^HostPt MemBase;$/;"	v
MemHandle	include/mem.h	/^typedef Bit32s MemHandle;$/;"	t
MemStruct	include/dos_inc.h	/^class MemStruct {$/;"	c
MemoryBlock	src/hardware/memory.cpp	/^static struct MemoryBlock {$/;"	s	file:
MemoryModel	src/ints/int10_vesa.cpp	/^	Bit8u MemoryModel;$/;"	m	struct:MODE_INFO	file:
MemoryRegion	src/ints/ems.cpp	/^static Bit8u MemoryRegion(void) {$/;"	f	file:
Menu	src/libs/gui_tk/gui_tk.h	/^		Home, End, PageUp, PageDown, Insert, Delete, Menu,$/;"	e	enum:GUI::Key::Special
Menu	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> Menu(Window *parent, int x, int y, const STR name) :$/;"	f	class:GUI::Menu
Menu	src/libs/gui_tk/gui_tk.h	/^class Menu : public TransientWindow, public ActionEventSource {$/;"	c	namespace:GUI
Menubar	src/libs/gui_tk/gui_tk.h	/^	Menubar(Window *parent, int x, int y, int w) : Window(parent,x,y,w,Font::getFont("menu")->getHeight()+5), ActionEventSource("GUI::Menubar"), selected(-1), lastx(0) {}$/;"	f	class:GUI::Menubar
Menubar	src/libs/gui_tk/gui_tk.h	/^class Menubar : public Window, public ActionEventSource, ActionEventSource_Callback {$/;"	c	namespace:GUI
MessageBlock	src/misc/messages.cpp	/^	MessageBlock(const char* _name, const char* _val):$/;"	f	struct:MessageBlock
MessageBlock	src/misc/messages.cpp	/^struct MessageBlock {$/;"	s	file:
MessageBox	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> MessageBox(Screen *parent, int x, int y, int width, const STR title, const STR text) :$/;"	f	class:GUI::MessageBox
MessageBox	src/libs/gui_tk/gui_tk.h	/^class MessageBox : public GUI::ToplevelWindow {$/;"	c	namespace:GUI
Middle	src/libs/gui_tk/gui_tk.h	/^enum MouseButton { NoButton, Left, Right, Middle, WheelUp, WheelDown, WheelLeft, WheelRight };$/;"	e	enum:GUI::MouseButton
MidiHandler_alsa	src/gui/midi_alsa.h	/^	MidiHandler_alsa() : MidiHandler() {};$/;"	f	class:MidiHandler_alsa
MidiHandler_alsa	src/gui/midi_alsa.h	/^class MidiHandler_alsa : public MidiHandler {$/;"	c
MidiHandler_coreaudio	src/gui/midi_coreaudio.h	/^	MidiHandler_coreaudio() : m_auGraph(0), m_synth(0) {}$/;"	f	class:MidiHandler_coreaudio
MidiHandler_coreaudio	src/gui/midi_coreaudio.h	/^class MidiHandler_coreaudio : public MidiHandler {$/;"	c
MidiHandler_coremidi	src/gui/midi_coremidi.h	/^	MidiHandler_coremidi()  {m_pCurPacket = 0;}$/;"	f	class:MidiHandler_coremidi
MidiHandler_coremidi	src/gui/midi_coremidi.h	/^class MidiHandler_coremidi : public MidiHandler {$/;"	c
MidiHandler_oss	src/gui/midi_oss.h	/^	MidiHandler_oss() : MidiHandler(),isOpen(false) {};$/;"	f	class:MidiHandler_oss
MidiHandler_oss	src/gui/midi_oss.h	/^class MidiHandler_oss: public MidiHandler {$/;"	c
MidiHandler_win32	src/gui/midi_win32.h	/^	MidiHandler_win32() : MidiHandler(),isOpen(false) {};$/;"	f	class:MidiHandler_win32
MidiHandler_win32	src/gui/midi_win32.h	/^class MidiHandler_win32: public MidiHandler {$/;"	c
Midi_alsa	src/gui/midi_alsa.h	/^MidiHandler_alsa Midi_alsa;$/;"	v
Midi_coreaudio	src/gui/midi_coreaudio.h	/^MidiHandler_coreaudio Midi_coreaudio;$/;"	v
Midi_coremidi	src/gui/midi_coremidi.h	/^MidiHandler_coremidi Midi_coremidi;$/;"	v
Midi_oss	src/gui/midi_oss.h	/^MidiHandler_oss Midi_oss;$/;"	v
Midi_win32	src/gui/midi_win32.h	/^MidiHandler_win32 Midi_win32; $/;"	v
Mix	src/hardware/mixer.cpp	/^void MixerChannel::Mix(Bitu _needed) {$/;"	f	class:MixerChannel
MixTemp	src/hardware/mixer.cpp	/^Bit8u MixTemp[MIXER_BUFSIZE];$/;"	v
MixerChan	src/hardware/adlib.cpp	/^	MixerObject MixerChan;$/;"	m	class:OPL	file:
MixerChan	src/hardware/gameblaster.cpp	/^	MixerObject MixerChan;$/;"	m	class:CMS	file:
MixerChan	src/hardware/pcspeaker.cpp	/^	MixerObject MixerChan;$/;"	m	class:PCSPEAKER	file:
MixerChan	src/hardware/sblaster.cpp	/^	MixerObject MixerChan;$/;"	m	class:SBLASTER	file:
MixerChan	src/hardware/tandy_sound.cpp	/^	MixerObject MixerChan;$/;"	m	class:TANDYSOUND	file:
MixerChannel	include/mixer.h	/^class MixerChannel {$/;"	c
MixerModes	include/mixer.h	/^enum MixerModes {$/;"	g
MixerObject	include/mixer.h	/^	MixerObject():installed(false){};$/;"	f	class:MixerObject
MixerObject	include/mixer.h	/^class MixerObject{$/;"	c
Mixer_irq_important	src/hardware/mixer.cpp	/^static inline bool Mixer_irq_important(void) {$/;"	f	file:
Mode	src/hardware/adlib.h	/^} Mode;$/;"	t	namespace:Adlib	typeref:enum:Adlib::__anon147
ModeAttributes	src/ints/int10_vesa.cpp	/^	Bit16u ModeAttributes;$/;"	m	struct:MODE_INFO	file:
ModeList_EGA	src/ints/int10_modes.cpp	/^VideoModeBlock ModeList_EGA[]={$/;"	v
ModeList_OTHER	src/ints/int10_modes.cpp	/^VideoModeBlock ModeList_OTHER[]={$/;"	v
ModeList_VGA	src/ints/int10_modes.cpp	/^VideoModeBlock ModeList_VGA[]={$/;"	v
ModeList_VGA_Paradise	src/ints/int10_modes.cpp	/^VideoModeBlock ModeList_VGA_Paradise[]={$/;"	v
ModeList_VGA_Tseng	src/ints/int10_modes.cpp	/^VideoModeBlock ModeList_VGA_Tseng[]={$/;"	v
ModeOperation	src/hardware/vga_memory.cpp	/^INLINE static Bit32u ModeOperation(Bit8u val) {$/;"	f	file:
ModeWidth	src/gui/render_16.h	53;"	d
ModeWidth	src/gui/render_32.h	53;"	d
ModeWidth	src/gui/render_8.h	56;"	d
ModeWidth	src/gui/render_9.h	56;"	d
Modem_Status_INT_Enable_MASK	include/serialport.h	218;"	d
Module	src/hardware/adlib.cpp	/^Module::Module() {$/;"	f	class:Adlib::Module
Module	src/hardware/adlib.h	/^class Module {$/;"	c	namespace:Adlib
ModuleStart	include/modules.h	/^char * ModuleStart (MODULE_FindHandler find_handler) {$/;"	f
Module_base	include/setup.h	/^	Module_base(Section* configuration){m_configuration=configuration;};$/;"	f	class:Module_base
Module_base	include/setup.h	/^class Module_base {$/;"	c
MouseButton	src/libs/gui_tk/gui_tk.h	/^enum MouseButton { NoButton, Left, Right, Middle, WheelUp, WheelDown, WheelLeft, WheelRight };$/;"	g	namespace:GUI
Mouse_AddEvent	src/ints/mouse.cpp	/^INLINE void Mouse_AddEvent(Bit8u type) {$/;"	f
Mouse_ButtonPressed	src/ints/mouse.cpp	/^void Mouse_ButtonPressed(Bit8u button) {$/;"	f
Mouse_ButtonReleased	src/ints/mouse.cpp	/^void Mouse_ButtonReleased(Bit8u button) {$/;"	f
Mouse_ChangePS2Callback	src/ints/mouse.cpp	/^void Mouse_ChangePS2Callback(Bit16u pseg, Bit16u pofs) {$/;"	f
Mouse_CursorMoved	src/ints/mouse.cpp	/^void Mouse_CursorMoved(float xrel,float yrel,float x,float y,bool emulate) {$/;"	f
Mouse_CursorSet	src/ints/mouse.cpp	/^void Mouse_CursorSet(float x,float y) {$/;"	f
Mouse_MoveCursor	src/ints/mouse.cpp	/^void Mouse_MoveCursor(float x,float y) {$/;"	f
Mouse_NewVideoMode	src/ints/mouse.cpp	/^void Mouse_NewVideoMode(void) {$/;"	f
Mouse_Reset	src/ints/mouse.cpp	/^static void Mouse_Reset(void) {$/;"	f	file:
Mouse_ResetHardware	src/ints/mouse.cpp	/^static void Mouse_ResetHardware(void){$/;"	f	file:
Mouse_SetCursor	src/ints/mouse.cpp	/^void Mouse_SetCursor(float x, float y, float xp, float yp) {	$/;"	f
Mouse_SetMickeyPixelRate	src/ints/mouse.cpp	/^static void Mouse_SetMickeyPixelRate(Bit16s px, Bit16s py){$/;"	f	file:
Mouse_SetPS2State	src/ints/mouse.cpp	/^bool Mouse_SetPS2State(bool use) {$/;"	f
Mouse_SetSensitivity	src/ints/mouse.cpp	/^static void Mouse_SetSensitivity(Bit16u px, Bit16u py, Bit16u dspeed){$/;"	f	file:
MoveRegion	src/ints/ems.cpp	/^struct MoveRegion {$/;"	s	file:
Mp	src/debug/disasm_tables.h	/^	Mp,$/;"	e	enum:__anon111
Msf	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Msf : 1;$/;"	m	struct:_CDROM_READ_TOC_EX
Msf	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Msf[3];$/;"	m	struct:_CDROM_TOC_FULL_TOC_DATA_BLOCK
MsfExtra	src/platform/visualc/ntddcdrm.h	/^  UCHAR  MsfExtra[3];$/;"	m	struct:_CDROM_TOC_FULL_TOC_DATA_BLOCK
Msg	src/libs/zmbv/zmbv_vfw.cpp	/^void Msg(const char fmt[], ...) {$/;"	f
Multiplex	src/dos/dos_misc.cpp	/^static std::list<MultiplexHandler*> Multiplex;$/;"	v	file:
MultiplexHandler	include/dos_system.h	/^typedef bool (MultiplexHandler)(void);$/;"	t
Multiplex_it	src/dos/dos_misc.cpp	/^typedef std::list<MultiplexHandler*>::iterator Multiplex_it;$/;"	t	file:
NATIVESOCKETS	src/hardware/serialport/misc_util.h	19;"	d
NATIVESOCKETS	src/hardware/serialport/misc_util.h	26;"	d
NETWRAPPER_TCP	src/hardware/serialport/misc_util.h	15;"	d
NETWRAPPER_TCP_NATIVESOCKET	src/hardware/serialport/misc_util.h	16;"	d
NG_PRESET	src/hardware/tandy_sound.cpp	56;"	d	file:
NONE	include/callback.h	/^	enum {NONE,SETUP,SETUPAT} m_type;$/;"	e	enum:CALLBACK_HandlerObject::__anon3
NONE	src/dos/drive_fat.cpp	/^	enum { NONE,READ,WRITE } last_action;$/;"	e	enum:fatFile::__anon121	file:
NONE	src/dos/drive_local.cpp	/^	enum { NONE,READ,WRITE } last_action;$/;"	e	enum:localFile::__anon122	file:
NONE_PRIORITY	include/serialport.h	194;"	d
NOSORT	include/dos_system.h	/^	enum TDirSort { NOSORT, ALPHABETICAL, DIRALPHABETICAL, ALPHABETICALREV, DIRALPHABETICALREV };$/;"	e	enum:DOS_Drive_Cache::TDirSort
NO_SUCH_PROPERTY	include/setup.h	220;"	d
NTRes	src/dos/drives.h	/^	Bit8u NTRes;$/;"	m	struct:direntry
NULL_HANDLE	src/ints/ems.cpp	46;"	d	file:
NULL_PAGE	src/ints/ems.cpp	47;"	d	file:
NUMBER_ANSI_DATA	src/dos/dev_con.h	25;"	d
Native	src/libs/gui_tk/gui_tk.h	/^	class Native { public: virtual ~Native() {}; };$/;"	c	class:GUI::String
NativeArray	src/libs/gui_tk/gui_tk.h	/^		NativeArray(STR *data) : data(data) {}$/;"	f	class:GUI::String::NativeArray
NativeArray	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> class NativeArray: public Native {$/;"	c	class:GUI::String
NativeObject	src/libs/gui_tk/gui_tk.h	/^		NativeObject(STR *data) : data(data) {}$/;"	f	class:GUI::String::NativeObject
NativeObject	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> class NativeObject: public Native {$/;"	c	class:GUI::String
NativeString	src/libs/gui_tk/gui_tk.h	/^template <> class NativeString<const std::string*> : public NativeString<std::string*> {};$/;"	c	namespace:GUI
NativeString	src/libs/gui_tk/gui_tk.h	/^template <> class NativeString<const std::string> : public NativeString<std::string> {};$/;"	c	namespace:GUI
NativeString	src/libs/gui_tk/gui_tk.h	/^template <> class NativeString<std::string*> {$/;"	c	namespace:GUI
NativeString	src/libs/gui_tk/gui_tk.h	/^template <> class NativeString<std::string> {$/;"	c	namespace:GUI
NativeString	src/libs/gui_tk/gui_tk.h	/^template <typename STR, Size N> class NativeString<STR[N]> : public NativeString<STR*> {};$/;"	c	namespace:GUI
NativeString	src/libs/gui_tk/gui_tk.h	/^template <typename STR, Size N> class NativeString<const STR[N]> : public NativeString<STR*> {};$/;"	c	namespace:GUI
NativeString	src/libs/gui_tk/gui_tk.h	/^template <typename STR> class NativeString {$/;"	c	namespace:GUI
NativeString	src/libs/gui_tk/gui_tk.h	/^template <typename STR> class NativeString<STR*> {$/;"	c	namespace:GUI
NativeString	src/libs/gui_tk/gui_tk.h	/^template <typename STR> class NativeString<const STR*> : public NativeString<STR*> {};$/;"	c	namespace:GUI
Netwrapper_GetCapabilities	src/hardware/serialport/misc_util.cpp	/^Bit32u Netwrapper_GetCapabilities()$/;"	f
NextInquiryDataOffset	src/platform/visualc/ntddscsi.h	/^	ULONG  NextInquiryDataOffset;$/;"	m	struct:_SCSI_INQUIRY_DATA
NoButton	src/libs/gui_tk/gui_tk.h	/^enum MouseButton { NoButton, Left, Right, Middle, WheelUp, WheelDown, WheelLeft, WheelRight };$/;"	e	enum:GUI::MouseButton
NoiseFB	src/hardware/tandy_sound.cpp	/^	int NoiseFB;		\/* noise feedback mask *\/$/;"	m	struct:SN76496	file:
None	src/libs/gui_tk/gui_tk.h	/^		None,$/;"	e	enum:GUI::Key::Special
Normal_Loop	src/dosbox.cpp	/^static Bitu Normal_Loop(void) {$/;"	f	file:
NotifyESR	src/hardware/ipx.cpp	/^void ECBClass::NotifyESR(void) {$/;"	f	class:ECBClass
NumLock	src/libs/gui_tk/gui_tk.h	/^		Print, Pause, Break, CapsLock, NumLock, ScrollLock,$/;"	e	enum:GUI::Key::Special
NumberOfBanks	src/ints/int10_vesa.cpp	/^	Bit8u NumberOfBanks;$/;"	m	struct:MODE_INFO	file:
NumberOfBuses	src/platform/visualc/ntddscsi.h	/^	UCHAR  NumberOfBuses;$/;"	m	struct:_SCSI_ADAPTER_BUS_INFO
NumberOfImagePages	src/ints/int10_vesa.cpp	/^	Bit8u NumberOfImagePages;$/;"	m	struct:MODE_INFO	file:
NumberOfLogicalUnits	src/platform/visualc/ntddscsi.h	/^	UCHAR  NumberOfLogicalUnits;$/;"	m	struct:_SCSI_BUS_DATA
NumberOfPlanes	src/ints/int10_vesa.cpp	/^	Bit8u NumberOfPlanes;$/;"	m	struct:MODE_INFO	file:
O	src/hardware/fmopl.cpp	420;"	d	file:
O	src/hardware/fmopl.cpp	457;"	d	file:
O	src/hardware/fmopl.cpp	463;"	d	file:
O	src/hardware/fmopl.cpp	498;"	d	file:
O	src/hardware/ymf262.cpp	370;"	d	file:
O	src/hardware/ymf262.cpp	407;"	d	file:
O	src/hardware/ymf262.cpp	413;"	d	file:
O	src/hardware/ymf262.cpp	448;"	d	file:
OHMS	src/hardware/joystick.cpp	32;"	d	file:
OPCODE_0F	src/cpu/core_simple.cpp	54;"	d	file:
OPCODE_0F	src/cpu/core_verysimple.cpp	54;"	d	file:
OPCODE_NONE	src/cpu/core_simple.cpp	53;"	d	file:
OPCODE_NONE	src/cpu/core_verysimple.cpp	53;"	d	file:
OPCODE_SIZE	src/cpu/core_simple.cpp	55;"	d	file:
OPEN_READ	include/dos_system.h	/^enum { OPEN_READ=0,OPEN_WRITE=1,OPEN_READWRITE=2, DOS_NOT_INHERIT=128};$/;"	e	enum:__anon17
OPEN_READWRITE	include/dos_system.h	/^enum { OPEN_READ=0,OPEN_WRITE=1,OPEN_READWRITE=2, DOS_NOT_INHERIT=128};$/;"	e	enum:__anon17
OPEN_WRITE	include/dos_system.h	/^enum { OPEN_READ=0,OPEN_WRITE=1,OPEN_READWRITE=2, DOS_NOT_INHERIT=128};$/;"	e	enum:__anon17
OPL	src/hardware/adlib.cpp	/^	OPL(Section* configuration):Module_base(configuration) {$/;"	f	class:OPL
OPL	src/hardware/adlib.cpp	/^class OPL: public Module_base {$/;"	c	file:
OPL2	src/hardware/adlib.cpp	/^namespace OPL2 {$/;"	n	file:
OPL2_INTERNAL_FREQ	src/hardware/adlib.cpp	63;"	d	file:
OPL3	src/hardware/ymf262.cpp	/^} OPL3;$/;"	t	typeref:struct:__anon192	file:
OPL3Create	src/hardware/ymf262.cpp	/^static OPL3 *OPL3Create(int type, int clock, int rate)$/;"	f	file:
OPL3Destroy	src/hardware/ymf262.cpp	/^static void OPL3Destroy(OPL3 *chip)$/;"	f	file:
OPL3Read	src/hardware/ymf262.cpp	/^static unsigned char OPL3Read(OPL3 *chip,int a)$/;"	f	file:
OPL3ResetChip	src/hardware/ymf262.cpp	/^static void OPL3ResetChip(OPL3 *chip)$/;"	f	file:
OPL3SAMPLE	src/hardware/ymf262.h	/^typedef INT16 OPL3SAMPLE;$/;"	t
OPL3SAMPLE	src/hardware/ymf262.h	/^typedef INT8 OPL3SAMPLE;$/;"	t
OPL3SetIRQHandler	src/hardware/ymf262.cpp	/^static void OPL3SetIRQHandler(OPL3 *chip,OPL3_IRQHANDLER IRQHandler,int param)$/;"	f	file:
OPL3SetTimerHandler	src/hardware/ymf262.cpp	/^static void OPL3SetTimerHandler(OPL3 *chip,OPL3_TIMERHANDLER TimerHandler,int channelOffset)$/;"	f	file:
OPL3SetUpdateHandler	src/hardware/ymf262.cpp	/^static void OPL3SetUpdateHandler(OPL3 *chip,OPL3_UPDATEHANDLER UpdateHandler,int param)$/;"	f	file:
OPL3TimerOver	src/hardware/ymf262.cpp	/^static int OPL3TimerOver(OPL3 *chip,int c)$/;"	f	file:
OPL3Write	src/hardware/ymf262.cpp	/^static int OPL3Write(OPL3 *chip, int a, int v)$/;"	f	file:
OPL3WriteReg	src/hardware/ymf262.cpp	/^static void OPL3WriteReg(OPL3 *chip, int r, int v)$/;"	f	file:
OPL3_CH	src/hardware/ymf262.cpp	/^} OPL3_CH;$/;"	t	typeref:struct:__anon191	file:
OPL3_INTERNAL_FREQ	src/hardware/adlib.cpp	99;"	d	file:
OPL3_IRQHANDLER	src/hardware/ymf262.h	/^typedef void (*OPL3_IRQHANDLER)(int param,int irq);$/;"	t
OPL3_LockTable	src/hardware/ymf262.cpp	/^static int OPL3_LockTable(void)$/;"	f	file:
OPL3_SAMPLE_BITS	src/hardware/ymf262.h	9;"	d
OPL3_SLOT	src/hardware/ymf262.cpp	/^} OPL3_SLOT;$/;"	t	typeref:struct:__anon190	file:
OPL3_STATUSMASK_SET	src/hardware/ymf262.cpp	/^INLINE void OPL3_STATUSMASK_SET(OPL3 *chip,int flag)$/;"	f
OPL3_STATUS_RESET	src/hardware/ymf262.cpp	/^INLINE void OPL3_STATUS_RESET(OPL3 *chip,int flag)$/;"	f
OPL3_STATUS_SET	src/hardware/ymf262.cpp	/^INLINE void OPL3_STATUS_SET(OPL3 *chip,int flag)$/;"	f
OPL3_TIMERHANDLER	src/hardware/ymf262.h	/^typedef void (*OPL3_TIMERHANDLER)(int channel,double interval_Sec);$/;"	t
OPL3_TYPE_YMF262	src/hardware/ymf262.cpp	137;"	d	file:
OPL3_UPDATEHANDLER	src/hardware/ymf262.h	/^typedef void (*OPL3_UPDATEHANDLER)(int param,int min_interval_us);$/;"	t
OPL3_UnLockTable	src/hardware/ymf262.cpp	/^static void OPL3_UnLockTable(void)$/;"	f	file:
OPL3_initalize	src/hardware/ymf262.cpp	/^static void OPL3_initalize(OPL3 *chip)$/;"	f	file:
OPL3_mode	src/hardware/ymf262.cpp	/^	UINT8	OPL3_mode;				\/* OPL3 extension enable flag	*\/$/;"	m	struct:__anon192	file:
OPLCloseTable	src/hardware/fmopl.cpp	/^static void OPLCloseTable( void )$/;"	f	file:
OPLCloseTable	src/hardware/ymf262.cpp	/^static void OPLCloseTable( void )$/;"	f	file:
OPLCreate	src/hardware/fmopl.cpp	/^static FM_OPL *OPLCreate(int type, int clock, int rate)$/;"	f	file:
OPLDestroy	src/hardware/fmopl.cpp	/^static void OPLDestroy(FM_OPL *OPL)$/;"	f	file:
OPLRead	src/hardware/fmopl.cpp	/^static unsigned char OPLRead(FM_OPL *OPL,int a)$/;"	f	file:
OPLResetChip	src/hardware/fmopl.cpp	/^static void OPLResetChip(FM_OPL *OPL)$/;"	f	file:
OPLSAMPLE	src/hardware/fmopl.h	/^typedef INT16 OPLSAMPLE;$/;"	t
OPLSAMPLE	src/hardware/fmopl.h	/^typedef INT8 OPLSAMPLE;$/;"	t
OPLSetIRQHandler	src/hardware/fmopl.cpp	/^static void OPLSetIRQHandler(FM_OPL *OPL,OPL_IRQHANDLER IRQHandler,int param)$/;"	f	file:
OPLSetTimerHandler	src/hardware/fmopl.cpp	/^static void OPLSetTimerHandler(FM_OPL *OPL,OPL_TIMERHANDLER TimerHandler,int channelOffset)$/;"	f	file:
OPLSetUpdateHandler	src/hardware/fmopl.cpp	/^static void OPLSetUpdateHandler(FM_OPL *OPL,OPL_UPDATEHANDLER UpdateHandler,int param)$/;"	f	file:
OPLTimerOver	src/hardware/fmopl.cpp	/^static int OPLTimerOver(FM_OPL *OPL,int c)$/;"	f	file:
OPLWrite	src/hardware/fmopl.cpp	/^static int OPLWrite(FM_OPL *OPL,int a,int v)$/;"	f	file:
OPLWriteReg	src/hardware/fmopl.cpp	/^static void OPLWriteReg(FM_OPL *OPL, int r, int v)$/;"	f	file:
OPL_CALC_CH	src/hardware/fmopl.cpp	/^INLINE void OPL_CALC_CH( OPL_CH *CH )$/;"	f
OPL_CALC_RH	src/hardware/fmopl.cpp	/^INLINE void OPL_CALC_RH( OPL_CH *CH, unsigned int noise )$/;"	f
OPL_CH	src/hardware/fmopl.cpp	/^} OPL_CH;$/;"	t	typeref:struct:__anon154	file:
OPL_CallBack	src/hardware/adlib.cpp	/^static void OPL_CallBack(Bitu len) {$/;"	f	file:
OPL_IRQHANDLER	src/hardware/fmopl.h	/^typedef void (*OPL_IRQHANDLER)(int param,int irq);$/;"	t
OPL_Init	src/hardware/adlib.cpp	/^void OPL_Init(Section* sec,OPL_Mode oplmode) {$/;"	f
OPL_LockTable	src/hardware/fmopl.cpp	/^static int OPL_LockTable(void)$/;"	f	file:
OPL_Mode	include/hardware.h	/^enum OPL_Mode {$/;"	g
OPL_PORTHANDLER_R	src/hardware/fmopl.h	/^typedef unsigned char (*OPL_PORTHANDLER_R)(int param);$/;"	t
OPL_PORTHANDLER_W	src/hardware/fmopl.h	/^typedef void (*OPL_PORTHANDLER_W)(int param,unsigned char data);$/;"	t
OPL_Read	src/hardware/adlib.cpp	/^static Bitu OPL_Read(Bitu port,Bitu iolen) {$/;"	f	file:
OPL_SAMPLE_BITS	src/hardware/fmopl.h	10;"	d
OPL_SLOT	src/hardware/fmopl.cpp	/^} OPL_SLOT;$/;"	t	typeref:struct:__anon153	file:
OPL_STATUSMASK_SET	src/hardware/fmopl.cpp	/^INLINE void OPL_STATUSMASK_SET(FM_OPL *OPL,int flag)$/;"	f
OPL_STATUS_RESET	src/hardware/fmopl.cpp	/^INLINE void OPL_STATUS_RESET(FM_OPL *OPL,int flag)$/;"	f
OPL_STATUS_SET	src/hardware/fmopl.cpp	/^INLINE void OPL_STATUS_SET(FM_OPL *OPL,int flag)$/;"	f
OPL_ShutDown	src/hardware/adlib.cpp	/^void OPL_ShutDown(Section* sec){$/;"	f
OPL_TIMERHANDLER	src/hardware/fmopl.h	/^typedef void (*OPL_TIMERHANDLER)(int channel,double interval_Sec);$/;"	t
OPL_TYPE_ADPCM	src/hardware/fmopl.cpp	190;"	d	file:
OPL_TYPE_IO	src/hardware/fmopl.cpp	192;"	d	file:
OPL_TYPE_KEYBOARD	src/hardware/fmopl.cpp	191;"	d	file:
OPL_TYPE_WAVESEL	src/hardware/fmopl.cpp	189;"	d	file:
OPL_TYPE_Y8950	src/hardware/fmopl.cpp	197;"	d	file:
OPL_TYPE_YM3526	src/hardware/fmopl.cpp	195;"	d	file:
OPL_TYPE_YM3812	src/hardware/fmopl.cpp	196;"	d	file:
OPL_UPDATEHANDLER	src/hardware/fmopl.h	/^typedef void (*OPL_UPDATEHANDLER)(int param,int min_interval_us);$/;"	t
OPL_UnLockTable	src/hardware/fmopl.cpp	/^static void OPL_UnLockTable(void)$/;"	f	file:
OPL_Write	src/hardware/adlib.cpp	/^void OPL_Write(Bitu port,Bitu val,Bitu iolen) {$/;"	f
OPL_Y8950	src/hardware/fmopl.cpp	/^static FM_OPL *OPL_Y8950[MAX_OPL_CHIPS];	\/* array of pointers to the Y8950's *\/$/;"	v	file:
OPL_YM3526	src/hardware/fmopl.cpp	/^static FM_OPL *OPL_YM3526[MAX_OPL_CHIPS];	\/* array of pointers to the YM3526's *\/$/;"	v	file:
OPL_YM3812	src/hardware/fmopl.cpp	/^static FM_OPL *OPL_YM3812[MAX_OPL_CHIPS];	\/* array of pointers to the YM3812's *\/$/;"	v	file:
OPL_cms	include/hardware.h	/^	OPL_none,OPL_cms,OPL_opl2,OPL_dualopl2,OPL_opl3$/;"	e	enum:OPL_Mode
OPL_dualopl2	include/hardware.h	/^	OPL_none,OPL_cms,OPL_opl2,OPL_dualopl2,OPL_opl3$/;"	e	enum:OPL_Mode
OPL_initalize	src/hardware/fmopl.cpp	/^static void OPL_initalize(FM_OPL *OPL)$/;"	f	file:
OPL_none	include/hardware.h	/^	OPL_none,OPL_cms,OPL_opl2,OPL_dualopl2,OPL_opl3$/;"	e	enum:OPL_Mode
OPL_opl2	include/hardware.h	/^	OPL_none,OPL_cms,OPL_opl2,OPL_dualopl2,OPL_opl3$/;"	e	enum:OPL_Mode
OPL_opl3	include/hardware.h	/^	OPL_none,OPL_cms,OPL_opl2,OPL_dualopl2,OPL_opl3$/;"	e	enum:OPL_Mode
ORB	src/cpu/arminst.h	50;"	d
ORB	src/cpu/core_normal/prefix_none.h	/^		ALIb(ORB);break;$/;"	v
ORB	src/cpu/core_normal/prefix_none.h	/^		RMEbGb(ORB);break;$/;"	v
ORB	src/cpu/core_normal/prefix_none.h	/^		RMGbEb(ORB);break;$/;"	v
ORB	src/cpu/core_normal/verysimple_prefix_none.h	/^		ALIb(ORB);break;$/;"	v
ORB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEbGb(ORB);break;$/;"	v
ORB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGbEb(ORB);break;$/;"	v
ORB	src/cpu/instructions.h	48;"	d
ORD	src/cpu/arminst.h	164;"	d
ORD	src/cpu/core_normal/prefix_66.h	/^		EAXId(ORD);break;$/;"	v
ORD	src/cpu/core_normal/prefix_66.h	/^		RMEdGd(ORD);break;$/;"	v
ORD	src/cpu/core_normal/prefix_66.h	/^		RMGdEd(ORD);break;$/;"	v
ORD	src/cpu/instructions.h	160;"	d
ORW	src/cpu/arminst.h	108;"	d
ORW	src/cpu/core_normal/prefix_none.h	/^		AXIw(ORW);break;$/;"	v
ORW	src/cpu/core_normal/prefix_none.h	/^		RMEwGw(ORW);break;$/;"	v
ORW	src/cpu/core_normal/prefix_none.h	/^		RMGwEw(ORW);break;$/;"	v
ORW	src/cpu/core_normal/verysimple_prefix_none.h	/^		AXIw(ORW);break;$/;"	v
ORW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEwGw(ORW);break;$/;"	v
ORW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGwEw(ORW);break;$/;"	v
ORW	src/cpu/instructions.h	104;"	d
OSD_CPU_H	src/hardware/adlib.cpp	95;"	d	file:
OSD_CPU_H	src/hardware/fmopl.h	14;"	d
OSD_CPU_H	src/hardware/ymf262.h	13;"	d
OVERLAY	src/dos/dos_execute.cpp	67;"	d	file:
O_AAD	src/cpu/core_full/support.h	/^	O_NOT,O_AAM,O_AAD,$/;"	e	enum:__anon98
O_AAM	src/cpu/core_full/support.h	/^	O_NOT,O_AAM,O_AAD,$/;"	e	enum:__anon98
O_ALOP	src/cpu/core_full/support.h	/^	O_OPAL,O_ALOP,$/;"	e	enum:__anon98
O_ARPL	src/cpu/core_full/support.h	/^	O_ARPL,$/;"	e	enum:__anon98
O_AXOP	src/cpu/core_full/support.h	/^	O_OPAX,O_AXOP,$/;"	e	enum:__anon98
O_BOUNDd	src/cpu/core_full/support.h	/^	O_BOUNDw,O_BOUNDd,$/;"	e	enum:__anon98
O_BOUNDw	src/cpu/core_full/support.h	/^	O_BOUNDw,O_BOUNDd,$/;"	e	enum:__anon98
O_BSFd	src/cpu/core_full/support.h	/^	O_BSFw,O_BSRw,O_BSFd,O_BSRd,$/;"	e	enum:__anon98
O_BSFw	src/cpu/core_full/support.h	/^	O_BSFw,O_BSRw,O_BSFd,O_BSRd,$/;"	e	enum:__anon98
O_BSRd	src/cpu/core_full/support.h	/^	O_BSFw,O_BSRw,O_BSFd,O_BSRd,$/;"	e	enum:__anon98
O_BSRw	src/cpu/core_full/support.h	/^	O_BSFw,O_BSRw,O_BSFd,O_BSRd,$/;"	e	enum:__anon98
O_BSWAP	src/cpu/core_full/support.h	/^	O_BSWAP,O_CMPXCHG,$/;"	e	enum:__anon98
O_BTCd	src/cpu/core_full/support.h	/^	O_BTd,O_BTSd,O_BTRd,O_BTCd,$/;"	e	enum:__anon98
O_BTCw	src/cpu/core_full/support.h	/^	O_BTw,O_BTSw,O_BTRw,O_BTCw,$/;"	e	enum:__anon98
O_BTRd	src/cpu/core_full/support.h	/^	O_BTd,O_BTSd,O_BTRd,O_BTCd,$/;"	e	enum:__anon98
O_BTRw	src/cpu/core_full/support.h	/^	O_BTw,O_BTSw,O_BTRw,O_BTCw,$/;"	e	enum:__anon98
O_BTSd	src/cpu/core_full/support.h	/^	O_BTd,O_BTSd,O_BTRd,O_BTCd,$/;"	e	enum:__anon98
O_BTSw	src/cpu/core_full/support.h	/^	O_BTw,O_BTSw,O_BTRw,O_BTCw,$/;"	e	enum:__anon98
O_BTd	src/cpu/core_full/support.h	/^	O_BTd,O_BTSd,O_BTRd,O_BTCd,$/;"	e	enum:__anon98
O_BTw	src/cpu/core_full/support.h	/^	O_BTw,O_BTSw,O_BTRw,O_BTCw,$/;"	e	enum:__anon98
O_CALLFd	src/cpu/core_full/support.h	/^	O_CALLFw,O_CALLFd,$/;"	e	enum:__anon98
O_CALLFw	src/cpu/core_full/support.h	/^	O_CALLFw,O_CALLFd,$/;"	e	enum:__anon98
O_CALLNd	src/cpu/core_full/support.h	/^	O_CALLNw,O_CALLNd,$/;"	e	enum:__anon98
O_CALLNw	src/cpu/core_full/support.h	/^	O_CALLNw,O_CALLNd,$/;"	e	enum:__anon98
O_CBACK	src/cpu/core_full/support.h	/^	O_CBACK,$/;"	e	enum:__anon98
O_CMPXCHG	src/cpu/core_full/support.h	/^	O_BSWAP,O_CMPXCHG,$/;"	e	enum:__anon98
O_COND	src/cpu/core_full/support.h	/^	O_COND,$/;"	e	enum:__anon98
O_C_B	src/cpu/core_full/support.h	/^	O_C_O	,O_C_NO	,O_C_B	,O_C_NB	,O_C_Z	,O_C_NZ	,O_C_BE	,O_C_NBE,$/;"	e	enum:__anon98
O_C_BE	src/cpu/core_full/support.h	/^	O_C_O	,O_C_NO	,O_C_B	,O_C_NB	,O_C_Z	,O_C_NZ	,O_C_BE	,O_C_NBE,$/;"	e	enum:__anon98
O_C_L	src/cpu/core_full/support.h	/^	O_C_S	,O_C_NS	,O_C_P	,O_C_NP	,O_C_L	,O_C_NL	,O_C_LE	,O_C_NLE,$/;"	e	enum:__anon98
O_C_LE	src/cpu/core_full/support.h	/^	O_C_S	,O_C_NS	,O_C_P	,O_C_NP	,O_C_L	,O_C_NL	,O_C_LE	,O_C_NLE,$/;"	e	enum:__anon98
O_C_NB	src/cpu/core_full/support.h	/^	O_C_O	,O_C_NO	,O_C_B	,O_C_NB	,O_C_Z	,O_C_NZ	,O_C_BE	,O_C_NBE,$/;"	e	enum:__anon98
O_C_NBE	src/cpu/core_full/support.h	/^	O_C_O	,O_C_NO	,O_C_B	,O_C_NB	,O_C_Z	,O_C_NZ	,O_C_BE	,O_C_NBE,$/;"	e	enum:__anon98
O_C_NL	src/cpu/core_full/support.h	/^	O_C_S	,O_C_NS	,O_C_P	,O_C_NP	,O_C_L	,O_C_NL	,O_C_LE	,O_C_NLE,$/;"	e	enum:__anon98
O_C_NLE	src/cpu/core_full/support.h	/^	O_C_S	,O_C_NS	,O_C_P	,O_C_NP	,O_C_L	,O_C_NL	,O_C_LE	,O_C_NLE,$/;"	e	enum:__anon98
O_C_NO	src/cpu/core_full/support.h	/^	O_C_O	,O_C_NO	,O_C_B	,O_C_NB	,O_C_Z	,O_C_NZ	,O_C_BE	,O_C_NBE,$/;"	e	enum:__anon98
O_C_NP	src/cpu/core_full/support.h	/^	O_C_S	,O_C_NS	,O_C_P	,O_C_NP	,O_C_L	,O_C_NL	,O_C_LE	,O_C_NLE,$/;"	e	enum:__anon98
O_C_NS	src/cpu/core_full/support.h	/^	O_C_S	,O_C_NS	,O_C_P	,O_C_NP	,O_C_L	,O_C_NL	,O_C_LE	,O_C_NLE,$/;"	e	enum:__anon98
O_C_NZ	src/cpu/core_full/support.h	/^	O_C_O	,O_C_NO	,O_C_B	,O_C_NB	,O_C_Z	,O_C_NZ	,O_C_BE	,O_C_NBE,$/;"	e	enum:__anon98
O_C_O	src/cpu/core_full/support.h	/^	O_C_O	,O_C_NO	,O_C_B	,O_C_NB	,O_C_Z	,O_C_NZ	,O_C_BE	,O_C_NBE,$/;"	e	enum:__anon98
O_C_P	src/cpu/core_full/support.h	/^	O_C_S	,O_C_NS	,O_C_P	,O_C_NP	,O_C_L	,O_C_NL	,O_C_LE	,O_C_NLE,$/;"	e	enum:__anon98
O_C_S	src/cpu/core_full/support.h	/^	O_C_S	,O_C_NS	,O_C_P	,O_C_NP	,O_C_L	,O_C_NL	,O_C_LE	,O_C_NLE,$/;"	e	enum:__anon98
O_C_Z	src/cpu/core_full/support.h	/^	O_C_O	,O_C_NO	,O_C_B	,O_C_NB	,O_C_Z	,O_C_NZ	,O_C_BE	,O_C_NBE,$/;"	e	enum:__anon98
O_DIVb	src/cpu/core_full/support.h	/^	O_DIVb,O_DIVw,O_DIVd,$/;"	e	enum:__anon98
O_DIVd	src/cpu/core_full/support.h	/^	O_DIVb,O_DIVw,O_DIVd,$/;"	e	enum:__anon98
O_DIVw	src/cpu/core_full/support.h	/^	O_DIVb,O_DIVw,O_DIVd,$/;"	e	enum:__anon98
O_DSHLd	src/cpu/core_full/support.h	/^	O_DSHLw,O_DSHLd,$/;"	e	enum:__anon98
O_DSHLw	src/cpu/core_full/support.h	/^	O_DSHLw,O_DSHLd,$/;"	e	enum:__anon98
O_DSHRd	src/cpu/core_full/support.h	/^	O_DSHRw,O_DSHRd,$/;"	e	enum:__anon98
O_DSHRw	src/cpu/core_full/support.h	/^	O_DSHRw,O_DSHRd,$/;"	e	enum:__anon98
O_EAXOP	src/cpu/core_full/support.h	/^	O_OPEAX,O_EAXOP,$/;"	e	enum:__anon98
O_FPU	src/cpu/core_full/support.h	/^	O_FPU,$/;"	e	enum:__anon98
O_GRP6d	src/cpu/core_full/support.h	/^	O_GRP6w,O_GRP6d,$/;"	e	enum:__anon98
O_GRP6w	src/cpu/core_full/support.h	/^	O_GRP6w,O_GRP6d,$/;"	e	enum:__anon98
O_GRP7d	src/cpu/core_full/support.h	/^	O_GRP7w,O_GRP7d,$/;"	e	enum:__anon98
O_GRP7w	src/cpu/core_full/support.h	/^	O_GRP7w,O_GRP7d,$/;"	e	enum:__anon98
O_IDIVb	src/cpu/core_full/support.h	/^	O_IDIVb,O_IDIVw,O_IDIVd,$/;"	e	enum:__anon98
O_IDIVd	src/cpu/core_full/support.h	/^	O_IDIVb,O_IDIVw,O_IDIVd,$/;"	e	enum:__anon98
O_IDIVw	src/cpu/core_full/support.h	/^	O_IDIVb,O_IDIVw,O_IDIVd,$/;"	e	enum:__anon98
O_IMULRd	src/cpu/core_full/support.h	/^	O_IMULRw,O_IMULRd,$/;"	e	enum:__anon98
O_IMULRw	src/cpu/core_full/support.h	/^	O_IMULRw,O_IMULRd,$/;"	e	enum:__anon98
O_IMULb	src/cpu/core_full/support.h	/^	O_IMULb,O_IMULw,O_IMULd,$/;"	e	enum:__anon98
O_IMULd	src/cpu/core_full/support.h	/^	O_IMULb,O_IMULw,O_IMULd,$/;"	e	enum:__anon98
O_IMULw	src/cpu/core_full/support.h	/^	O_IMULb,O_IMULw,O_IMULd,$/;"	e	enum:__anon98
O_INT	src/cpu/core_full/support.h	/^	O_INT,$/;"	e	enum:__anon98
O_INb	src/cpu/core_full/support.h	/^	O_INb,O_INw,O_INd,$/;"	e	enum:__anon98
O_INd	src/cpu/core_full/support.h	/^	O_INb,O_INw,O_INd,$/;"	e	enum:__anon98
O_INw	src/cpu/core_full/support.h	/^	O_INb,O_INw,O_INd,$/;"	e	enum:__anon98
O_JCXZ	src/cpu/core_full/support.h	/^	O_LOOP,O_LOOPZ,O_LOOPNZ,O_JCXZ,$/;"	e	enum:__anon98
O_JMPFd	src/cpu/core_full/support.h	/^	O_JMPFw,O_JMPFd,$/;"	e	enum:__anon98
O_JMPFw	src/cpu/core_full/support.h	/^	O_JMPFw,O_JMPFd,$/;"	e	enum:__anon98
O_LAR	src/cpu/core_full/support.h	/^	O_LAR,O_LSL,$/;"	e	enum:__anon98
O_LOOP	src/cpu/core_full/support.h	/^	O_LOOP,O_LOOPZ,O_LOOPNZ,O_JCXZ,$/;"	e	enum:__anon98
O_LOOPNZ	src/cpu/core_full/support.h	/^	O_LOOP,O_LOOPZ,O_LOOPNZ,O_JCXZ,$/;"	e	enum:__anon98
O_LOOPZ	src/cpu/core_full/support.h	/^	O_LOOP,O_LOOPZ,O_LOOPNZ,O_JCXZ,$/;"	e	enum:__anon98
O_LSL	src/cpu/core_full/support.h	/^	O_LAR,O_LSL,$/;"	e	enum:__anon98
O_MULb	src/cpu/core_full/support.h	/^	O_MULb,O_MULw,O_MULd,$/;"	e	enum:__anon98
O_MULd	src/cpu/core_full/support.h	/^	O_MULb,O_MULw,O_MULd,$/;"	e	enum:__anon98
O_MULw	src/cpu/core_full/support.h	/^	O_MULb,O_MULw,O_MULd,$/;"	e	enum:__anon98
O_M_CRx_Rd	src/cpu/core_full/support.h	/^	O_M_CRx_Rd,O_M_Rd_CRx,$/;"	e	enum:__anon98
O_M_DRx_Rd	src/cpu/core_full/support.h	/^	O_M_DRx_Rd,O_M_Rd_DRx,$/;"	e	enum:__anon98
O_M_Rd_CRx	src/cpu/core_full/support.h	/^	O_M_CRx_Rd,O_M_Rd_CRx,$/;"	e	enum:__anon98
O_M_Rd_DRx	src/cpu/core_full/support.h	/^	O_M_DRx_Rd,O_M_Rd_DRx,$/;"	e	enum:__anon98
O_M_Rd_TRx	src/cpu/core_full/support.h	/^	O_M_TRx_Rd,O_M_Rd_TRx,$/;"	e	enum:__anon98
O_M_TRx_Rd	src/cpu/core_full/support.h	/^	O_M_TRx_Rd,O_M_Rd_TRx,$/;"	e	enum:__anon98
O_N	src/cpu/core_full/support.h	/^	O_N=t_LASTFLAG,$/;"	e	enum:__anon98
O_NOT	src/cpu/core_full/support.h	/^	O_NOT,O_AAM,O_AAD,$/;"	e	enum:__anon98
O_OPAL	src/cpu/core_full/support.h	/^	O_OPAL,O_ALOP,$/;"	e	enum:__anon98
O_OPAX	src/cpu/core_full/support.h	/^	O_OPAX,O_AXOP,$/;"	e	enum:__anon98
O_OPEAX	src/cpu/core_full/support.h	/^	O_OPEAX,O_EAXOP,$/;"	e	enum:__anon98
O_OUTb	src/cpu/core_full/support.h	/^	O_OUTb,O_OUTw,O_OUTd,$/;"	e	enum:__anon98
O_OUTd	src/cpu/core_full/support.h	/^	O_OUTb,O_OUTw,O_OUTd,$/;"	e	enum:__anon98
O_OUTw	src/cpu/core_full/support.h	/^	O_OUTb,O_OUTw,O_OUTd,$/;"	e	enum:__anon98
O_SEGDS	src/cpu/core_full/support.h	/^	O_SEGDS,O_SEGES,O_SEGFS,O_SEGGS,O_SEGSS,$/;"	e	enum:__anon98
O_SEGES	src/cpu/core_full/support.h	/^	O_SEGDS,O_SEGES,O_SEGFS,O_SEGGS,O_SEGSS,$/;"	e	enum:__anon98
O_SEGFS	src/cpu/core_full/support.h	/^	O_SEGDS,O_SEGES,O_SEGFS,O_SEGGS,O_SEGSS,$/;"	e	enum:__anon98
O_SEGGS	src/cpu/core_full/support.h	/^	O_SEGDS,O_SEGES,O_SEGFS,O_SEGGS,O_SEGSS,$/;"	e	enum:__anon98
O_SEGSS	src/cpu/core_full/support.h	/^	O_SEGDS,O_SEGES,O_SEGFS,O_SEGGS,O_SEGSS,$/;"	e	enum:__anon98
O_XCHG_AX	src/cpu/core_full/support.h	/^	O_XCHG_AX,O_XCHG_EAX,$/;"	e	enum:__anon98
O_XCHG_EAX	src/cpu/core_full/support.h	/^	O_XCHG_AX,O_XCHG_EAX,$/;"	e	enum:__anon98
Ob	src/debug/disasm_tables.h	/^	Ob,Ov,$/;"	e	enum:__anon111
OffScreenMemOffset	src/ints/int10_vesa.cpp	/^	Bit32u OffScreenMemOffset;$/;"	m	struct:MODE_INFO	file:
OffScreenMemSize	src/ints/int10_vesa.cpp	/^	Bit16u OffScreenMemSize;$/;"	m	struct:MODE_INFO	file:
OnTop	src/gui/sdl_mapper.cpp	/^	virtual bool OnTop(Bitu _x,Bitu _y) {$/;"	f	class:CButton
OnlyAtStart	include/setup.h	/^	struct Changeable { enum Value {Always, WhenIdle,OnlyAtStart};};$/;"	e	enum:Property::Changeable::Value
OpCode	src/cpu/core_full/support.h	/^struct OpCode {$/;"	s
OpCodeTable	src/cpu/core_full/optable.h	/^static OpCode OpCodeTable[1024]={$/;"	v
Open	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::Open(void) {$/;"	f	class:CDROM_Interface_Ioctl
Open	src/gui/midi_alsa.h	/^	bool Open(const char * conf) {$/;"	f	class:MidiHandler_alsa
Open	src/gui/midi_coreaudio.h	/^	bool Open(const char * conf) {$/;"	f	class:MidiHandler_coreaudio
Open	src/gui/midi_coremidi.h	/^	bool Open(const char * conf) {$/;"	f	class:MidiHandler_coremidi
Open	src/gui/midi_oss.h	/^	bool Open(const char * conf) {$/;"	f	class:MidiHandler_oss
Open	src/gui/midi_win32.h	/^	bool Open(const char * conf) {$/;"	f	class:MidiHandler_win32
Open	src/libs/zmbv/zmbv_vfw.cpp	/^CodecInst* Open(ICOPEN* icinfo) {$/;"	f
OpenCaptureFile	src/hardware/hardware.cpp	/^FILE * OpenCaptureFile(const char * type,const char * ext) {$/;"	f
OpenDir	src/dos/drive_cache.cpp	/^bool DOS_Drive_Cache::OpenDir(CFileInfo* dir, const char* expand, Bit16u& id)$/;"	f	class:DOS_Drive_Cache
OpenDir	src/dos/drive_cache.cpp	/^bool DOS_Drive_Cache::OpenDir(const char* path, Bit16u& id)$/;"	f	class:DOS_Drive_Cache
OpenDosboxFile	src/dos/dos_keyboard_layout.cpp	/^static FILE* OpenDosboxFile(const char* name) {$/;"	f	file:
OpenIOCTLFile	src/dos/cdrom_aspi_win32.cpp	/^HANDLE CDROM_Interface_Aspi::OpenIOCTLFile(char cLetter,BOOL bAsync)$/;"	f	class:CDROM_Interface_Aspi
OpenSocket	src/hardware/ipx.cpp	/^static void OpenSocket(void) {$/;"	f	file:
Output	src/hardware/tandy_sound.cpp	/^	int Output[4];$/;"	m	struct:SN76496	file:
OutputVecTable	src/debug/debug.cpp	/^static void OutputVecTable(char* filename) {$/;"	f	file:
Ov	src/debug/disasm_tables.h	/^	Ob,Ov,$/;"	e	enum:__anon111
PACKAGE	config.h	163;"	d
PACKAGE_BUGREPORT	config.h	166;"	d
PACKAGE_NAME	config.h	169;"	d
PACKAGE_STRING	config.h	172;"	d
PACKAGE_TARNAME	config.h	175;"	d
PACKAGE_VERSION	config.h	178;"	d
PAGESIZE	src/cpu/core_dyn_x86.cpp	42;"	d	file:
PAGESIZE	src/cpu/core_dynrec.cpp	44;"	d	file:
PAGESIZE_TEMP	src/cpu/core_dyn_x86/cache.h	436;"	d
PAGESIZE_TEMP	src/cpu/core_dyn_x86/cache.h	438;"	d
PAGESIZE_TEMP	src/cpu/core_dynrec/cache.h	595;"	d
PAGESIZE_TEMP	src/cpu/core_dynrec/cache.h	597;"	d
PAGESIZE_TEMP	src/cpu/core_dynrec/save/cache.h	626;"	d
PAGESIZE_TEMP	src/cpu/core_dynrec/save/cache.h	628;"	d
PAGES_IN_BLOCK	src/hardware/memory.cpp	30;"	d	file:
PAGING	src/cpu/paging.cpp	/^	PAGING(Section* configuration):Module_base(configuration){$/;"	f	class:PAGING
PAGING	src/cpu/paging.cpp	/^class PAGING:public Module_base{$/;"	c	file:
PAGING_ClearTLB	src/cpu/paging.cpp	/^void PAGING_ClearTLB(void) {$/;"	f
PAGING_Enable	src/cpu/paging.cpp	/^void PAGING_Enable(bool enabled) {$/;"	f
PAGING_Enabled	src/cpu/paging.cpp	/^bool PAGING_Enabled(void) {$/;"	f
PAGING_ForcePageInit	src/cpu/paging.cpp	/^bool PAGING_ForcePageInit(Bitu lin_addr) {$/;"	f
PAGING_GetDirBase	src/cpu/paging.cpp	/^Bitu PAGING_GetDirBase(void) {$/;"	f
PAGING_GetPhysicalAddress	include/paging.h	/^INLINE PhysPt PAGING_GetPhysicalAddress(PhysPt linAddr) {$/;"	f
PAGING_GetPhysicalPage	include/paging.h	/^INLINE PhysPt PAGING_GetPhysicalPage(PhysPt linePage) {$/;"	f
PAGING_Init	src/cpu/paging.cpp	/^void PAGING_Init(Section * sec) {$/;"	f
PAGING_InitTLB	src/cpu/paging.cpp	/^void PAGING_InitTLB(void) {$/;"	f
PAGING_InitTLBBank	src/cpu/paging.cpp	/^void PAGING_InitTLBBank(tlb_entry **bank) {$/;"	f
PAGING_LINKS	include/paging.h	61;"	d
PAGING_LinkPage	src/cpu/paging.cpp	/^void PAGING_LinkPage(Bitu lin_page,Bitu phys_page) {$/;"	f
PAGING_LinkPage_ReadOnly	src/cpu/paging.cpp	/^void PAGING_LinkPage_ReadOnly(Bitu lin_page,Bitu phys_page) {$/;"	f
PAGING_MakePhysPage	src/cpu/paging.cpp	/^bool PAGING_MakePhysPage(Bitu & page) {$/;"	f
PAGING_MapPage	src/cpu/paging.cpp	/^void PAGING_MapPage(Bitu lin_page,Bitu phys_page) {$/;"	f
PAGING_PageFault	src/cpu/paging.cpp	/^void PAGING_PageFault(PhysPt lin_addr,Bitu page_addr,Bitu faultcode) {$/;"	f
PAGING_SetDirBase	src/cpu/paging.cpp	/^void PAGING_SetDirBase(Bitu cr3) {$/;"	f
PAGING_UnlinkPages	src/cpu/paging.cpp	/^void PAGING_UnlinkPages(Bitu lin_page,Bitu pages) {$/;"	f
PAIR_BLACK_BLUE	src/debug/debug_inc.h	26;"	d
PAIR_BLACK_GREY	src/debug/debug_inc.h	29;"	d
PAIR_BYELLOW_BLACK	src/debug/debug_inc.h	27;"	d
PAIR_GREEN_BLACK	src/debug/debug_inc.h	28;"	d
PAIR_GREY_RED	src/debug/debug_inc.h	30;"	d
PARSE_BLNK_FEXT	src/dos/dos_files.cpp	738;"	d	file:
PARSE_BLNK_FNAME	src/dos/dos_files.cpp	737;"	d	file:
PARSE_DFLT_DRIVE	src/dos/dos_files.cpp	736;"	d	file:
PARSE_RET_BADDRIVE	src/dos/dos_files.cpp	742;"	d	file:
PARSE_RET_NOWILD	src/dos/dos_files.cpp	740;"	d	file:
PARSE_RET_WILD	src/dos/dos_files.cpp	741;"	d	file:
PARSE_SEP_STOP	src/dos/dos_files.cpp	735;"	d	file:
PASPI32BUFF	src/dos/wnaspi32.h	/^ASPI32BUFF, *PASPI32BUFF, FAR *LPASPI32BUFF;$/;"	t	typeref:struct:tag_ASPI32BUFF
PCDROM_AUDIO_CONTROL	src/platform/visualc/ntddcdrm.h	/^} CDROM_AUDIO_CONTROL, *PCDROM_AUDIO_CONTROL;$/;"	t	typeref:struct:_CDROM_AUDIO_CONTROL
PCDROM_DISK_DATA	src/platform/visualc/ntddcdrm.h	/^} CDROM_DISK_DATA, *PCDROM_DISK_DATA;$/;"	t	typeref:struct:_CDROM_DISK_DATA
PCDROM_PLAY_AUDIO_MSF	src/platform/visualc/ntddcdrm.h	/^} CDROM_PLAY_AUDIO_MSF, *PCDROM_PLAY_AUDIO_MSF;$/;"	t	typeref:struct:_CDROM_PLAY_AUDIO_MSF
PCDROM_READ_TOC_EX	src/platform/visualc/ntddcdrm.h	/^} CDROM_READ_TOC_EX, *PCDROM_READ_TOC_EX;$/;"	t	typeref:struct:_CDROM_READ_TOC_EX
PCDROM_SEEK_AUDIO_MSF	src/platform/visualc/ntddcdrm.h	/^} CDROM_SEEK_AUDIO_MSF, *PCDROM_SEEK_AUDIO_MSF;$/;"	t	typeref:struct:_CDROM_SEEK_AUDIO_MSF
PCDROM_SUB_Q_DATA_FORMAT	src/platform/visualc/ntddcdrm.h	/^} CDROM_SUB_Q_DATA_FORMAT, *PCDROM_SUB_Q_DATA_FORMAT;$/;"	t	typeref:struct:_CDROM_SUB_Q_DATA_FORMAT
PCDROM_TOC	src/platform/visualc/ntddcdrm.h	/^} CDROM_TOC, *PCDROM_TOC;$/;"	t	typeref:struct:_CDROM_TOC
PCDROM_TOC_ATIP_DATA_BLOCK	src/platform/visualc/ntddcdrm.h	/^} CDROM_TOC_ATIP_DATA_BLOCK, *PCDROM_TOC_ATIP_DATA_BLOCK;$/;"	t	typeref:struct:_CDROM_TOC_ATIP_DATA_BLOCK
PCDROM_TOC_CD_TEXT_DATA_BLOCK	src/platform/visualc/ntddcdrm.h	/^} CDROM_TOC_CD_TEXT_DATA_BLOCK, *PCDROM_TOC_CD_TEXT_DATA_BLOCK;$/;"	t	typeref:struct:_CDROM_TOC_CD_TEXT_DATA_BLOCK
PCDROM_TOC_FULL_TOC_DATA_BLOCK	src/platform/visualc/ntddcdrm.h	/^} CDROM_TOC_FULL_TOC_DATA_BLOCK, *PCDROM_TOC_FULL_TOC_DATA_BLOCK;$/;"	t	typeref:struct:_CDROM_TOC_FULL_TOC_DATA_BLOCK
PCJr_FindMode	src/hardware/vga_other.cpp	/^static void PCJr_FindMode(void) {$/;"	f	file:
PCSPEAKER	src/hardware/pcspeaker.cpp	/^	PCSPEAKER(Section* configuration):Module_base(configuration){$/;"	f	class:PCSPEAKER
PCSPEAKER	src/hardware/pcspeaker.cpp	/^class PCSPEAKER:public Module_base {$/;"	c	file:
PCSPEAKER_CallBack	src/hardware/pcspeaker.cpp	/^static void PCSPEAKER_CallBack(Bitu len) {$/;"	f	file:
PCSPEAKER_Init	src/hardware/pcspeaker.cpp	/^void PCSPEAKER_Init(Section* sec) {$/;"	f
PCSPEAKER_SetCounter	src/hardware/pcspeaker.cpp	/^void PCSPEAKER_SetCounter(Bitu cntr,Bitu mode) {$/;"	f
PCSPEAKER_SetType	src/hardware/pcspeaker.cpp	/^void PCSPEAKER_SetType(Bitu mode) {$/;"	f
PCSPEAKER_ShutDown	src/hardware/pcspeaker.cpp	/^void PCSPEAKER_ShutDown(Section* sec){$/;"	f
PFLAG_HASCODE	include/paging.h	54;"	d
PFLAG_HASROM	include/paging.h	53;"	d
PFLAG_INIT	include/paging.h	56;"	d
PFLAG_NOCODE	include/paging.h	55;"	d
PFLAG_READABLE	include/paging.h	51;"	d
PFLAG_WRITEABLE	include/paging.h	52;"	d
PF_Entry	src/cpu/paging.cpp	/^struct PF_Entry {$/;"	s	file:
PF_QUEUESIZE	src/cpu/paging.cpp	109;"	d	file:
PI	include/fpu.h	95;"	d
PI	src/hardware/fmopl.cpp	69;"	d	file:
PI	src/hardware/pcspeaker.cpp	30;"	d	file:
PI	src/hardware/ymf262.cpp	50;"	d	file:
PIC	src/hardware/pic.cpp	/^	PIC(Section* configuration):Module_base(configuration){$/;"	f	class:PIC
PIC	src/hardware/pic.cpp	/^class PIC:public Module_base{$/;"	c	file:
PICEntry	src/hardware/pic.cpp	/^struct PICEntry {$/;"	s	file:
PIC_ActivateIRQ	src/hardware/pic.cpp	/^void PIC_ActivateIRQ(Bitu irq) {$/;"	f
PIC_AddEvent	src/hardware/pic.cpp	/^void PIC_AddEvent(PIC_EventHandler handler,float delay,Bitu val) {$/;"	f
PIC_Controller	src/hardware/pic.cpp	/^struct PIC_Controller {$/;"	s	file:
PIC_DeActivateIRQ	src/hardware/pic.cpp	/^void PIC_DeActivateIRQ(Bitu irq) {$/;"	f
PIC_Destroy	src/hardware/pic.cpp	/^void PIC_Destroy(Section* sec){$/;"	f
PIC_EOIHandler	include/pic.h	/^typedef void (PIC_EOIHandler) (void);$/;"	t
PIC_EventHandler	include/pic.h	/^typedef void (* PIC_EventHandler)(Bitu val);$/;"	t
PIC_FullIndex	include/pic.h	/^INLINE double PIC_FullIndex(void) {$/;"	f
PIC_IRQActive	src/hardware/pic.cpp	/^Bitu PIC_IRQActive;$/;"	v
PIC_IRQCheck	src/hardware/pic.cpp	/^Bitu PIC_IRQCheck;$/;"	v
PIC_IRQOnSecondPicActive	src/hardware/pic.cpp	/^Bitu PIC_IRQOnSecondPicActive;$/;"	v
PIC_Init	src/hardware/pic.cpp	/^void PIC_Init(Section* sec) {$/;"	f
PIC_MAXIRQ	include/pic.h	32;"	d
PIC_MakeCycles	include/pic.h	/^INLINE Bits PIC_MakeCycles(double amount) {$/;"	f
PIC_NOIRQ	include/pic.h	33;"	d
PIC_QUEUESIZE	src/hardware/pic.cpp	31;"	d	file:
PIC_RemoveEvents	src/hardware/pic.cpp	/^void PIC_RemoveEvents(PIC_EventHandler handler) {$/;"	f
PIC_RemoveSpecificEvents	src/hardware/pic.cpp	/^void PIC_RemoveSpecificEvents(PIC_EventHandler handler, Bitu val) {$/;"	f
PIC_RunQueue	src/hardware/pic.cpp	/^bool PIC_RunQueue(void) {$/;"	f
PIC_SetIRQMask	src/hardware/pic.cpp	/^void PIC_SetIRQMask(Bitu irq, bool masked) {$/;"	f
PIC_Special_Mode	src/hardware/pic.cpp	/^static bool PIC_Special_Mode = false; \/\/Saves one compare in the pic_run_irqloop$/;"	v	file:
PIC_TickIndex	include/pic.h	/^INLINE float PIC_TickIndex(void) {$/;"	f
PIC_TickIndexND	include/pic.h	/^INLINE Bits PIC_TickIndexND(void) {$/;"	f
PIC_Ticks	src/hardware/pic.cpp	/^Bitu PIC_Ticks=0;$/;"	v
PIC_runIRQs	src/hardware/pic.cpp	/^void PIC_runIRQs(void) {$/;"	f
PIC_startIRQ	src/hardware/pic.cpp	/^static inline bool PIC_startIRQ(Bitu i) {$/;"	f	file:
PIO_SCSI_CAPABILITIES	src/platform/visualc/ntddscsi.h	/^} IO_SCSI_CAPABILITIES, *PIO_SCSI_CAPABILITIES;$/;"	t	typeref:struct:_IO_SCSI_CAPABILITIES
PIT0_Event	src/hardware/timer.cpp	/^static void PIT0_Event(Bitu \/*val*\/) {$/;"	f	file:
PIT_Block	src/hardware/timer.cpp	/^struct PIT_Block {$/;"	s	file:
PIT_TICK_RATE	include/timer.h	25;"	d
PIXELPITCH	src/gui/render_16.h	240;"	d
PIXELPITCH	src/gui/render_32.h	150;"	d
PIXELPITCH	src/gui/render_8.h	237;"	d
PIXELPITCH	src/gui/render_9.h	237;"	d
PLAY_MONO	src/hardware/sblaster.cpp	/^	PLAY_MONO,PLAY_STEREO,$/;"	e	enum:__anon169	file:
PLAY_STEREO	src/hardware/sblaster.cpp	/^	PLAY_MONO,PLAY_STEREO,$/;"	e	enum:__anon169	file:
PMAKE	src/gui/render_16.h	245;"	d
PMAKE	src/gui/render_16.h	28;"	d
PMAKE	src/gui/render_16.h	32;"	d
PMAKE	src/gui/render_16.h	36;"	d
PMAKE	src/gui/render_16.h	40;"	d
PMAKE	src/gui/render_16.h	46;"	d
PMAKE	src/gui/render_32.h	155;"	d
PMAKE	src/gui/render_32.h	28;"	d
PMAKE	src/gui/render_32.h	32;"	d
PMAKE	src/gui/render_32.h	36;"	d
PMAKE	src/gui/render_32.h	40;"	d
PMAKE	src/gui/render_32.h	46;"	d
PMAKE	src/gui/render_8.h	241;"	d
PMAKE	src/gui/render_8.h	28;"	d
PMAKE	src/gui/render_8.h	37;"	d
PMAKE	src/gui/render_8.h	41;"	d
PMAKE	src/gui/render_8.h	45;"	d
PMAKE	src/gui/render_8.h	49;"	d
PMAKE	src/gui/render_9.h	241;"	d
PMAKE	src/gui/render_9.h	28;"	d
PMAKE	src/gui/render_9.h	32;"	d
PMAKE	src/gui/render_9.h	41;"	d
PMAKE	src/gui/render_9.h	45;"	d
PMAKE	src/gui/render_9.h	49;"	d
POS_X	src/ints/mouse.cpp	56;"	d	file:
POS_Y	src/ints/mouse.cpp	57;"	d	file:
PR0A	src/hardware/vga_paradise.cpp	/^	Bitu PR0A;$/;"	m	struct:__anon187	file:
PR0B	src/hardware/vga_paradise.cpp	/^	Bitu PR0B;$/;"	m	struct:__anon187	file:
PR1	src/hardware/vga_paradise.cpp	/^	Bitu PR1;$/;"	m	struct:__anon187	file:
PR2	src/hardware/vga_paradise.cpp	/^	Bitu PR2;$/;"	m	struct:__anon187	file:
PR3	src/hardware/vga_paradise.cpp	/^	Bitu PR3;$/;"	m	struct:__anon187	file:
PR4	src/hardware/vga_paradise.cpp	/^	Bitu PR4;$/;"	m	struct:__anon187	file:
PR5	src/hardware/vga_paradise.cpp	/^	Bitu PR5;$/;"	m	struct:__anon187	file:
PRAW_READ_INFO	src/platform/visualc/ntddcdrm.h	/^} RAW_READ_INFO, *PRAW_READ_INFO;$/;"	t	typeref:struct:__RAW_READ_INFO
PREFIX_ADDR	src/cpu/core_full/support.h	245;"	d
PREFIX_ADDR	src/cpu/core_simple.cpp	57;"	d	file:
PREFIX_ADDR	src/cpu/core_verysimple.cpp	56;"	d	file:
PREFIX_NONE	src/cpu/core_full/support.h	244;"	d
PREFIX_REP	src/cpu/core_full/support.h	247;"	d
PREFIX_REP	src/cpu/core_simple.cpp	58;"	d	file:
PREFIX_REP	src/cpu/core_verysimple.cpp	57;"	d	file:
PREFIX_SEG	src/cpu/core_full/support.h	246;"	d
PROGRAMS_Handler	src/misc/programs.cpp	/^static Bitu PROGRAMS_Handler(void) {$/;"	f	file:
PROGRAMS_Init	src/misc/programs.cpp	/^void PROGRAMS_Init(Section* \/*sec*\/) {$/;"	f
PROGRAMS_Main	include/programs.h	/^typedef void (PROGRAMS_Main)(Program * * make);$/;"	t
PROGRAMS_MakeFile	src/misc/programs.cpp	/^void PROGRAMS_MakeFile(char const * const name,PROGRAMS_Main * main) {$/;"	f
PS2_Handler	src/ints/mouse.cpp	/^Bitu PS2_Handler(void) {$/;"	f
PSCSI_ADAPTER_BUS_INFO	src/platform/visualc/ntddscsi.h	/^} SCSI_ADAPTER_BUS_INFO, *PSCSI_ADAPTER_BUS_INFO;$/;"	t	typeref:struct:_SCSI_ADAPTER_BUS_INFO
PSCSI_ADDRESS	src/platform/visualc/ntddscsi.h	/^} SCSI_ADDRESS, *PSCSI_ADDRESS;$/;"	t	typeref:struct:_SCSI_ADDRESS
PSCSI_BUS_DATA	src/platform/visualc/ntddscsi.h	/^}SCSI_BUS_DATA, *PSCSI_BUS_DATA;$/;"	t	typeref:struct:_SCSI_BUS_DATA
PSCSI_INQUIRY_DATA	src/platform/visualc/ntddscsi.h	/^} SCSI_INQUIRY_DATA, *PSCSI_INQUIRY_DATA;$/;"	t	typeref:struct:_SCSI_INQUIRY_DATA
PSCSI_PASS_THROUGH	src/platform/visualc/ntddscsi.h	/^} SCSI_PASS_THROUGH, *PSCSI_PASS_THROUGH;$/;"	t	typeref:struct:_SCSI_PASS_THROUGH
PSCSI_PASS_THROUGH_DIRECT	src/platform/visualc/ntddscsi.h	/^} SCSI_PASS_THROUGH_DIRECT, *PSCSI_PASS_THROUGH_DIRECT;$/;"	t	typeref:struct:_SCSI_PASS_THROUGH_DIRECT
PSIZE	src/gui/render_16.h	19;"	d
PSIZE	src/gui/render_16.h	243;"	d
PSIZE	src/gui/render_32.h	153;"	d
PSIZE	src/gui/render_32.h	19;"	d
PSIZE	src/gui/render_8.h	19;"	d
PSIZE	src/gui/render_8.h	239;"	d
PSIZE	src/gui/render_9.h	19;"	d
PSIZE	src/gui/render_9.h	239;"	d
PSRB	src/dos/wnaspi32.h	/^} SRB, *PSRB, FAR *LPSRB;$/;"	t	typeref:struct:__anon134
PSRB_Abort	src/dos/wnaspi32.h	/^SRB_Abort, *PSRB_Abort, FAR *LPSRB_Abort;$/;"	t	typeref:struct:__anon127
PSRB_BusDeviceReset	src/dos/wnaspi32.h	/^SRB_BusDeviceReset, *PSRB_BusDeviceReset, FAR *LPSRB_BusDeviceReset;$/;"	t	typeref:struct:__anon128
PSRB_ExecSCSICmd	src/dos/wnaspi32.h	/^SRB_ExecSCSICmd, *PSRB_ExecSCSICmd, FAR *LPSRB_ExecSCSICmd;$/;"	t	typeref:struct:__anon126
PSRB_GDEVBlock	src/dos/wnaspi32.h	/^SRB_GDEVBlock, *PSRB_GDEVBlock, FAR *LPSRB_GDEVBlock;$/;"	t	typeref:struct:__anon125
PSRB_GetDiskInfo	src/dos/wnaspi32.h	/^SRB_GetDiskInfo, *PSRB_GetDiskInfo, FAR *LPSRB_GetDiskInfo;$/;"	t	typeref:struct:__anon129
PSRB_GetSetTimeouts	src/dos/wnaspi32.h	/^SRB_GetSetTimeouts, *PSRB_GetSetTimeouts, FAR *LPSRB_GetSetTimeouts;$/;"	t	typeref:struct:__anon131
PSRB_HAInquiry	src/dos/wnaspi32.h	/^SRB_HAInquiry, *PSRB_HAInquiry, FAR *LPSRB_HAInquiry;$/;"	t	typeref:struct:__anon124
PSRB_IO_CONTROL	src/platform/visualc/ntddscsi.h	/^} SRB_IO_CONTROL, *PSRB_IO_CONTROL; $/;"	t	typeref:struct:_SRB_IO_CONTROL
PSRB_RescanPort	src/dos/wnaspi32.h	/^SRB_RescanPort, *PSRB_RescanPort, FAR *LPSRB_RescanPort;$/;"	t	typeref:struct:__anon130
PSUB_Q_CHANNEL_DATA	src/platform/visualc/ntddcdrm.h	/^} SUB_Q_CHANNEL_DATA, *PSUB_Q_CHANNEL_DATA;$/;"	t	typeref:union:_SUB_Q_CHANNEL_DATA
PSUB_Q_CURRENT_POSITION	src/platform/visualc/ntddcdrm.h	/^} SUB_Q_CURRENT_POSITION, *PSUB_Q_CURRENT_POSITION;$/;"	t	typeref:struct:_SUB_Q_CURRENT_POSITION
PSUB_Q_HEADER	src/platform/visualc/ntddcdrm.h	/^} SUB_Q_HEADER, *PSUB_Q_HEADER;$/;"	t	typeref:struct:_SUB_Q_HEADER
PSUB_Q_MEDIA_CATALOG_NUMBER	src/platform/visualc/ntddcdrm.h	/^} SUB_Q_MEDIA_CATALOG_NUMBER, *PSUB_Q_MEDIA_CATALOG_NUMBER;$/;"	t	typeref:struct:_SUB_Q_MEDIA_CATALOG_NUMBER
PSUB_Q_TRACK_ISRC	src/platform/visualc/ntddcdrm.h	/^} SUB_Q_TRACK_ISRC, *PSUB_Q_TRACK_ISRC;$/;"	t	typeref:struct:_SUB_Q_TRACK_ISRC
PTOC	src/dos/wnaspi32.h	/^} TOC, *PTOC, FAR *LPTOC;$/;"	t	typeref:struct:__anon133
PTRACK_DATA	src/platform/visualc/ntddcdrm.h	/^} TRACK_DATA, *PTRACK_DATA;$/;"	t	typeref:struct:_TRACK_DATA
PTRACK_MODE_TYPE	src/platform/visualc/ntddcdrm.h	/^} TRACK_MODE_TYPE, *PTRACK_MODE_TYPE;$/;"	t	typeref:enum:_TRACK_MODE_TYPE
PTYPE	src/gui/render_16.h	20;"	d
PTYPE	src/gui/render_16.h	244;"	d
PTYPE	src/gui/render_32.h	154;"	d
PTYPE	src/gui/render_32.h	20;"	d
PTYPE	src/gui/render_8.h	20;"	d
PTYPE	src/gui/render_8.h	240;"	d
PTYPE	src/gui/render_9.h	20;"	d
PTYPE	src/gui/render_9.h	240;"	d
PVOLUME_CONTROL	src/platform/visualc/ntddcdrm.h	/^} VOLUME_CONTROL, *PVOLUME_CONTROL;$/;"	t	typeref:struct:_VOLUME_CONTROL
PX	src/gui/sdl_mapper.cpp	1778;"	d	file:
PY	src/gui/sdl_mapper.cpp	1779;"	d	file:
P_CH	src/hardware/fmopl.cpp	/^	OPL_CH	P_CH[9];				\/* OPL\/OPL2 chips have 9 channels*\/$/;"	m	struct:fm_opl_f	file:
P_CH	src/hardware/ymf262.cpp	/^	OPL3_CH	P_CH[18];				\/* OPL3 chips have 18 channels	*\/$/;"	m	struct:__anon192	file:
PackIP	src/hardware/ipx.cpp	/^void PackIP(IPaddress ipAddr, PackedIP *ipPack) {$/;"	f
PackType	src/platform/visualc/ntddcdrm.h	/^  UCHAR  PackType;$/;"	m	struct:_CDROM_TOC_CD_TEXT_DATA_BLOCK
PackedIP	include/ipx.h	/^struct PackedIP {$/;"	s
PageDown	src/libs/gui_tk/gui_tk.h	/^		Home, End, PageUp, PageDown, Insert, Delete, Menu,$/;"	e	enum:GUI::Key::Special
PageFaultCore	src/cpu/paging.cpp	/^static Bits PageFaultCore(void) {$/;"	f	file:
PageHandler	include/paging.h	/^class PageHandler {$/;"	c
PageUp	src/libs/gui_tk/gui_tk.h	/^		Home, End, PageUp, PageDown, Insert, Delete, Menu,$/;"	e	enum:GUI::Key::Special
PagingBlock	include/paging.h	/^struct PagingBlock {$/;"	s
ParseCommand	src/debug/debug.cpp	/^bool ParseCommand(char* str) {$/;"	f
ParseConfigFile	src/misc/setup.cpp	/^bool Config::ParseConfigFile(char const * const configfilename){$/;"	f	class:Config
ParseEnv	src/misc/setup.cpp	/^void Config::ParseEnv(char ** envp) {$/;"	f	class:Config
ParseLine	src/shell/shell.cpp	/^void DOS_Shell::ParseLine(char * line) {$/;"	f	class:DOS_Shell
PathExists	src/dos/dos_files.cpp	/^static bool PathExists(char const * const name) {$/;"	f	file:
PathId	src/platform/visualc/ntddscsi.h	/^	UCHAR  PathId;$/;"	m	struct:_SCSI_ADDRESS
PathId	src/platform/visualc/ntddscsi.h	/^	UCHAR  PathId;$/;"	m	struct:_SCSI_INQUIRY_DATA
PathId	src/platform/visualc/ntddscsi.h	/^  UCHAR  PathId;$/;"	m	struct:_SCSI_PASS_THROUGH
PathId	src/platform/visualc/ntddscsi.h	/^  UCHAR  PathId;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
Pause	src/libs/gui_tk/gui_tk.h	/^		Print, Pause, Break, CapsLock, NumLock, ScrollLock,$/;"	e	enum:GUI::Key::Special
PauseAudio	src/dos/cdrom.cpp	/^bool CDROM_Interface_SDL::PauseAudio (bool resume) $/;"	f	class:CDROM_Interface_SDL
PauseAudio	src/dos/cdrom.h	/^	bool	PauseAudio			(bool \/*resume*\/) { return true; };$/;"	f	class:CDROM_Interface_Fake
PauseAudio	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::PauseAudio(bool resume)$/;"	f	class:CDROM_Interface_Aspi
PauseAudio	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::PauseAudio(bool resume)$/;"	f	class:CDROM_Interface_Image
PauseAudio	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::PauseAudio(bool resume) {$/;"	f	class:CDROM_Interface_Ioctl
Period	src/hardware/tandy_sound.cpp	/^	int Period[4];$/;"	m	struct:SN76496	file:
PhysBasePtr	src/ints/int10_vesa.cpp	/^	Bit32u PhysBasePtr;$/;"	m	struct:MODE_INFO	file:
PhysMake	include/mem.h	/^INLINE PhysPt PhysMake(Bit16u seg,Bit16u off) {$/;"	f
PhysMakeProt	src/debug/debug.cpp	/^Bit32u PhysMakeProt(Bit16u selector, Bit32u offset)$/;"	f
PhysPt	include/mem.h	/^typedef Bit32u PhysPt;$/;"	t
PlayAudioMSF	src/dos/dos_mscdex.cpp	/^bool CMscdex::PlayAudioMSF(Bit8u subUnit, Bit32u start, Bit32u length)$/;"	f	class:CMscdex
PlayAudioSector	src/dos/cdrom.cpp	/^bool CDROM_Interface_SDL::PlayAudioSector (unsigned long start,unsigned long len) $/;"	f	class:CDROM_Interface_SDL
PlayAudioSector	src/dos/cdrom.h	/^	bool	PlayAudioSector		(unsigned long \/*start*\/,unsigned long \/*len*\/) { return true; };$/;"	f	class:CDROM_Interface_Fake
PlayAudioSector	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::PlayAudioSector(unsigned long start,unsigned long len)$/;"	f	class:CDROM_Interface_Aspi
PlayAudioSector	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::PlayAudioSector(unsigned long start,unsigned long len)$/;"	f	class:CDROM_Interface_Image
PlayAudioSector	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::PlayAudioSector	(unsigned long start,unsigned long len) {$/;"	f	class:CDROM_Interface_Ioctl
PlayAudioSector	src/dos/dos_mscdex.cpp	/^bool CMscdex::PlayAudioSector(Bit8u subUnit, Bit32u sector, Bit32u length)$/;"	f	class:CMscdex
PlayMsg	src/gui/midi_alsa.h	/^	void PlayMsg(Bit8u * msg) {$/;"	f	class:MidiHandler_alsa
PlayMsg	src/gui/midi_coreaudio.h	/^	void PlayMsg(Bit8u * msg) {$/;"	f	class:MidiHandler_coreaudio
PlayMsg	src/gui/midi_coremidi.h	/^	void PlayMsg(Bit8u * msg) {$/;"	f	class:MidiHandler_coremidi
PlayMsg	src/gui/midi_oss.h	/^	void PlayMsg(Bit8u * msg) {$/;"	f	class:MidiHandler_oss
PlayMsg	src/gui/midi_win32.h	/^	void PlayMsg(Bit8u * msg) {$/;"	f	class:MidiHandler_win32
PlaySysex	src/gui/midi_alsa.h	/^	void PlaySysex(Bit8u * sysex,Bitu len) {$/;"	f	class:MidiHandler_alsa
PlaySysex	src/gui/midi_coreaudio.h	/^	void PlaySysex(Bit8u * sysex, Bitu len) {$/;"	f	class:MidiHandler_coreaudio
PlaySysex	src/gui/midi_coremidi.h	/^	void PlaySysex(Bit8u * sysex, Bitu len) {$/;"	f	class:MidiHandler_coremidi
PlaySysex	src/gui/midi_oss.h	/^	void PlaySysex(Bit8u * sysex,Bitu len) {$/;"	f	class:MidiHandler_oss
PlaySysex	src/gui/midi_win32.h	/^	void PlaySysex(Bit8u * sysex,Bitu len) {$/;"	f	class:MidiHandler_win32
Point	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Point;$/;"	m	struct:_CDROM_TOC_FULL_TOC_DATA_BLOCK
Pop_16	src/cpu/core_full/loadwrite.h	54;"	d
Pop_16	src/cpu/core_simple.cpp	122;"	d	file:
Pop_16	src/cpu/core_verysimple.cpp	112;"	d	file:
Pop_32	src/cpu/core_full/loadwrite.h	55;"	d
Pop_32	src/cpu/core_simple.cpp	123;"	d	file:
Pop_32	src/cpu/core_verysimple.cpp	113;"	d	file:
PortNumber	src/platform/visualc/ntddscsi.h	/^	UCHAR  PortNumber;$/;"	m	struct:_SCSI_ADDRESS
PortRead	src/hardware/adlib.cpp	/^Bitu Module::PortRead( Bitu port, Bitu iolen ) {$/;"	f	class:Adlib::Module
PortVolume	src/platform/visualc/ntddcdrm.h	/^  UCHAR  PortVolume[4];$/;"	m	struct:_VOLUME_CONTROL
PortWrite	src/hardware/adlib.cpp	/^void Module::PortWrite( Bitu port, Bitu val, Bitu iolen ) {$/;"	f	class:Adlib::Module
PreparePCJRCartRom	src/hardware/memory.cpp	/^void PreparePCJRCartRom(void) {$/;"	f
Print	src/libs/gui_tk/gui_tk.h	/^		Print, Pause, Break, CapsLock, NumLock, ScrollLock,$/;"	e	enum:GUI::Key::Special
PrintConfig	src/misc/setup.cpp	/^bool Config::PrintConfig(char const * const configfilename) const {$/;"	f	class:Config
PrintData	src/misc/setup.cpp	/^void Section_line::PrintData(FILE* outfile) const {$/;"	f	class:Section_line
PrintData	src/misc/setup.cpp	/^void Section_prop::PrintData(FILE* outfile) const {$/;"	f	class:Section_prop
Program	include/programs.h	/^class Program {$/;"	c
Program	src/misc/programs.cpp	/^Program::Program() {$/;"	f	class:Program
Prop_bool	include/setup.h	/^	Prop_bool(std::string const& _propname, Changeable::Value when, bool _value)$/;"	f	class:Prop_bool
Prop_bool	include/setup.h	/^class Prop_bool:public Property {$/;"	c
Prop_double	include/setup.h	/^	Prop_double(std::string const & _propname, Changeable::Value when, double _value)$/;"	f	class:Prop_double
Prop_double	include/setup.h	/^class Prop_double:public Property {$/;"	c
Prop_hex	include/setup.h	/^	Prop_hex(std::string const& _propname, Changeable::Value when, Hex _value)$/;"	f	class:Prop_hex
Prop_hex	include/setup.h	/^class Prop_hex:public Property {$/;"	c
Prop_int	include/setup.h	/^	Prop_int(std::string const&  _propname,Changeable::Value when, int _min,int _max,int _value)$/;"	f	class:Prop_int
Prop_int	include/setup.h	/^	Prop_int(std::string const& _propname,Changeable::Value when, int _value)$/;"	f	class:Prop_int
Prop_int	include/setup.h	/^class Prop_int:public Property {$/;"	c
Prop_multival	include/setup.h	/^	Prop_multival(std::string const& _propname, Changeable::Value when,std::string const& sep):Property(_propname,when), section(new Section_prop("")),seperator(sep) {$/;"	f	class:Prop_multival
Prop_multival	include/setup.h	/^class Prop_multival:public Property{$/;"	c
Prop_multival_remain	include/setup.h	/^	Prop_multival_remain(std::string const& _propname, Changeable::Value when,std::string const& sep):Prop_multival(_propname,when,sep){ }$/;"	f	class:Prop_multival_remain
Prop_multival_remain	include/setup.h	/^class Prop_multival_remain:public Prop_multival{$/;"	c
Prop_path	include/setup.h	/^	Prop_path(std::string const& _propname, Changeable::Value when, char const * const _value)$/;"	f	class:Prop_path
Prop_path	include/setup.h	/^class Prop_path:public Prop_string{$/;"	c
Prop_string	include/setup.h	/^	Prop_string(std::string const& _propname, Changeable::Value when, char const * const _value)$/;"	f	class:Prop_string
Prop_string	include/setup.h	/^class Prop_string:public Property{$/;"	c
Property	include/setup.h	/^	Property(std::string const& _propname, Changeable::Value when):propname(_propname),change(when) { }$/;"	f	class:Property
Property	include/setup.h	/^class Property {$/;"	c
Push_16	src/cpu/core_full/loadwrite.h	52;"	d
Push_16	src/cpu/core_simple.cpp	120;"	d	file:
Push_16	src/cpu/core_verysimple.cpp	110;"	d	file:
Push_32	src/cpu/core_full/loadwrite.h	53;"	d
Push_32	src/cpu/core_simple.cpp	121;"	d	file:
Push_32	src/cpu/core_verysimple.cpp	111;"	d	file:
Putchar	src/hardware/serialport/misc_util.cpp	/^bool TCPClientSocket::Putchar(Bit8u data) {$/;"	f	class:TCPClientSocket
Putchar	src/hardware/serialport/serialport.cpp	/^bool CSerial::Putchar(Bit8u data, bool wait_dsr, bool wait_cts, Bitu timeout) {$/;"	f	class:CSerial
QUEUE_SIZE	src/ints/mouse.cpp	53;"	d	file:
QueryAbout	src/libs/zmbv/zmbv_vfw.cpp	/^BOOL CodecInst::QueryAbout() { return TRUE; }$/;"	f	class:CodecInst
QueryConfigure	src/libs/zmbv/zmbv_vfw.cpp	/^BOOL CodecInst::QueryConfigure() { return TRUE; }$/;"	f	class:CodecInst
R	src/libs/gui_tk/gui_tk.h	/^static inline int R(RGB val) { return ((val&Color::RedMask)>>Color::RedShift); }$/;"	f	namespace:GUI::Color
RAMPageHandler	src/hardware/memory.cpp	/^	RAMPageHandler() {$/;"	f	class:RAMPageHandler
RAMPageHandler	src/hardware/memory.cpp	/^class RAMPageHandler : public PageHandler {$/;"	c	file:
RAMRefresh_Event	src/ints/bios.cpp	/^static void RAMRefresh_Event(Bitu val) {$/;"	f	file:
RAM_REFRESH_DELAY	src/ints/bios.cpp	772;"	d	file:
RANGE	src/hardware/joystick.cpp	29;"	d	file:
RATE_STEPS	src/hardware/fmopl.cpp	394;"	d	file:
RATE_STEPS	src/hardware/ymf262.cpp	344;"	d	file:
RAW_READ_INFO	src/platform/visualc/ntddcdrm.h	/^} RAW_READ_INFO, *PRAW_READ_INFO;$/;"	t	typeref:struct:__RAW_READ_INFO
RAW_SECTOR_SIZE	src/dos/cdrom.h	23;"	d
RAW_SIZE	src/hardware/adlib.cpp	132;"	d	file:
RCLB	src/cpu/arminst.h	330;"	d
RCLB	src/cpu/instructions.h	326;"	d
RCLD	src/cpu/arminst.h	356;"	d
RCLD	src/cpu/instructions.h	352;"	d
RCLW	src/cpu/arminst.h	343;"	d
RCLW	src/cpu/instructions.h	339;"	d
RCRB	src/cpu/arminst.h	375;"	d
RCRB	src/cpu/instructions.h	371;"	d
RCRD	src/cpu/arminst.h	401;"	d
RCRD	src/cpu/instructions.h	397;"	d
RCRW	src/cpu/arminst.h	388;"	d
RCRW	src/cpu/instructions.h	384;"	d
READ	src/dos/drive_fat.cpp	/^	enum { NONE,READ,WRITE } last_action;$/;"	e	enum:fatFile::__anon121	file:
READ	src/dos/drive_local.cpp	/^	enum { NONE,READ,WRITE } last_action;$/;"	e	enum:localFile::__anon122	file:
REDUCE_JOYSTICK_POLLING	include/video.h	24;"	d
REG	src/debug/debug_disasm.cpp	124;"	d	file:
REGI_AH	include/regs.h	/^	REGI_AH, REGI_CH, REGI_DH, REGI_BH$/;"	e	enum:__anon29
REGI_AL	include/regs.h	/^	REGI_AL, REGI_CL, REGI_DL, REGI_BL,$/;"	e	enum:__anon29
REGI_AX	include/regs.h	/^	REGI_AX, REGI_CX, REGI_DX, REGI_BX,$/;"	e	enum:__anon28
REGI_BH	include/regs.h	/^	REGI_AH, REGI_CH, REGI_DH, REGI_BH$/;"	e	enum:__anon29
REGI_BL	include/regs.h	/^	REGI_AL, REGI_CL, REGI_DL, REGI_BL,$/;"	e	enum:__anon29
REGI_BP	include/regs.h	/^	REGI_SP, REGI_BP, REGI_SI, REGI_DI$/;"	e	enum:__anon28
REGI_BX	include/regs.h	/^	REGI_AX, REGI_CX, REGI_DX, REGI_BX,$/;"	e	enum:__anon28
REGI_CH	include/regs.h	/^	REGI_AH, REGI_CH, REGI_DH, REGI_BH$/;"	e	enum:__anon29
REGI_CL	include/regs.h	/^	REGI_AL, REGI_CL, REGI_DL, REGI_BL,$/;"	e	enum:__anon29
REGI_CX	include/regs.h	/^	REGI_AX, REGI_CX, REGI_DX, REGI_BX,$/;"	e	enum:__anon28
REGI_DH	include/regs.h	/^	REGI_AH, REGI_CH, REGI_DH, REGI_BH$/;"	e	enum:__anon29
REGI_DI	include/regs.h	/^	REGI_SP, REGI_BP, REGI_SI, REGI_DI$/;"	e	enum:__anon28
REGI_DL	include/regs.h	/^	REGI_AL, REGI_CL, REGI_DL, REGI_BL,$/;"	e	enum:__anon29
REGI_DX	include/regs.h	/^	REGI_AX, REGI_CX, REGI_DX, REGI_BX,$/;"	e	enum:__anon28
REGI_SI	include/regs.h	/^	REGI_SP, REGI_BP, REGI_SI, REGI_DI$/;"	e	enum:__anon28
REGI_SP	include/regs.h	/^	REGI_SP, REGI_BP, REGI_SI, REGI_DI$/;"	e	enum:__anon28
RENDER_DrawLine	src/gui/render.cpp	/^ScalerLineHandler_t RENDER_DrawLine;$/;"	v
RENDER_EmptyLineHandler	src/gui/render.cpp	/^static void RENDER_EmptyLineHandler(const void * src) {$/;"	f	file:
RENDER_EndUpdate	src/gui/render.cpp	/^void RENDER_EndUpdate( void ) {$/;"	f
RENDER_Halt	src/gui/render.cpp	/^static void RENDER_Halt( void ) {$/;"	f	file:
RENDER_Init	src/gui/render.cpp	/^void RENDER_Init(Section * sec) {$/;"	f
RENDER_Line	src/gui/render.cpp	/^static void RENDER_Line(const void * src)$/;"	f	file:
RENDER_Reset	src/gui/render.cpp	/^static void RENDER_Reset( void ) {$/;"	f	file:
RENDER_SKIP_CACHE	include/render.h	26;"	d
RENDER_SetPal	src/gui/render.cpp	/^void RENDER_SetPal(Bit8u entry,Bit8u red,Bit8u green,Bit8u blue) {$/;"	f
RENDER_SetSize	src/gui/render.cpp	/^void RENDER_SetSize(Bitu width,Bitu height,Bitu bpp,float fps,double ratio,bool dblw,bool dblh) {$/;"	f
RENDER_StartUpdate	src/gui/render.cpp	/^bool RENDER_StartUpdate(void) {$/;"	f
RENDER_USE_ADVANCED_SCALERS	include/render.h	22;"	d
REP_NONE	src/cpu/core_dyn_x86/decoder.h	/^	REP_NONE=0,REP_NZ,REP_Z$/;"	e	enum:REP_Type
REP_NONE	src/cpu/core_dynrec/decoder_basic.h	/^	REP_NONE=0,REP_NZ,REP_Z$/;"	e	enum:REP_Type
REP_NONE	src/cpu/core_dynrec/save/decoder_basic.h	/^	REP_NONE=0,REP_NZ,REP_Z$/;"	e	enum:REP_Type
REP_NZ	src/cpu/core_dyn_x86/decoder.h	/^	REP_NONE=0,REP_NZ,REP_Z$/;"	e	enum:REP_Type
REP_NZ	src/cpu/core_dynrec/decoder_basic.h	/^	REP_NONE=0,REP_NZ,REP_Z$/;"	e	enum:REP_Type
REP_NZ	src/cpu/core_dynrec/save/decoder_basic.h	/^	REP_NONE=0,REP_NZ,REP_Z$/;"	e	enum:REP_Type
REP_Type	src/cpu/core_dyn_x86/decoder.h	/^enum REP_Type {$/;"	g
REP_Type	src/cpu/core_dynrec/decoder_basic.h	/^enum REP_Type {$/;"	g
REP_Type	src/cpu/core_dynrec/save/decoder_basic.h	/^enum REP_Type {$/;"	g
REP_Z	src/cpu/core_dyn_x86/decoder.h	/^	REP_NONE=0,REP_NZ,REP_Z$/;"	e	enum:REP_Type
REP_Z	src/cpu/core_dynrec/decoder_basic.h	/^	REP_NONE=0,REP_NZ,REP_Z$/;"	e	enum:REP_Type
REP_Z	src/cpu/core_dynrec/save/decoder_basic.h	/^	REP_NONE=0,REP_NZ,REP_Z$/;"	e	enum:REP_Type
REQUEST_STATUS_DONE	src/dos/dos_mscdex.cpp	47;"	d	file:
REQUEST_STATUS_ERROR	src/dos/dos_mscdex.cpp	48;"	d	file:
RESCAN	src/dos/dos_programs.cpp	/^class RESCAN : public Program {$/;"	c	file:
RESCAN_ProgramStart	src/dos/dos_programs.cpp	/^static void RESCAN_ProgramStart(Program * * make) {$/;"	f	file:
RESIDUAL_COUNT_SUPPORTED	src/dos/wnaspi32.h	48;"	d
RESOLUTION	src/misc/fixed.cpp	26;"	d	file:
RESOLUTION_FLOAT	src/misc/fixed.cpp	27;"	d	file:
RESOLUTION_FLOATf	src/misc/fixed.cpp	28;"	d	file:
RESTORE_ET3K	src/hardware/vga_tseng.cpp	497;"	d	file:
RESTORE_ET4K	src/hardware/vga_tseng.cpp	61;"	d	file:
RETURN_ABORT	include/dos_inc.h	/^enum { RETURN_EXIT=0,RETURN_CTRLC=1,RETURN_ABORT=2,RETURN_TSR=3};$/;"	e	enum:__anon11
RETURN_CTRLC	include/dos_inc.h	/^enum { RETURN_EXIT=0,RETURN_CTRLC=1,RETURN_ABORT=2,RETURN_TSR=3};$/;"	e	enum:__anon11
RETURN_EXIT	include/dos_inc.h	/^enum { RETURN_EXIT=0,RETURN_CTRLC=1,RETURN_ABORT=2,RETURN_TSR=3};$/;"	e	enum:__anon11
RETURN_TSR	include/dos_inc.h	/^enum { RETURN_EXIT=0,RETURN_CTRLC=1,RETURN_ABORT=2,RETURN_TSR=3};$/;"	e	enum:__anon11
RGB	src/libs/gui_tk/gui_tk.h	/^typedef uint32_t RGB;$/;"	t	namespace:GUI
RGBEntry	include/vga.h	/^} RGBEntry;$/;"	t	typeref:struct:__anon52
RHR	include/serialport.h	/^	Bit8u RHR;	\/\/	r				Receive Holding Register, also LSB of Divisor Latch (r\/w)$/;"	m	class:CSerial
RHR_INT_Enable_MASK	include/serialport.h	215;"	d
RHR_OFFSET	include/serialport.h	203;"	d
RIGHT	src/hardware/gameblaster.cpp	31;"	d	file:
RM	src/debug/debug_disasm.cpp	125;"	d	file:
RMEb	src/cpu/core_normal/helpers.h	43;"	d
RMEbGb	src/cpu/core_normal/helpers.h	29;"	d
RMEd	src/cpu/core_normal/helpers.h	121;"	d
RMEdGd	src/cpu/core_normal/helpers.h	83;"	d
RMEdGdOp3	src/cpu/core_normal/helpers.h	90;"	d
RMEw	src/cpu/core_normal/helpers.h	115;"	d
RMEw	src/cpu/core_normal/helpers.h	77;"	d
RMEwGw	src/cpu/core_normal/helpers.h	49;"	d
RMEwGwOp3	src/cpu/core_normal/helpers.h	56;"	d
RMGbEb	src/cpu/core_normal/helpers.h	36;"	d
RMGdEd	src/cpu/core_normal/helpers.h	98;"	d
RMGdEdOp3	src/cpu/core_normal/helpers.h	105;"	d
RMGwEw	src/cpu/core_normal/helpers.h	63;"	d
RMGwEwOp3	src/cpu/core_normal/helpers.h	70;"	d
RNG	src/hardware/tandy_sound.cpp	/^	unsigned int RNG;		\/* noise generator      *\/$/;"	m	struct:SN76496	file:
ROLB	src/cpu/arminst.h	234;"	d
ROLB	src/cpu/instructions.h	230;"	d
ROLD	src/cpu/arminst.h	270;"	d
ROLD	src/cpu/instructions.h	266;"	d
ROLW	src/cpu/arminst.h	252;"	d
ROLW	src/cpu/instructions.h	248;"	d
ROMPageHandler	src/hardware/memory.cpp	/^	ROMPageHandler() {$/;"	f	class:ROMPageHandler
ROMPageHandler	src/hardware/memory.cpp	/^class ROMPageHandler : public RAMPageHandler {$/;"	c	file:
RORB	src/cpu/arminst.h	282;"	d
RORB	src/cpu/instructions.h	278;"	d
RORD	src/cpu/arminst.h	318;"	d
RORD	src/cpu/instructions.h	314;"	d
RORW	src/cpu/arminst.h	300;"	d
RORW	src/cpu/instructions.h	296;"	d
ROTATE_SCALE	src/cpu/core_dynrec/risc_armv4le-o3.h	62;"	d
ROTATE_SCALE	src/cpu/core_dynrec/risc_armv4le-s3.h	62;"	d
ROTATE_SCALE	src/cpu/core_dynrec/save/risc_armv4le-o3.h	62;"	d
ROTATE_SCALE	src/cpu/core_dynrec/save/risc_armv4le-s3.h	62;"	d
ROUND_Chop	include/fpu.h	/^	ROUND_Chop    = 3$/;"	e	enum:FPU_Round
ROUND_Down	include/fpu.h	/^	ROUND_Down    = 1,$/;"	e	enum:FPU_Round
ROUND_Nearest	include/fpu.h	/^	ROUND_Nearest = 0,		$/;"	e	enum:FPU_Round
ROUND_Up	include/fpu.h	/^	ROUND_Up      = 2,	$/;"	e	enum:FPU_Round
RUNEXCEPTION	src/cpu/core_normal/support.h	36;"	d
RXBufferEmpty	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::RXBufferEmpty() {$/;"	f	class:CSerialModem
RX_PRIORITY	include/serialport.h	191;"	d
R_CMPSB	src/cpu/core_full/support.h	/^	R_CMPSB,R_CMPSW,R_CMPSD,$/;"	e	enum:__anon100
R_CMPSB	src/cpu/core_normal/prefix_none.h	/^		DoString(R_CMPSB);break;$/;"	v
R_CMPSB	src/cpu/core_normal/string.h	/^	R_CMPSB,R_CMPSW,R_CMPSD,$/;"	e	enum:STRING_OP
R_CMPSB	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_CMPSB);break;$/;"	v
R_CMPSD	src/cpu/core_full/support.h	/^	R_CMPSB,R_CMPSW,R_CMPSD,$/;"	e	enum:__anon100
R_CMPSD	src/cpu/core_normal/prefix_66.h	/^		DoString(R_CMPSD);break;$/;"	v
R_CMPSD	src/cpu/core_normal/string.h	/^	R_CMPSB,R_CMPSW,R_CMPSD,$/;"	e	enum:STRING_OP
R_CMPSW	src/cpu/core_full/support.h	/^	R_CMPSB,R_CMPSW,R_CMPSD,$/;"	e	enum:__anon100
R_CMPSW	src/cpu/core_normal/prefix_none.h	/^		DoString(R_CMPSW);break;$/;"	v
R_CMPSW	src/cpu/core_normal/string.h	/^	R_CMPSB,R_CMPSW,R_CMPSD,$/;"	e	enum:STRING_OP
R_CMPSW	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_CMPSW);break;$/;"	v
R_INSB	src/cpu/core_full/support.h	/^	R_INSB,R_INSW,R_INSD,$/;"	e	enum:__anon100
R_INSB	src/cpu/core_normal/prefix_none.h	/^		DoString(R_INSB);break;$/;"	v
R_INSB	src/cpu/core_normal/string.h	/^	R_INSB,R_INSW,R_INSD,$/;"	e	enum:STRING_OP
R_INSB	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_INSB);break;$/;"	v
R_INSD	src/cpu/core_full/support.h	/^	R_INSB,R_INSW,R_INSD,$/;"	e	enum:__anon100
R_INSD	src/cpu/core_normal/prefix_66.h	/^		DoString(R_INSD);break;$/;"	v
R_INSD	src/cpu/core_normal/string.h	/^	R_INSB,R_INSW,R_INSD,$/;"	e	enum:STRING_OP
R_INSW	src/cpu/core_full/support.h	/^	R_INSB,R_INSW,R_INSD,$/;"	e	enum:__anon100
R_INSW	src/cpu/core_normal/prefix_none.h	/^		DoString(R_INSW);break;$/;"	v
R_INSW	src/cpu/core_normal/string.h	/^	R_INSB,R_INSW,R_INSD,$/;"	e	enum:STRING_OP
R_INSW	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_INSW);break;$/;"	v
R_LODSB	src/cpu/core_full/support.h	/^	R_LODSB,R_LODSW,R_LODSD,$/;"	e	enum:__anon100
R_LODSB	src/cpu/core_normal/prefix_none.h	/^		DoString(R_LODSB);break;$/;"	v
R_LODSB	src/cpu/core_normal/string.h	/^	R_LODSB,R_LODSW,R_LODSD,$/;"	e	enum:STRING_OP
R_LODSB	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_LODSB);break;$/;"	v
R_LODSD	src/cpu/core_full/support.h	/^	R_LODSB,R_LODSW,R_LODSD,$/;"	e	enum:__anon100
R_LODSD	src/cpu/core_normal/prefix_66.h	/^		DoString(R_LODSD);break;$/;"	v
R_LODSD	src/cpu/core_normal/string.h	/^	R_LODSB,R_LODSW,R_LODSD,$/;"	e	enum:STRING_OP
R_LODSW	src/cpu/core_full/support.h	/^	R_LODSB,R_LODSW,R_LODSD,$/;"	e	enum:__anon100
R_LODSW	src/cpu/core_normal/prefix_none.h	/^		DoString(R_LODSW);break;$/;"	v
R_LODSW	src/cpu/core_normal/string.h	/^	R_LODSB,R_LODSW,R_LODSD,$/;"	e	enum:STRING_OP
R_LODSW	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_LODSW);break;$/;"	v
R_MOVSB	src/cpu/core_full/support.h	/^	R_MOVSB,R_MOVSW,R_MOVSD,$/;"	e	enum:__anon100
R_MOVSB	src/cpu/core_normal/prefix_none.h	/^		DoString(R_MOVSB);break;$/;"	v
R_MOVSB	src/cpu/core_normal/string.h	/^	R_MOVSB,R_MOVSW,R_MOVSD,$/;"	e	enum:STRING_OP
R_MOVSB	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_MOVSB);break;$/;"	v
R_MOVSD	src/cpu/core_full/support.h	/^	R_MOVSB,R_MOVSW,R_MOVSD,$/;"	e	enum:__anon100
R_MOVSD	src/cpu/core_normal/prefix_66.h	/^		DoString(R_MOVSD);break;$/;"	v
R_MOVSD	src/cpu/core_normal/string.h	/^	R_MOVSB,R_MOVSW,R_MOVSD,$/;"	e	enum:STRING_OP
R_MOVSW	src/cpu/core_full/support.h	/^	R_MOVSB,R_MOVSW,R_MOVSD,$/;"	e	enum:__anon100
R_MOVSW	src/cpu/core_normal/prefix_none.h	/^		DoString(R_MOVSW);break;$/;"	v
R_MOVSW	src/cpu/core_normal/string.h	/^	R_MOVSB,R_MOVSW,R_MOVSD,$/;"	e	enum:STRING_OP
R_MOVSW	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_MOVSW);break;$/;"	v
R_OUTSB	src/cpu/core_full/support.h	/^	R_OUTSB,R_OUTSW,R_OUTSD,$/;"	e	enum:__anon100
R_OUTSB	src/cpu/core_normal/prefix_none.h	/^		DoString(R_OUTSB);break;$/;"	v
R_OUTSB	src/cpu/core_normal/string.h	/^	R_OUTSB,R_OUTSW,R_OUTSD,$/;"	e	enum:STRING_OP
R_OUTSB	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_OUTSB);break;$/;"	v
R_OUTSD	src/cpu/core_full/support.h	/^	R_OUTSB,R_OUTSW,R_OUTSD,$/;"	e	enum:__anon100
R_OUTSD	src/cpu/core_normal/prefix_66.h	/^		DoString(R_OUTSD);break;$/;"	v
R_OUTSD	src/cpu/core_normal/string.h	/^	R_OUTSB,R_OUTSW,R_OUTSD,$/;"	e	enum:STRING_OP
R_OUTSW	src/cpu/core_full/support.h	/^	R_OUTSB,R_OUTSW,R_OUTSD,$/;"	e	enum:__anon100
R_OUTSW	src/cpu/core_normal/prefix_none.h	/^		DoString(R_OUTSW);break;$/;"	v
R_OUTSW	src/cpu/core_normal/string.h	/^	R_OUTSB,R_OUTSW,R_OUTSD,$/;"	e	enum:STRING_OP
R_OUTSW	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_OUTSW);break;$/;"	v
R_SCASB	src/cpu/core_full/support.h	/^	R_SCASB,R_SCASW,R_SCASD,$/;"	e	enum:__anon100
R_SCASB	src/cpu/core_normal/prefix_none.h	/^		DoString(R_SCASB);break;$/;"	v
R_SCASB	src/cpu/core_normal/string.h	/^	R_SCASB,R_SCASW,R_SCASD,$/;"	e	enum:STRING_OP
R_SCASB	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_SCASB);break;$/;"	v
R_SCASD	src/cpu/core_full/support.h	/^	R_SCASB,R_SCASW,R_SCASD,$/;"	e	enum:__anon100
R_SCASD	src/cpu/core_normal/prefix_66.h	/^		DoString(R_SCASD);break;$/;"	v
R_SCASD	src/cpu/core_normal/string.h	/^	R_SCASB,R_SCASW,R_SCASD,$/;"	e	enum:STRING_OP
R_SCASW	src/cpu/core_full/support.h	/^	R_SCASB,R_SCASW,R_SCASD,$/;"	e	enum:__anon100
R_SCASW	src/cpu/core_normal/prefix_none.h	/^		DoString(R_SCASW);break;$/;"	v
R_SCASW	src/cpu/core_normal/string.h	/^	R_SCASB,R_SCASW,R_SCASD,$/;"	e	enum:STRING_OP
R_SCASW	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_SCASW);break;$/;"	v
R_STOSB	src/cpu/core_full/support.h	/^	R_STOSB,R_STOSW,R_STOSD,$/;"	e	enum:__anon100
R_STOSB	src/cpu/core_normal/prefix_none.h	/^		DoString(R_STOSB);break;$/;"	v
R_STOSB	src/cpu/core_normal/string.h	/^	R_STOSB,R_STOSW,R_STOSD,$/;"	e	enum:STRING_OP
R_STOSB	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_STOSB);break;$/;"	v
R_STOSD	src/cpu/core_full/support.h	/^	R_STOSB,R_STOSW,R_STOSD,$/;"	e	enum:__anon100
R_STOSD	src/cpu/core_normal/prefix_66.h	/^		DoString(R_STOSD);break;$/;"	v
R_STOSD	src/cpu/core_normal/string.h	/^	R_STOSB,R_STOSW,R_STOSD,$/;"	e	enum:STRING_OP
R_STOSW	src/cpu/core_full/support.h	/^	R_STOSB,R_STOSW,R_STOSD,$/;"	e	enum:__anon100
R_STOSW	src/cpu/core_normal/prefix_none.h	/^		DoString(R_STOSW);break;$/;"	v
R_STOSW	src/cpu/core_normal/string.h	/^	R_STOSB,R_STOSW,R_STOSD,$/;"	e	enum:STRING_OP
R_STOSW	src/cpu/core_normal/verysimple_prefix_none.h	/^		DoString(R_STOSW);break;$/;"	v
Radiobox	src/libs/gui_tk/gui_tk.h	/^class Radiobox : public BorderedWindow, public ActionEventSource {$/;"	c	namespace:GUI
Radiobox	src/libs/gui_tk/gui_tk.h	/^template <typename STR> Radiobox::Radiobox(Frame *parent, int x, int y, const STR text, int w, int h) :$/;"	f	class:GUI::Radiobox
Raise_Request	include/dma.h	/^	void Raise_Request(void) {$/;"	f	class:DmaChannel
RasterOp	src/hardware/vga_memory.cpp	/^INLINE static Bit32u RasterOp(Bit32u input,Bit32u mask) {$/;"	f	file:
RawMidiAdd	src/hardware/hardware.cpp	/^static void RawMidiAdd(Bit8u data) {$/;"	f	file:
RawMidiAddNumber	src/hardware/hardware.cpp	/^static void RawMidiAddNumber(Bit32u val) {$/;"	f	file:
Rb	src/debug/disasm_tables.h	/^	Rb,Rw,Rv,$/;"	e	enum:__anon111
ReachedTC	include/dma.h	/^	void ReachedTC(void) {$/;"	f	class:DmaChannel
Read	src/dos/dev_con.h	/^bool device_CON::Read(Bit8u * data,Bit16u * size) {$/;"	f	class:device_CON
Read	src/dos/dos_devices.cpp	/^	virtual bool Read(Bit8u * data,Bit16u * size) {$/;"	f	class:device_NUL
Read	src/dos/dos_devices.cpp	/^bool DOS_Device::Read(Bit8u * data,Bit16u * size) {$/;"	f	class:DOS_Device
Read	src/dos/dos_mscdex.cpp	/^	bool Read (Bit8u * \/*data*\/,Bit16u * \/*size*\/) { return false;}$/;"	f	class:device_MSCDEX
Read	src/dos/drive_fat.cpp	/^bool fatFile::Read(Bit8u * data, Bit16u *size) {$/;"	f	class:fatFile
Read	src/dos/drive_iso.cpp	/^bool isoFile::Read(Bit8u *data, Bit16u *size)$/;"	f	class:isoFile
Read	src/dos/drive_local.cpp	/^bool localFile::Read(Bit8u * data,Bit16u * size) {$/;"	f	class:localFile
Read	src/dos/drive_virtual.cpp	/^bool Virtual_File::Read(Bit8u * data,Bit16u * size) {$/;"	f	class:Virtual_File
Read	src/hardware/adlib.cpp	/^Bit8u Chip::Read( ) {$/;"	f	class:Adlib::Chip
Read	src/hardware/dma.cpp	/^Bitu DmaChannel::Read(Bitu want, Bit8u * buffer) {$/;"	f	class:DmaChannel
Read	src/hardware/serialport/serialport.cpp	/^bool device_COM::Read(Bit8u * data,Bit16u * size) {$/;"	f	class:device_COM
Read	src/ints/ems.cpp	/^	bool Read(Bit8u * data,Bit16u * size) { return false;}$/;"	f	class:device_EMM
ReadCachedSector	src/dos/drive_iso.cpp	/^bool isoDrive::ReadCachedSector(Bit8u** buffer, const Bit32u sector)$/;"	f	class:isoDrive
ReadCharAttr	src/ints/int10_char.cpp	/^void ReadCharAttr(Bit16u col,Bit16u row,Bit8u page,Bit16u * result) {$/;"	f
ReadCharacter	src/hardware/serialport/directserial_posix.cpp	/^void CDirectSerial::ReadCharacter()$/;"	f	class:CDirectSerial
ReadControllerReg	src/hardware/dma.cpp	/^Bitu DmaController::ReadControllerReg(Bitu reg,Bitu len) {$/;"	f	class:DmaController
ReadDir	src/dos/drive_cache.cpp	/^bool DOS_Drive_Cache::ReadDir(Bit16u id, char* &result) {$/;"	f	class:DOS_Drive_Cache
ReadFromControlChannel	src/dos/dev_con.h	/^	bool ReadFromControlChannel(PhysPt bufptr,Bit16u size,Bit16u * retcode){return false;}$/;"	f	class:device_CON
ReadFromControlChannel	src/dos/dos_devices.cpp	/^	virtual bool ReadFromControlChannel(PhysPt bufptr,Bit16u size,Bit16u * retcode){return false;}$/;"	f	class:device_NUL
ReadFromControlChannel	src/dos/dos_devices.cpp	/^bool DOS_Device::ReadFromControlChannel(PhysPt bufptr,Bit16u size,Bit16u * retcode) { $/;"	f	class:DOS_Device
ReadFromControlChannel	src/dos/dos_mscdex.cpp	/^bool device_MSCDEX::ReadFromControlChannel(PhysPt bufptr,Bit16u size,Bit16u * retcode) { $/;"	f	class:device_MSCDEX
ReadFromControlChannel	src/ints/ems.cpp	/^bool device_EMM::ReadFromControlChannel(PhysPt bufptr,Bit16u size,Bit16u * retcode) { $/;"	f	class:device_EMM
ReadHandler	include/serialport.h	/^	IO_ReadHandleObject ReadHandler[8];$/;"	m	class:CSerial
ReadHandler	src/hardware/adlib.cpp	/^	IO_ReadHandleObject ReadHandler[3];$/;"	m	class:OPL	file:
ReadHandler	src/hardware/cmos.cpp	/^	IO_ReadHandleObject ReadHandler[2];$/;"	m	class:CMOS	file:
ReadHandler	src/hardware/disney.cpp	/^	IO_ReadHandleObject ReadHandler;$/;"	m	class:DISNEY	file:
ReadHandler	src/hardware/joystick.cpp	/^	IO_ReadHandleObject ReadHandler;$/;"	m	class:JOYSTICK	file:
ReadHandler	src/hardware/memory.cpp	/^	IO_ReadHandleObject ReadHandler;$/;"	m	class:MEMORY	file:
ReadHandler	src/hardware/pic.cpp	/^	IO_ReadHandleObject ReadHandler[4];$/;"	m	class:PIC	file:
ReadHandler	src/hardware/sblaster.cpp	/^	IO_ReadHandleObject ReadHandler[0x10];$/;"	m	class:SBLASTER	file:
ReadHandler	src/hardware/timer.cpp	/^	IO_ReadHandleObject ReadHandler[4];$/;"	m	class:TIMER	file:
ReadLine	src/shell/shell_batch.cpp	/^bool BatchFile::ReadLine(char * line) {$/;"	f	class:BatchFile
ReadSector	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::ReadSector(Bit8u *buffer, bool raw, unsigned long sector)$/;"	f	class:CDROM_Interface_Image
ReadSector	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::ReadSector(Bit8u *buffer, bool raw, unsigned long sector) {$/;"	f	class:CDROM_Interface_Ioctl
ReadSectors	src/dos/cdrom.h	/^	bool	ReadSectors			(PhysPt \/*buffer*\/, bool \/*raw*\/, unsigned long \/*sector*\/, unsigned long \/*num*\/) { return true; };$/;"	f	class:CDROM_Interface_Fake
ReadSectors	src/dos/cdrom.h	/^	virtual bool	ReadSectors			(PhysPt \/*buffer*\/, bool \/*raw*\/, unsigned long \/*sector*\/, unsigned long \/*num*\/) { return false; };$/;"	f	class:CDROM_Interface_SDL
ReadSectors	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::ReadSectors(PhysPt buffer, bool raw, unsigned long sector, unsigned long num)$/;"	f	class:CDROM_Interface_Aspi
ReadSectors	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::ReadSectors(PhysPt buffer, bool raw, unsigned long sector, unsigned long num)$/;"	f	class:CDROM_Interface_Image
ReadSectors	src/dos/cdrom_ioctl_linux.cpp	/^bool CDROM_Interface_Ioctl::ReadSectors(PhysPt buffer, bool raw, unsigned long sector, unsigned long num)$/;"	f	class:CDROM_Interface_Ioctl
ReadSectors	src/dos/cdrom_ioctl_os2.cpp	/^bool CDROM_Interface_Ioctl::ReadSectors(PhysPt buffer, bool raw, unsigned long sector, unsigned long num){$/;"	f	class:CDROM_Interface_Ioctl
ReadSectors	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::ReadSectors(PhysPt buffer, bool raw, unsigned long sector, unsigned long num) {$/;"	f	class:CDROM_Interface_Ioctl
ReadSectors	src/dos/dos_mscdex.cpp	/^bool CMscdex::ReadSectors(Bit16u drive, Bit32u sector, Bit16u num, PhysPt data) {$/;"	f	class:CMscdex
ReadSectors	src/dos/dos_mscdex.cpp	/^bool CMscdex::ReadSectors(Bit8u subUnit, bool raw, Bit32u sector, Bit16u num, PhysPt data) {$/;"	f	class:CMscdex
ReadSectorsMSF	src/dos/dos_mscdex.cpp	/^bool CMscdex::ReadSectorsMSF(Bit8u subUnit, bool raw, Bit32u start, Bit16u num, PhysPt data) {$/;"	f	class:CMscdex
ReadVTOC	src/dos/dos_mscdex.cpp	/^bool CMscdex::ReadVTOC(Bit16u drive, Bit16u volume, PhysPt data, Bit16u& error)	$/;"	f	class:CMscdex
Read_AbsoluteSector	src/ints/bios_disk.cpp	/^Bit8u imageDisk::Read_AbsoluteSector(Bit32u sectnum, void * data) {$/;"	f	class:imageDisk
Read_IER	src/hardware/serialport/serialport.cpp	/^Bitu CSerial::Read_IER () {$/;"	f	class:CSerial
Read_ISR	src/hardware/serialport/serialport.cpp	/^Bitu CSerial::Read_ISR () {$/;"	f	class:CSerial
Read_LCR	src/hardware/serialport/serialport.cpp	/^Bitu CSerial::Read_LCR () {$/;"	f	class:CSerial
Read_LSR	src/hardware/serialport/serialport.cpp	/^Bitu CSerial::Read_LSR () {$/;"	f	class:CSerial
Read_MCR	src/hardware/serialport/serialport.cpp	/^Bitu CSerial::Read_MCR () {$/;"	f	class:CSerial
Read_MSR	src/hardware/serialport/serialport.cpp	/^Bitu CSerial::Read_MSR () {$/;"	f	class:CSerial
Read_RHR	src/hardware/serialport/serialport.cpp	/^Bitu CSerial::Read_RHR () {$/;"	f	class:CSerial
Read_SPR	src/hardware/serialport/serialport.cpp	/^Bitu CSerial::Read_SPR () {$/;"	f	class:CSerial
Read_Sector	src/ints/bios_disk.cpp	/^Bit8u imageDisk::Read_Sector(Bit32u head,Bit32u cylinder,Bit32u sector,void * data) {$/;"	f	class:imageDisk
Real2Phys	include/mem.h	/^INLINE PhysPt Real2Phys(RealPt pt) {$/;"	f
Real64	config.h	/^typedef         double     Real64;$/;"	t
Real64	src/platform/visualc/config.h	/^typedef         double		Real64;$/;"	t
RealGetVec	include/mem.h	/^INLINE RealPt RealGetVec(Bit8u vec) {$/;"	f
RealHandle	include/dos_inc.h	/^INLINE Bit8u RealHandle(Bit16u handle) {$/;"	f
RealMake	include/mem.h	/^INLINE RealPt RealMake(Bit16u seg,Bit16u off) {$/;"	f
RealMakeSeg	include/regs.h	/^INLINE RealPt RealMakeSeg(SegNames index,Bit16u off) {$/;"	f
RealOff	include/mem.h	/^INLINE Bit16u RealOff(RealPt pt) {$/;"	f
RealPt	include/mem.h	/^typedef Bit32u RealPt;$/;"	t
RealSeg	include/mem.h	/^INLINE Bit16u RealSeg(RealPt pt) {$/;"	f
RealSetVec	include/mem.h	/^INLINE void RealSetVec(Bit8u vec,RealPt pt) {$/;"	f
RealSetVec	include/mem.h	/^INLINE void RealSetVec(Bit8u vec,RealPt pt,RealPt &old) {$/;"	f
Reboot_Handler	src/ints/bios.cpp	/^static Bitu Reboot_Handler(void) {$/;"	f	file:
ReceiveArray	src/hardware/serialport/misc_util.cpp	/^bool TCPClientSocket::ReceiveArray(Bit8u* data, Bitu* size) {$/;"	f	class:TCPClientSocket
Receive_Line_INT_Enable_MASK	include/serialport.h	217;"	d
Red	src/libs/gui_tk/gui_tk.h	/^const RGB Red = Black|RedMask;$/;"	m	namespace:GUI::Color
RedMask	src/libs/gui_tk/gui_tk.h	/^const RGB RedMask = 0x00ff0000;$/;"	m	namespace:GUI::Color
RedMaskPos	src/ints/int10_vesa.cpp	/^	Bit8u RedMaskPos;$/;"	m	struct:MODE_INFO	file:
RedMaskSize	src/ints/int10_vesa.cpp	/^	Bit8u RedMaskSize;$/;"	m	struct:MODE_INFO	file:
RedShift	src/libs/gui_tk/gui_tk.h	/^const int RedShift = 16;$/;"	m	namespace:GUI::Color
RegTable_16	src/debug/disasm_tables.h	/^char * RegTable_16[8]=	{"ax","cx","dx","bx","sp","bp","si","di"};$/;"	v
RegTable_8	src/debug/disasm_tables.h	/^char * RegTable_8[8]=	{"al","cl","dl","bl","ah","ch","dh","bh"};$/;"	v
Register	src/hardware/tandy_sound.cpp	/^	int Register[8];	\/* registers *\/$/;"	m	struct:SN76496	file:
RegisterCache	src/hardware/adlib.h	/^typedef Bit8u RegisterCache[512];$/;"	t	namespace:Adlib
Register_Callback	include/dma.h	/^	void Register_Callback(DMA_CallBack _cb) { $/;"	f	class:DmaChannel
Release	src/cpu/core_dyn_x86/cache.h	/^	void Release(void) {$/;"	f	class:CodePageHandler
Release	src/cpu/core_dyn_x86/risc_x86.h	/^	void Release(void) {$/;"	f	class:GenReg
Release	src/cpu/core_dynrec/cache.h	/^	void Release(void) {$/;"	f	class:CodePageHandlerDynRec
Release	src/cpu/core_dynrec/save/cache.h	/^	void Release(void) {$/;"	f	class:CodePageHandlerDynRec
RemoveDir	src/dos/drive_fat.cpp	/^bool fatDrive::RemoveDir(char *dir) {$/;"	f	class:fatDrive
RemoveDir	src/dos/drive_iso.cpp	/^bool isoDrive::RemoveDir(char *dir)$/;"	f	class:isoDrive
RemoveDir	src/dos/drive_local.cpp	/^bool cdromDrive::RemoveDir(char * dir) {$/;"	f	class:cdromDrive
RemoveDir	src/dos/drive_local.cpp	/^bool localDrive::RemoveDir(char * dir) {$/;"	f	class:localDrive
RemoveDir	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::RemoveDir(char * dir) {$/;"	f	class:Virtual_Drive
RemoveDrive	src/dos/dos_mscdex.cpp	/^int CMscdex::RemoveDrive(Bit16u _drive)$/;"	f	class:CMscdex
RemoveEMSPageFrame	src/hardware/memory.cpp	/^void RemoveEMSPageFrame(void) {$/;"	f
RemoveRef	include/dos_system.h	/^	virtual Bits	RemoveRef()					{ return --refCtr; };$/;"	f	class:DOS_File
RemoveSpaces	src/dos/drive_cache.cpp	/^bool DOS_Drive_Cache::RemoveSpaces(char* str)$/;"	f	class:DOS_Drive_Cache
RemoveTrailingDot	src/dos/drive_cache.cpp	/^bool DOS_Drive_Cache::RemoveTrailingDot(char* shortname)$/;"	f	class:DOS_Drive_Cache
Rename	src/dos/drive_fat.cpp	/^bool fatDrive::Rename(char * oldname, char * newname) {$/;"	f	class:fatDrive
Rename	src/dos/drive_iso.cpp	/^bool isoDrive::Rename(char *oldname, char *newname)$/;"	f	class:isoDrive
Rename	src/dos/drive_local.cpp	/^bool cdromDrive::Rename(char * oldname,char * newname) {$/;"	f	class:cdromDrive
Rename	src/dos/drive_local.cpp	/^bool localDrive::Rename(char * oldname,char * newname) {$/;"	f	class:localDrive
Rename	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::Rename(char * oldname,char * newname) {$/;"	f	class:Virtual_Drive
RenderPal_t	include/render.h	/^} RenderPal_t;$/;"	t	typeref:struct:__anon30
Render_t	include/render.h	/^} Render_t;$/;"	t	typeref:struct:__anon32
ReplaceDrive	src/dos/dos_mscdex.cpp	/^void CMscdex::ReplaceDrive(CDROM_Interface* newCdrom, Bit8u subUnit) {$/;"	f	class:CMscdex
RepostActivity	src/gui/sdl_mapper.cpp	/^	virtual void RepostActivity(void) {$/;"	f	class:CJAxisEvent
RepostActivity	src/gui/sdl_mapper.cpp	/^	virtual void RepostActivity(void) {}$/;"	f	class:CContinuousEvent
RequireNoErr	src/gui/midi_coreaudio.h	103;"	d
RequireNoErr	src/gui/midi_coreaudio.h	22;"	d
ResBUSY	src/hardware/serialport/softmodem.h	/^	ResBUSY,ResNODIALTONE,ResNOCARRIER,$/;"	e	enum:ResTypes
ResCONNECT	src/hardware/serialport/softmodem.h	/^	ResCONNECT,ResRING,$/;"	e	enum:ResTypes
ResERROR	src/hardware/serialport/softmodem.h	/^	ResOK,ResERROR,$/;"	e	enum:ResTypes
ResNOCARRIER	src/hardware/serialport/softmodem.h	/^	ResBUSY,ResNODIALTONE,ResNOCARRIER,$/;"	e	enum:ResTypes
ResNODIALTONE	src/hardware/serialport/softmodem.h	/^	ResBUSY,ResNODIALTONE,ResNOCARRIER,$/;"	e	enum:ResTypes
ResNONE	src/hardware/serialport/softmodem.h	/^	ResNONE,$/;"	e	enum:ResTypes
ResOK	src/hardware/serialport/softmodem.h	/^	ResOK,ResERROR,$/;"	e	enum:ResTypes
ResRING	src/hardware/serialport/softmodem.h	/^	ResCONNECT,ResRING,$/;"	e	enum:ResTypes
ResTypes	src/hardware/serialport/softmodem.h	/^enum ResTypes {$/;"	g
Reserved	src/ints/int10_vesa.cpp	/^	Bit8u Reserved[206];$/;"	m	struct:MODE_INFO	file:
Reserved	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved;$/;"	m	struct:_SUB_Q_HEADER
Reserved	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved;$/;"	m	struct:_TRACK_DATA
Reserved	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved[3];$/;"	m	struct:_SUB_Q_MEDIA_CATALOG_NUMBER
Reserved0	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved0;$/;"	m	struct:_SUB_Q_TRACK_ISRC
Reserved1	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved1 : 3; $/;"	m	struct:_CDROM_READ_TOC_EX
Reserved1	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved1 : 7;$/;"	m	struct:_SUB_Q_MEDIA_CATALOG_NUMBER
Reserved1	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved1;$/;"	m	struct:_CDROM_TOC_FULL_TOC_DATA_BLOCK
Reserved1	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved1;$/;"	m	struct:_SUB_Q_TRACK_ISRC
Reserved1	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved1;$/;"	m	struct:_TRACK_DATA
Reserved10	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved10;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Reserved11	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved11;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Reserved12	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved12;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Reserved2	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved2 : 7;$/;"	m	struct:_SUB_Q_TRACK_ISRC
Reserved2	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved2;$/;"	m	struct:_CDROM_READ_TOC_EX
Reserved3	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved3 : 1;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Reserved3	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved3;$/;"	m	struct:_CDROM_READ_TOC_EX
Reserved4	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved4 : 6;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Reserved5	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved5 : 1;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Reserved6	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved6 : 3;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Reserved7	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved7;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Reserved8	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved8;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Reserved9	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Reserved9;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
ReservedMaskPos	src/ints/int10_vesa.cpp	/^	Bit8u ReservedMaskPos;$/;"	m	struct:MODE_INFO	file:
ReservedMaskSize	src/ints/int10_vesa.cpp	/^	Bit8u ReservedMaskSize;$/;"	m	struct:MODE_INFO	file:
Reserved_page	src/ints/int10_vesa.cpp	/^	Bit8u Reserved_page;$/;"	m	struct:MODE_INFO	file:
Reset	src/hardware/adlib.h	/^	void Reset(const double& time ) {$/;"	f	struct:Adlib::Timer
Reset	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::Reset(){$/;"	f	class:CSerialModem
ResetACTL	src/ints/int10_pal.cpp	/^static INLINE void ResetACTL(void) {$/;"	f	file:
ResolveHomedir	src/misc/cross.cpp	/^void Cross::ResolveHomedir(std::string & temp_line) {$/;"	f	class:Cross
RestoreCursorBackground	src/ints/mouse.cpp	/^void RestoreCursorBackground() {$/;"	f
RestoreCursorBackgroundText	src/ints/mouse.cpp	/^void RestoreCursorBackgroundText() {$/;"	f
RestoreRegisters	src/dos/dos_execute.cpp	/^static void RestoreRegisters(void) {$/;"	f	file:
RestoreVectors	src/dos/dos_classes.cpp	/^void DOS_PSP::RestoreVectors(void)$/;"	f	class:DOS_PSP
RestoreVgaRegisters	src/ints/mouse.cpp	/^void RestoreVgaRegisters() {$/;"	f
ResumeAudio	src/dos/dos_mscdex.cpp	/^bool CMscdex::ResumeAudio(Bit8u subUnit)$/;"	f	class:CMscdex
ReturnCode	src/platform/visualc/ntddscsi.h	/^  ULONG  ReturnCode; $/;"	m	struct:_SRB_IO_CONTROL
Right	src/libs/gui_tk/gui_tk.h	/^		Up, Down, Left, Right, Backspace, Tab, Backtab, Enter, Escape,$/;"	e	enum:GUI::Key::Special
Right	src/libs/gui_tk/gui_tk.h	/^enum MouseButton { NoButton, Left, Right, Middle, WheelUp, WheelDown, WheelLeft, WheelRight };$/;"	e	enum:GUI::MouseButton
Run	src/debug/debug.cpp	/^	void Run(void)$/;"	f	class:DEBUG
Run	src/dos/dos_programs.cpp	/^	void Run(void) {$/;"	f	class:BOOT
Run	src/dos/dos_programs.cpp	/^	void Run(void) {$/;"	f	class:IMGMOUNT
Run	src/dos/dos_programs.cpp	/^	void Run(void) {$/;"	f	class:INTRO
Run	src/dos/dos_programs.cpp	/^	void Run(void) {$/;"	f	class:LDGFXROM
Run	src/dos/dos_programs.cpp	/^	void Run(void) {$/;"	f	class:MEM
Run	src/dos/dos_programs.cpp	/^	void Run(void)$/;"	f	class:MOUNT
Run	src/dos/dos_programs.cpp	/^void KEYB::Run(void) {$/;"	f	class:KEYB
Run	src/dos/dos_programs.cpp	/^void LOADFIX::Run(void) $/;"	f	class:LOADFIX
Run	src/dos/dos_programs.cpp	/^void RESCAN::Run(void) $/;"	f	class:RESCAN
Run	src/hardware/ipx.cpp	/^	void Run(void)$/;"	f	class:IPXNET
Run	src/hardware/mixer.cpp	/^	void Run(void) {$/;"	f	class:MIXER
Run	src/misc/programs.cpp	/^void CONFIG::Run(void) {$/;"	f	class:CONFIG
Run	src/shell/shell.cpp	/^void DOS_Shell::Run(void) {$/;"	f	class:DOS_Shell
RunException	src/cpu/core_full/loadwrite.h	5;"	d
RunInternal	src/shell/shell.cpp	/^void DOS_Shell::RunInternal(void)$/;"	f	class:DOS_Shell
RunningProgram	src/dos/dos_execute.cpp	/^const char * RunningProgram="DOSBOX";$/;"	v
Rv	src/debug/disasm_tables.h	/^	Rb,Rw,Rv,$/;"	e	enum:__anon111
Rw	src/debug/disasm_tables.h	/^	Rb,Rw,Rv,$/;"	e	enum:__anon111
S	src/platform/visualc/ntddcdrm.h	/^  UCHAR  S;$/;"	m	struct:_CDROM_SEEK_AUDIO_MSF
S3_CLOCK	include/vga.h	54;"	d
S3_CLOCK_REF	include/vga.h	53;"	d
S3_LFB_BASE	src/ints/int10.h	23;"	d
S3_MAX_CLOCK	include/vga.h	55;"	d
S3_XGA_1024	include/vga.h	57;"	d
S3_XGA_1152	include/vga.h	58;"	d
S3_XGA_1280	include/vga.h	61;"	d
S3_XGA_16BPP	include/vga.h	65;"	d
S3_XGA_32BPP	include/vga.h	66;"	d
S3_XGA_640	include/vga.h	59;"	d
S3_XGA_800	include/vga.h	60;"	d
S3_XGA_8BPP	include/vga.h	64;"	d
S3_XGA_CMASK	include/vga.h	67;"	d
S3_XGA_WMASK	include/vga.h	62;"	d
SAA1099	src/hardware/gameblaster.cpp	/^struct SAA1099$/;"	s	file:
SAFE_MEMORY	src/hardware/memory.cpp	31;"	d	file:
SARB	src/cpu/arminst.h	463;"	d
SARB	src/cpu/instructions.h	459;"	d
SARD	src/cpu/arminst.h	489;"	d
SARD	src/cpu/instructions.h	485;"	d
SARW	src/cpu/arminst.h	476;"	d
SARW	src/cpu/instructions.h	472;"	d
SAVEIP	src/cpu/core_simple.cpp	99;"	d	file:
SAVEIP	src/cpu/core_verysimple.cpp	89;"	d	file:
SAVE_ALL_CHANNELS	src/hardware/fmopl.cpp	165;"	d	file:
SAVE_ALL_CHANNELS	src/hardware/fmopl.cpp	171;"	d	file:
SAVE_ALL_CHANNELS	src/hardware/ymf262.cpp	111;"	d	file:
SAVE_ALL_CHANNELS	src/hardware/ymf262.cpp	117;"	d	file:
SBBB	src/cpu/arminst.h	36;"	d
SBBB	src/cpu/core_normal/prefix_none.h	/^		ALIb(SBBB);break;$/;"	v
SBBB	src/cpu/core_normal/prefix_none.h	/^		RMEbGb(SBBB);break;$/;"	v
SBBB	src/cpu/core_normal/prefix_none.h	/^		RMGbEb(SBBB);break;$/;"	v
SBBB	src/cpu/core_normal/verysimple_prefix_none.h	/^		ALIb(SBBB);break;$/;"	v
SBBB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEbGb(SBBB);break;$/;"	v
SBBB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGbEb(SBBB);break;$/;"	v
SBBB	src/cpu/instructions.h	35;"	d
SBBD	src/cpu/arminst.h	151;"	d
SBBD	src/cpu/core_normal/prefix_66.h	/^		EAXId(SBBD);break;$/;"	v
SBBD	src/cpu/core_normal/prefix_66.h	/^		RMEdGd(SBBD);break;$/;"	v
SBBD	src/cpu/core_normal/prefix_66.h	/^		RMGdEd(SBBD);break;$/;"	v
SBBD	src/cpu/instructions.h	147;"	d
SBBW	src/cpu/arminst.h	95;"	d
SBBW	src/cpu/core_normal/prefix_none.h	/^		AXIw(SBBW);break;$/;"	v
SBBW	src/cpu/core_normal/prefix_none.h	/^		RMEwGw(SBBW);break;$/;"	v
SBBW	src/cpu/core_normal/prefix_none.h	/^		RMGwEw(SBBW);break;$/;"	v
SBBW	src/cpu/core_normal/verysimple_prefix_none.h	/^		AXIw(SBBW);break;$/;"	v
SBBW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEwGw(SBBW);break;$/;"	v
SBBW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGwEw(SBBW);break;$/;"	v
SBBW	src/cpu/instructions.h	91;"	d
SBLASTER	src/hardware/sblaster.cpp	/^	SBLASTER(Section* configuration):Module_base(configuration) {$/;"	f	class:SBLASTER
SBLASTER	src/hardware/sblaster.cpp	/^class SBLASTER: public Module_base {$/;"	c	file:
SBLASTER_CallBack	src/hardware/sblaster.cpp	/^static void SBLASTER_CallBack(Bitu len) {$/;"	f	file:
SBLASTER_Init	src/hardware/sblaster.cpp	/^void SBLASTER_Init(Section* sec) {$/;"	f
SBLASTER_ShutDown	src/hardware/sblaster.cpp	/^void SBLASTER_ShutDown(Section* sec) {$/;"	f
SBNUM	src/cpu/core_dynrec/save/cache.h	25;"	d
SBPP	src/gui/render_scalers.cpp	43;"	d	file:
SBPP	src/gui/render_scalers.cpp	46;"	d	file:
SBPP	src/gui/render_scalers.cpp	49;"	d	file:
SBPP	src/gui/render_scalers.cpp	52;"	d	file:
SBPP	src/gui/render_scalers.cpp	55;"	d	file:
SBPP	src/gui/render_scalers.cpp	58;"	d	file:
SBPP	src/gui/render_scalers.cpp	61;"	d	file:
SBPP	src/gui/render_scalers.cpp	64;"	d	file:
SBPP	src/gui/render_scalers.cpp	67;"	d	file:
SBPP	src/gui/render_scalers.cpp	70;"	d	file:
SBSIZE	src/cpu/core_dynrec/save/cache.h	26;"	d
SBT_1	src/hardware/sblaster.cpp	/^enum SB_TYPES {SBT_NONE=0,SBT_1=1,SBT_PRO1=2,SBT_2=3,SBT_PRO2=4,SBT_16=6};$/;"	e	enum:SB_TYPES	file:
SBT_16	src/hardware/sblaster.cpp	/^enum SB_TYPES {SBT_NONE=0,SBT_1=1,SBT_PRO1=2,SBT_2=3,SBT_PRO2=4,SBT_16=6};$/;"	e	enum:SB_TYPES	file:
SBT_2	src/hardware/sblaster.cpp	/^enum SB_TYPES {SBT_NONE=0,SBT_1=1,SBT_PRO1=2,SBT_2=3,SBT_PRO2=4,SBT_16=6};$/;"	e	enum:SB_TYPES	file:
SBT_NONE	src/hardware/sblaster.cpp	/^enum SB_TYPES {SBT_NONE=0,SBT_1=1,SBT_PRO1=2,SBT_2=3,SBT_PRO2=4,SBT_16=6};$/;"	e	enum:SB_TYPES	file:
SBT_PRO1	src/hardware/sblaster.cpp	/^enum SB_TYPES {SBT_NONE=0,SBT_1=1,SBT_PRO1=2,SBT_2=3,SBT_PRO2=4,SBT_16=6};$/;"	e	enum:SB_TYPES	file:
SBT_PRO2	src/hardware/sblaster.cpp	/^enum SB_TYPES {SBT_NONE=0,SBT_1=1,SBT_PRO1=2,SBT_2=3,SBT_PRO2=4,SBT_16=6};$/;"	e	enum:SB_TYPES	file:
SB_BUF_SIZE	src/hardware/sblaster.cpp	61;"	d	file:
SB_INFO	src/hardware/sblaster.cpp	/^struct SB_INFO {$/;"	s	file:
SB_IRQS	src/hardware/sblaster.cpp	/^enum SB_IRQS {SB_IRQ_8,SB_IRQ_16,SB_IRQ_MPU};$/;"	g	file:
SB_IRQ_16	src/hardware/sblaster.cpp	/^enum SB_IRQS {SB_IRQ_8,SB_IRQ_16,SB_IRQ_MPU};$/;"	e	enum:SB_IRQS	file:
SB_IRQ_8	src/hardware/sblaster.cpp	/^enum SB_IRQS {SB_IRQ_8,SB_IRQ_16,SB_IRQ_MPU};$/;"	e	enum:SB_IRQS	file:
SB_IRQ_MPU	src/hardware/sblaster.cpp	/^enum SB_IRQS {SB_IRQ_8,SB_IRQ_16,SB_IRQ_MPU};$/;"	e	enum:SB_IRQS	file:
SB_PIC_EVENTS	src/hardware/sblaster.cpp	39;"	d	file:
SB_RaiseIRQ	src/hardware/sblaster.cpp	/^static INLINE void SB_RaiseIRQ(SB_IRQS type) {$/;"	f	file:
SB_SH	src/hardware/sblaster.cpp	62;"	d	file:
SB_SH_MASK	src/hardware/sblaster.cpp	63;"	d	file:
SB_TYPES	src/hardware/sblaster.cpp	/^enum SB_TYPES {SBT_NONE=0,SBT_1=1,SBT_PRO1=2,SBT_2=3,SBT_PRO2=4,SBT_16=6};$/;"	g	file:
SC	src/hardware/fmopl.cpp	332;"	d	file:
SC	src/hardware/fmopl.cpp	376;"	d	file:
SC	src/hardware/fmopl.cpp	386;"	d	file:
SC	src/hardware/fmopl.cpp	391;"	d	file:
SC	src/hardware/fmopl.cpp	502;"	d	file:
SC	src/hardware/fmopl.cpp	508;"	d	file:
SC	src/hardware/ymf262.cpp	282;"	d	file:
SC	src/hardware/ymf262.cpp	326;"	d	file:
SC	src/hardware/ymf262.cpp	336;"	d	file:
SC	src/hardware/ymf262.cpp	341;"	d	file:
SC	src/hardware/ymf262.cpp	452;"	d	file:
SC	src/hardware/ymf262.cpp	458;"	d	file:
SCALE	src/debug/debug_disasm.cpp	126;"	d	file:
SCALER_MAXHEIGHT	src/gui/render_scalers.h	24;"	d
SCALER_MAXWIDTH	src/gui/render_scalers.h	23;"	d
SCHKPAL	src/gui/render_8.h	33;"	d
SCHKPAL	src/gui/render_9.h	37;"	d
SCSI_ADAPTER_BUS_INFO	src/platform/visualc/ntddscsi.h	/^} SCSI_ADAPTER_BUS_INFO, *PSCSI_ADAPTER_BUS_INFO;$/;"	t	typeref:struct:_SCSI_ADAPTER_BUS_INFO
SCSI_ADDRESS	src/platform/visualc/ntddscsi.h	/^} SCSI_ADDRESS, *PSCSI_ADDRESS;$/;"	t	typeref:struct:_SCSI_ADDRESS
SCSI_BUS_DATA	src/platform/visualc/ntddscsi.h	/^}SCSI_BUS_DATA, *PSCSI_BUS_DATA;$/;"	t	typeref:struct:_SCSI_BUS_DATA
SCSI_CHANGE_DEF	src/dos/scsidefs.h	52;"	d
SCSI_COMPARE	src/dos/scsidefs.h	53;"	d
SCSI_COMPARE	src/dos/scsidefs.h	72;"	d
SCSI_COPY	src/dos/scsidefs.h	54;"	d
SCSI_COP_VERIFY	src/dos/scsidefs.h	55;"	d
SCSI_ERASE	src/dos/scsidefs.h	105;"	d
SCSI_EXCHMEDIUM	src/dos/scsidefs.h	181;"	d
SCSI_FORMAT	src/dos/scsidefs.h	73;"	d
SCSI_GETDBSTAT	src/dos/scsidefs.h	167;"	d
SCSI_GETWINDOW	src/dos/scsidefs.h	168;"	d
SCSI_GET_MSG_10	src/dos/scsidefs.h	191;"	d
SCSI_GET_MSG_12	src/dos/scsidefs.h	192;"	d
SCSI_GET_MSG_6	src/dos/scsidefs.h	190;"	d
SCSI_INITELSTAT	src/dos/scsidefs.h	182;"	d
SCSI_INQUIRY	src/dos/scsidefs.h	56;"	d
SCSI_INQUIRY_DATA	src/platform/visualc/ntddscsi.h	/^} SCSI_INQUIRY_DATA, *PSCSI_INQUIRY_DATA;$/;"	t	typeref:struct:_SCSI_INQUIRY_DATA
SCSI_IOCTL_DATA_IN	src/platform/visualc/ntddscsi.h	151;"	d
SCSI_IOCTL_DATA_OUT	src/platform/visualc/ntddscsi.h	150;"	d
SCSI_IOCTL_DATA_UNSPECIFIED	src/platform/visualc/ntddscsi.h	152;"	d
SCSI_LCK_UN_CAC	src/dos/scsidefs.h	74;"	d
SCSI_LOAD_UN	src/dos/scsidefs.h	106;"	d
SCSI_LOCATE	src/dos/scsidefs.h	107;"	d
SCSI_LOG_SELECT	src/dos/scsidefs.h	57;"	d
SCSI_LOG_SENSE	src/dos/scsidefs.h	58;"	d
SCSI_MEDIUM_SCN	src/dos/scsidefs.h	135;"	d
SCSI_MED_REMOVL	src/dos/scsidefs.h	76;"	d
SCSI_MODE_SEL10	src/dos/scsidefs.h	60;"	d
SCSI_MODE_SEL6	src/dos/scsidefs.h	59;"	d
SCSI_MODE_SEN10	src/dos/scsidefs.h	62;"	d
SCSI_MODE_SEN6	src/dos/scsidefs.h	61;"	d
SCSI_OBJECTPOS	src/dos/scsidefs.h	169;"	d
SCSI_PASS_THROUGH	src/platform/visualc/ntddscsi.h	/^} SCSI_PASS_THROUGH, *PSCSI_PASS_THROUGH;$/;"	t	typeref:struct:_SCSI_PASS_THROUGH
SCSI_PASS_THROUGH_DIRECT	src/platform/visualc/ntddscsi.h	/^} SCSI_PASS_THROUGH_DIRECT, *PSCSI_PASS_THROUGH_DIRECT;$/;"	t	typeref:struct:_SCSI_PASS_THROUGH_DIRECT
SCSI_PLAYAUDMSF	src/dos/scsidefs.h	155;"	d
SCSI_PLAYAUD_10	src/dos/scsidefs.h	153;"	d
SCSI_PLAYAUD_12	src/dos/scsidefs.h	154;"	d
SCSI_PLAYA_TKIN	src/dos/scsidefs.h	156;"	d
SCSI_PLYTKREL10	src/dos/scsidefs.h	157;"	d
SCSI_PLYTKREL12	src/dos/scsidefs.h	158;"	d
SCSI_POSTOELEM	src/dos/scsidefs.h	183;"	d
SCSI_PREFETCH	src/dos/scsidefs.h	75;"	d
SCSI_PRINT	src/dos/scsidefs.h	121;"	d
SCSI_RCV_DIAG	src/dos/scsidefs.h	83;"	d
SCSI_RD_BLK_LIM	src/dos/scsidefs.h	108;"	d
SCSI_RD_CAPAC	src/dos/scsidefs.h	79;"	d
SCSI_RD_DEFECT	src/dos/scsidefs.h	80;"	d
SCSI_READ10	src/dos/scsidefs.h	78;"	d
SCSI_READ6	src/dos/scsidefs.h	77;"	d
SCSI_READCDCAP	src/dos/scsidefs.h	159;"	d
SCSI_READHEADER	src/dos/scsidefs.h	160;"	d
SCSI_READ_BUFF	src/dos/scsidefs.h	63;"	d
SCSI_READ_LONG	src/dos/scsidefs.h	81;"	d
SCSI_READ_POS	src/dos/scsidefs.h	109;"	d
SCSI_READ_REV	src/dos/scsidefs.h	110;"	d
SCSI_READ_TOC	src/dos/scsidefs.h	162;"	d
SCSI_REASS_BLK	src/dos/scsidefs.h	82;"	d
SCSI_RECEIVE	src/dos/scsidefs.h	129;"	d
SCSI_REC_BF_DAT	src/dos/scsidefs.h	111;"	d
SCSI_RELEASE	src/dos/scsidefs.h	84;"	d
SCSI_REQ_SENSE	src/dos/scsidefs.h	64;"	d
SCSI_REQ_VE_ADD	src/dos/scsidefs.h	184;"	d
SCSI_RESERVE	src/dos/scsidefs.h	112;"	d
SCSI_REWIND	src/dos/scsidefs.h	113;"	d
SCSI_REZERO	src/dos/scsidefs.h	85;"	d
SCSI_SCAN	src/dos/scsidefs.h	170;"	d
SCSI_SEEK10	src/dos/scsidefs.h	90;"	d
SCSI_SEEK6	src/dos/scsidefs.h	89;"	d
SCSI_SEND	src/dos/scsidefs.h	130;"	d
SCSI_SENDVOLTAG	src/dos/scsidefs.h	185;"	d
SCSI_SEND_DIAG	src/dos/scsidefs.h	65;"	d
SCSI_SEND_DIAG	src/dos/scsidefs.h	91;"	d
SCSI_SETWINDOW	src/dos/scsidefs.h	171;"	d
SCSI_SET_LIMIT	src/dos/scsidefs.h	92;"	d
SCSI_SET_LIM_10	src/dos/scsidefs.h	142;"	d
SCSI_SET_LIM_12	src/dos/scsidefs.h	143;"	d
SCSI_SLEW_PNT	src/dos/scsidefs.h	122;"	d
SCSI_SND_MSG_10	src/dos/scsidefs.h	194;"	d
SCSI_SND_MSG_12	src/dos/scsidefs.h	195;"	d
SCSI_SND_MSG_6	src/dos/scsidefs.h	193;"	d
SCSI_SPACE	src/dos/scsidefs.h	114;"	d
SCSI_SRCHDATE10	src/dos/scsidefs.h	136;"	d
SCSI_SRCHDATE12	src/dos/scsidefs.h	137;"	d
SCSI_SRCHDATH10	src/dos/scsidefs.h	138;"	d
SCSI_SRCHDATH12	src/dos/scsidefs.h	139;"	d
SCSI_SRCHDATL10	src/dos/scsidefs.h	140;"	d
SCSI_SRCHDATL12	src/dos/scsidefs.h	141;"	d
SCSI_SRCH_DAT_E	src/dos/scsidefs.h	86;"	d
SCSI_SRCH_DAT_H	src/dos/scsidefs.h	87;"	d
SCSI_SRCH_DAT_L	src/dos/scsidefs.h	88;"	d
SCSI_START_STP	src/dos/scsidefs.h	93;"	d
SCSI_STOP_PNT	src/dos/scsidefs.h	123;"	d
SCSI_SUBCHANNEL	src/dos/scsidefs.h	161;"	d
SCSI_SYNC_BUFF	src/dos/scsidefs.h	124;"	d
SCSI_SYNC_CACHE	src/dos/scsidefs.h	94;"	d
SCSI_TST_U_RDY	src/dos/scsidefs.h	66;"	d
SCSI_UpdateBlk	src/dos/scsidefs.h	176;"	d
SCSI_VERIFY	src/dos/scsidefs.h	95;"	d
SCSI_VERIFY10	src/dos/scsidefs.h	144;"	d
SCSI_VERIFY12	src/dos/scsidefs.h	145;"	d
SCSI_VERIFY_T	src/dos/scsidefs.h	115;"	d
SCSI_WRITE10	src/dos/scsidefs.h	97;"	d
SCSI_WRITE12	src/dos/scsidefs.h	146;"	d
SCSI_WRITE6	src/dos/scsidefs.h	96;"	d
SCSI_WRITE_BUFF	src/dos/scsidefs.h	67;"	d
SCSI_WRITE_LONG	src/dos/scsidefs.h	99;"	d
SCSI_WRITE_SAME	src/dos/scsidefs.h	100;"	d
SCSI_WRT_FILE	src/dos/scsidefs.h	116;"	d
SCSI_WRT_VER10	src/dos/scsidefs.h	147;"	d
SCSI_WRT_VER12	src/dos/scsidefs.h	148;"	d
SCSI_WRT_VERIFY	src/dos/scsidefs.h	98;"	d
SC_ABORT_SRB	src/dos/wnaspi32.h	60;"	d
SC_EXEC_SCSI_CMD	src/dos/wnaspi32.h	59;"	d
SC_GETSET_TIMEOUTS	src/dos/wnaspi32.h	65;"	d
SC_GET_DEV_TYPE	src/dos/wnaspi32.h	58;"	d
SC_GET_DISK_INFO	src/dos/wnaspi32.h	63;"	d
SC_HA_INQUIRY	src/dos/wnaspi32.h	57;"	d
SC_RESCAN_SCSI_BUS	src/dos/wnaspi32.h	64;"	d
SC_RESET_DEV	src/dos/wnaspi32.h	61;"	d
SC_SET_HA_PARMS	src/dos/wnaspi32.h	62;"	d
SCodeViewData	src/debug/debug.cpp	/^struct SCodeViewData {	$/;"	s	file:
SDATATYPE	src/gui/render_8.h	30;"	d
SDATATYPE	src/gui/render_9.h	34;"	d
SDLNETWRAPPER_H	src/hardware/serialport/misc_util.h	2;"	d
SDLNetInited	src/dosbox.cpp	/^bool SDLNetInited;$/;"	v
SDL_Block	src/gui/sdlmain.h	/^struct SDL_Block {$/;"	s
SDriveInfo	src/dos/dos_mscdex.cpp	/^	typedef struct SDriveInfo {$/;"	s	class:CMscdex	file:
SENSE_DATA_FMT	src/dos/scsidefs.h	/^} SENSE_DATA_FMT;$/;"	t	typeref:struct:__anon123
SENSE_EOM	src/dos/scsidefs.h	241;"	d
SENSE_FILEMRK	src/dos/scsidefs.h	240;"	d
SENSE_ILI	src/dos/scsidefs.h	242;"	d
SENSE_LEN	src/dos/wnaspi32.h	40;"	d
SENSE_VALID	src/dos/scsidefs.h	239;"	d
SEQ_MIDIPUTC	src/gui/midi_oss.h	20;"	d
SEQ_REGS	src/ints/int10_modes.cpp	34;"	d	file:
SERIALPORTS	src/hardware/serialport/serialport.cpp	/^	SERIALPORTS (Section * configuration):Module_base (configuration) {$/;"	f	class:SERIALPORTS
SERIALPORTS	src/hardware/serialport/serialport.cpp	/^class SERIALPORTS:public Module_base {$/;"	c	file:
SERIAL_BASE_EVENT_COUNT	include/serialport.h	96;"	d
SERIAL_DEBUG	include/serialport.h	24;"	d
SERIAL_Destroy	src/hardware/serialport/serialport.cpp	/^void SERIAL_Destroy (Section * sec) {$/;"	f	class:SERIALPORTS
SERIAL_ERRMSG_EVENT	include/serialport.h	89;"	d
SERIAL_Init	src/hardware/serialport/serialport.cpp	/^void SERIAL_Init (Section * sec) {$/;"	f	class:SERIALPORTS
SERIAL_MODEM_EVENT_COUNT	src/hardware/serialport/softmodem.h	41;"	d
SERIAL_NULLMODEM_DTR_EVENT	src/hardware/serialport/nullmodem.h	34;"	d
SERIAL_NULLMODEM_EVENT_COUNT	src/hardware/serialport/nullmodem.h	35;"	d
SERIAL_POLLING_EVENT	include/serialport.h	93;"	d
SERIAL_RX_EVENT	include/serialport.h	92;"	d
SERIAL_Read	src/hardware/serialport/serialport.cpp	/^static Bitu SERIAL_Read (Bitu port, Bitu iolen) {$/;"	f	file:
SERIAL_SERVER_POLLING_EVENT	src/hardware/serialport/nullmodem.h	32;"	d
SERIAL_THR_EVENT	include/serialport.h	94;"	d
SERIAL_THR_LOOPBACK_EVENT	include/serialport.h	88;"	d
SERIAL_TX_EVENT	include/serialport.h	91;"	d
SERIAL_TX_LOOPBACK_EVENT	include/serialport.h	87;"	d
SERIAL_TX_REDUCTION	src/hardware/serialport/nullmodem.h	33;"	d
SERIAL_Write	src/hardware/serialport/serialport.cpp	/^static void SERIAL_Write (Bitu port, Bitu val, Bitu) {$/;"	f	file:
SERROR_CURRENT	src/dos/scsidefs.h	233;"	d
SERROR_DEFERED	src/dos/scsidefs.h	234;"	d
SETCF	src/cpu/flags.cpp	493;"	d	file:
SETFLAGBIT	include/regs.h	47;"	d
SETFLAGSb	src/cpu/lazyflags.h	60;"	d
SETFLAGSd	src/cpu/lazyflags.h	73;"	d
SETFLAGSw	src/cpu/lazyflags.h	67;"	d
SETPROVOL	src/hardware/sblaster.cpp	1076;"	d	file:
SETUP	include/callback.h	/^	enum {NONE,SETUP,SETUPAT} m_type;$/;"	e	enum:CALLBACK_HandlerObject::__anon3
SETUPAT	include/callback.h	/^	enum {NONE,SETUP,SETUPAT} m_type;$/;"	e	enum:CALLBACK_HandlerObject::__anon3
SET_FLAG	src/cpu/flags.cpp	495;"	d	file:
SET_RESULT	src/ints/xms.cpp	/^INLINE void SET_RESULT(Bitu res,bool touch_bl_on_succes=true) {$/;"	f
SETcc	src/cpu/core_normal/support.h	73;"	d
SHELL_Cmd	include/shell.h	/^struct SHELL_Cmd {$/;"	s
SHELL_Init	src/shell/shell.cpp	/^void SHELL_Init() {$/;"	f
SHELL_ProgramStart	src/shell/shell.cpp	/^static void SHELL_ProgramStart(Program * * make) {$/;"	f	file:
SHIFT_RCL	src/cpu/core_dyn_x86.cpp	/^	SHIFT_RCL,SHIFT_RCR,$/;"	e	enum:ShiftOps	file:
SHIFT_RCL	src/cpu/core_dynrec/decoder_basic.h	/^	SHIFT_RCL,SHIFT_RCR,$/;"	e	enum:ShiftOps
SHIFT_RCL	src/cpu/core_dynrec/save/decoder_basic.h	/^	SHIFT_RCL,SHIFT_RCR,$/;"	e	enum:ShiftOps
SHIFT_RCR	src/cpu/core_dyn_x86.cpp	/^	SHIFT_RCL,SHIFT_RCR,$/;"	e	enum:ShiftOps	file:
SHIFT_RCR	src/cpu/core_dynrec/decoder_basic.h	/^	SHIFT_RCL,SHIFT_RCR,$/;"	e	enum:ShiftOps
SHIFT_RCR	src/cpu/core_dynrec/save/decoder_basic.h	/^	SHIFT_RCL,SHIFT_RCR,$/;"	e	enum:ShiftOps
SHIFT_ROL	src/cpu/core_dyn_x86.cpp	/^	SHIFT_ROL,SHIFT_ROR,$/;"	e	enum:ShiftOps	file:
SHIFT_ROL	src/cpu/core_dynrec/decoder_basic.h	/^	SHIFT_ROL,SHIFT_ROR,$/;"	e	enum:ShiftOps
SHIFT_ROL	src/cpu/core_dynrec/save/decoder_basic.h	/^	SHIFT_ROL,SHIFT_ROR,$/;"	e	enum:ShiftOps
SHIFT_ROR	src/cpu/core_dyn_x86.cpp	/^	SHIFT_ROL,SHIFT_ROR,$/;"	e	enum:ShiftOps	file:
SHIFT_ROR	src/cpu/core_dynrec/decoder_basic.h	/^	SHIFT_ROL,SHIFT_ROR,$/;"	e	enum:ShiftOps
SHIFT_ROR	src/cpu/core_dynrec/save/decoder_basic.h	/^	SHIFT_ROL,SHIFT_ROR,$/;"	e	enum:ShiftOps
SHIFT_SAL	src/cpu/core_dyn_x86.cpp	/^	SHIFT_SAL,SHIFT_SAR,$/;"	e	enum:ShiftOps	file:
SHIFT_SAL	src/cpu/core_dynrec/decoder_basic.h	/^	SHIFT_SAL,SHIFT_SAR,$/;"	e	enum:ShiftOps
SHIFT_SAL	src/cpu/core_dynrec/save/decoder_basic.h	/^	SHIFT_SAL,SHIFT_SAR,$/;"	e	enum:ShiftOps
SHIFT_SAR	src/cpu/core_dyn_x86.cpp	/^	SHIFT_SAL,SHIFT_SAR,$/;"	e	enum:ShiftOps	file:
SHIFT_SAR	src/cpu/core_dynrec/decoder_basic.h	/^	SHIFT_SAL,SHIFT_SAR,$/;"	e	enum:ShiftOps
SHIFT_SAR	src/cpu/core_dynrec/save/decoder_basic.h	/^	SHIFT_SAL,SHIFT_SAR,$/;"	e	enum:ShiftOps
SHIFT_SHL	src/cpu/core_dyn_x86.cpp	/^	SHIFT_SHL,SHIFT_SHR,$/;"	e	enum:ShiftOps	file:
SHIFT_SHL	src/cpu/core_dynrec/decoder_basic.h	/^	SHIFT_SHL,SHIFT_SHR,$/;"	e	enum:ShiftOps
SHIFT_SHL	src/cpu/core_dynrec/save/decoder_basic.h	/^	SHIFT_SHL,SHIFT_SHR,$/;"	e	enum:ShiftOps
SHIFT_SHR	src/cpu/core_dyn_x86.cpp	/^	SHIFT_SHL,SHIFT_SHR,$/;"	e	enum:ShiftOps	file:
SHIFT_SHR	src/cpu/core_dynrec/decoder_basic.h	/^	SHIFT_SHL,SHIFT_SHR,$/;"	e	enum:ShiftOps
SHIFT_SHR	src/cpu/core_dynrec/save/decoder_basic.h	/^	SHIFT_SHL,SHIFT_SHR,$/;"	e	enum:ShiftOps
SHLB	src/cpu/arminst.h	419;"	d
SHLB	src/cpu/instructions.h	415;"	d
SHLD	src/cpu/arminst.h	433;"	d
SHLD	src/cpu/instructions.h	429;"	d
SHLW	src/cpu/arminst.h	426;"	d
SHLW	src/cpu/instructions.h	422;"	d
SHRB	src/cpu/arminst.h	441;"	d
SHRB	src/cpu/instructions.h	437;"	d
SHRD	src/cpu/arminst.h	455;"	d
SHRD	src/cpu/instructions.h	451;"	d
SHRW	src/cpu/arminst.h	448;"	d
SHRW	src/cpu/instructions.h	444;"	d
SIB	src/cpu/core_full/ea_lookup.h	114;"	d
SIBIndex	src/cpu/core_normal/table_ea.h	/^static Bit32u * SIBIndex[8]= { &reg_eax,&reg_ecx,&reg_edx,&reg_ebx,&SIBZero,&reg_ebp,&reg_esi,&reg_edi };$/;"	v
SIBZero	src/cpu/core_normal/table_ea.h	/^static Bit32u SIBZero=0;$/;"	v
SIN_BITS	src/hardware/fmopl.cpp	102;"	d	file:
SIN_BITS	src/hardware/ymf262.cpp	83;"	d	file:
SIN_LEN	src/hardware/fmopl.cpp	103;"	d	file:
SIN_LEN	src/hardware/ymf262.cpp	84;"	d	file:
SIN_MASK	src/hardware/fmopl.cpp	104;"	d	file:
SIN_MASK	src/hardware/ymf262.cpp	85;"	d	file:
SIZEOF_INT_P	config.h	181;"	d
SIZEOF_UNSIGNED_CHAR	config.h	184;"	d
SIZEOF_UNSIGNED_INT	config.h	187;"	d
SIZEOF_UNSIGNED_LONG	config.h	190;"	d
SIZEOF_UNSIGNED_LONG_LONG	config.h	193;"	d
SIZEOF_UNSIGNED_SHORT	config.h	196;"	d
SLDT	include/cpu.h	/^	Bitu SLDT(void)	{$/;"	f	class:GDTDescriptorTable
SLOT	src/hardware/fmopl.cpp	/^	OPL_SLOT SLOT[2];$/;"	m	struct:__anon154	file:
SLOT	src/hardware/ymf262.cpp	/^	OPL3_SLOT SLOT[2];$/;"	m	struct:__anon191	file:
SLOT1	src/hardware/fmopl.cpp	111;"	d	file:
SLOT1	src/hardware/ymf262.cpp	92;"	d	file:
SLOT2	src/hardware/fmopl.cpp	112;"	d	file:
SLOT2	src/hardware/ymf262.cpp	93;"	d	file:
SLOT7_1	src/hardware/fmopl.cpp	/^static OPL_SLOT *SLOT7_1, *SLOT7_2, *SLOT8_1, *SLOT8_2;$/;"	v	file:
SLOT7_1	src/hardware/ymf262.cpp	/^static OPL3_SLOT *SLOT7_1,*SLOT7_2,*SLOT8_1,*SLOT8_2;$/;"	v	file:
SLOT7_2	src/hardware/fmopl.cpp	/^static OPL_SLOT *SLOT7_1, *SLOT7_2, *SLOT8_1, *SLOT8_2;$/;"	v	file:
SLOT7_2	src/hardware/ymf262.cpp	/^static OPL3_SLOT *SLOT7_1,*SLOT7_2,*SLOT8_1,*SLOT8_2;$/;"	v	file:
SLOT8_1	src/hardware/fmopl.cpp	/^static OPL_SLOT *SLOT7_1, *SLOT7_2, *SLOT8_1, *SLOT8_2;$/;"	v	file:
SLOT8_1	src/hardware/ymf262.cpp	/^static OPL3_SLOT *SLOT7_1,*SLOT7_2,*SLOT8_1,*SLOT8_2;$/;"	v	file:
SLOT8_2	src/hardware/fmopl.cpp	/^static OPL_SLOT *SLOT7_1, *SLOT7_2, *SLOT8_1, *SLOT8_2;$/;"	v	file:
SLOT8_2	src/hardware/ymf262.cpp	/^static OPL3_SLOT *SLOT7_1,*SLOT7_2,*SLOT8_1,*SLOT8_2;$/;"	v	file:
SMC_CURRENT_BLOCK	src/cpu/core_dyn_x86.cpp	128;"	d	file:
SMC_CURRENT_BLOCK	src/cpu/core_dynrec.cpp	123;"	d	file:
SMSF	src/dos/cdrom.h	/^typedef struct SMSF {$/;"	s
SN76496	src/hardware/tandy_sound.cpp	/^struct SN76496$/;"	s	file:
SN76496Update	src/hardware/tandy_sound.cpp	/^static void SN76496Update(Bitu length)$/;"	f	file:
SN76496Write	src/hardware/tandy_sound.cpp	/^static void SN76496Write(Bitu port,Bitu data,Bitu iolen) {$/;"	f	file:
SN76496_set_clock	src/hardware/tandy_sound.cpp	/^static void SN76496_set_clock(int clock)$/;"	f	file:
SN76496_set_gain	src/hardware/tandy_sound.cpp	/^static void SN76496_set_gain(int gain)$/;"	f	file:
SOCKET	src/hardware/serialport/misc_util.h	27;"	d
SOCKETTABLESIZE	include/ipxserver.h	35;"	d
SOCKTABLESIZE	src/hardware/ipx.cpp	45;"	d	file:
SOP_DEC	src/cpu/core_dyn_x86.cpp	/^	SOP_INC,SOP_DEC,$/;"	e	enum:SingleOps	file:
SOP_DEC	src/cpu/core_dynrec/decoder_basic.h	/^	SOP_INC,SOP_DEC,$/;"	e	enum:SingleOps
SOP_DEC	src/cpu/core_dynrec/save/decoder_basic.h	/^	SOP_INC,SOP_DEC,$/;"	e	enum:SingleOps
SOP_INC	src/cpu/core_dyn_x86.cpp	/^	SOP_INC,SOP_DEC,$/;"	e	enum:SingleOps	file:
SOP_INC	src/cpu/core_dynrec/decoder_basic.h	/^	SOP_INC,SOP_DEC,$/;"	e	enum:SingleOps
SOP_INC	src/cpu/core_dynrec/save/decoder_basic.h	/^	SOP_INC,SOP_DEC,$/;"	e	enum:SingleOps
SOP_NEG	src/cpu/core_dyn_x86.cpp	/^	SOP_NOT,SOP_NEG,$/;"	e	enum:SingleOps	file:
SOP_NEG	src/cpu/core_dynrec/decoder_basic.h	/^	SOP_NOT,SOP_NEG,$/;"	e	enum:SingleOps
SOP_NEG	src/cpu/core_dynrec/save/decoder_basic.h	/^	SOP_NOT,SOP_NEG,$/;"	e	enum:SingleOps
SOP_NOT	src/cpu/core_dyn_x86.cpp	/^	SOP_NOT,SOP_NEG,$/;"	e	enum:SingleOps	file:
SOP_NOT	src/cpu/core_dynrec/decoder_basic.h	/^	SOP_NOT,SOP_NEG,$/;"	e	enum:SingleOps
SOP_NOT	src/cpu/core_dynrec/save/decoder_basic.h	/^	SOP_NOT,SOP_NEG,$/;"	e	enum:SingleOps
SPKR_ENTRIES	src/hardware/pcspeaker.cpp	33;"	d	file:
SPKR_MODES	src/hardware/pcspeaker.cpp	/^enum SPKR_MODES {$/;"	g	file:
SPKR_OFF	src/hardware/pcspeaker.cpp	/^	SPKR_OFF,SPKR_ON,SPKR_PIT_OFF,SPKR_PIT_ON$/;"	e	enum:SPKR_MODES	file:
SPKR_ON	src/hardware/pcspeaker.cpp	/^	SPKR_OFF,SPKR_ON,SPKR_PIT_OFF,SPKR_PIT_ON$/;"	e	enum:SPKR_MODES	file:
SPKR_PIT_OFF	src/hardware/pcspeaker.cpp	/^	SPKR_OFF,SPKR_ON,SPKR_PIT_OFF,SPKR_PIT_ON$/;"	e	enum:SPKR_MODES	file:
SPKR_PIT_ON	src/hardware/pcspeaker.cpp	/^	SPKR_OFF,SPKR_ON,SPKR_PIT_OFF,SPKR_PIT_ON$/;"	e	enum:SPKR_MODES	file:
SPKR_SPEED	src/hardware/pcspeaker.cpp	36;"	d	file:
SPKR_VOLUME	src/hardware/pcspeaker.cpp	34;"	d	file:
SPR	include/serialport.h	/^	Bit8u SPR;	\/\/	r\/w				Scratchpad Register$/;"	m	class:CSerial
SPR_OFFSET	include/serialport.h	324;"	d
SRB	src/dos/wnaspi32.h	/^} SRB, *PSRB, FAR *LPSRB;$/;"	t	typeref:struct:__anon134
SRB_Abort	src/dos/wnaspi32.h	/^SRB_Abort, *PSRB_Abort, FAR *LPSRB_Abort;$/;"	t	typeref:struct:__anon127
SRB_BufLen	src/dos/wnaspi32.h	/^    DWORD       SRB_BufLen;                     \/\/ 0C\/012 Data Allocation Length$/;"	m	struct:__anon126
SRB_BufPointer	src/dos/wnaspi32.h	/^    BYTE        FAR *SRB_BufPointer;            \/\/ 10\/016 Data Buffer Pointer$/;"	m	struct:__anon126
SRB_BusDeviceReset	src/dos/wnaspi32.h	/^SRB_BusDeviceReset, *PSRB_BusDeviceReset, FAR *LPSRB_BusDeviceReset;$/;"	t	typeref:struct:__anon128
SRB_CDBLen	src/dos/wnaspi32.h	/^    BYTE        SRB_CDBLen;                     \/\/ 15\/021 CDB Length$/;"	m	struct:__anon126
SRB_Cmd	src/dos/wnaspi32.h	/^    BYTE        SRB_Cmd;                        \/\/ 00\/000 ASPI command code = SC_ABORT_SRB$/;"	m	struct:__anon127
SRB_Cmd	src/dos/wnaspi32.h	/^    BYTE        SRB_Cmd;                        \/\/ 00\/000 ASPI command code = SC_EXEC_SCSI_CMD$/;"	m	struct:__anon126
SRB_Cmd	src/dos/wnaspi32.h	/^    BYTE        SRB_Cmd;                        \/\/ 00\/000 ASPI command code = SC_GETSET_TIMEOUTS$/;"	m	struct:__anon131
SRB_Cmd	src/dos/wnaspi32.h	/^    BYTE        SRB_Cmd;                        \/\/ 00\/000 ASPI command code = SC_GET_DEV_TYPE$/;"	m	struct:__anon125
SRB_Cmd	src/dos/wnaspi32.h	/^    BYTE        SRB_Cmd;                        \/\/ 00\/000 ASPI command code = SC_GET_DISK_INFO$/;"	m	struct:__anon129
SRB_Cmd	src/dos/wnaspi32.h	/^    BYTE        SRB_Cmd;                        \/\/ 00\/000 ASPI command code = SC_HA_INQUIRY$/;"	m	struct:__anon124
SRB_Cmd	src/dos/wnaspi32.h	/^    BYTE        SRB_Cmd;                        \/\/ 00\/000 ASPI command code = SC_RESCAN_SCSI_BUS$/;"	m	struct:__anon130
SRB_Cmd	src/dos/wnaspi32.h	/^    BYTE        SRB_Cmd;                        \/\/ 00\/000 ASPI command code = SC_RESET_DEV$/;"	m	struct:__anon128
SRB_Cmd	src/dos/wnaspi32.h	/^  BYTE      SRB_Cmd;$/;"	m	struct:__anon134
SRB_DIR_IN	src/dos/wnaspi32.h	44;"	d
SRB_DIR_OUT	src/dos/wnaspi32.h	45;"	d
SRB_DIR_SCSI	src/dos/wnaspi32.h	41;"	d
SRB_DeviceType	src/dos/wnaspi32.h	/^    BYTE        SRB_DeviceType;                 \/\/ 0A\/010 Target's peripheral device type$/;"	m	struct:__anon125
SRB_DriveFlags	src/dos/wnaspi32.h	/^    BYTE        SRB_DriveFlags;                 \/\/ 0A\/010 Driver flags$/;"	m	struct:__anon129
SRB_ENABLE_RESIDUAL_COUNT	src/dos/wnaspi32.h	43;"	d
SRB_EVENT_NOTIFY	src/dos/wnaspi32.h	46;"	d
SRB_ExecSCSICmd	src/dos/wnaspi32.h	/^SRB_ExecSCSICmd, *PSRB_ExecSCSICmd, FAR *LPSRB_ExecSCSICmd;$/;"	t	typeref:struct:__anon126
SRB_Flags	src/dos/wnaspi32.h	/^    BYTE        SRB_Flags;                      \/\/ 03\/003 ASPI request flags$/;"	m	struct:__anon124
SRB_Flags	src/dos/wnaspi32.h	/^    BYTE        SRB_Flags;                      \/\/ 03\/003 ASPI request flags$/;"	m	struct:__anon126
SRB_Flags	src/dos/wnaspi32.h	/^    BYTE        SRB_Flags;                      \/\/ 03\/003 ASPI request flags$/;"	m	struct:__anon128
SRB_Flags	src/dos/wnaspi32.h	/^    BYTE        SRB_Flags;                      \/\/ 03\/003 ASPI request flags$/;"	m	struct:__anon131
SRB_Flags	src/dos/wnaspi32.h	/^    BYTE        SRB_Flags;                      \/\/ 03\/003 Reserved$/;"	m	struct:__anon127
SRB_Flags	src/dos/wnaspi32.h	/^    BYTE        SRB_Flags;                      \/\/ 03\/003 Reserved, MUST = 0$/;"	m	struct:__anon125
SRB_Flags	src/dos/wnaspi32.h	/^    BYTE        SRB_Flags;                      \/\/ 03\/003 Reserved, MUST = 0$/;"	m	struct:__anon129
SRB_Flags	src/dos/wnaspi32.h	/^    BYTE        SRB_Flags;                      \/\/ 03\/003 Reserved, MUST = 0$/;"	m	struct:__anon130
SRB_Flags	src/dos/wnaspi32.h	/^  BYTE      SRB_Flags;$/;"	m	struct:__anon134
SRB_GDEVBlock	src/dos/wnaspi32.h	/^SRB_GDEVBlock, *PSRB_GDEVBlock, FAR *LPSRB_GDEVBlock;$/;"	t	typeref:struct:__anon125
SRB_GetDiskInfo	src/dos/wnaspi32.h	/^SRB_GetDiskInfo, *PSRB_GetDiskInfo, FAR *LPSRB_GetDiskInfo;$/;"	t	typeref:struct:__anon129
SRB_GetSetTimeouts	src/dos/wnaspi32.h	/^SRB_GetSetTimeouts, *PSRB_GetSetTimeouts, FAR *LPSRB_GetSetTimeouts;$/;"	t	typeref:struct:__anon131
SRB_HAInquiry	src/dos/wnaspi32.h	/^SRB_HAInquiry, *PSRB_HAInquiry, FAR *LPSRB_HAInquiry;$/;"	t	typeref:struct:__anon124
SRB_HaId	src/dos/wnaspi32.h	/^    BYTE        SRB_HaId;                       \/\/ 02\/002 ASPI host adapter number$/;"	m	struct:__anon124
SRB_HaId	src/dos/wnaspi32.h	/^    BYTE        SRB_HaId;                       \/\/ 02\/002 ASPI host adapter number$/;"	m	struct:__anon125
SRB_HaId	src/dos/wnaspi32.h	/^    BYTE        SRB_HaId;                       \/\/ 02\/002 ASPI host adapter number$/;"	m	struct:__anon126
SRB_HaId	src/dos/wnaspi32.h	/^    BYTE        SRB_HaId;                       \/\/ 02\/002 ASPI host adapter number$/;"	m	struct:__anon127
SRB_HaId	src/dos/wnaspi32.h	/^    BYTE        SRB_HaId;                       \/\/ 02\/002 ASPI host adapter number$/;"	m	struct:__anon128
SRB_HaId	src/dos/wnaspi32.h	/^    BYTE        SRB_HaId;                       \/\/ 02\/002 ASPI host adapter number$/;"	m	struct:__anon129
SRB_HaId	src/dos/wnaspi32.h	/^    BYTE        SRB_HaId;                       \/\/ 02\/002 ASPI host adapter number$/;"	m	struct:__anon130
SRB_HaId	src/dos/wnaspi32.h	/^    BYTE        SRB_HaId;                       \/\/ 02\/002 ASPI host adapter number$/;"	m	struct:__anon131
SRB_HaId	src/dos/wnaspi32.h	/^  BYTE      SRB_HaId;$/;"	m	struct:__anon134
SRB_HaStat	src/dos/wnaspi32.h	/^    BYTE        SRB_HaStat;                     \/\/ 16\/022 Host Adapter Status$/;"	m	struct:__anon126
SRB_HaStat	src/dos/wnaspi32.h	/^    BYTE        SRB_HaStat;                     \/\/ 16\/022 Host Adapter Status$/;"	m	struct:__anon128
SRB_Hdr_Rsvd	src/dos/wnaspi32.h	/^    DWORD       SRB_Hdr_Rsvd;                   \/\/ 04\/004 Reserved$/;"	m	struct:__anon126
SRB_Hdr_Rsvd	src/dos/wnaspi32.h	/^    DWORD       SRB_Hdr_Rsvd;                   \/\/ 04\/004 Reserved$/;"	m	struct:__anon127
SRB_Hdr_Rsvd	src/dos/wnaspi32.h	/^    DWORD       SRB_Hdr_Rsvd;                   \/\/ 04\/004 Reserved$/;"	m	struct:__anon128
SRB_Hdr_Rsvd	src/dos/wnaspi32.h	/^    DWORD       SRB_Hdr_Rsvd;                   \/\/ 04\/004 Reserved, MUST = 0$/;"	m	struct:__anon124
SRB_Hdr_Rsvd	src/dos/wnaspi32.h	/^    DWORD       SRB_Hdr_Rsvd;                   \/\/ 04\/004 Reserved, MUST = 0$/;"	m	struct:__anon125
SRB_Hdr_Rsvd	src/dos/wnaspi32.h	/^    DWORD       SRB_Hdr_Rsvd;                   \/\/ 04\/004 Reserved, MUST = 0$/;"	m	struct:__anon129
SRB_Hdr_Rsvd	src/dos/wnaspi32.h	/^    DWORD       SRB_Hdr_Rsvd;                   \/\/ 04\/004 Reserved, MUST = 0$/;"	m	struct:__anon130
SRB_Hdr_Rsvd	src/dos/wnaspi32.h	/^    DWORD       SRB_Hdr_Rsvd;                   \/\/ 04\/004 Reserved, MUST = 0$/;"	m	struct:__anon131
SRB_Hdr_Rsvd	src/dos/wnaspi32.h	/^  DWORD     SRB_Hdr_Rsvd;$/;"	m	struct:__anon134
SRB_Heads	src/dos/wnaspi32.h	/^    BYTE        SRB_Heads;                      \/\/ 0C\/012 Preferred number of heads translation$/;"	m	struct:__anon129
SRB_IO_CONTROL	src/platform/visualc/ntddscsi.h	/^} SRB_IO_CONTROL, *PSRB_IO_CONTROL; $/;"	t	typeref:struct:_SRB_IO_CONTROL
SRB_Int13HDriveInfo	src/dos/wnaspi32.h	/^    BYTE        SRB_Int13HDriveInfo;            \/\/ 0B\/011 Host Adapter Status$/;"	m	struct:__anon129
SRB_Lun	src/dos/wnaspi32.h	/^    BYTE        SRB_Lun;                        \/\/ 09\/009 Target's LUN number$/;"	m	struct:__anon125
SRB_Lun	src/dos/wnaspi32.h	/^    BYTE        SRB_Lun;                        \/\/ 09\/009 Target's LUN number$/;"	m	struct:__anon126
SRB_Lun	src/dos/wnaspi32.h	/^    BYTE        SRB_Lun;                        \/\/ 09\/009 Target's LUN number$/;"	m	struct:__anon128
SRB_Lun	src/dos/wnaspi32.h	/^    BYTE        SRB_Lun;                        \/\/ 09\/009 Target's LUN number$/;"	m	struct:__anon129
SRB_Lun	src/dos/wnaspi32.h	/^    BYTE        SRB_Lun;                        \/\/ 09\/009 Target's LUN number$/;"	m	struct:__anon131
SRB_POSTING	src/dos/wnaspi32.h	42;"	d
SRB_PostProc	src/dos/wnaspi32.h	/^    VOID        FAR *SRB_PostProc;              \/\/ 18\/024 Post routine$/;"	m	struct:__anon126
SRB_PostProc	src/dos/wnaspi32.h	/^    VOID        FAR *SRB_PostProc;              \/\/ 18\/024 Post routine$/;"	m	struct:__anon128
SRB_RescanPort	src/dos/wnaspi32.h	/^SRB_RescanPort, *PSRB_RescanPort, FAR *LPSRB_RescanPort;$/;"	t	typeref:struct:__anon130
SRB_Rsvd1	src/dos/wnaspi32.h	/^    BYTE        SRB_Rsvd1;                      \/\/ 0B\/011 Reserved, MUST = 0$/;"	m	struct:__anon125
SRB_Rsvd1	src/dos/wnaspi32.h	/^    BYTE        SRB_Rsvd1[10];                  \/\/ 0E\/014 Reserved, MUST = 0$/;"	m	struct:__anon129
SRB_Rsvd1	src/dos/wnaspi32.h	/^    BYTE        SRB_Rsvd1[12];                  \/\/ 0A\/010 Reserved for Alignment$/;"	m	struct:__anon128
SRB_Rsvd1	src/dos/wnaspi32.h	/^    WORD        SRB_Rsvd1;                      \/\/ 0A\/010 Reserved for Alignment$/;"	m	struct:__anon126
SRB_Rsvd2	src/dos/wnaspi32.h	/^    BYTE        SRB_Rsvd2[20];                  \/\/ 1C\/028 Reserved, MUST = 0$/;"	m	struct:__anon126
SRB_Rsvd2	src/dos/wnaspi32.h	/^    BYTE        SRB_Rsvd2[36];                  \/\/ 1C\/028 Reserved, MUST = 0$/;"	m	struct:__anon128
SRB_Sectors	src/dos/wnaspi32.h	/^    BYTE        SRB_Sectors;                    \/\/ 0D\/013 Preferred number of sectors translation$/;"	m	struct:__anon129
SRB_SenseLen	src/dos/wnaspi32.h	/^    BYTE        SRB_SenseLen;                   \/\/ 14\/020 Sense Allocation Length$/;"	m	struct:__anon126
SRB_Status	src/dos/wnaspi32.h	/^    BYTE        SRB_Status;                     \/\/ 01\/001 ASPI command status byte$/;"	m	struct:__anon124
SRB_Status	src/dos/wnaspi32.h	/^    BYTE        SRB_Status;                     \/\/ 01\/001 ASPI command status byte$/;"	m	struct:__anon125
SRB_Status	src/dos/wnaspi32.h	/^    BYTE        SRB_Status;                     \/\/ 01\/001 ASPI command status byte$/;"	m	struct:__anon126
SRB_Status	src/dos/wnaspi32.h	/^    BYTE        SRB_Status;                     \/\/ 01\/001 ASPI command status byte$/;"	m	struct:__anon127
SRB_Status	src/dos/wnaspi32.h	/^    BYTE        SRB_Status;                     \/\/ 01\/001 ASPI command status byte$/;"	m	struct:__anon128
SRB_Status	src/dos/wnaspi32.h	/^    BYTE        SRB_Status;                     \/\/ 01\/001 ASPI command status byte$/;"	m	struct:__anon129
SRB_Status	src/dos/wnaspi32.h	/^    BYTE        SRB_Status;                     \/\/ 01\/001 ASPI command status byte$/;"	m	struct:__anon130
SRB_Status	src/dos/wnaspi32.h	/^    BYTE        SRB_Status;                     \/\/ 01\/001 ASPI command status byte$/;"	m	struct:__anon131
SRB_Status	src/dos/wnaspi32.h	/^  BYTE      SRB_Status;$/;"	m	struct:__anon134
SRB_TargStat	src/dos/wnaspi32.h	/^    BYTE        SRB_TargStat;                   \/\/ 17\/023 Target Status$/;"	m	struct:__anon126
SRB_TargStat	src/dos/wnaspi32.h	/^    BYTE        SRB_TargStat;                   \/\/ 17\/023 Target Status$/;"	m	struct:__anon128
SRB_Target	src/dos/wnaspi32.h	/^    BYTE        SRB_Target;                     \/\/ 08\/008 Target's SCSI ID$/;"	m	struct:__anon125
SRB_Target	src/dos/wnaspi32.h	/^    BYTE        SRB_Target;                     \/\/ 08\/008 Target's SCSI ID$/;"	m	struct:__anon126
SRB_Target	src/dos/wnaspi32.h	/^    BYTE        SRB_Target;                     \/\/ 08\/008 Target's SCSI ID$/;"	m	struct:__anon128
SRB_Target	src/dos/wnaspi32.h	/^    BYTE        SRB_Target;                     \/\/ 08\/008 Target's SCSI ID$/;"	m	struct:__anon129
SRB_Target	src/dos/wnaspi32.h	/^    BYTE        SRB_Target;                     \/\/ 08\/008 Target's SCSI ID$/;"	m	struct:__anon131
SRB_Timeout	src/dos/wnaspi32.h	/^    DWORD       SRB_Timeout;                    \/\/ 0A\/010 Timeout in half seconds$/;"	m	struct:__anon131
SRB_ToAbort	src/dos/wnaspi32.h	/^    VOID        FAR *SRB_ToAbort;               \/\/ 08\/008 Pointer to SRB to abort$/;"	m	struct:__anon127
SRCTYPE	src/gui/render_16.h	250;"	d
SRCTYPE	src/gui/render_32.h	160;"	d
SRCTYPE	src/gui/render_8.h	246;"	d
SRCTYPE	src/gui/render_9.h	246;"	d
SREGS	src/hardware/serialport/softmodem.h	31;"	d
SS_ABORTED	src/dos/wnaspi32.h	73;"	d
SS_ABORT_FAIL	src/dos/wnaspi32.h	74;"	d
SS_ASPI_IS_BUSY	src/dos/wnaspi32.h	87;"	d
SS_ASPI_IS_SHUTDOWN	src/dos/wnaspi32.h	92;"	d
SS_BAD_INSTALL	src/dos/wnaspi32.h	93;"	d
SS_BUFFER_ALIGN	src/dos/wnaspi32.h	83;"	d
SS_BUFFER_TO_BIG	src/dos/wnaspi32.h	88;"	d
SS_COMP	src/dos/wnaspi32.h	72;"	d
SS_ERR	src/dos/wnaspi32.h	75;"	d
SS_FAILED_INIT	src/dos/wnaspi32.h	86;"	d
SS_ILLEGAL_MODE	src/dos/wnaspi32.h	84;"	d
SS_INSUFFICIENT_RESOURCES	src/dos/wnaspi32.h	91;"	d
SS_INVALID_CMD	src/dos/wnaspi32.h	77;"	d
SS_INVALID_HA	src/dos/wnaspi32.h	78;"	d
SS_INVALID_SRB	src/dos/wnaspi32.h	81;"	d
SS_MISMATCHED_COMPONENTS	src/dos/wnaspi32.h	89;"	d
SS_NO_ADAPTERS	src/dos/wnaspi32.h	90;"	d
SS_NO_ASPI	src/dos/wnaspi32.h	85;"	d
SS_NO_DEVICE	src/dos/wnaspi32.h	79;"	d
SS_OLD_MANAGER	src/dos/wnaspi32.h	82;"	d
SS_PENDING	src/dos/wnaspi32.h	71;"	d
START_WMMEM	src/cpu/core_dyn_x86/decoder.h	157;"	d
START_WMMEM	src/cpu/core_dynrec/decoder_basic.h	265;"	d
START_WMMEM	src/cpu/core_dynrec/save/decoder_basic.h	263;"	d
STATUS_BUSY	src/dos/scsidefs.h	28;"	d
STATUS_CHKCOND	src/dos/scsidefs.h	26;"	d
STATUS_COMTERM	src/dos/scsidefs.h	32;"	d
STATUS_CONDMET	src/dos/scsidefs.h	27;"	d
STATUS_GOOD	src/dos/scsidefs.h	25;"	d
STATUS_INTCDMET	src/dos/scsidefs.h	30;"	d
STATUS_INTERM	src/dos/scsidefs.h	29;"	d
STATUS_QFULL	src/dos/scsidefs.h	33;"	d
STATUS_RESCONF	src/dos/scsidefs.h	31;"	d
STDAUX	include/dos_inc.h	/^enum { STDIN=0,STDOUT=1,STDERR=2,STDAUX=3,STDPRN=4};$/;"	e	enum:__anon12
STDC_HEADERS	config.h	199;"	d
STDERR	include/dos_inc.h	/^enum { STDIN=0,STDOUT=1,STDERR=2,STDAUX=3,STDPRN=4};$/;"	e	enum:__anon12
STDIN	include/dos_inc.h	/^enum { STDIN=0,STDOUT=1,STDERR=2,STDAUX=3,STDPRN=4};$/;"	e	enum:__anon12
STDOUT	include/dos_inc.h	/^enum { STDIN=0,STDOUT=1,STDERR=2,STDAUX=3,STDPRN=4};$/;"	e	enum:__anon12
STDPRN	include/dos_inc.h	/^enum { STDIN=0,STDOUT=1,STDERR=2,STDAUX=3,STDPRN=4};$/;"	e	enum:__anon12
STEP	src/hardware/tandy_sound.cpp	35;"	d	file:
STORE_ET3K	src/hardware/vga_tseng.cpp	492;"	d	file:
STORE_ET4K	src/hardware/vga_tseng.cpp	56;"	d	file:
STRING_OP	src/cpu/core_dyn_x86/string.h	/^enum STRING_OP {$/;"	g
STRING_OP	src/cpu/core_normal/string.h	/^enum STRING_OP {$/;"	g
STR_CMPSB	src/cpu/core_dyn_x86/string.h	/^	STR_CMPSB=24,STR_CMPSW,STR_CMPSD,$/;"	e	enum:STRING_OP
STR_CMPSB	src/cpu/core_dynrec/decoder_basic.h	/^	STR_CMPSB=24,STR_CMPSW,STR_CMPSD,$/;"	e	enum:StringOps
STR_CMPSB	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_CMPSB=24,STR_CMPSW,STR_CMPSD,$/;"	e	enum:StringOps
STR_CMPSD	src/cpu/core_dyn_x86/string.h	/^	STR_CMPSB=24,STR_CMPSW,STR_CMPSD,$/;"	e	enum:STRING_OP
STR_CMPSD	src/cpu/core_dynrec/decoder_basic.h	/^	STR_CMPSB=24,STR_CMPSW,STR_CMPSD,$/;"	e	enum:StringOps
STR_CMPSD	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_CMPSB=24,STR_CMPSW,STR_CMPSD,$/;"	e	enum:StringOps
STR_CMPSW	src/cpu/core_dyn_x86/string.h	/^	STR_CMPSB=24,STR_CMPSW,STR_CMPSD,$/;"	e	enum:STRING_OP
STR_CMPSW	src/cpu/core_dynrec/decoder_basic.h	/^	STR_CMPSB=24,STR_CMPSW,STR_CMPSD,$/;"	e	enum:StringOps
STR_CMPSW	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_CMPSB=24,STR_CMPSW,STR_CMPSD,$/;"	e	enum:StringOps
STR_INSB	src/cpu/core_dyn_x86/string.h	/^	STR_INSB=4,STR_INSW,STR_INSD,$/;"	e	enum:STRING_OP
STR_INSB	src/cpu/core_dynrec/decoder_basic.h	/^	STR_INSB=4,STR_INSW,STR_INSD,$/;"	e	enum:StringOps
STR_INSB	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_INSB=4,STR_INSW,STR_INSD,$/;"	e	enum:StringOps
STR_INSD	src/cpu/core_dyn_x86/string.h	/^	STR_INSB=4,STR_INSW,STR_INSD,$/;"	e	enum:STRING_OP
STR_INSD	src/cpu/core_dynrec/decoder_basic.h	/^	STR_INSB=4,STR_INSW,STR_INSD,$/;"	e	enum:StringOps
STR_INSD	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_INSB=4,STR_INSW,STR_INSD,$/;"	e	enum:StringOps
STR_INSW	src/cpu/core_dyn_x86/string.h	/^	STR_INSB=4,STR_INSW,STR_INSD,$/;"	e	enum:STRING_OP
STR_INSW	src/cpu/core_dynrec/decoder_basic.h	/^	STR_INSB=4,STR_INSW,STR_INSD,$/;"	e	enum:StringOps
STR_INSW	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_INSB=4,STR_INSW,STR_INSD,$/;"	e	enum:StringOps
STR_LODSB	src/cpu/core_dyn_x86/string.h	/^	STR_LODSB=12,STR_LODSW,STR_LODSD,$/;"	e	enum:STRING_OP
STR_LODSB	src/cpu/core_dynrec/decoder_basic.h	/^	STR_LODSB=12,STR_LODSW,STR_LODSD,$/;"	e	enum:StringOps
STR_LODSB	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_LODSB=12,STR_LODSW,STR_LODSD,$/;"	e	enum:StringOps
STR_LODSD	src/cpu/core_dyn_x86/string.h	/^	STR_LODSB=12,STR_LODSW,STR_LODSD,$/;"	e	enum:STRING_OP
STR_LODSD	src/cpu/core_dynrec/decoder_basic.h	/^	STR_LODSB=12,STR_LODSW,STR_LODSD,$/;"	e	enum:StringOps
STR_LODSD	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_LODSB=12,STR_LODSW,STR_LODSD,$/;"	e	enum:StringOps
STR_LODSW	src/cpu/core_dyn_x86/string.h	/^	STR_LODSB=12,STR_LODSW,STR_LODSD,$/;"	e	enum:STRING_OP
STR_LODSW	src/cpu/core_dynrec/decoder_basic.h	/^	STR_LODSB=12,STR_LODSW,STR_LODSD,$/;"	e	enum:StringOps
STR_LODSW	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_LODSB=12,STR_LODSW,STR_LODSD,$/;"	e	enum:StringOps
STR_MOVSB	src/cpu/core_dyn_x86/string.h	/^	STR_MOVSB=8,STR_MOVSW,STR_MOVSD,$/;"	e	enum:STRING_OP
STR_MOVSB	src/cpu/core_dynrec/decoder_basic.h	/^	STR_MOVSB=8,STR_MOVSW,STR_MOVSD,$/;"	e	enum:StringOps
STR_MOVSB	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_MOVSB=8,STR_MOVSW,STR_MOVSD,$/;"	e	enum:StringOps
STR_MOVSD	src/cpu/core_dyn_x86/string.h	/^	STR_MOVSB=8,STR_MOVSW,STR_MOVSD,$/;"	e	enum:STRING_OP
STR_MOVSD	src/cpu/core_dynrec/decoder_basic.h	/^	STR_MOVSB=8,STR_MOVSW,STR_MOVSD,$/;"	e	enum:StringOps
STR_MOVSD	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_MOVSB=8,STR_MOVSW,STR_MOVSD,$/;"	e	enum:StringOps
STR_MOVSW	src/cpu/core_dyn_x86/string.h	/^	STR_MOVSB=8,STR_MOVSW,STR_MOVSD,$/;"	e	enum:STRING_OP
STR_MOVSW	src/cpu/core_dynrec/decoder_basic.h	/^	STR_MOVSB=8,STR_MOVSW,STR_MOVSD,$/;"	e	enum:StringOps
STR_MOVSW	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_MOVSB=8,STR_MOVSW,STR_MOVSD,$/;"	e	enum:StringOps
STR_OUTSB	src/cpu/core_dyn_x86/string.h	/^	STR_OUTSB=0,STR_OUTSW,STR_OUTSD,$/;"	e	enum:STRING_OP
STR_OUTSB	src/cpu/core_dynrec/decoder_basic.h	/^	STR_OUTSB=0,STR_OUTSW,STR_OUTSD,$/;"	e	enum:StringOps
STR_OUTSB	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_OUTSB=0,STR_OUTSW,STR_OUTSD,$/;"	e	enum:StringOps
STR_OUTSD	src/cpu/core_dyn_x86/string.h	/^	STR_OUTSB=0,STR_OUTSW,STR_OUTSD,$/;"	e	enum:STRING_OP
STR_OUTSD	src/cpu/core_dynrec/decoder_basic.h	/^	STR_OUTSB=0,STR_OUTSW,STR_OUTSD,$/;"	e	enum:StringOps
STR_OUTSD	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_OUTSB=0,STR_OUTSW,STR_OUTSD,$/;"	e	enum:StringOps
STR_OUTSW	src/cpu/core_dyn_x86/string.h	/^	STR_OUTSB=0,STR_OUTSW,STR_OUTSD,$/;"	e	enum:STRING_OP
STR_OUTSW	src/cpu/core_dynrec/decoder_basic.h	/^	STR_OUTSB=0,STR_OUTSW,STR_OUTSD,$/;"	e	enum:StringOps
STR_OUTSW	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_OUTSB=0,STR_OUTSW,STR_OUTSD,$/;"	e	enum:StringOps
STR_SCASB	src/cpu/core_dyn_x86/string.h	/^	STR_SCASB=20,STR_SCASW,STR_SCASD,$/;"	e	enum:STRING_OP
STR_SCASB	src/cpu/core_dynrec/decoder_basic.h	/^	STR_SCASB=20,STR_SCASW,STR_SCASD,$/;"	e	enum:StringOps
STR_SCASB	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_SCASB=20,STR_SCASW,STR_SCASD,$/;"	e	enum:StringOps
STR_SCASD	src/cpu/core_dyn_x86/string.h	/^	STR_SCASB=20,STR_SCASW,STR_SCASD,$/;"	e	enum:STRING_OP
STR_SCASD	src/cpu/core_dynrec/decoder_basic.h	/^	STR_SCASB=20,STR_SCASW,STR_SCASD,$/;"	e	enum:StringOps
STR_SCASD	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_SCASB=20,STR_SCASW,STR_SCASD,$/;"	e	enum:StringOps
STR_SCASW	src/cpu/core_dyn_x86/string.h	/^	STR_SCASB=20,STR_SCASW,STR_SCASD,$/;"	e	enum:STRING_OP
STR_SCASW	src/cpu/core_dynrec/decoder_basic.h	/^	STR_SCASB=20,STR_SCASW,STR_SCASD,$/;"	e	enum:StringOps
STR_SCASW	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_SCASB=20,STR_SCASW,STR_SCASD,$/;"	e	enum:StringOps
STR_STOSB	src/cpu/core_dyn_x86/string.h	/^	STR_STOSB=16,STR_STOSW,STR_STOSD,$/;"	e	enum:STRING_OP
STR_STOSB	src/cpu/core_dynrec/decoder_basic.h	/^	STR_STOSB=16,STR_STOSW,STR_STOSD,$/;"	e	enum:StringOps
STR_STOSB	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_STOSB=16,STR_STOSW,STR_STOSD,$/;"	e	enum:StringOps
STR_STOSD	src/cpu/core_dyn_x86/string.h	/^	STR_STOSB=16,STR_STOSW,STR_STOSD,$/;"	e	enum:STRING_OP
STR_STOSD	src/cpu/core_dynrec/decoder_basic.h	/^	STR_STOSB=16,STR_STOSW,STR_STOSD,$/;"	e	enum:StringOps
STR_STOSD	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_STOSB=16,STR_STOSW,STR_STOSD,$/;"	e	enum:StringOps
STR_STOSW	src/cpu/core_dyn_x86/string.h	/^	STR_STOSB=16,STR_STOSW,STR_STOSD,$/;"	e	enum:STRING_OP
STR_STOSW	src/cpu/core_dynrec/decoder_basic.h	/^	STR_STOSB=16,STR_STOSW,STR_STOSD,$/;"	e	enum:StringOps
STR_STOSW	src/cpu/core_dynrec/save/decoder_basic.h	/^	STR_STOSB=16,STR_STOSW,STR_STOSD,$/;"	e	enum:StringOps
STV	include/fpu.h	105;"	d
SUBB	src/cpu/arminst.h	43;"	d
SUBB	src/cpu/core_normal/prefix_none.h	/^		ALIb(SUBB);break;$/;"	v
SUBB	src/cpu/core_normal/prefix_none.h	/^		RMEbGb(SUBB);break;$/;"	v
SUBB	src/cpu/core_normal/prefix_none.h	/^		RMGbEb(SUBB);break;$/;"	v
SUBB	src/cpu/core_normal/verysimple_prefix_none.h	/^		ALIb(SUBB);break;$/;"	v
SUBB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEbGb(SUBB);break;$/;"	v
SUBB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGbEb(SUBB);break;$/;"	v
SUBB	src/cpu/instructions.h	42;"	d
SUBD	src/cpu/arminst.h	158;"	d
SUBD	src/cpu/core_normal/prefix_66.h	/^		EAXId(SUBD);break;$/;"	v
SUBD	src/cpu/core_normal/prefix_66.h	/^		RMEdGd(SUBD);break;$/;"	v
SUBD	src/cpu/core_normal/prefix_66.h	/^		RMGdEd(SUBD);break;$/;"	v
SUBD	src/cpu/instructions.h	154;"	d
SUBW	src/cpu/arminst.h	102;"	d
SUBW	src/cpu/core_normal/prefix_none.h	/^		AXIw(SUBW);break;$/;"	v
SUBW	src/cpu/core_normal/prefix_none.h	/^		RMEwGw(SUBW);break;$/;"	v
SUBW	src/cpu/core_normal/prefix_none.h	/^		RMGwEw(SUBW);break;$/;"	v
SUBW	src/cpu/core_normal/verysimple_prefix_none.h	/^		AXIw(SUBW);break;$/;"	v
SUBW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEwGw(SUBW);break;$/;"	v
SUBW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGwEw(SUBW);break;$/;"	v
SUBW	src/cpu/instructions.h	98;"	d
SUB_Q_CHANNEL_DATA	src/platform/visualc/ntddcdrm.h	/^} SUB_Q_CHANNEL_DATA, *PSUB_Q_CHANNEL_DATA;$/;"	t	typeref:union:_SUB_Q_CHANNEL_DATA
SUB_Q_CURRENT_POSITION	src/platform/visualc/ntddcdrm.h	/^} SUB_Q_CURRENT_POSITION, *PSUB_Q_CURRENT_POSITION;$/;"	t	typeref:struct:_SUB_Q_CURRENT_POSITION
SUB_Q_HEADER	src/platform/visualc/ntddcdrm.h	/^} SUB_Q_HEADER, *PSUB_Q_HEADER;$/;"	t	typeref:struct:_SUB_Q_HEADER
SUB_Q_MEDIA_CATALOG_NUMBER	src/platform/visualc/ntddcdrm.h	/^} SUB_Q_MEDIA_CATALOG_NUMBER, *PSUB_Q_MEDIA_CATALOG_NUMBER;$/;"	t	typeref:struct:_SUB_Q_MEDIA_CATALOG_NUMBER
SUB_Q_TRACK_ISRC	src/platform/visualc/ntddcdrm.h	/^} SUB_Q_TRACK_ISRC, *PSUB_Q_TRACK_ISRC;$/;"	t	typeref:struct:_SUB_Q_TRACK_ISRC
SVGACards	include/dosbox.h	/^enum SVGACards {$/;"	g
SVGA_Driver	include/vga.h	/^struct SVGA_Driver {$/;"	s
SVGA_ET3K_DATA	src/hardware/vga_tseng.cpp	/^} SVGA_ET3K_DATA;$/;"	t	typeref:struct:__anon189	file:
SVGA_ET4K_DATA	src/hardware/vga_tseng.cpp	/^} SVGA_ET4K_DATA;$/;"	t	typeref:struct:__anon188	file:
SVGA_None	include/dosbox.h	/^	SVGA_None,$/;"	e	enum:SVGACards
SVGA_PVGA1A_DATA	src/hardware/vga_paradise.cpp	/^} SVGA_PVGA1A_DATA;$/;"	t	typeref:struct:__anon187	file:
SVGA_ParadisePVGA1A	include/dosbox.h	/^	SVGA_ParadisePVGA1A$/;"	e	enum:SVGACards
SVGA_S3Trio	include/dosbox.h	/^	SVGA_S3Trio,$/;"	e	enum:SVGACards
SVGA_S3_AcceptsMode	src/hardware/vga_s3.cpp	/^bool SVGA_S3_AcceptsMode(Bitu mode) {$/;"	f
SVGA_S3_GetClock	src/hardware/vga_s3.cpp	/^Bitu SVGA_S3_GetClock(void) {$/;"	f
SVGA_S3_HWCursorActive	src/hardware/vga_s3.cpp	/^bool SVGA_S3_HWCursorActive(void) {$/;"	f
SVGA_S3_ReadCRTC	src/hardware/vga_s3.cpp	/^Bitu SVGA_S3_ReadCRTC( Bitu reg, Bitu iolen) {$/;"	f
SVGA_S3_ReadSEQ	src/hardware/vga_s3.cpp	/^Bitu SVGA_S3_ReadSEQ(Bitu reg,Bitu iolen) {$/;"	f
SVGA_S3_WriteCRTC	src/hardware/vga_s3.cpp	/^void SVGA_S3_WriteCRTC(Bitu reg,Bitu val,Bitu iolen) {$/;"	f
SVGA_S3_WriteSEQ	src/hardware/vga_s3.cpp	/^void SVGA_S3_WriteSEQ(Bitu reg,Bitu val,Bitu iolen) {$/;"	f
SVGA_Setup_Driver	src/hardware/vga.cpp	/^void SVGA_Setup_Driver(void) {$/;"	f
SVGA_Setup_ParadisePVGA1A	src/hardware/vga_paradise.cpp	/^void SVGA_Setup_ParadisePVGA1A(void) {$/;"	f
SVGA_Setup_S3Trio	src/hardware/vga_s3.cpp	/^void SVGA_Setup_S3Trio(void) {$/;"	f
SVGA_Setup_TsengET3K	src/hardware/vga_tseng.cpp	/^void SVGA_Setup_TsengET3K(void) {$/;"	f
SVGA_Setup_TsengET4K	src/hardware/vga_tseng.cpp	/^void SVGA_Setup_TsengET4K(void) {$/;"	f
SVGA_TsengET3K	include/dosbox.h	/^	SVGA_TsengET3K,$/;"	e	enum:SVGACards
SVGA_TsengET4K	include/dosbox.h	/^	SVGA_TsengET4K,$/;"	e	enum:SVGACards
SWAP	src/hardware/vga_xga.cpp	349;"	d	file:
S_AIPd	src/cpu/core_full/support.h	/^	S_AIPd,S_C_AIPd,$/;"	e	enum:__anon99
S_AIPw	src/cpu/core_full/support.h	/^	S_AIPw,S_C_AIPw,$/;"	e	enum:__anon99
S_C_AIPd	src/cpu/core_full/support.h	/^	S_AIPd,S_C_AIPd,$/;"	e	enum:__anon99
S_C_AIPw	src/cpu/core_full/support.h	/^	S_AIPw,S_C_AIPw,$/;"	e	enum:__anon99
S_C_Eb	src/cpu/core_full/support.h	/^	S_C_Eb,$/;"	e	enum:__anon99
S_Descriptor	include/cpu.h	/^struct S_Descriptor {$/;"	s
S_Eb	src/cpu/core_full/support.h	/^	S_Eb,S_Gb,S_EbGb,$/;"	e	enum:__anon99
S_EbGb	src/cpu/core_full/support.h	/^	S_Eb,S_Gb,S_EbGb,$/;"	e	enum:__anon99
S_Ed	src/cpu/core_full/support.h	/^	S_Ed,S_Gd,S_EdGd,S_EdMw,$/;"	e	enum:__anon99
S_EdGd	src/cpu/core_full/support.h	/^	S_Ed,S_Gd,S_EdGd,S_EdMw,$/;"	e	enum:__anon99
S_EdMw	src/cpu/core_full/support.h	/^	S_Ed,S_Gd,S_EdGd,S_EdMw,$/;"	e	enum:__anon99
S_Ew	src/cpu/core_full/support.h	/^	S_Ew,S_Gw,S_EwGw,$/;"	e	enum:__anon99
S_EwGw	src/cpu/core_full/support.h	/^	S_Ew,S_Gw,S_EwGw,$/;"	e	enum:__anon99
S_Gb	src/cpu/core_full/support.h	/^	S_Eb,S_Gb,S_EbGb,$/;"	e	enum:__anon99
S_Gd	src/cpu/core_full/support.h	/^	S_Ed,S_Gd,S_EdGd,S_EdMw,$/;"	e	enum:__anon99
S_Gw	src/cpu/core_full/support.h	/^	S_Ew,S_Gw,S_EwGw,$/;"	e	enum:__anon99
S_IP	src/cpu/core_full/support.h	/^	S_IP,S_IPIw,$/;"	e	enum:__anon99
S_IPIw	src/cpu/core_full/support.h	/^	S_IP,S_IPIw,$/;"	e	enum:__anon99
S_ISDIR	src/platform/visualc/dirent.h	27;"	d
S_ISREG	src/platform/visualc/dirent.h	28;"	d
S_N	src/cpu/core_full/support.h	/^	S_N=0,$/;"	e	enum:__anon99
S_PER_OHM	src/hardware/joystick.cpp	34;"	d	file:
S_PUSHd	src/cpu/core_full/support.h	/^	S_PUSHw,S_PUSHd,$/;"	e	enum:__anon99
S_PUSHw	src/cpu/core_full/support.h	/^	S_PUSHw,S_PUSHd,$/;"	e	enum:__anon99
S_REGb	src/cpu/core_full/support.h	/^	S_REGb,S_REGw,S_REGd,$/;"	e	enum:__anon99
S_REGd	src/cpu/core_full/support.h	/^	S_REGb,S_REGw,S_REGd,$/;"	e	enum:__anon99
S_REGw	src/cpu/core_full/support.h	/^	S_REGb,S_REGw,S_REGd,$/;"	e	enum:__anon99
S_SEGGd	src/cpu/core_full/support.h	/^	S_SEGGw,S_SEGGd,$/;"	e	enum:__anon99
S_SEGGw	src/cpu/core_full/support.h	/^	S_SEGGw,S_SEGGd,$/;"	e	enum:__anon99
S_SEGm	src/cpu/core_full/support.h	/^	S_SEGm,$/;"	e	enum:__anon99
SampleRate	src/hardware/tandy_sound.cpp	/^	int SampleRate;$/;"	m	struct:SN76496	file:
Save	src/cpu/core_dyn_x86/risc_x86.h	/^	void Save(void) {$/;"	f	class:GenReg
Save	src/cpu/cpu.cpp	/^void Descriptor:: Save(PhysPt address) {$/;"	f	class:Descriptor
SaveD	src/cpu/core_full.cpp	48;"	d	file:
SaveData	src/dos/dos_classes.cpp	/^void DOS_ParamBlock::SaveData(void) {$/;"	f	class:DOS_ParamBlock
SaveFindResult	src/dos/dos_files.cpp	/^static void SaveFindResult(DOS_FCB & find_fcb) {$/;"	f	file:
SaveIP	src/cpu/core_full/loadwrite.h	1;"	d
SaveIt	include/dos_inc.h	/^	INLINE void SaveIt(Bitu size,PhysPt addr,Bitu val) {$/;"	f	class:MemStruct
SaveMb	src/cpu/core_full.cpp	43;"	d	file:
SaveMb	src/cpu/core_simple.cpp	40;"	d	file:
SaveMb	src/cpu/core_verysimple.cpp	40;"	d	file:
SaveMd	src/cpu/core_full.cpp	45;"	d	file:
SaveMd	src/cpu/core_simple.cpp	42;"	d	file:
SaveMd	src/cpu/core_verysimple.cpp	42;"	d	file:
SaveMemory	src/debug/debug.cpp	/^static void SaveMemory(Bitu seg, Bitu ofs1, Bit32u num) {$/;"	f	file:
SaveMemoryBin	src/debug/debug.cpp	/^static void SaveMemoryBin(Bitu seg, Bitu ofs1, Bit32u num) {$/;"	f	file:
SaveMw	src/cpu/core_full.cpp	44;"	d	file:
SaveMw	src/cpu/core_simple.cpp	41;"	d	file:
SaveMw	src/cpu/core_verysimple.cpp	41;"	d	file:
SaveRb	src/cpu/core_normal/support.h	28;"	d
SaveRd	src/cpu/core_normal/support.h	30;"	d
SaveRegisters	src/dos/dos_execute.cpp	/^static void SaveRegisters(void) {$/;"	f	file:
SaveRw	src/cpu/core_normal/support.h	29;"	d
SaveSelector	src/cpu/cpu.cpp	/^	void SaveSelector(void) {$/;"	f	class:TaskStateSegment
SaveVars	src/debug/debug.cpp	/^bool CDebugVar::SaveVars(char* name)$/;"	f	class:CDebugVar
SaveVectors	src/dos/dos_classes.cpp	/^void DOS_PSP::SaveVectors(void)$/;"	f	class:DOS_PSP
SaveVgaRegisters	src/ints/mouse.cpp	/^void SaveVgaRegisters() {$/;"	f
ScaleHalfGX	src/gui/render_scalers.cpp	/^ScalerLineBlock_t ScaleHalfGX = {$/;"	v
ScaleHalfSpecialGX	src/gui/render_scalers.cpp	/^ScalerLineBlock_t ScaleHalfSpecialGX= {$/;"	v
ScaleNormalGX	src/gui/render_scalers.cpp	/^ScalerLineBlock_t ScaleNormalGX = {$/;"	v
ScaleSpecialGX	src/gui/render_scalers.cpp	/^ScalerLineBlock_t ScaleSpecialGX= {$/;"	v
ScalerLineBlock_t	src/gui/render_scalers.h	/^} ScalerLineBlock_t;$/;"	t	typeref:struct:__anon136
ScalerLineHandler_t	src/gui/render_scalers.h	/^typedef void (*ScalerLineHandler_t)(const void *src);$/;"	t
Scaler_Aspect	src/gui/render.cpp	/^Bit8u Scaler_Aspect[SCALER_MAXHEIGHT];$/;"	v
Scaler_DstCache	src/gui/render_16.h	51;"	d
Scaler_DstCache	src/gui/render_32.h	51;"	d
Scaler_DstCache	src/gui/render_8.h	54;"	d
Scaler_DstCache	src/gui/render_9.h	54;"	d
Scaler_DstPitch	src/gui/render_16.h	50;"	d
Scaler_DstPitch	src/gui/render_32.h	50;"	d
Scaler_DstPitch	src/gui/render_8.h	53;"	d
Scaler_DstPitch	src/gui/render_9.h	53;"	d
Scaler_DstWrite	src/gui/render_16.h	49;"	d
Scaler_DstWrite	src/gui/render_32.h	49;"	d
Scaler_DstWrite	src/gui/render_8.h	52;"	d
Scaler_DstWrite	src/gui/render_9.h	52;"	d
Scaler_Line	src/gui/render_16.h	61;"	d
Scaler_Line	src/gui/render_32.h	61;"	d
Scaler_Line	src/gui/render_8.h	64;"	d
Scaler_Line	src/gui/render_9.h	64;"	d
Scaler_LineCache	src/gui/render.cpp	/^Bit32u Scaler_LineCache[320];$/;"	v
Scaler_PaletteChanged	src/gui/render_16.h	57;"	d
Scaler_PaletteChanged	src/gui/render_32.h	57;"	d
Scaler_PaletteChanged	src/gui/render_8.h	60;"	d
Scaler_PaletteChanged	src/gui/render_9.h	60;"	d
Scaler_PaletteStatus	src/gui/render_16.h	58;"	d
Scaler_PaletteStatus	src/gui/render_32.h	58;"	d
Scaler_PaletteStatus	src/gui/render_8.h	61;"	d
Scaler_PaletteStatus	src/gui/render_9.h	61;"	d
Scaler_SrcWidth	src/gui/render_16.h	52;"	d
Scaler_SrcWidth	src/gui/render_32.h	52;"	d
Scaler_SrcWidth	src/gui/render_8.h	55;"	d
Scaler_SrcWidth	src/gui/render_9.h	55;"	d
ScanCMDBool	src/misc/support.cxx	/^bool ScanCMDBool(char * cmd,char const * const check) {$/;"	f
ScanCMDRemain	src/misc/support.cxx	/^char * ScanCMDRemain(char * cmd) {$/;"	f
ScanNumber	src/hardware/serialport/softmodem.cpp	/^Bitu CSerialModem::ScanNumber(char * & scan) {$/;"	f	class:CSerialModem
ScanRegistry	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::ScanRegistry(HKEY& hKeyBase)$/;"	f	class:CDROM_Interface_Aspi
ScanRegistryFindKey	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::ScanRegistryFindKey(HKEY& hKeyBase)$/;"	f	class:CDROM_Interface_Aspi
Screen	src/libs/gui_tk/gui_tk.h	/^class Screen : public Window {$/;"	c	namespace:GUI
ScreenCache	src/gui/render.cpp	/^Bit32u ScreenCache[320*240];$/;"	v
ScreenRGB32le	src/libs/gui_tk/gui_tk.h	/^	ScreenRGB32le(Size width, Size height) : Screen(width,height) {};$/;"	f	class:GUI::ScreenRGB32le
ScreenRGB32le	src/libs/gui_tk/gui_tk.h	/^class ScreenRGB32le : public Screen {$/;"	c	namespace:GUI
ScreenSDL	src/libs/gui_tk/gui_tk.h	/^class ScreenSDL : public Screen {$/;"	c	namespace:GUI
ScrollLock	src/libs/gui_tk/gui_tk.h	/^		Print, Pause, Break, CapsLock, NumLock, ScrollLock,$/;"	e	enum:GUI::Key::Special
ScsiStatus	src/platform/visualc/ntddscsi.h	/^  UCHAR  ScsiStatus;$/;"	m	struct:_SCSI_PASS_THROUGH
ScsiStatus	src/platform/visualc/ntddscsi.h	/^  UCHAR  ScsiStatus;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
SecondDMAControllerAvailable	src/hardware/dma.cpp	/^bool SecondDMAControllerAvailable(void) {$/;"	f
Section	include/setup.h	/^	Section(std::string const& _sectionname):sectionname(_sectionname) {  }$/;"	f	class:Section
Section	include/setup.h	/^class Section {$/;"	c
SectionFunction	include/setup.h	/^	typedef void (*SectionFunction)(Section*);$/;"	t	class:Section
Section_line	include/setup.h	/^	Section_line(std::string const& _sectionname):Section(_sectionname){}$/;"	f	class:Section_line
Section_line	include/setup.h	/^class Section_line: public Section{$/;"	c
Section_prop	include/setup.h	/^	Section_prop(std::string const&  _sectionname):Section(_sectionname){}$/;"	f	class:Section_prop
Section_prop	include/setup.h	/^class Section_prop:public Section {$/;"	c
SectorCount	src/platform/visualc/ntddcdrm.h	/^	ULONG  SectorCount;$/;"	m	struct:__RAW_READ_INFO
SectorHashEntry	src/dos/drives.h	/^	struct SectorHashEntry {$/;"	s	class:isoDrive
SecureMode	include/control.h	/^	bool SecureMode() const { return secure_mode; }$/;"	f	class:Config
Seek	src/dos/dev_con.h	/^bool device_CON::Seek(Bit32u * pos,Bit32u type) {$/;"	f	class:device_CON
Seek	src/dos/dos_devices.cpp	/^	virtual bool Seek(Bit32u * pos,Bit32u type) {$/;"	f	class:device_NUL
Seek	src/dos/dos_devices.cpp	/^bool DOS_Device::Seek(Bit32u * pos,Bit32u type) {$/;"	f	class:DOS_Device
Seek	src/dos/dos_mscdex.cpp	/^	bool Seek(Bit32u * \/*pos*\/,Bit32u \/*type*\/){return false;}$/;"	f	class:device_MSCDEX
Seek	src/dos/drive_fat.cpp	/^bool fatFile::Seek(Bit32u *pos, Bit32u type) {$/;"	f	class:fatFile
Seek	src/dos/drive_iso.cpp	/^bool isoFile::Seek(Bit32u *pos, Bit32u type)$/;"	f	class:isoFile
Seek	src/dos/drive_local.cpp	/^bool localFile::Seek(Bit32u * pos,Bit32u type) {$/;"	f	class:localFile
Seek	src/dos/drive_virtual.cpp	/^bool Virtual_File::Seek(Bit32u * new_pos,Bit32u type){$/;"	f	class:Virtual_File
Seek	src/hardware/serialport/serialport.cpp	/^bool device_COM::Seek(Bit32u * pos,Bit32u type) {$/;"	f	class:device_COM
Seek	src/ints/ems.cpp	/^	bool Seek(Bit32u * pos,Bit32u type){return false;}$/;"	f	class:device_EMM
SegBase	src/cpu/core_full.cpp	33;"	d	file:
SegBase	src/cpu/core_simple.cpp	102;"	d	file:
SegBase	src/cpu/core_simple.cpp	35;"	d	file:
SegBase	src/cpu/core_verysimple.cpp	35;"	d	file:
SegBase	src/cpu/core_verysimple.cpp	92;"	d	file:
SegNames	include/regs.h	/^enum SegNames { es=0,cs,ss,ds,fs,gs};$/;"	g
SegPhys	include/regs.h	/^INLINE PhysPt SegPhys(SegNames index) {$/;"	f
SegSet16	include/regs.h	/^INLINE void SegSet16(Bitu index,Bit16u val) {$/;"	f
SegTable	src/debug/disasm_tables.h	/^char * SegTable[8]=		{"es","cs","ss","ds","fs","gs","iseg","iseg"};$/;"	v
SegValue	include/regs.h	/^INLINE Bit16u SegValue(SegNames index) {$/;"	f
Segment	include/regs.h	/^struct Segment {$/;"	s
SegmentNum	src/dos/scsidefs.h	/^    BYTE    SegmentNum;         \/\/ Number of current segment descriptor$/;"	m	struct:__anon123
Segments	include/regs.h	/^struct Segments {$/;"	s
Segs	src/cpu/cpu.cpp	/^Segments Segs;$/;"	v
SelBase	src/cpu/cpu.cpp	/^PhysPt SelBase(Bitu sel) {$/;"	f
SelectionBackground	src/libs/gui_tk/gui_tk.cpp	/^RGB SelectionBackground = 0xff000080;$/;"	m	namespace:GUI::Color	file:
SelectionForeground	src/libs/gui_tk/gui_tk.cpp	/^RGB SelectionForeground = 0xffffffff;$/;"	m	namespace:GUI::Color	file:
SenKeySpec15	src/dos/scsidefs.h	/^    BYTE    SenKeySpec15;       \/\/ Sense Key Specific 15th byte$/;"	m	struct:__anon123
SenKeySpec16	src/dos/scsidefs.h	/^    BYTE    SenKeySpec16;       \/\/ Sense Key Specific 16th byte$/;"	m	struct:__anon123
SenKeySpec17	src/dos/scsidefs.h	/^    BYTE    SenKeySpec17;       \/\/ Sense Key Specific 17th byte$/;"	m	struct:__anon123
SendArray	src/hardware/serialport/misc_util.cpp	/^bool TCPClientSocket::SendArray(Bit8u* data, Bitu bufsize) {$/;"	f	class:TCPClientSocket
SendByteBuffered	src/hardware/serialport/misc_util.cpp	/^bool TCPClientSocket::SendByteBuffered(Bit8u data) {$/;"	f	class:TCPClientSocket
SendDriverRequest	src/dos/dos_mscdex.cpp	/^bool CMscdex::SendDriverRequest(Bit16u drive, PhysPt data)$/;"	f	class:CMscdex
SendLine	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::SendLine(const char *line) {$/;"	f	class:CSerialModem
SendNumber	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::SendNumber(Bitu val) {$/;"	f	class:CSerialModem
SendRes	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::SendRes(ResTypes response) {$/;"	f	class:CSerialModem
SenseArea	src/dos/wnaspi32.h	/^    BYTE        SenseArea[SENSE_LEN+2];         \/\/ 50\/064 Request Sense buffer$/;"	m	struct:__anon126
SenseInfoLength	src/platform/visualc/ntddscsi.h	/^  UCHAR  SenseInfoLength;$/;"	m	struct:_SCSI_PASS_THROUGH
SenseInfoLength	src/platform/visualc/ntddscsi.h	/^  UCHAR  SenseInfoLength;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
SenseInfoOffset	src/platform/visualc/ntddscsi.h	/^  ULONG  SenseInfoOffset;$/;"	m	struct:_SCSI_PASS_THROUGH
SenseInfoOffset	src/platform/visualc/ntddscsi.h	/^  ULONG  SenseInfoOffset;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
SenseKey	src/dos/scsidefs.h	/^    BYTE    SenseKey;           \/\/ Sense Key(See bit definitions too)$/;"	m	struct:__anon123
SequenceNumber	src/platform/visualc/ntddcdrm.h	/^  UCHAR  SequenceNumber;$/;"	m	struct:_CDROM_TOC_CD_TEXT_DATA_BLOCK
SerialNumber	include/ipx.h	/^	Bitu SerialNumber;$/;"	m	class:ECBClass
Serial_EventHandler	src/hardware/serialport/serialport.cpp	/^static void Serial_EventHandler(Bitu val) {$/;"	f	file:
SessionNumber	src/platform/visualc/ntddcdrm.h	/^  UCHAR  SessionNumber;$/;"	m	struct:_CDROM_TOC_FULL_TOC_DATA_BLOCK
SessionTrack	src/platform/visualc/ntddcdrm.h	/^  UCHAR  SessionTrack;$/;"	m	struct:_CDROM_READ_TOC_EX
SetActiveBind	src/gui/sdl_mapper.cpp	/^static void SetActiveBind(CBind * _bind) {$/;"	f	file:
SetActiveEvent	src/gui/sdl_mapper.cpp	/^static void SetActiveEvent(CEvent * event) {$/;"	f	file:
SetAddress	src/debug/debug.cpp	/^	void					SetAddress		(Bit16u seg, Bit32u off)	{ location = GetAddress(seg,off);	type = BKPNT_PHYSICAL; segment = seg; offset = off; };$/;"	f	class:CBreakpoint
SetAddress	src/debug/debug.cpp	/^	void					SetAddress		(PhysPt adr)				{ location = adr;				type = BKPNT_PHYSICAL; };$/;"	f	class:CBreakpoint
SetAttr	src/dos/dos_classes.cpp	/^void DOS_FCB::SetAttr(Bit8u attr) {$/;"	f	class:DOS_FCB
SetAttribute	src/dos/dos_mscdex.cpp	/^	void	SetAttribute		(Bit16u atr)	{ sSave(sDeviceHeader,devAttributes,atr);		};$/;"	f	class:DOS_DeviceHeader
SetBase	include/cpu.h	/^	void	SetBase			(PhysPt _base)	{ table_base = _base;	}$/;"	f	class:DescriptorTable
SetBaseDir	src/dos/drive_cache.cpp	/^void DOS_Drive_Cache::SetBaseDir(const char* baseDir)$/;"	f	class:DOS_Drive_Cache
SetBuffers	src/dos/dos_classes.cpp	/^void DOS_InfoBlock::SetBuffers(Bit16u x,Bit16u y) {$/;"	f	class:DOS_InfoBlock
SetBusy	include/cpu.h	/^	void SetBusy(bool busy) {$/;"	f	class:TSS_Descriptor
SetClock_ET3K	src/hardware/vga_tseng.cpp	/^void SetClock_ET3K(Bitu which,Bitu target) {$/;"	f
SetClock_ET4K	src/hardware/vga_tseng.cpp	/^void SetClock_ET4K(Bitu which,Bitu target) {$/;"	f
SetClock_PVGA1A	src/hardware/vga_paradise.cpp	/^void SetClock_PVGA1A(Bitu which,Bitu target) {$/;"	f
SetCodeWinStart	src/debug/debug.cpp	/^static void SetCodeWinStart()$/;"	f	file:
SetColor	src/debug/debug.cpp	/^static void SetColor(Bitu test) {$/;"	f	file:
SetColor	src/gui/sdl_mapper.cpp	/^	void SetColor(Bit8u _col) { color=_col; }$/;"	f	class:CButton
SetCommandTail	src/dos/dos_classes.cpp	/^void DOS_PSP::SetCommandTail(RealPt src)$/;"	f	class:DOS_PSP
SetCurDirStruct	src/dos/dos_classes.cpp	/^void DOS_InfoBlock::SetCurDirStruct(Bit32u _curdirstruct) {$/;"	f	class:DOS_InfoBlock
SetCurMode	src/ints/int10_modes.cpp	/^static bool SetCurMode(VideoModeBlock modeblock[],Bitu mode) {$/;"	f	file:
SetDTA	include/dos_inc.h	/^	void SetDTA(Bit32u _dta) { sSave(sSDA,current_dta, _dta); }$/;"	f	class:DOS_SDA
SetDescriptor	include/cpu.h	/^	bool SetDescriptor(Bitu selector, Descriptor& desc) {$/;"	f	class:GDTDescriptorTable
SetDevice	src/dos/cdrom.cpp	/^bool CDROM_Interface_SDL::SetDevice (char* path, int forceCD) $/;"	f	class:CDROM_Interface_SDL
SetDevice	src/dos/cdrom.h	/^	bool	SetDevice			(char* \/*path*\/, int \/*forceCD*\/) { return true; };$/;"	f	class:CDROM_Interface_Fake
SetDevice	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::SetDevice(char* path, int forceCD)$/;"	f	class:CDROM_Interface_Aspi
SetDevice	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::SetDevice(char* path, int forceCD)$/;"	f	class:CDROM_Interface_Image
SetDevice	src/dos/cdrom_ioctl_linux.cpp	/^bool CDROM_Interface_Ioctl::SetDevice(char* path, int forceCD)$/;"	f	class:CDROM_Interface_Ioctl
SetDevice	src/dos/cdrom_ioctl_os2.cpp	/^bool CDROM_Interface_Ioctl::SetDevice(char* path, int forceCD) {$/;"	f	class:CDROM_Interface_Ioctl
SetDevice	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::SetDevice(char* path, int forceCD) {$/;"	f	class:CDROM_Interface_Ioctl
SetDeviceChainStart	src/dos/dos_classes.cpp	/^void DOS_InfoBlock::SetDeviceChainStart(Bit32u _devchain) {$/;"	f	class:DOS_InfoBlock
SetDeviceNumber	include/dos_system.h	/^	void SetDeviceNumber(Bitu num) { devnum=num;}$/;"	f	class:DOS_Device
SetDir	include/dos_system.h	/^	virtual void SetDir(const char* path) { strcpy(curdir,path); };$/;"	f	class:DOS_Drive
SetDir	src/dos/drive_local.cpp	/^void cdromDrive::SetDir(const char* path) {$/;"	f	class:cdromDrive
SetDirID	include/dos_inc.h	/^	void	SetDirID(Bit16u entry)			{ sSave(sDTA,dirID,entry); };$/;"	f	class:DOS_DTA
SetDirIDCluster	include/dos_inc.h	/^	void	SetDirIDCluster(Bit16u entry)	{ sSave(sDTA,dirCluster,entry); };$/;"	f	class:DOS_DTA
SetDirSort	include/dos_system.h	/^	void		SetDirSort			(TDirSort sort) { sortDirType = sort; };$/;"	f	class:DOS_Drive_Cache
SetDiskBufferHeadPt	src/dos/dos_classes.cpp	/^void DOS_InfoBlock::SetDiskBufferHeadPt(Bit32u _dbheadpt) {$/;"	f	class:DOS_InfoBlock
SetDrive	include/dos_inc.h	/^	void SetDrive(Bit8u _drive) { sSave(sSDA,current_drive, _drive); }$/;"	f	class:DOS_SDA
SetDrive	include/dos_system.h	/^	void SetDrive(Bit8u drv) { hdrive=drv;}$/;"	f	class:DOS_File
SetDriveLetter	src/dos/dos_mscdex.cpp	/^	void	SetDriveLetter		(Bit8u letter)	{ sSave(sDeviceHeader,driveLetter,letter);		};$/;"	f	class:DOS_DeviceHeader
SetEnv	src/misc/programs.cpp	/^bool Program::SetEnv(const char * entry,const char * new_string) {$/;"	f	class:Program
SetEnvironment	include/dos_inc.h	/^	void	SetEnvironment		(Bit16u envseg)			{ sSave(sPSP,environment,envseg);	};$/;"	f	class:DOS_PSP
SetFCB1	src/dos/dos_classes.cpp	/^void DOS_PSP::SetFCB1(RealPt src)$/;"	f	class:DOS_PSP
SetFCB2	src/dos/dos_classes.cpp	/^void DOS_PSP::SetFCB2(RealPt src)$/;"	f	class:DOS_PSP
SetFCBTable	src/dos/dos_classes.cpp	/^void DOS_InfoBlock::SetFCBTable(Bit32u _fcbtable) {$/;"	f	class:DOS_InfoBlock
SetFileHandle	src/dos/dos_classes.cpp	/^void DOS_PSP::SetFileHandle(Bit16u index, Bit8u handle) $/;"	f	class:DOS_PSP
SetFileName	include/dos_inc.h	/^	void SetFileName(char const * const _name) { MEM_BlockWrite(pt+offsetof(sMCB,filename),_name,8); }$/;"	f	class:DOS_MCB
SetFirstMCB	src/dos/dos_classes.cpp	/^void DOS_InfoBlock::SetFirstMCB(Bit16u _firstmcb) {$/;"	f	class:DOS_InfoBlock
SetFlags	src/gui/sdl_mapper.cpp	/^	void SetFlags(char * buf) {$/;"	f	class:CBind
SetFreq	src/hardware/mixer.cpp	/^void MixerChannel::SetFreq(Bitu _freq) {$/;"	f	class:MixerChannel
SetInt	src/debug/debug.cpp	/^	void					SetInt			(Bit8u _intNr, Bit16u ah)	{ intNr = _intNr, ahValue = ah; type = BKPNT_INTERRUPT; };$/;"	f	class:CBreakpoint
SetInt22	include/dos_inc.h	/^	void	SetInt22			(RealPt int22pt)		{ sSave(sPSP,int_22,int22pt);		};$/;"	f	class:DOS_PSP
SetInterrupt	src/dos/dos_mscdex.cpp	/^	void	SetInterrupt		(Bit16u ofs)	{ sSave(sDeviceHeader,interrupt,ofs);			};$/;"	f	class:DOS_DeviceHeader
SetLabel	src/dos/drive_cache.cpp	/^void DOS_Drive_Cache::SetLabel(const char* vname,bool cdrom,bool allowupdate)$/;"	f	class:DOS_Drive_Cache
SetLimit	include/cpu.h	/^	void	SetLimit		(Bitu _limit)	{ table_limit= _limit;	}$/;"	f	class:DescriptorTable
SetLocation	src/dos/dos_classes.cpp	/^void DOS_InfoBlock::SetLocation(Bit16u segment) {$/;"	f	class:DOS_InfoBlock
SetMask	include/dma.h	/^	void SetMask(bool _mask) {$/;"	f	class:DmaChannel
SetMinMax	include/setup.h	/^	void SetMinMax(Value const& min,Value const& max) {this->min = min; this->max=max;}$/;"	f	class:Prop_int
SetName	include/dos_system.h	/^	virtual void	SetName(const char* _name)	{ if (name) delete[] name; name = new char[strlen(_name)+1]; strcpy(name,_name); }$/;"	f	class:DOS_File
SetName	src/dos/dos_classes.cpp	/^void DOS_FCB::SetName(Bit8u _drive,char * _fname,char * _ext) {$/;"	f	class:DOS_FCB
SetName	src/dos/dos_mscdex.cpp	/^	void	SetName				(char const* _name)	{ MEM_BlockWrite(pt+offsetof(sDeviceHeader,name),_name,8); };$/;"	f	class:DOS_DeviceHeader
SetNextDeviceHeader	src/dos/dos_mscdex.cpp	/^	void	SetNextDeviceHeader	(RealPt ptr)	{ sSave(sDeviceHeader,nextDeviceHeader,ptr);	};$/;"	f	class:DOS_DeviceHeader
SetNumFiles	src/dos/dos_classes.cpp	/^bool DOS_PSP::SetNumFiles(Bit16u fileNum)$/;"	f	class:DOS_PSP
SetNumSubUnits	src/dos/dos_mscdex.cpp	/^	void	SetNumSubUnits		(Bit8u num)		{ sSave(sDeviceHeader,numSubUnits,num);			};$/;"	f	class:DOS_DeviceHeader
SetOnce	src/debug/debug.cpp	/^	void					SetOnce			(bool _once)				{ once = _once; };$/;"	f	class:CBreakpoint
SetOppositeAxis	src/gui/sdl_mapper.cpp	/^	void SetOppositeAxis(CJAxisEvent * _opposite_axis) {$/;"	f	class:CJAxisEvent
SetPSP	include/dos_inc.h	/^	void SetPSP(Bit16u _psp) { sSave(sSDA,current_psp, _psp); }$/;"	f	class:DOS_SDA
SetPSPSeg	include/dos_inc.h	/^	void SetPSPSeg(Bit16u _pspseg) { sSave(sMCB,psp_segment,_pspseg);}$/;"	f	class:DOS_MCB
SetPage	include/dma.h	/^	void SetPage(Bit8u val) {$/;"	f	class:DmaChannel
SetParent	include/dos_inc.h	/^	void	SetParent			(Bit16u parent)			{ sSave(sPSP,psp_parent,parent);	};$/;"	f	class:DOS_PSP
SetPt	include/dos_inc.h	/^	INLINE void SetPt(Bit16u seg) { pt=PhysMake(seg,0);}$/;"	f	class:MemStruct
SetPt	include/dos_inc.h	/^	INLINE void SetPt(Bit16u seg,Bit16u off) { pt=PhysMake(seg,off);}$/;"	f	class:MemStruct
SetPt	include/dos_inc.h	/^	INLINE void SetPt(RealPt addr) { pt=Real2Phys(addr);}$/;"	f	class:MemStruct
SetRandom	src/dos/dos_classes.cpp	/^void DOS_FCB::SetRandom(Bit32u _random) {$/;"	f	class:DOS_FCB
SetRecord	src/dos/dos_classes.cpp	/^void DOS_FCB::SetRecord(Bit16u _cur_block,Bit8u _cur_rec) {$/;"	f	class:DOS_FCB
SetResult	src/dos/dos_classes.cpp	/^void DOS_DTA::SetResult(const char * _name,Bit32u _size,Bit16u _date,Bit16u _time,Bit8u _attr) {$/;"	f	class:DOS_DTA
SetResult	src/dos/drive_cache.cpp	/^bool DOS_Drive_Cache::SetResult(CFileInfo* dir, char* &result, Bitu entryNr)$/;"	f	class:DOS_Drive_Cache
SetSelector	src/cpu/cpu.cpp	/^	bool SetSelector(Bitu new_sel) {$/;"	f	class:TaskStateSegment
SetSendBufferSize	src/hardware/serialport/misc_util.cpp	/^void TCPClientSocket::SetSendBufferSize(Bitu bufsize) {$/;"	f	class:TCPClientSocket
SetSize	include/dos_inc.h	/^	void	SetSize				(Bit16u size)			{ sSave(sPSP,next_seg,size);		};$/;"	f	class:DOS_PSP
SetSize	include/dos_inc.h	/^	void SetSize(Bit16u _size) { sSave(sMCB,size,_size);}$/;"	f	class:DOS_MCB
SetSizeDateTime	src/dos/dos_classes.cpp	/^void DOS_FCB::SetSizeDateTime(Bit32u _size,Bit16u _date,Bit16u _time) {$/;"	f	class:DOS_FCB
SetStack	include/dos_inc.h	/^	void	SetStack			(RealPt stackpt)		{ sSave(sPSP,stack,stackpt);		};$/;"	f	class:DOS_PSP
SetStartOfUMBChain	src/dos/dos_classes.cpp	/^void DOS_InfoBlock::SetStartOfUMBChain(Bit16u _umbstartseg) {$/;"	f	class:DOS_InfoBlock
SetStartUp	src/misc/setup.cpp	/^void Config::SetStartUp(void (*_function)(void)) { $/;"	f	class:Config
SetState	src/libs/zmbv/zmbv_vfw.cpp	/^DWORD CodecInst::SetState(LPVOID pv, DWORD dwSize) { return 0; }$/;"	f	class:CodecInst
SetStrategy	src/dos/dos_mscdex.cpp	/^	void	SetStrategy			(Bit16u ofs)	{ sSave(sDeviceHeader,strategy,ofs);			};$/;"	f	class:DOS_DeviceHeader
SetType	include/dos_inc.h	/^	void SetType(Bit8u _type) { sSave(sMCB,type,_type);}$/;"	f	class:DOS_MCB
SetType	src/debug/debug.cpp	/^	void					SetType			(EBreakpoint _type)			{ type = _type; };$/;"	f	class:CBreakpoint
SetUMBChainState	src/dos/dos_classes.cpp	/^void DOS_InfoBlock::SetUMBChainState(Bit8u _umbchaining) {$/;"	f	class:DOS_InfoBlock
SetVal	include/setup.h	/^	void SetVal(Value const& in, bool forced,bool warn=true) {if(forced || CheckValue(in,warn)) value = in; else value = default_value;}$/;"	f	class:Property
SetValue	src/debug/debug.cpp	/^	void					SetValue		(Bit8u value)				{ ahValue = value; };$/;"	f	class:CBreakpoint
SetValue	src/gui/sdl_mapper.cpp	/^	void SetValue(Bits value){$/;"	f	class:CEvent
SetValue	src/misc/setup.cpp	/^void Prop_bool::SetValue(std::string const& input){$/;"	f	class:Prop_bool
SetValue	src/misc/setup.cpp	/^void Prop_double::SetValue(std::string const& input){$/;"	f	class:Prop_double
SetValue	src/misc/setup.cpp	/^void Prop_hex::SetValue(std::string const& input){$/;"	f	class:Prop_hex
SetValue	src/misc/setup.cpp	/^void Prop_int::SetValue(std::string const& input){;$/;"	f	class:Prop_int
SetValue	src/misc/setup.cpp	/^void Prop_multival::SetValue(std::string const& input) {$/;"	f	class:Prop_multival
SetValue	src/misc/setup.cpp	/^void Prop_multival_remain::SetValue(std::string const& input) {$/;"	f	class:Prop_multival_remain
SetValue	src/misc/setup.cpp	/^void Prop_path::SetValue(std::string const& input){$/;"	f	class:Prop_path
SetValue	src/misc/setup.cpp	/^void Prop_string::SetValue(std::string const& input){$/;"	f	class:Prop_string
SetValue	src/misc/setup.cpp	/^void Value::SetValue(string const& in,Etype _type) throw(WrongType) {$/;"	f	class:Value
SetVolume	src/hardware/mixer.cpp	/^void MixerChannel::SetVolume(float _left,float _right) {$/;"	f	class:MixerChannel
Set_Geometry	src/ints/bios_disk.cpp	/^void imageDisk::Set_Geometry(Bit32u setHeads, Bit32u setCyl, Bit32u setSect, Bit32u setSectSize) {$/;"	f	class:imageDisk
Set_Label	src/dos/drives.cpp	/^void Set_Label(char const * const input, char * const output, bool cdrom) {$/;"	f
Set_RealVec	src/cpu/callback.cpp	/^void CALLBACK_HandlerObject::Set_RealVec(Bit8u vec){$/;"	f	class:CALLBACK_HandlerObject
Set_help	src/misc/setup.cpp	/^void Property::Set_help(string const& in) {$/;"	f	class:Property
Set_values	src/misc/setup.cpp	/^void Property::Set_values(const char * const *in) {$/;"	f	class:Property
SetupAt	src/cpu/core_dyn_x86/cache.h	/^	void SetupAt(Bitu _phys_page,PageHandler * _old_pagehandler) {$/;"	f	class:CodePageHandler
SetupAt	src/cpu/core_dynrec/cache.h	/^	void SetupAt(Bitu _phys_page,PageHandler * _old_pagehandler) {$/;"	f	class:CodePageHandlerDynRec
SetupAt	src/cpu/core_dynrec/save/cache.h	/^	void SetupAt(Bitu _phys_page,PageHandler * _old_pagehandler) {$/;"	f	class:CodePageHandlerDynRec
SetupCMDLine	src/dos/dos_execute.cpp	/^static void SetupCMDLine(Bit16u pspseg,DOS_ParamBlock & block) {$/;"	f	file:
SetupPSP	src/dos/dos_execute.cpp	/^static void SetupPSP(Bit16u pspseg,Bit16u memsize,Bit16u envseg) {$/;"	f	file:
SetupSearch	src/dos/dos_classes.cpp	/^void DOS_DTA::SetupSearch(Bit8u _sdrive,Bit8u _sattr,char * pattern) {$/;"	f	class:DOS_DTA
SetupTandyBios	src/ints/int10.cpp	/^static void SetupTandyBios(void) {$/;"	f	file:
SetupVCPI	src/ints/ems.cpp	/^static void SetupVCPI() {$/;"	f	file:
Shadow3D	src/libs/gui_tk/gui_tk.cpp	/^RGB Shadow3D = 0xff808080;$/;"	m	namespace:GUI::Color	file:
Shift	src/libs/gui_tk/gui_tk.h	/^		Alt, Ctrl, Shift, Windows$/;"	e	enum:GUI::Key::Special
Shift	src/misc/setup.cpp	/^void CommandLine::Shift(unsigned int amount) {$/;"	f	class:CommandLine
Shift	src/shell/shell_batch.cpp	/^void BatchFile::Shift(void) {$/;"	f	class:BatchFile
ShiftOps	src/cpu/core_dyn_x86.cpp	/^enum ShiftOps {$/;"	g	file:
ShiftOps	src/cpu/core_dynrec/decoder_basic.h	/^enum ShiftOps {$/;"	g
ShiftOps	src/cpu/core_dynrec/save/decoder_basic.h	/^enum ShiftOps {$/;"	g
ShowList	src/debug/debug.cpp	/^void CBreakpoint::ShowList(void)$/;"	f	class:CBreakpoint
ShowPrompt	src/shell/shell_misc.cpp	/^void DOS_Shell::ShowPrompt(void) {$/;"	f	class:DOS_Shell
ShowVolume	src/hardware/mixer.cpp	/^	void ShowVolume(const char * name,float vol0,float vol1) {$/;"	f	class:MIXER	file:
Sib	src/cpu/core_normal/table_ea.h	/^static INLINE PhysPt Sib(Bitu mode) {$/;"	f
Signature	src/platform/visualc/ntddscsi.h	/^  UCHAR  Signature[8]; $/;"	m	struct:_SRB_IO_CONTROL
SingleOps	src/cpu/core_dyn_x86.cpp	/^enum SingleOps {$/;"	g	file:
SingleOps	src/cpu/core_dynrec/decoder_basic.h	/^enum SingleOps {$/;"	g
SingleOps	src/cpu/core_dynrec/save/decoder_basic.h	/^enum SingleOps {$/;"	g
Size	src/libs/gui_tk/gui_tk.h	/^typedef unsigned int Size;$/;"	t	namespace:GUI
SmallBlocks	src/cpu/core_dynrec/save/cache.h	/^Bit8u SmallBlocks[SBSIZE*SBNUM];$/;"	v
SortByDirName	src/dos/drive_cache.cpp	/^bool SortByDirName(DOS_Drive_Cache::CFileInfo* const &a, DOS_Drive_Cache::CFileInfo* const &b) $/;"	f
SortByDirNameRev	src/dos/drive_cache.cpp	/^bool SortByDirNameRev(DOS_Drive_Cache::CFileInfo* const &a, DOS_Drive_Cache::CFileInfo* const &b) $/;"	f
SortByName	src/dos/drive_cache.cpp	/^bool SortByName(DOS_Drive_Cache::CFileInfo* const &a, DOS_Drive_Cache::CFileInfo* const &b) $/;"	f
SortByNameRev	src/dos/drive_cache.cpp	/^bool SortByNameRev(DOS_Drive_Cache::CFileInfo* const &a, DOS_Drive_Cache::CFileInfo* const &b) $/;"	f
Space	src/libs/gui_tk/gui_tk.h	/^	enum SpecialChar { CR = '\\r', LF = '\\n', BS = '\\b', Tab = '\\t', Space = ' ', ESC = 27 };$/;"	e	enum:GUI::Font::SpecialChar
Special	src/libs/gui_tk/gui_tk.h	/^	enum Special {$/;"	g	class:GUI::Key
SpecialChar	src/libs/gui_tk/gui_tk.h	/^	enum SpecialChar { CR = '\\r', LF = '\\n', BS = '\\b', Tab = '\\t', Space = ' ', ESC = 27 };$/;"	g	class:GUI::Font
Start	src/hardware/adlib.h	/^	void Start( const double& time, Bits scale ) {$/;"	f	struct:Adlib::Timer
StartUp	src/misc/setup.cpp	/^void Config::StartUp(void) {$/;"	f	class:Config
StartingF	src/platform/visualc/ntddcdrm.h	/^  UCHAR  StartingF;$/;"	m	struct:_CDROM_PLAY_AUDIO_MSF
StartingM	src/platform/visualc/ntddcdrm.h	/^  UCHAR  StartingM;$/;"	m	struct:_CDROM_PLAY_AUDIO_MSF
StartingS	src/platform/visualc/ntddcdrm.h	/^  UCHAR  StartingS;$/;"	m	struct:_CDROM_PLAY_AUDIO_MSF
StepOver	src/debug/debug.cpp	/^static bool StepOver()$/;"	f	file:
Stop	src/hardware/adlib.h	/^	void Stop( ) {$/;"	f	struct:Adlib::Timer
StopAudio	src/dos/cdrom.cpp	/^bool CDROM_Interface_SDL::StopAudio	(void) $/;"	f	class:CDROM_Interface_SDL
StopAudio	src/dos/cdrom.h	/^	bool	StopAudio			(void) { return true; };$/;"	f	class:CDROM_Interface_Fake
StopAudio	src/dos/cdrom_aspi_win32.cpp	/^bool CDROM_Interface_Aspi::StopAudio(void)$/;"	f	class:CDROM_Interface_Aspi
StopAudio	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::StopAudio(void)$/;"	f	class:CDROM_Interface_Image
StopAudio	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::StopAudio(void) {$/;"	f	class:CDROM_Interface_Ioctl
StopAudio	src/dos/dos_mscdex.cpp	/^bool CMscdex::StopAudio(Bit8u subUnit)$/;"	f	class:CMscdex
String	src/libs/gui_tk/gui_tk.h	/^	String() { }$/;"	f	class:GUI::String
String	src/libs/gui_tk/gui_tk.h	/^	String(const String &src) : std::vector<Char>(src), strings() {};$/;"	f	class:GUI::String
String	src/libs/gui_tk/gui_tk.h	/^	template <class InputIterator> String(InputIterator a, InputIterator b) : std::vector<Char>(a,b) {}$/;"	f	class:GUI::String
String	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> String(const STR& src) { NativeString<STR>::getString(*this, src); }$/;"	f	class:GUI::String
String	src/libs/gui_tk/gui_tk.h	/^class String : public std::vector<Char> {$/;"	c	namespace:GUI
StringOps	src/cpu/core_dynrec/decoder_basic.h	/^enum StringOps {$/;"	g
StringOps	src/cpu/core_dynrec/save/decoder_basic.h	/^enum StringOps {$/;"	g
StripSpaces	src/shell/shell_cmds.cpp	/^static void StripSpaces(char*&args) {$/;"	f	file:
StripSpaces	src/shell/shell_cmds.cpp	/^static void StripSpaces(char*&args,char also) {$/;"	f	file:
StripWord	src/misc/support.cxx	/^char * StripWord(char *&line) {$/;"	f
SupportedAsynchronousEvents	src/platform/visualc/ntddscsi.h	/^	ULONG  SupportedAsynchronousEvents;$/;"	m	struct:_IO_SCSI_CAPABILITIES
Sw	src/debug/disasm_tables.h	/^	Sw,$/;"	e	enum:__anon111
SwitchToSecureMode	include/control.h	/^	void SwitchToSecureMode() { secure_mode = true; }\/\/can't be undone$/;"	f	class:Config
SyntaxError	src/shell/shell.cpp	/^void DOS_Shell::SyntaxError(void) {$/;"	f	class:DOS_Shell
T	src/hardware/fmopl.cpp	/^	int		T[2];					\/* timer counters				*\/$/;"	m	struct:fm_opl_f	file:
T	src/hardware/ymf262.cpp	/^	int		T[2];					\/* timer counters				*\/$/;"	m	struct:__anon192	file:
TAG_Empty	include/fpu.h	/^	TAG_Empty = 3$/;"	e	enum:FPU_Tag
TAG_Valid	include/fpu.h	/^	TAG_Valid = 0,$/;"	e	enum:FPU_Tag
TAG_Weird	include/fpu.h	/^	TAG_Weird = 2,$/;"	e	enum:FPU_Tag
TAG_Zero	include/fpu.h	/^	TAG_Zero  = 1,$/;"	e	enum:FPU_Tag
TANDY16_CopyRow	src/ints/int10_char.cpp	/^static INLINE void TANDY16_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) {$/;"	f	file:
TANDY16_FillRow	src/ints/int10_char.cpp	/^static INLINE void TANDY16_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u attr) {$/;"	f	file:
TANDYSOUND	src/hardware/tandy_sound.cpp	/^	TANDYSOUND(Section* configuration):Module_base(configuration){$/;"	f	class:TANDYSOUND
TANDYSOUND	src/hardware/tandy_sound.cpp	/^class TANDYSOUND: public Module_base {$/;"	c	file:
TANDYSOUND_Init	src/hardware/tandy_sound.cpp	/^void TANDYSOUND_Init(Section* sec) {$/;"	f
TANDYSOUND_ShutDown	src/hardware/tandy_sound.cpp	/^void TANDYSOUND_ShutDown(Section* sec) {$/;"	f
TANDY_ARCH_CASE	include/dosbox.h	69;"	d
TANDY_FindMode	src/hardware/vga_other.cpp	/^static void TANDY_FindMode(void) {$/;"	f	file:
TANDY_VIDBASE	src/hardware/vga_memory.cpp	57;"	d	file:
TC	src/hardware/fmopl.cpp	/^	int		TC[2];$/;"	m	struct:fm_opl_f	file:
TC	src/hardware/ymf262.cpp	/^	int		TC[2];$/;"	m	struct:__anon192	file:
TCPClientSocket	src/hardware/serialport/misc_util.cpp	/^TCPClientSocket::TCPClientSocket(TCPsocket source) {$/;"	f	class:TCPClientSocket
TCPClientSocket	src/hardware/serialport/misc_util.cpp	/^TCPClientSocket::TCPClientSocket(const char* destination, Bit16u port) {$/;"	f	class:TCPClientSocket
TCPClientSocket	src/hardware/serialport/misc_util.cpp	/^TCPClientSocket::TCPClientSocket(int platformsocket) {$/;"	f	class:TCPClientSocket
TCPClientSocket	src/hardware/serialport/misc_util.h	/^class TCPClientSocket {$/;"	c
TCPServerSocket	src/hardware/serialport/misc_util.cpp	/^TCPServerSocket::TCPServerSocket(Bit16u port)$/;"	f	class:TCPServerSocket
TCPServerSocket	src/hardware/serialport/misc_util.h	/^class TCPServerSocket {$/;"	c
TDeviceHeader	src/dos/dos_mscdex.cpp	/^	} GCC_ATTRIBUTE(packed) TDeviceHeader;$/;"	m	class:DOS_DeviceHeader	file:
TDirSort	include/dos_system.h	/^	enum TDirSort { NOSORT, ALPHABETICAL, DIRALPHABETICAL, ALPHABETICALREV, DIRALPHABETICALREV };$/;"	g	class:DOS_Drive_Cache
TDriveInfo	src/dos/dos_mscdex.cpp	/^	} TDriveInfo;$/;"	t	class:CMscdex	typeref:struct:CMscdex::SDriveInfo	file:
TEL_CLIENT	src/hardware/serialport/nullmodem.h	86;"	d
TEL_CLIENT	src/hardware/serialport/softmodem.h	51;"	d
TEL_SERVER	src/hardware/serialport/nullmodem.h	87;"	d
TEL_SERVER	src/hardware/serialport/softmodem.h	52;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/risc_armv4le-o3.h	49;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/risc_armv4le-s3.h	49;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	54;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	54;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/risc_armv4le-thumb.h	54;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/risc_mipsel32.h	84;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/risc_x64.h	74;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/risc_x86.h	81;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/save/risc_armv4le-o3.h	49;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/save/risc_armv4le-s3.h	49;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	54;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	54;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	54;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/save/risc_mipsel32.h	84;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/save/risc_x64.h	74;"	d
TEMP_REG_DRC	src/cpu/core_dynrec/save/risc_x86.h	81;"	d
TESTB	src/cpu/arminst.h	75;"	d
TESTB	src/cpu/core_normal/prefix_none.h	/^		ALIb(TESTB);break;$/;"	v
TESTB	src/cpu/core_normal/prefix_none.h	/^		RMEbGb(TESTB);$/;"	v
TESTB	src/cpu/core_normal/verysimple_prefix_none.h	/^		ALIb(TESTB);break;$/;"	v
TESTB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEbGb(TESTB);$/;"	v
TESTB	src/cpu/instructions.h	71;"	d
TESTD	src/cpu/arminst.h	188;"	d
TESTD	src/cpu/core_normal/prefix_66.h	/^		EAXId(TESTD);break;$/;"	v
TESTD	src/cpu/core_normal/prefix_66.h	/^		RMEdGd(TESTD);break;$/;"	v
TESTD	src/cpu/instructions.h	184;"	d
TESTW	src/cpu/arminst.h	131;"	d
TESTW	src/cpu/core_normal/prefix_none.h	/^		AXIw(TESTW);break;$/;"	v
TESTW	src/cpu/core_normal/prefix_none.h	/^		RMEwGw(TESTW);$/;"	v
TESTW	src/cpu/core_normal/verysimple_prefix_none.h	/^		AXIw(TESTW);break;$/;"	v
TESTW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEwGw(TESTW);$/;"	v
TESTW	src/cpu/instructions.h	127;"	d
TEST_PREFIX_ADDR	src/cpu/core_simple.cpp	60;"	d	file:
TEST_PREFIX_ADDR	src/cpu/core_verysimple.cpp	59;"	d	file:
TEST_PREFIX_REP	src/cpu/core_simple.cpp	61;"	d	file:
TEST_PREFIX_REP	src/cpu/core_verysimple.cpp	60;"	d	file:
TEXT_CopyRow	src/ints/int10_char.cpp	/^static INLINE void TEXT_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) {$/;"	f	file:
TEXT_FillRow	src/ints/int10_char.cpp	/^static INLINE void TEXT_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u attr) {$/;"	f	file:
TFLG_B	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_B);break;$/;"	v
TFLG_B	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_B);break;$/;"	v
TFLG_B	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_B);break;$/;"	v
TFLG_B	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_B);break;$/;"	v
TFLG_B	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_B);break;$/;"	v
TFLG_B	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_B);break;$/;"	v
TFLG_B	src/cpu/lazyflags.h	87;"	d
TFLG_BE	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_BE);break;$/;"	v
TFLG_BE	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_BE);break;$/;"	v
TFLG_BE	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_BE);break;$/;"	v
TFLG_BE	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_BE);break;$/;"	v
TFLG_BE	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_BE);break;$/;"	v
TFLG_BE	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_BE);break;$/;"	v
TFLG_BE	src/cpu/lazyflags.h	91;"	d
TFLG_L	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_L);break;$/;"	v
TFLG_L	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_L);break;$/;"	v
TFLG_L	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_L);break;$/;"	v
TFLG_L	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_L);break;$/;"	v
TFLG_L	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_L);break;$/;"	v
TFLG_L	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_L);break;$/;"	v
TFLG_L	src/cpu/lazyflags.h	97;"	d
TFLG_LE	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_LE);break;$/;"	v
TFLG_LE	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_LE);break;$/;"	v
TFLG_LE	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_LE);break;$/;"	v
TFLG_LE	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_LE);break;$/;"	v
TFLG_LE	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_LE);break;$/;"	v
TFLG_LE	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_LE);break;$/;"	v
TFLG_LE	src/cpu/lazyflags.h	99;"	d
TFLG_NB	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_NB);break;$/;"	v
TFLG_NB	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_NB);break;$/;"	v
TFLG_NB	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_NB);break;$/;"	v
TFLG_NB	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_NB);break;$/;"	v
TFLG_NB	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_NB);break;$/;"	v
TFLG_NB	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_NB);break;$/;"	v
TFLG_NB	src/cpu/lazyflags.h	88;"	d
TFLG_NBE	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_NBE);break;$/;"	v
TFLG_NBE	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_NBE);break;$/;"	v
TFLG_NBE	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_NBE);break;$/;"	v
TFLG_NBE	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_NBE);break;$/;"	v
TFLG_NBE	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_NBE);break;$/;"	v
TFLG_NBE	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_NBE);break;$/;"	v
TFLG_NBE	src/cpu/lazyflags.h	92;"	d
TFLG_NL	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_NL);break;$/;"	v
TFLG_NL	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_NL);break;$/;"	v
TFLG_NL	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_NL);break;$/;"	v
TFLG_NL	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_NL);break;$/;"	v
TFLG_NL	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_NL);break;$/;"	v
TFLG_NL	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_NL);break;$/;"	v
TFLG_NL	src/cpu/lazyflags.h	98;"	d
TFLG_NLE	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_NLE);break;$/;"	v
TFLG_NLE	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_NLE);break;$/;"	v
TFLG_NLE	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_NLE);break;$/;"	v
TFLG_NLE	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_NLE);break;$/;"	v
TFLG_NLE	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_NLE);break;$/;"	v
TFLG_NLE	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_NLE);break;$/;"	v
TFLG_NLE	src/cpu/lazyflags.h	100;"	d
TFLG_NO	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_NO);break;$/;"	v
TFLG_NO	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_NO);break;$/;"	v
TFLG_NO	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_NO);break;$/;"	v
TFLG_NO	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_NO);break;$/;"	v
TFLG_NO	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_NO);break;$/;"	v
TFLG_NO	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_NO);break;$/;"	v
TFLG_NO	src/cpu/lazyflags.h	86;"	d
TFLG_NP	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_NP);break;$/;"	v
TFLG_NP	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_NP);break;$/;"	v
TFLG_NP	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_NP);break;$/;"	v
TFLG_NP	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_NP);break;$/;"	v
TFLG_NP	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_NP);break;$/;"	v
TFLG_NP	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_NP);break;$/;"	v
TFLG_NP	src/cpu/lazyflags.h	96;"	d
TFLG_NS	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_NS);break;$/;"	v
TFLG_NS	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_NS);break;$/;"	v
TFLG_NS	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_NS);break;$/;"	v
TFLG_NS	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_NS);break;$/;"	v
TFLG_NS	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_NS);break;$/;"	v
TFLG_NS	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_NS);break;$/;"	v
TFLG_NS	src/cpu/lazyflags.h	94;"	d
TFLG_NZ	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_NZ);break;$/;"	v
TFLG_NZ	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_NZ);	break;$/;"	v
TFLG_NZ	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_NZ);break;$/;"	v
TFLG_NZ	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_NZ);break;$/;"	v
TFLG_NZ	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_NZ);break;$/;"	v
TFLG_NZ	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_NZ);break;$/;"	v
TFLG_NZ	src/cpu/lazyflags.h	90;"	d
TFLG_O	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_O);break;$/;"	v
TFLG_O	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_O);break;$/;"	v
TFLG_O	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_O);break;$/;"	v
TFLG_O	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_O);break;$/;"	v
TFLG_O	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_O);break;$/;"	v
TFLG_O	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_O);break;$/;"	v
TFLG_O	src/cpu/lazyflags.h	85;"	d
TFLG_P	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_P);break;$/;"	v
TFLG_P	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_P);break;$/;"	v
TFLG_P	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_P);break;$/;"	v
TFLG_P	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_P);break;$/;"	v
TFLG_P	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_P);break;$/;"	v
TFLG_P	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_P);break;$/;"	v
TFLG_P	src/cpu/lazyflags.h	95;"	d
TFLG_S	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_S);break;$/;"	v
TFLG_S	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_S);break;$/;"	v
TFLG_S	src/cpu/core_normal/prefix_66.h	/^		JumpCond32_b(TFLG_S);break;$/;"	v
TFLG_S	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_S);break;$/;"	v
TFLG_S	src/cpu/core_normal/prefix_none.h	/^		JumpCond16_b(TFLG_S);break;$/;"	v
TFLG_S	src/cpu/core_normal/verysimple_prefix_none.h	/^		JumpCond16_b(TFLG_S);break;$/;"	v
TFLG_S	src/cpu/lazyflags.h	93;"	d
TFLG_Z	src/cpu/core_normal/prefix_0f.h	/^		JumpCond16_w(TFLG_Z);break;$/;"	v
TFLG_Z	src/cpu/core_normal/prefix_0f.h	/^		SETcc(TFLG_Z);break;$/;"	v
TFLG_Z	src/cpu/core_normal/prefix_66.h	/^  		JumpCond32_b(TFLG_Z);break;$/;"	v
TFLG_Z	src/cpu/core_normal/prefix_66_0f.h	/^		JumpCond32_d(TFLG_Z);break;$/;"	v
TFLG_Z	src/cpu/core_normal/prefix_none.h	/^  		JumpCond16_b(TFLG_Z);break;$/;"	v
TFLG_Z	src/cpu/core_normal/verysimple_prefix_none.h	/^  		JumpCond16_b(TFLG_Z);break;$/;"	v
TFLG_Z	src/cpu/lazyflags.h	89;"	d
THEOPL3	src/hardware/adlib.cpp	/^namespace THEOPL3 {$/;"	n	file:
THR	include/serialport.h	/^	Bit8u THR;	\/\/	w				Transmit Holding Register$/;"	m	class:CSerial
THR_INT_Enable_MASK	include/serialport.h	216;"	d
THR_OFFSET	include/serialport.h	207;"	d
TIMEOUT	src/hardware/joystick.cpp	30;"	d	file:
TIMER	src/hardware/timer.cpp	/^	TIMER(Section* configuration):Module_base(configuration){$/;"	f	class:TIMER
TIMER	src/hardware/timer.cpp	/^class TIMER:public Module_base{$/;"	c	file:
TIMER_AddTick	src/hardware/pic.cpp	/^void TIMER_AddTick(void) {$/;"	f
TIMER_AddTickHandler	src/hardware/pic.cpp	/^void TIMER_AddTickHandler(TIMER_TickHandler handler) {$/;"	f
TIMER_DelTickHandler	src/hardware/pic.cpp	/^void TIMER_DelTickHandler(TIMER_TickHandler handler) {$/;"	f
TIMER_Destroy	src/hardware/timer.cpp	/^void TIMER_Destroy(Section*){$/;"	f
TIMER_Init	src/hardware/timer.cpp	/^void TIMER_Init(Section* sec) {$/;"	f
TIMER_MicroHandler	include/modules.h	/^typedef void (* TIMER_MicroHandler)(void);$/;"	t
TIMER_RegisterMicroHandler	include/modules.h	/^static  void (* TIMER_RegisterMicroHandler)(TIMER_MicroHandler handler,Bit32u micro);$/;"	v
TIMER_RegisterTickHandler	include/modules.h	/^static  void (* TIMER_RegisterTickHandler)(TIMER_TickHandler handler);$/;"	v
TIMER_SH	src/hardware/fmopl.cpp	89;"	d	file:
TIMER_SH	src/hardware/ymf262.cpp	70;"	d	file:
TIMER_SetGate2	src/hardware/timer.cpp	/^void TIMER_SetGate2(bool in) {$/;"	f
TIMER_TickHandler	include/modules.h	/^typedef void (* TIMER_TickHandler)(Bit32u ticks);$/;"	t
TIMER_TickHandler	include/timer.h	/^typedef void (*TIMER_TickHandler)(void);$/;"	t
TL	src/hardware/fmopl.cpp	/^	UINT32	TL;			\/* total level: TL << 2			*\/$/;"	m	struct:__anon153	file:
TL	src/hardware/ymf262.cpp	/^	UINT32	TL;			\/* total level: TL << 2			*\/$/;"	m	struct:__anon190	file:
TLB_BANKS	include/paging.h	48;"	d
TLB_CROP	include/paging.h	40;"	d
TLB_SIZE	include/paging.h	43;"	d
TLB_SIZE	include/paging.h	45;"	d
TLL	src/hardware/fmopl.cpp	/^	INT32	TLL;		\/* adjusted now TL				*\/$/;"	m	struct:__anon153	file:
TLL	src/hardware/ymf262.cpp	/^	INT32	TLL;		\/* adjusted now TL				*\/$/;"	m	struct:__anon190	file:
TL_RES_LEN	src/hardware/fmopl.cpp	106;"	d	file:
TL_RES_LEN	src/hardware/ymf262.cpp	87;"	d	file:
TL_TAB_LEN	src/hardware/adlib.cpp	96;"	d	file:
TL_TAB_LEN	src/hardware/fmopl.cpp	515;"	d	file:
TL_TAB_LEN	src/hardware/ymf262.cpp	469;"	d	file:
TLogInst	src/debug/debug.cpp	/^struct TLogInst {$/;"	s	file:
TMSF	src/dos/cdrom.h	/^} TMSF;$/;"	t	typeref:struct:SMSF
TOC	src/dos/wnaspi32.h	/^} TOC, *PTOC, FAR *LPTOC;$/;"	t	typeref:struct:__anon133
TOC_TRACK	src/dos/wnaspi32.h	/^} TOC_TRACK;$/;"	t	typeref:struct:__anon132
TOP	include/fpu.h	104;"	d
TRACK_DATA	src/platform/visualc/ntddcdrm.h	/^} TRACK_DATA, *PTRACK_DATA;$/;"	t	typeref:struct:_TRACK_DATA
TRACK_MODE_TYPE	src/platform/visualc/ntddcdrm.h	/^} TRACK_MODE_TYPE, *PTRACK_MODE_TYPE;$/;"	t	typeref:enum:_TRACK_MODE_TYPE
TSS_16	include/cpu.h	/^struct TSS_16 {	$/;"	s
TSS_32	include/cpu.h	/^struct TSS_32 {	$/;"	s
TSS_Descriptor	include/cpu.h	/^class TSS_Descriptor : public Descriptor {$/;"	c
TSwitchType	src/cpu/cpu.cpp	/^enum TSwitchType {$/;"	g	file:
TSwitch_CALL_INT	src/cpu/cpu.cpp	/^	TSwitch_JMP,TSwitch_CALL_INT,TSwitch_IRET$/;"	e	enum:TSwitchType	file:
TSwitch_IRET	src/cpu/cpu.cpp	/^	TSwitch_JMP,TSwitch_CALL_INT,TSwitch_IRET$/;"	e	enum:TSwitchType	file:
TSwitch_JMP	src/cpu/cpu.cpp	/^	TSwitch_JMP,TSwitch_CALL_INT,TSwitch_IRET$/;"	e	enum:TSwitchType	file:
TWO_FOUR_CHANNEL_AUDIO	src/platform/visualc/ntddcdrm.h	291;"	d
TXT_BG_Table	src/hardware/vga.cpp	/^Bit32u TXT_BG_Table[16];$/;"	v
TXT_FG_Table	src/hardware/vga.cpp	/^Bit32u TXT_FG_Table[16];$/;"	v
TXT_Font_Table	src/hardware/vga.cpp	/^Bit32u TXT_Font_Table[16];$/;"	v
TX_PRIORITY	include/serialport.h	192;"	d
Tab	src/libs/gui_tk/gui_tk.h	/^		Up, Down, Left, Right, Backspace, Tab, Backtab, Enter, Escape,$/;"	e	enum:GUI::Key::Special
Tab	src/libs/gui_tk/gui_tk.h	/^	enum SpecialChar { CR = '\\r', LF = '\\n', BS = '\\b', Tab = '\\t', Space = ' ', ESC = 27 };$/;"	e	enum:GUI::Font::SpecialChar
TaggedQueuing	src/platform/visualc/ntddscsi.h	/^	BOOLEAN  TaggedQueuing;$/;"	m	struct:_IO_SCSI_CAPABILITIES
TandyCheckLineMask	src/hardware/vga_other.cpp	/^static void TandyCheckLineMask(void ) {$/;"	f	file:
TandyDACWrite	src/hardware/tandy_sound.cpp	/^static void TandyDACWrite(Bitu port,Bitu data,Bitu iolen) {$/;"	f	file:
TandyDAC_Handler	src/ints/bios.cpp	/^static void TandyDAC_Handler(Bit8u tfunction) {$/;"	f	file:
Tandy_InitializeSB	src/ints/bios.cpp	/^static bool Tandy_InitializeSB() {$/;"	f	file:
Tandy_ProbeSBPort	src/ints/bios.cpp	/^static bool Tandy_ProbeSBPort(Bit16u sbport) {$/;"	f	file:
Tandy_SetupTransfer	src/ints/bios.cpp	/^static void Tandy_SetupTransfer(PhysPt bufpt,bool isplayback) {$/;"	f	file:
Tandy_TransferInProgress	src/ints/bios.cpp	/^static bool Tandy_TransferInProgress(void) {$/;"	f	file:
TargetId	src/platform/visualc/ntddscsi.h	/^	UCHAR  TargetId;$/;"	m	struct:_SCSI_ADDRESS
TargetId	src/platform/visualc/ntddscsi.h	/^	UCHAR  TargetId;$/;"	m	struct:_SCSI_INQUIRY_DATA
TargetId	src/platform/visualc/ntddscsi.h	/^  UCHAR  TargetId;$/;"	m	struct:_SCSI_PASS_THROUGH
TargetId	src/platform/visualc/ntddscsi.h	/^  UCHAR  TargetId;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
TaskStateSegment	src/cpu/cpu.cpp	/^	TaskStateSegment() {$/;"	f	class:TaskStateSegment
TaskStateSegment	src/cpu/cpu.cpp	/^class TaskStateSegment {$/;"	c	file:
Tcval	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Tcval : 1;$/;"	m	struct:_SUB_Q_TRACK_ISRC
TelnetEmulation	src/hardware/serialport/nullmodem.cpp	/^Bits CNullModem::TelnetEmulation(Bit8u data) {$/;"	f	class:CNullModem
TelnetEmulation	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::TelnetEmulation(Bit8u * data, Bitu size) {$/;"	f	class:CSerialModem
TempLine	src/hardware/vga_draw.cpp	/^static Bit8u TempLine[SCALER_MAXWIDTH * 4];$/;"	v	file:
TestDir	src/dos/drive_fat.cpp	/^bool fatDrive::TestDir(char *dir) {$/;"	f	class:fatDrive
TestDir	src/dos/drive_iso.cpp	/^bool isoDrive::TestDir(char *dir)$/;"	f	class:isoDrive
TestDir	src/dos/drive_local.cpp	/^bool localDrive::TestDir(char * dir) {$/;"	f	class:localDrive
TestDir	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::TestDir(char * dir) {$/;"	f	class:Virtual_Drive
Text	src/libs/gui_tk/gui_tk.cpp	/^RGB Text = 0xff000000;$/;"	m	namespace:GUI::Color	file:
Text	src/platform/visualc/ntddcdrm.h	/^    UCHAR  Text[12];$/;"	m	union:_CDROM_TOC_CD_TEXT_DATA_BLOCK::__anon204
TickerBlock	src/hardware/pic.cpp	/^struct TickerBlock {$/;"	s	file:
Ticks	src/libs/gui_tk/gui_tk.h	/^typedef unsigned int Ticks;$/;"	t	namespace:GUI
TimeOutValue	src/platform/visualc/ntddscsi.h	/^  ULONG  TimeOutValue;$/;"	m	struct:_SCSI_PASS_THROUGH
TimeOutValue	src/platform/visualc/ntddscsi.h	/^  ULONG  TimeOutValue;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT
Timeout	src/platform/visualc/ntddscsi.h	/^  ULONG  Timeout; $/;"	m	struct:_SRB_IO_CONTROL
Timer	src/hardware/adlib.h	/^	Timer() {$/;"	f	struct:Adlib::Timer
Timer	src/hardware/adlib.h	/^struct Timer {$/;"	s	namespace:Adlib
Timer	src/libs/gui_tk/gui_tk.h	/^class Timer {$/;"	c	namespace:GUI
Timer2	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::Timer2(void) {$/;"	f	class:CSerialModem
TimerBase	src/hardware/fmopl.cpp	/^	double TimerBase;				\/* Timer base time (==sampling time)*\/$/;"	m	struct:fm_opl_f	file:
TimerBase	src/hardware/ymf262.cpp	/^	double TimerBase;				\/* Timer base time (==sampling time)*\/$/;"	m	struct:__anon192	file:
TimerHandler	src/hardware/fmopl.cpp	/^	OPL_TIMERHANDLER  TimerHandler;	\/* TIMER handler				*\/$/;"	m	struct:fm_opl_f	file:
TimerHandler	src/hardware/ymf262.cpp	/^	OPL3_TIMERHANDLER  TimerHandler;\/* TIMER handler				*\/$/;"	m	struct:__anon192	file:
TimerParam	src/hardware/fmopl.cpp	/^	int TimerParam;					\/* TIMER parameter				*\/$/;"	m	struct:fm_opl_f	file:
TimerParam	src/hardware/ymf262.cpp	/^	int TimerParam;					\/* TIMER parameter				*\/$/;"	m	struct:__anon192	file:
Timer_Callback	src/libs/gui_tk/gui_tk.h	/^struct Timer_Callback {$/;"	s	namespace:GUI
Titlebar	src/libs/gui_tk/gui_tk.cpp	/^RGB Titlebar = 0xff000080;$/;"	m	namespace:GUI::Color	file:
TitlebarText	src/libs/gui_tk/gui_tk.cpp	/^RGB TitlebarText = 0xffffffff;$/;"	m	namespace:GUI::Color	file:
ToString	src/misc/setup.cpp	/^string Value::ToString() const {$/;"	f	class:Value
ToplevelWindow	src/libs/gui_tk/gui_tk.h	/^class ToplevelWindow : public BorderedWindow, public ActionEventSource_Callback {$/;"	c	namespace:GUI
ToplevelWindow	src/libs/gui_tk/gui_tk.h	/^template <typename STR> ToplevelWindow::ToplevelWindow(Screen *parent, int x, int y, int w, int h, const STR title) :$/;"	f	class:GUI::ToplevelWindow
ToplevelWindow_Callback	src/libs/gui_tk/gui_tk.h	/^struct ToplevelWindow_Callback {$/;"	s	namespace:GUI
Track	src/dos/cdrom.h	/^	struct Track {$/;"	s	class:CDROM_Interface_Image
Track	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Track;$/;"	m	struct:_SUB_Q_TRACK_ISRC
Track	src/platform/visualc/ntddcdrm.h	/^  UCHAR Track;$/;"	m	struct:_CDROM_SUB_Q_DATA_FORMAT
TrackData	src/platform/visualc/ntddcdrm.h	/^  TRACK_DATA  TrackData[MAXIMUM_NUMBER_TRACKS];$/;"	m	struct:_CDROM_TOC
TrackFile	src/dos/cdrom.h	/^	class TrackFile {$/;"	c	class:CDROM_Interface_Image
TrackIsrc	src/platform/visualc/ntddcdrm.h	/^  SUB_Q_TRACK_ISRC  TrackIsrc;$/;"	m	union:_SUB_Q_CHANNEL_DATA
TrackIsrc	src/platform/visualc/ntddcdrm.h	/^  UCHAR  TrackIsrc[15];$/;"	m	struct:_SUB_Q_TRACK_ISRC
TrackMode	src/platform/visualc/ntddcdrm.h	/^	TRACK_MODE_TYPE  TrackMode;$/;"	m	struct:__RAW_READ_INFO
TrackNumber	src/platform/visualc/ntddcdrm.h	/^  UCHAR  TrackNumber : 7;$/;"	m	struct:_CDROM_TOC_CD_TEXT_DATA_BLOCK
TrackNumber	src/platform/visualc/ntddcdrm.h	/^  UCHAR  TrackNumber;$/;"	m	struct:_SUB_Q_CURRENT_POSITION
TrackNumber	src/platform/visualc/ntddcdrm.h	/^  UCHAR  TrackNumber;$/;"	m	struct:_TRACK_DATA
TrackRelativeAddress	src/platform/visualc/ntddcdrm.h	/^  UCHAR  TrackRelativeAddress[4];$/;"	m	struct:_SUB_Q_CURRENT_POSITION
TransientWindow	src/libs/gui_tk/gui_tk.h	/^	TransientWindow(Window *parent, int x, int y, int w, int h) :$/;"	f	class:GUI::TransientWindow
TransientWindow	src/libs/gui_tk/gui_tk.h	/^class TransientWindow : public Window, Window_Callback, ToplevelWindow_Callback {$/;"	c	namespace:GUI
Transparent	src/libs/gui_tk/gui_tk.h	/^const RGB Transparent = 0x00ffffff;$/;"	m	namespace:GUI::Color
True1	src/platform/visualc/ntddcdrm.h	/^  UCHAR  True1 : 1;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
True2	src/platform/visualc/ntddcdrm.h	/^  UCHAR  True2 : 1;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Type	include/cpu.h	/^	Bitu Type(void) {$/;"	f	class:Descriptor
UDPChannel	src/hardware/ipx.cpp	/^int UDPChannel;						\/\/ Channel used by UDP connection$/;"	v
UINT16	src/debug/debug_disasm.cpp	/^typedef Bit16u UINT16;$/;"	t	file:
UINT16	src/hardware/fmopl.h	/^typedef unsigned short	UINT16;  \/* unsigned 16bit *\/$/;"	t
UINT16	src/hardware/ymf262.h	/^typedef unsigned short	UINT16;  \/* unsigned 16bit *\/$/;"	t
UINT32	src/debug/debug_disasm.cpp	/^typedef Bit32u UINT32;$/;"	t	file:
UINT32	src/hardware/fmopl.h	/^typedef unsigned int	UINT32;  \/* unsigned 32bit *\/$/;"	t
UINT32	src/hardware/ymf262.h	/^typedef unsigned int	UINT32;  \/* unsigned 32bit *\/$/;"	t
UINT8	src/debug/debug_disasm.cpp	/^typedef Bit8u  UINT8;$/;"	t	file:
UINT8	src/hardware/fmopl.h	/^typedef unsigned char	UINT8;   \/* unsigned  8bit *\/$/;"	t
UINT8	src/hardware/gameblaster.cpp	/^typedef Bit8u UINT8;$/;"	t	file:
UINT8	src/hardware/ymf262.h	/^typedef unsigned char	UINT8;   \/* unsigned  8bit *\/$/;"	t
UMB_NO_BLOCKS_AVAILABLE	src/ints/xms.cpp	75;"	d	file:
UMB_ONLY_SMALLER_BLOCK	src/ints/xms.cpp	74;"	d	file:
UMB_START_SEG	src/dos/dos_memory.cpp	24;"	d	file:
USEFLAG_AESCOUNT	include/ipx.h	52;"	d
USEFLAG_AESTEMP	include/ipx.h	46;"	d
USEFLAG_AESWAITING	include/ipx.h	51;"	d
USEFLAG_AVAILABLE	include/ipx.h	45;"	d
USEFLAG_HOLDING	include/ipx.h	50;"	d
USEFLAG_IPXCRIT	include/ipx.h	47;"	d
USEFLAG_LISTENING	include/ipx.h	53;"	d
USEFLAG_PROCESSING	include/ipx.h	49;"	d
USEFLAG_SENDING	include/ipx.h	54;"	d
USEFLAG_SPXLISTEN	include/ipx.h	48;"	d
USERWRITE_PROHIBITED	src/cpu/paging.cpp	36;"	d	file:
USE_FULL_TLB	include/paging.h	33;"	d
UnMount	src/dos/drive_fat.cpp	/^Bits fatDrive::UnMount(void) {$/;"	f	class:fatDrive
UnMount	src/dos/drive_iso.cpp	/^Bits isoDrive::UnMount(void) {$/;"	f	class:isoDrive
UnMount	src/dos/drive_local.cpp	/^Bits cdromDrive::UnMount(void) {$/;"	f	class:cdromDrive
UnMount	src/dos/drive_local.cpp	/^Bits localDrive::UnMount(void) { $/;"	f	class:localDrive
UnMount	src/dos/drive_virtual.cpp	/^Bits Virtual_Drive::UnMount(void) {$/;"	f	class:Virtual_Drive
Unicode	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Unicode : 1;$/;"	m	struct:_CDROM_TOC_CD_TEXT_DATA_BLOCK
UnmountDrive	src/dos/drives.cpp	/^int DriveManager::UnmountDrive(int drive) {$/;"	f	class:DriveManager
UnpackIP	src/hardware/ipx.cpp	/^void UnpackIP(PackedIP ipPack, IPaddress * ipAddr) {$/;"	f
UnrestrictedUse	src/platform/visualc/ntddcdrm.h	/^  UCHAR  UnrestrictedUse : 1;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
Up	src/libs/gui_tk/gui_tk.h	/^		Up, Down, Left, Right, Backspace, Tab, Backtab, Enter, Escape,$/;"	e	enum:GUI::Key::Special
Update	src/hardware/adlib.h	/^	void Update( double time ) {$/;"	f	struct:Adlib::Timer
UpdateDateTimeFromHost	include/dos_system.h	/^	virtual bool	UpdateDateTimeFromHost()	{ return true; }$/;"	f	class:DOS_File
UpdateDateTimeFromHost	src/dos/drive_fat.cpp	/^bool fatFile::UpdateDateTimeFromHost(void) {$/;"	f	class:fatFile
UpdateDateTimeFromHost	src/dos/drive_local.cpp	/^bool localFile::UpdateDateTimeFromHost(void) {$/;"	f	class:localFile
UpdateEMSMapping	src/hardware/dma.cpp	/^static void UpdateEMSMapping(void) {$/;"	f	file:
UpdateHandler	src/hardware/fmopl.cpp	/^	OPL_UPDATEHANDLER UpdateHandler;\/* stream update handler		*\/$/;"	m	struct:fm_opl_f	file:
UpdateHandler	src/hardware/ymf262.cpp	/^	OPL3_UPDATEHANDLER UpdateHandler;\/* stream update handler		*\/$/;"	m	struct:__anon192	file:
UpdateJoystick	src/gui/sdl_mapper.cpp	/^	virtual void UpdateJoystick() {$/;"	f	class:C4AxisBindGroup
UpdateJoystick	src/gui/sdl_mapper.cpp	/^	virtual void UpdateJoystick() {$/;"	f	class:CFCSBindGroup
UpdateJoystick	src/gui/sdl_mapper.cpp	/^	virtual void UpdateJoystick() {$/;"	f	class:CStickBindGroup
UpdateJoystick	src/gui/sdl_mapper.cpp	/^	void UpdateJoystick() {$/;"	f	class:CCHBindGroup
UpdateMscdex	src/dos/drive_iso.cpp	/^int isoDrive::UpdateMscdex(char driveLetter, const char* path, Bit8u& subUnit) {$/;"	f	class:isoDrive
UpdateParam	src/hardware/fmopl.cpp	/^	int UpdateParam;				\/* stream update parameter		*\/$/;"	m	struct:fm_opl_f	file:
UpdateParam	src/hardware/ymf262.cpp	/^	int UpdateParam;				\/* stream update parameter		*\/$/;"	m	struct:__anon192	file:
UpdateStep	src/hardware/tandy_sound.cpp	/^	unsigned int UpdateStep;$/;"	m	struct:SN76496	file:
UpdateVolume	src/hardware/mixer.cpp	/^void MixerChannel::UpdateVolume(void) {$/;"	f	class:MixerChannel
UsedBlocks	src/cpu/core_dynrec/save/cache.h	/^Bit8u UsedBlocks[SBNUM];  $/;"	v
V86_Monitor	src/ints/ems.cpp	/^static Bitu V86_Monitor() {$/;"	f	file:
VCPI_PM_Handler	src/ints/ems.cpp	/^static Bitu VCPI_PM_Handler() {$/;"	f	file:
VERSION	config.h	205;"	d
VERSION	src/libs/zmbv/zmbv_vfw.cpp	36;"	d	file:
VERSION	src/platform/visualc/config.h	3;"	d
VESA_GetCPUWindow	src/ints/int10_vesa.cpp	/^Bit8u VESA_GetCPUWindow(Bit8u window,Bit16u & address) {$/;"	f
VESA_GetDisplayStart	src/ints/int10_vesa.cpp	/^Bit8u VESA_GetDisplayStart(Bit16u & x,Bit16u & y) {$/;"	f
VESA_GetPalette	src/ints/int10_vesa.cpp	/^Bit8u VESA_GetPalette(PhysPt data,Bitu index,Bitu count) {$/;"	f
VESA_GetSVGAInformation	src/ints/int10_vesa.cpp	/^Bit8u VESA_GetSVGAInformation(Bit16u seg,Bit16u off) {$/;"	f
VESA_GetSVGAMode	src/ints/int10_vesa.cpp	/^Bit8u VESA_GetSVGAMode(Bit16u & mode) {$/;"	f
VESA_GetSVGAModeInformation	src/ints/int10_vesa.cpp	/^Bit8u VESA_GetSVGAModeInformation(Bit16u mode,Bit16u seg,Bit16u off) {$/;"	f
VESA_PMSetPalette	src/ints/int10_vesa.cpp	/^static Bitu VESA_PMSetPalette(void) {$/;"	f	file:
VESA_PMSetStart	src/ints/int10_vesa.cpp	/^static Bitu VESA_PMSetStart(void) {$/;"	f	file:
VESA_PMSetWindow	src/ints/int10_vesa.cpp	/^static Bitu VESA_PMSetWindow(void) {$/;"	f	file:
VESA_ScanLineLength	src/ints/int10_vesa.cpp	/^Bit8u VESA_ScanLineLength(Bit8u subcall,Bit16u val, Bit16u & bytes,Bit16u & pixels,Bit16u & lines) {$/;"	f
VESA_SetCPUWindow	src/ints/int10_vesa.cpp	/^Bit8u VESA_SetCPUWindow(Bit8u window,Bit8u address) {$/;"	f
VESA_SetDisplayStart	src/ints/int10_vesa.cpp	/^Bit8u VESA_SetDisplayStart(Bit16u x,Bit16u y) {$/;"	f
VESA_SetPalette	src/ints/int10_vesa.cpp	/^Bit8u VESA_SetPalette(PhysPt data,Bitu index,Bitu count) {$/;"	f
VESA_SetSVGAMode	src/ints/int10_vesa.cpp	/^Bit8u VESA_SetSVGAMode(Bit16u mode) {$/;"	f
VESA_SetWindow	src/ints/int10_vesa.cpp	/^static Bitu VESA_SetWindow(void) {$/;"	f	file:
VFILE_Block	src/dos/drive_virtual.cpp	/^struct VFILE_Block {$/;"	s	file:
VFILE_Register	src/dos/drive_virtual.cpp	/^void VFILE_Register(const char * name,Bit8u * data,Bit32u size) {$/;"	f
VFILE_Remove	src/dos/drive_virtual.cpp	/^void VFILE_Remove(const char *name) {$/;"	f
VGAMEM_CTEXT	src/ints/int10.h	94;"	d
VGAMEM_GRAPH	src/ints/int10.h	93;"	d
VGAMEM_MTEXT	src/ints/int10.h	95;"	d
VGAModes	include/vga.h	/^enum VGAModes {$/;"	g
VGAREG_ACTL_ADDRESS	src/ints/int10.h	53;"	d
VGAREG_ACTL_READ_DATA	src/ints/int10.h	55;"	d
VGAREG_ACTL_RESET	src/ints/int10.h	82;"	d
VGAREG_ACTL_WRITE_DATA	src/ints/int10.h	54;"	d
VGAREG_CGA_MODECTL	src/ints/int10.h	89;"	d
VGAREG_CGA_PALETTE	src/ints/int10.h	90;"	d
VGAREG_DAC_DATA	src/ints/int10.h	67;"	d
VGAREG_DAC_READ_ADDRESS	src/ints/int10.h	65;"	d
VGAREG_DAC_STATE	src/ints/int10.h	64;"	d
VGAREG_DAC_WRITE_ADDRESS	src/ints/int10.h	66;"	d
VGAREG_GRDC_ADDRESS	src/ints/int10.h	72;"	d
VGAREG_GRDC_DATA	src/ints/int10.h	73;"	d
VGAREG_INPUT_STATUS	src/ints/int10.h	57;"	d
VGAREG_MDA_CRTC_ADDRESS	src/ints/int10.h	75;"	d
VGAREG_MDA_CRTC_DATA	src/ints/int10.h	76;"	d
VGAREG_MDA_MODECTL	src/ints/int10.h	88;"	d
VGAREG_MDA_WRITE_FEATURE_CTL	src/ints/int10.h	80;"	d
VGAREG_PCJR_DATA	src/ints/int10.h	86;"	d
VGAREG_PEL_MASK	src/ints/int10.h	63;"	d
VGAREG_READ_FEATURE_CTL	src/ints/int10.h	69;"	d
VGAREG_READ_MISC_OUTPUT	src/ints/int10.h	70;"	d
VGAREG_SEQU_ADDRESS	src/ints/int10.h	60;"	d
VGAREG_SEQU_DATA	src/ints/int10.h	61;"	d
VGAREG_TDY_ADDRESS	src/ints/int10.h	84;"	d
VGAREG_TDY_DATA	src/ints/int10.h	85;"	d
VGAREG_TDY_RESET	src/ints/int10.h	83;"	d
VGAREG_VGA_CRTC_ADDRESS	src/ints/int10.h	77;"	d
VGAREG_VGA_CRTC_DATA	src/ints/int10.h	78;"	d
VGAREG_VGA_WRITE_FEATURE_CTL	src/ints/int10.h	81;"	d
VGAREG_VIDEO_ENABLE	src/ints/int10.h	59;"	d
VGAREG_WRITE_MISC_OUTPUT	src/ints/int10.h	58;"	d
VGA_ARCH_CASE	include/dosbox.h	71;"	d
VGA_ATTR_SetPalette	src/hardware/vga_attr.cpp	/^void VGA_ATTR_SetPalette(Bit8u index,Bit8u val) {$/;"	f
VGA_ActivateHardwareCursor	src/hardware/vga_draw.cpp	/^void VGA_ActivateHardwareCursor(void) {$/;"	f
VGA_Attr	include/vga.h	/^} VGA_Attr;$/;"	t	typeref:struct:__anon49
VGA_CHANGE_SHIFT	include/vga.h	31;"	d
VGA_ChainedEGA_Handler	src/hardware/vga_memory.cpp	/^	VGA_ChainedEGA_Handler()  {$/;"	f	class:VGA_ChainedEGA_Handler
VGA_ChainedEGA_Handler	src/hardware/vga_memory.cpp	/^class VGA_ChainedEGA_Handler : public PageHandler {$/;"	c	file:
VGA_ChainedVGA_Handler	src/hardware/vga_memory.cpp	/^	VGA_ChainedVGA_Handler()  {$/;"	f	class:VGA_ChainedVGA_Handler
VGA_ChainedVGA_Handler	src/hardware/vga_memory.cpp	/^class VGA_ChainedVGA_Handler : public PageHandler {$/;"	c	file:
VGA_ChangedBank	src/hardware/vga_memory.cpp	/^void VGA_ChangedBank(void) {$/;"	f
VGA_Changes	include/vga.h	/^} VGA_Changes;$/;"	t	typeref:struct:__anon57
VGA_ChangesEnd	src/hardware/vga_draw.cpp	/^static INLINE void VGA_ChangesEnd(void ) {$/;"	f	file:
VGA_ChangesStart	src/hardware/vga_draw.cpp	/^static void INLINE VGA_ChangesStart( void ) {$/;"	f	file:
VGA_Changes_Handler	src/hardware/vga_memory.cpp	/^	VGA_Changes_Handler() {$/;"	f	class:VGA_Changes_Handler
VGA_Changes_Handler	src/hardware/vga_memory.cpp	/^class VGA_Changes_Handler : public PageHandler {$/;"	c	file:
VGA_CheckScanLength	src/hardware/vga_draw.cpp	/^void VGA_CheckScanLength(void) {$/;"	f
VGA_Config	include/vga.h	/^} VGA_Config;$/;"	t	typeref:struct:__anon37
VGA_CopyRow	src/ints/int10_char.cpp	/^static INLINE void VGA_CopyRow(Bit8u cleft,Bit8u cright,Bit8u rold,Bit8u rnew,PhysPt base) {$/;"	f	file:
VGA_Crtc	include/vga.h	/^} VGA_Crtc;$/;"	t	typeref:struct:__anon50
VGA_DAC_CombineColor	src/hardware/vga_dac.cpp	/^void VGA_DAC_CombineColor(Bit8u attr,Bit8u pal) {$/;"	f
VGA_DAC_SetEntry	src/hardware/vga_dac.cpp	/^void VGA_DAC_SetEntry(Bitu entry,Bit8u red,Bit8u green,Bit8u blue) {$/;"	f
VGA_DAC_UpdateColor	src/hardware/vga_dac.cpp	/^static INLINE void VGA_DAC_UpdateColor( Bitu index ) {$/;"	f	file:
VGA_Dac	include/vga.h	/^} VGA_Dac;$/;"	t	typeref:struct:__anon53
VGA_DetermineMode	src/hardware/vga.cpp	/^void VGA_DetermineMode(void) {$/;"	f
VGA_DisplayStartLatch	src/hardware/vga_draw.cpp	/^static void VGA_DisplayStartLatch(Bitu \/*val*\/) {$/;"	f	file:
VGA_Draw	include/vga.h	/^} VGA_Draw ;$/;"	t	typeref:struct:__anon38
VGA_DrawLine	src/hardware/vga_draw.cpp	/^static VGA_Line_Handler VGA_DrawLine;$/;"	v	file:
VGA_DrawPart	src/hardware/vga_draw.cpp	/^static void VGA_DrawPart(Bitu lines) {$/;"	f	file:
VGA_DrawSingleLine	src/hardware/vga_draw.cpp	/^static void VGA_DrawSingleLine(Bitu \/*blah*\/) {$/;"	f	file:
VGA_Draw_1BPP_Line	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_1BPP_Line(Bitu vidstart, Bitu line) {$/;"	f	file:
VGA_Draw_2BPPHiRes_Line	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_2BPPHiRes_Line(Bitu vidstart, Bitu line) {$/;"	f	file:
VGA_Draw_2BPP_Line	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_2BPP_Line(Bitu vidstart, Bitu line) {$/;"	f	file:
VGA_Draw_4BPP_Line	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_4BPP_Line(Bitu vidstart, Bitu line) {$/;"	f	file:
VGA_Draw_4BPP_Line_Double	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_4BPP_Line_Double(Bitu vidstart, Bitu line) {$/;"	f	file:
VGA_Draw_CGA16_Line	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_CGA16_Line(Bitu vidstart, Bitu line) {$/;"	f	file:
VGA_Draw_Changes_Line	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_Changes_Line(Bitu vidstart, Bitu line) {$/;"	f	file:
VGA_Draw_LIN16_Line_HWMouse	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_LIN16_Line_HWMouse(Bitu vidstart, Bitu \/*line*\/) {$/;"	f	file:
VGA_Draw_LIN32_Line_HWMouse	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_LIN32_Line_HWMouse(Bitu vidstart, Bitu \/*line*\/) {$/;"	f	file:
VGA_Draw_Linear_Line	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_Linear_Line(Bitu vidstart, Bitu \/*line*\/) {$/;"	f	file:
VGA_Draw_VGA_Line_HWMouse	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_VGA_Line_HWMouse( Bitu vidstart, Bitu \/*line*\/) {$/;"	f	file:
VGA_Draw_Xlat16_Linear_Line	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_Draw_Xlat16_Linear_Line(Bitu vidstart, Bitu \/*line*\/) {$/;"	f	file:
VGA_Empty_Handler	src/hardware/vga_memory.cpp	/^	VGA_Empty_Handler() {$/;"	f	class:VGA_Empty_Handler
VGA_Empty_Handler	src/hardware/vga_memory.cpp	/^class VGA_Empty_Handler : public PageHandler {$/;"	c	file:
VGA_FillRow	src/ints/int10_char.cpp	/^static INLINE void VGA_FillRow(Bit8u cleft,Bit8u cright,Bit8u row,PhysPt base,Bit8u attr) {$/;"	f	file:
VGA_Gfx	include/vga.h	/^} VGA_Gfx;$/;"	t	typeref:struct:__anon51
VGA_HERC	include/vga.h	/^} VGA_HERC;$/;"	t	typeref:struct:__anon45
VGA_HWCURSOR	include/vga.h	/^} VGA_HWCURSOR;$/;"	t	typeref:struct:__anon41
VGA_Init	src/hardware/vga.cpp	/^void VGA_Init(Section* sec) {$/;"	f
VGA_Internal	include/vga.h	/^} VGA_Internal;$/;"	t	typeref:struct:__anon36
VGA_KillDrawing	src/hardware/vga_draw.cpp	/^void VGA_KillDrawing(void) {$/;"	f
VGA_LFB	include/vga.h	/^} VGA_LFB;$/;"	t	typeref:struct:__anon58
VGA_LFBChanges_Handler	src/hardware/vga_memory.cpp	/^	VGA_LFBChanges_Handler() {$/;"	f	class:VGA_LFBChanges_Handler
VGA_LFBChanges_Handler	src/hardware/vga_memory.cpp	/^class VGA_LFBChanges_Handler : public PageHandler {$/;"	c	file:
VGA_LFB_Handler	src/hardware/vga_memory.cpp	/^	VGA_LFB_Handler() {$/;"	f	class:VGA_LFB_Handler
VGA_LFB_Handler	src/hardware/vga_memory.cpp	/^class VGA_LFB_Handler : public PageHandler {$/;"	c	file:
VGA_LFB_MAPPED	include/vga.h	29;"	d
VGA_LIN4_Handler	src/hardware/vga_memory.cpp	/^	VGA_LIN4_Handler() {$/;"	f	class:VGA_LIN4_Handler
VGA_LIN4_Handler	src/hardware/vga_memory.cpp	/^class VGA_LIN4_Handler : public VGA_UnchainedEGA_Handler {$/;"	c	file:
VGA_Latch	include/vga.h	/^} VGA_Latch;$/;"	t	typeref:union:__anon55
VGA_Line_Handler	src/hardware/vga_draw.cpp	/^typedef Bit8u * (* VGA_Line_Handler)(Bitu vidstart, Bitu line);$/;"	t	file:
VGA_MMIO_Handler	src/hardware/vga_memory.cpp	/^	VGA_MMIO_Handler() {$/;"	f	class:VGA_MMIO_Handler
VGA_MMIO_Handler	src/hardware/vga_memory.cpp	/^class VGA_MMIO_Handler : public PageHandler {$/;"	c	file:
VGA_Map_Handler	src/hardware/vga_memory.cpp	/^	VGA_Map_Handler() {$/;"	f	class:VGA_Map_Handler
VGA_Map_Handler	src/hardware/vga_memory.cpp	/^class VGA_Map_Handler : public PageHandler {$/;"	c	file:
VGA_Memory	include/vga.h	/^} VGA_Memory;$/;"	t	typeref:struct:__anon56
VGA_Memory_ShutDown	src/hardware/vga_memory.cpp	/^static void VGA_Memory_ShutDown(Section * sec) {$/;"	f	file:
VGA_ModeExtraData	include/vga.h	/^} VGA_ModeExtraData;$/;"	t	typeref:struct:__anon60
VGA_OTHER	include/vga.h	/^} VGA_OTHER;$/;"	t	typeref:struct:__anon46
VGA_PAGES	src/hardware/vga_memory.cpp	129;"	d	file:
VGA_PAGE_A0	src/hardware/vga_memory.cpp	130;"	d	file:
VGA_PAGE_B0	src/hardware/vga_memory.cpp	131;"	d	file:
VGA_PAGE_B8	src/hardware/vga_memory.cpp	132;"	d	file:
VGA_PARTS	src/hardware/vga_draw.cpp	30;"	d	file:
VGA_PCJR_Handler	src/hardware/vga_memory.cpp	/^	VGA_PCJR_Handler() {$/;"	f	class:VGA_PCJR_Handler
VGA_PCJR_Handler	src/hardware/vga_memory.cpp	/^class VGA_PCJR_Handler : public PageHandler {$/;"	c	file:
VGA_PanningLatch	src/hardware/vga_draw.cpp	/^static void VGA_PanningLatch(Bitu \/*val*\/) {$/;"	f	file:
VGA_ProcessSplit	src/hardware/vga_draw.cpp	/^static void VGA_ProcessSplit() {$/;"	f	file:
VGA_S3	include/vga.h	/^} VGA_S3;$/;"	t	typeref:struct:__anon42
VGA_SVGA	include/vga.h	/^} VGA_SVGA;$/;"	t	typeref:struct:__anon54
VGA_Seq	include/vga.h	/^} VGA_Seq;$/;"	t	typeref:struct:__anon48
VGA_SetBlinking	src/hardware/vga_draw.cpp	/^void VGA_SetBlinking(Bitu enabled) {$/;"	f
VGA_SetCGA2Table	src/hardware/vga.cpp	/^void VGA_SetCGA2Table(Bit8u val0,Bit8u val1) {$/;"	f
VGA_SetCGA4Table	src/hardware/vga.cpp	/^void VGA_SetCGA4Table(Bit8u val0,Bit8u val1,Bit8u val2,Bit8u val3) {$/;"	f
VGA_SetClock	src/hardware/vga.cpp	/^void VGA_SetClock(Bitu which,Bitu target) {$/;"	f
VGA_SetMode	src/hardware/vga.cpp	/^void VGA_SetMode(VGAModes mode) {$/;"	f
VGA_SetupAttr	src/hardware/vga_attr.cpp	/^void VGA_SetupAttr(void) {$/;"	f
VGA_SetupDAC	src/hardware/vga_dac.cpp	/^void VGA_SetupDAC(void) {$/;"	f
VGA_SetupDrawing	src/hardware/vga_draw.cpp	/^void VGA_SetupDrawing(Bitu \/*val*\/) {$/;"	f
VGA_SetupGFX	src/hardware/vga_gfx.cpp	/^void VGA_SetupGFX(void) {$/;"	f
VGA_SetupHandlers	src/hardware/vga_memory.cpp	/^void VGA_SetupHandlers(void) {$/;"	f
VGA_SetupMemory	src/hardware/vga_memory.cpp	/^void VGA_SetupMemory(Section* sec) {$/;"	f
VGA_SetupMisc	src/hardware/vga_misc.cpp	/^void VGA_SetupMisc(void) {$/;"	f
VGA_SetupOther	src/hardware/vga_other.cpp	/^void VGA_SetupOther(void) {$/;"	f
VGA_SetupSEQ	src/hardware/vga_seq.cpp	/^void VGA_SetupSEQ(void) {$/;"	f
VGA_SetupXGA	src/hardware/vga_xga.cpp	/^void VGA_SetupXGA(void) {$/;"	f
VGA_StartResize	src/hardware/vga.cpp	/^void VGA_StartResize(Bitu delay \/*=50*\/) {$/;"	f
VGA_StartUpdateLFB	src/hardware/vga_memory.cpp	/^void VGA_StartUpdateLFB(void) {$/;"	f
VGA_TANDY	include/vga.h	/^} VGA_TANDY;$/;"	t	typeref:struct:__anon47
VGA_TANDY_PageHandler	src/hardware/vga_memory.cpp	/^	VGA_TANDY_PageHandler() {$/;"	f	class:VGA_TANDY_PageHandler
VGA_TANDY_PageHandler	src/hardware/vga_memory.cpp	/^class VGA_TANDY_PageHandler : public PageHandler {$/;"	c	file:
VGA_TEXT_Draw_Line	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_TEXT_Draw_Line(Bitu vidstart, Bitu line) {$/;"	f	file:
VGA_TEXT_Herc_Draw_Line	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_TEXT_Herc_Draw_Line(Bitu vidstart, Bitu line) {$/;"	f	file:
VGA_TEXT_PageHandler	src/hardware/vga_memory.cpp	/^	VGA_TEXT_PageHandler() {$/;"	f	class:VGA_TEXT_PageHandler
VGA_TEXT_PageHandler	src/hardware/vga_memory.cpp	/^class VGA_TEXT_PageHandler : public PageHandler {$/;"	c	file:
VGA_TEXT_Xlat16_Draw_Line	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_TEXT_Xlat16_Draw_Line(Bitu vidstart, Bitu line) {$/;"	f	file:
VGA_TEXT_Xlat16_Draw_Line_9	src/hardware/vga_draw.cpp	/^static Bit8u * VGA_TEXT_Xlat16_Draw_Line_9(Bitu vidstart, Bitu line) {$/;"	f	file:
VGA_Type	include/vga.h	/^} VGA_Type;$/;"	t	typeref:struct:__anon59
VGA_UnchainedEGA_Handler	src/hardware/vga_memory.cpp	/^	VGA_UnchainedEGA_Handler()  {$/;"	f	class:VGA_UnchainedEGA_Handler
VGA_UnchainedEGA_Handler	src/hardware/vga_memory.cpp	/^class VGA_UnchainedEGA_Handler : public VGA_UnchainedRead_Handler {$/;"	c	file:
VGA_UnchainedRead_Handler	src/hardware/vga_memory.cpp	/^class VGA_UnchainedRead_Handler : public PageHandler {$/;"	c	file:
VGA_UnchainedVGA_Handler	src/hardware/vga_memory.cpp	/^	VGA_UnchainedVGA_Handler()  {$/;"	f	class:VGA_UnchainedVGA_Handler
VGA_UnchainedVGA_Handler	src/hardware/vga_memory.cpp	/^class VGA_UnchainedVGA_Handler : public VGA_UnchainedRead_Handler {$/;"	c	file:
VGA_VertInterrupt	src/hardware/vga_draw.cpp	/^static void VGA_VertInterrupt(Bitu \/*val*\/) {$/;"	f	file:
VGA_VerticalTimer	src/hardware/vga_draw.cpp	/^static void VGA_VerticalTimer(Bitu \/*val*\/) {$/;"	f	file:
VOLUME_CONTROL	src/platform/visualc/ntddcdrm.h	/^} VOLUME_CONTROL, *PVOLUME_CONTROL;$/;"	t	typeref:struct:_VOLUME_CONTROL
V_BOOL	include/setup.h	/^	enum Etype { V_NONE, V_HEX, V_BOOL, V_INT, V_STRING, V_DOUBLE,V_CURRENT} type;$/;"	e	enum:Value::Etype
V_CURRENT	include/setup.h	/^	enum Etype { V_NONE, V_HEX, V_BOOL, V_INT, V_STRING, V_DOUBLE,V_CURRENT} type;$/;"	e	enum:Value::Etype
V_DOUBLE	include/setup.h	/^	enum Etype { V_NONE, V_HEX, V_BOOL, V_INT, V_STRING, V_DOUBLE,V_CURRENT} type;$/;"	e	enum:Value::Etype
V_HEX	include/setup.h	/^	enum Etype { V_NONE, V_HEX, V_BOOL, V_INT, V_STRING, V_DOUBLE,V_CURRENT} type;$/;"	e	enum:Value::Etype
V_INT	include/setup.h	/^	enum Etype { V_NONE, V_HEX, V_BOOL, V_INT, V_STRING, V_DOUBLE,V_CURRENT} type;$/;"	e	enum:Value::Etype
V_NONE	include/setup.h	/^	enum Etype { V_NONE, V_HEX, V_BOOL, V_INT, V_STRING, V_DOUBLE,V_CURRENT} type;$/;"	e	enum:Value::Etype
V_STRING	include/setup.h	/^	enum Etype { V_NONE, V_HEX, V_BOOL, V_INT, V_STRING, V_DOUBLE,V_CURRENT} type;$/;"	e	enum:Value::Etype
Valid	src/dos/dos_classes.cpp	/^bool DOS_FCB::Valid() {$/;"	f	class:DOS_FCB
ValidHandle	src/ints/ems.cpp	/^static bool INLINE ValidHandle(Bit16u handle) {$/;"	f	file:
Value	include/setup.h	/^	Value()                      :_string(0),   type(V_NONE)                  { };$/;"	f	class:Value
Value	include/setup.h	/^	Value(Hex in)                :_hex(in),     type(V_HEX)                   { };$/;"	f	class:Value
Value	include/setup.h	/^	Value(Value const& in):_string(0) {plaincopy(in);}$/;"	f	class:Value
Value	include/setup.h	/^	Value(bool in)               :_bool(in),    type(V_BOOL)                  { };$/;"	f	class:Value
Value	include/setup.h	/^	Value(char const * const in) :_string(new std::string(in)),type(V_STRING) { };$/;"	f	class:Value
Value	include/setup.h	/^	Value(double in)             :_double(in),  type(V_DOUBLE)                { };$/;"	f	class:Value
Value	include/setup.h	/^	Value(int in)                :_int(in),     type(V_INT)                   { };$/;"	f	class:Value
Value	include/setup.h	/^	Value(std::string const& in) :_string(new std::string(in)),type(V_STRING) { };$/;"	f	class:Value
Value	include/setup.h	/^	Value(std::string const& in,Etype _t) :_string(0),type(V_NONE) {SetValue(in,_t);}$/;"	f	class:Value
Value	include/setup.h	/^	struct Changeable { enum Value {Always, WhenIdle,OnlyAtStart};};$/;"	g	struct:Property::Changeable
Value	include/setup.h	/^class Value {$/;"	c
VectorCount	src/libs/zmbv/zmbv.h	/^	int VectorCount;$/;"	m	class:VideoCodec
VectorTable	src/libs/zmbv/zmbv.h	/^	CodecVector VectorTable[512];$/;"	m	class:VideoCodec
VideoCodec	src/libs/zmbv/zmbv.h	/^class VideoCodec {$/;"	c
VideoModeBlock	src/ints/int10.h	/^struct VideoModeBlock {$/;"	s
VideoModeMemSize	src/ints/int10_modes.cpp	/^Bitu VideoModeMemSize(Bitu mode) {$/;"	f
Virtual_Drive	src/dos/drive_virtual.cpp	/^Virtual_Drive::Virtual_Drive() {$/;"	f	class:Virtual_Drive
Virtual_Drive	src/dos/drives.h	/^class Virtual_Drive: public DOS_Drive {$/;"	c
Virtual_File	src/dos/drive_virtual.cpp	/^Virtual_File::Virtual_File(Bit8u * in_data,Bit32u in_size) {$/;"	f	class:Virtual_File
Virtual_File	src/dos/drive_virtual.cpp	/^class Virtual_File : public DOS_File {$/;"	c	file:
VolTable	src/hardware/tandy_sound.cpp	/^	int VolTable[16];	\/* volume table         *\/$/;"	m	struct:SN76496	file:
Volume	src/hardware/tandy_sound.cpp	/^	int Volume[4];		\/* volume of voice 0-2 and noise *\/$/;"	m	struct:SN76496	file:
VolumeSeqNumberL	src/dos/drives.h	/^	Bit16u VolumeSeqNumberL;$/;"	m	struct:isoDirEntry
VolumeSeqNumberM	src/dos/drives.h	/^	Bit16u VolumeSeqNumberM;$/;"	m	struct:isoDirEntry
WAVE_BUF	src/hardware/hardware.cpp	44;"	d	file:
WIN32	src/cpu/core_dynrec/cache.h	19;"	d
WIN32	src/cpu/core_dynrec/cache.h	53;"	d
WIN32	src/cpu/core_dynrec/save/cache.h	84;"	d
WIN32_LEAN_AND_MEAN	include/cross.h	84;"	d
WIN32_LEAN_AND_MEAN	src/dos/cdrom.h	213;"	d
WIN32_LEAN_AND_MEAN	src/dos/drive_cache.cpp	32;"	d	file:
WIN32_LEAN_AND_MEAN	src/gui/midi_win32.h	22;"	d
WIN32_LEAN_AND_MEAN	src/hardware/mixer.cpp	34;"	d	file:
WRITE	src/dos/drive_fat.cpp	/^	enum { NONE,READ,WRITE } last_action;$/;"	e	enum:fatFile::__anon121	file:
WRITE	src/dos/drive_local.cpp	/^	enum { NONE,READ,WRITE } last_action;$/;"	e	enum:localFile::__anon122	file:
WText	src/platform/visualc/ntddcdrm.h	/^    WCHAR  WText[6];$/;"	m	union:_CDROM_TOC_CD_TEXT_DATA_BLOCK::__anon204
W_INDEX	include/regs.h	75;"	d
W_INDEX	include/regs.h	82;"	d
WheelDown	src/libs/gui_tk/gui_tk.h	/^enum MouseButton { NoButton, Left, Right, Middle, WheelUp, WheelDown, WheelLeft, WheelRight };$/;"	e	enum:GUI::MouseButton
WheelLeft	src/libs/gui_tk/gui_tk.h	/^enum MouseButton { NoButton, Left, Right, Middle, WheelUp, WheelDown, WheelLeft, WheelRight };$/;"	e	enum:GUI::MouseButton
WheelRight	src/libs/gui_tk/gui_tk.h	/^enum MouseButton { NoButton, Left, Right, Middle, WheelUp, WheelDown, WheelLeft, WheelRight };$/;"	e	enum:GUI::MouseButton
WheelUp	src/libs/gui_tk/gui_tk.h	/^enum MouseButton { NoButton, Left, Right, Middle, WheelUp, WheelDown, WheelLeft, WheelRight };$/;"	e	enum:GUI::MouseButton
WhenIdle	include/setup.h	/^	struct Changeable { enum Value {Always, WhenIdle,OnlyAtStart};};$/;"	e	enum:Property::Changeable::Value
Which	src/shell/shell_misc.cpp	/^char * DOS_Shell::Which(char * name) {$/;"	f	class:DOS_Shell
White	src/libs/gui_tk/gui_tk.h	/^const RGB White = 0xffffffff;$/;"	m	namespace:GUI::Color
WildFileCmp	src/dos/drives.cpp	/^bool WildFileCmp(const char * file, const char * wild) $/;"	f
WinAAttributes	src/ints/int10_vesa.cpp	/^	Bit8u WinAAttributes;$/;"	m	struct:MODE_INFO	file:
WinASegment	src/ints/int10_vesa.cpp	/^	Bit16u WinASegment;$/;"	m	struct:MODE_INFO	file:
WinBAttributes	src/ints/int10_vesa.cpp	/^	Bit8u WinBAttributes;$/;"	m	struct:MODE_INFO	file:
WinBSegment	src/ints/int10_vesa.cpp	/^	Bit16u WinBSegment;$/;"	m	struct:MODE_INFO	file:
WinFuncPtr	src/ints/int10_vesa.cpp	/^	Bit32u WinFuncPtr;$/;"	m	struct:MODE_INFO	file:
WinGranularity	src/ints/int10_vesa.cpp	/^	Bit16u WinGranularity;$/;"	m	struct:MODE_INFO	file:
WinSize	src/ints/int10_vesa.cpp	/^	Bit16u WinSize;$/;"	m	struct:MODE_INFO	file:
Window	src/libs/gui_tk/gui_tk.h	/^class Window {$/;"	c	namespace:GUI
Window_Callback	src/libs/gui_tk/gui_tk.h	/^struct Window_Callback {$/;"	s	namespace:GUI
Windows	src/libs/gui_tk/gui_tk.h	/^		Alt, Ctrl, Shift, Windows$/;"	e	enum:GUI::Key::Special
Write	src/dos/dev_con.h	/^bool device_CON::Write(Bit8u * data,Bit16u * size) {$/;"	f	class:device_CON
Write	src/dos/dos_devices.cpp	/^	virtual bool Write(Bit8u * data,Bit16u * size) {$/;"	f	class:device_NUL
Write	src/dos/dos_devices.cpp	/^bool DOS_Device::Write(Bit8u * data,Bit16u * size) {$/;"	f	class:DOS_Device
Write	src/dos/dos_mscdex.cpp	/^	bool Write(Bit8u * \/*data*\/,Bit16u * \/*size*\/) { $/;"	f	class:device_MSCDEX
Write	src/dos/drive_fat.cpp	/^bool fatFile::Write(Bit8u * data, Bit16u *size) {$/;"	f	class:fatFile
Write	src/dos/drive_iso.cpp	/^bool isoFile::Write(Bit8u *data, Bit16u *size)$/;"	f	class:isoFile
Write	src/dos/drive_local.cpp	/^bool localFile::Write(Bit8u * data,Bit16u * size) {$/;"	f	class:localFile
Write	src/dos/drive_virtual.cpp	/^bool Virtual_File::Write(Bit8u * data,Bit16u * size){$/;"	f	class:Virtual_File
Write	src/hardware/adlib.cpp	/^bool Chip::Write( Bit32u reg, Bit8u val ) {$/;"	f	class:Adlib::Chip
Write	src/hardware/dma.cpp	/^Bitu DmaChannel::Write(Bitu want, Bit8u * buffer) {$/;"	f	class:DmaChannel
Write	src/hardware/serialport/serialport.cpp	/^bool device_COM::Write(Bit8u * data,Bit16u * size) {$/;"	f	class:device_COM
Write	src/ints/ems.cpp	/^	bool Write(Bit8u * data,Bit16u * size){ $/;"	f	class:device_EMM
WriteAddr	src/hardware/adlib.cpp	/^		virtual Bit32u WriteAddr( Bit32u port, Bit8u val ) {$/;"	f	struct:OPL2::Handler
WriteAddr	src/hardware/adlib.cpp	/^		virtual Bit32u WriteAddr( Bit32u port, Bit8u val ) {$/;"	f	struct:THEOPL3::Handler
WriteChar	src/hardware/serialport/nullmodem.cpp	/^void CNullModem::WriteChar(Bit8u data) {$/;"	f	class:CNullModem
WriteChar	src/ints/int10_char.cpp	/^void WriteChar(Bit16u col,Bit16u row,Bit8u page,Bit8u chr,Bit8u attr,bool useattr) {$/;"	f
WriteControllerReg	src/hardware/dma.cpp	/^void DmaController::WriteControllerReg(Bitu reg,Bitu val,Bitu len) {$/;"	f	class:DmaController
WriteHandler	include/serialport.h	/^	IO_WriteHandleObject WriteHandler[8];$/;"	m	class:CSerial
WriteHandler	src/hardware/adlib.cpp	/^	IO_WriteHandleObject WriteHandler[3];$/;"	m	class:OPL	file:
WriteHandler	src/hardware/cmos.cpp	/^	IO_WriteHandleObject WriteHandler[2];	$/;"	m	class:CMOS	file:
WriteHandler	src/hardware/disney.cpp	/^	IO_WriteHandleObject WriteHandler;$/;"	m	class:DISNEY	file:
WriteHandler	src/hardware/gameblaster.cpp	/^	IO_WriteHandleObject WriteHandler;$/;"	m	class:CMS	file:
WriteHandler	src/hardware/joystick.cpp	/^	IO_WriteHandleObject WriteHandler;$/;"	m	class:JOYSTICK	file:
WriteHandler	src/hardware/memory.cpp	/^	IO_WriteHandleObject WriteHandler;$/;"	m	class:MEMORY	file:
WriteHandler	src/hardware/pic.cpp	/^	IO_WriteHandleObject WriteHandler[4];$/;"	m	class:PIC	file:
WriteHandler	src/hardware/sblaster.cpp	/^	IO_WriteHandleObject WriteHandler[0x10];$/;"	m	class:SBLASTER	file:
WriteHandler	src/hardware/tandy_sound.cpp	/^	IO_WriteHandleObject WriteHandler[3];$/;"	m	class:TANDYSOUND	file:
WriteHandler	src/hardware/timer.cpp	/^	IO_WriteHandleObject WriteHandler[4];$/;"	m	class:TIMER	file:
WriteOut	src/misc/programs.cpp	/^void Program::WriteOut(const char * format,...) {$/;"	f	class:Program
WriteOut_NoParsing	src/misc/programs.cpp	/^void Program::WriteOut_NoParsing(const char * format) {$/;"	f	class:Program
WritePower	src/platform/visualc/ntddcdrm.h	/^  UCHAR  WritePower : 3;$/;"	m	struct:_CDROM_TOC_ATIP_DATA_BLOCK
WriteReg	src/hardware/adlib.cpp	/^		virtual void WriteReg( Bit32u reg, Bit8u val ) {$/;"	f	struct:OPL2::Handler
WriteReg	src/hardware/adlib.cpp	/^		virtual void WriteReg( Bit32u reg, Bit8u val ) {$/;"	f	struct:THEOPL3::Handler
WriteTandyACTL	src/ints/int10_pal.cpp	/^static INLINE void WriteTandyACTL(Bit8u creg,Bit8u val) {$/;"	f	file:
WriteToControlChannel	src/dos/dev_con.h	/^	bool WriteToControlChannel(PhysPt bufptr,Bit16u size,Bit16u * retcode){return false;}$/;"	f	class:device_CON
WriteToControlChannel	src/dos/dos_devices.cpp	/^	virtual bool WriteToControlChannel(PhysPt bufptr,Bit16u size,Bit16u * retcode){return false;}$/;"	f	class:device_NUL
WriteToControlChannel	src/dos/dos_devices.cpp	/^bool DOS_Device::WriteToControlChannel(PhysPt bufptr,Bit16u size,Bit16u * retcode) { $/;"	f	class:DOS_Device
WriteToControlChannel	src/dos/dos_mscdex.cpp	/^bool device_MSCDEX::WriteToControlChannel(PhysPt bufptr,Bit16u size,Bit16u * retcode) { $/;"	f	class:device_MSCDEX
WriteToControlChannel	src/ints/ems.cpp	/^	bool WriteToControlChannel(PhysPt bufptr,Bit16u size,Bit16u * retcode){return true;}$/;"	f	class:device_EMM
Write_AbsoluteSector	src/ints/bios_disk.cpp	/^Bit8u imageDisk::Write_AbsoluteSector(Bit32u sectnum, void *data) {$/;"	f	class:imageDisk
Write_FCR	src/hardware/serialport/serialport.cpp	/^void CSerial::Write_FCR (Bit8u data) {$/;"	f	class:CSerial
Write_IER	src/hardware/serialport/serialport.cpp	/^void CSerial::Write_IER (Bit8u data) {$/;"	f	class:CSerial
Write_LCR	src/hardware/serialport/serialport.cpp	/^void CSerial::Write_LCR (Bit8u data) {$/;"	f	class:CSerial
Write_MCR	src/hardware/serialport/serialport.cpp	/^void CSerial::Write_MCR (Bit8u data) {$/;"	f	class:CSerial
Write_MSR	src/hardware/serialport/serialport.cpp	/^void CSerial::Write_MSR (Bit8u val) {$/;"	f	class:CSerial
Write_SPR	src/hardware/serialport/serialport.cpp	/^void CSerial::Write_SPR (Bit8u data) {$/;"	f	class:CSerial
Write_Sector	src/ints/bios_disk.cpp	/^Bit8u imageDisk::Write_Sector(Bit32u head,Bit32u cylinder,Bit32u sector,void * data) {$/;"	f	class:imageDisk
Write_THR	src/hardware/serialport/serialport.cpp	/^void CSerial::Write_THR (Bit8u data) {$/;"	f	class:CSerial
Write_reserved	src/hardware/serialport/serialport.cpp	/^void CSerial::Write_reserved (Bit8u data, Bit8u address) {$/;"	f	class:CSerial
WrongType	include/setup.h	/^	class WrongType { }; \/\/ Conversion error class$/;"	c	class:Value
X2PI	src/misc/fixed.cpp	34;"	d	file:
X86	src/cpu/core_dynrec.cpp	140;"	d	file:
X86PageEntry	include/paging.h	/^union X86PageEntry {$/;"	u
X86_64	src/cpu/core_dynrec.cpp	141;"	d	file:
X86_DYNFPU_DH_ENABLED	src/cpu/core_dyn_x86/decoder.h	21;"	d
X86_INLINED_MEMACCESS	src/cpu/core_dyn_x86/decoder.h	22;"	d
X86_PageEntryBlock	include/paging.h	/^struct X86_PageEntryBlock{$/;"	s
X86_REGS	src/cpu/core_dyn_x86/risc_x86.h	25;"	d
X86_REG_EAX	src/cpu/core_dyn_x86/risc_x86.h	26;"	d
X86_REG_EBP	src/cpu/core_dyn_x86/risc_x86.h	30;"	d
X86_REG_EBX	src/cpu/core_dyn_x86/risc_x86.h	29;"	d
X86_REG_ECX	src/cpu/core_dyn_x86/risc_x86.h	27;"	d
X86_REG_EDI	src/cpu/core_dyn_x86/risc_x86.h	32;"	d
X86_REG_EDX	src/cpu/core_dyn_x86/risc_x86.h	28;"	d
X86_REG_ESI	src/cpu/core_dyn_x86/risc_x86.h	31;"	d
X86_REG_MASK	src/cpu/core_dyn_x86/risc_x86.h	34;"	d
XAForm2	src/platform/visualc/ntddcdrm.h	/^	XAForm2,$/;"	e	enum:_TRACK_MODE_TYPE
XBnd	src/debug/disasm_tables.h	/^	XBnd,Xlea,$/;"	e	enum:__anon111
XCharSize	src/ints/int10_vesa.cpp	/^	Bit8u XCharSize;$/;"	m	struct:MODE_INFO	file:
XGAStatus	src/hardware/vga_xga.cpp	/^struct XGAStatus {$/;"	s	file:
XGA_BlitRect	src/hardware/vga_xga.cpp	/^void XGA_BlitRect(Bitu val) {$/;"	f
XGA_COLOR_MODE	src/hardware/vga_xga.cpp	31;"	d	file:
XGA_CheckX	src/hardware/vga_xga.cpp	/^bool XGA_CheckX(void) {$/;"	f
XGA_DrawCmd	src/hardware/vga_xga.cpp	/^void XGA_DrawCmd(Bitu val, Bitu len) {$/;"	f
XGA_DrawLineBresenham	src/hardware/vga_xga.cpp	/^void XGA_DrawLineBresenham(Bitu val) {$/;"	f
XGA_DrawLineVector	src/hardware/vga_xga.cpp	/^void XGA_DrawLineVector(Bitu val) {$/;"	f
XGA_DrawPattern	src/hardware/vga_xga.cpp	/^void XGA_DrawPattern(Bitu val) {$/;"	f
XGA_DrawPoint	src/hardware/vga_xga.cpp	/^void XGA_DrawPoint(Bitu x, Bitu y, Bitu c) {$/;"	f
XGA_DrawRectangle	src/hardware/vga_xga.cpp	/^void XGA_DrawRectangle(Bitu val) {$/;"	f
XGA_DrawWait	src/hardware/vga_xga.cpp	/^void XGA_DrawWait(Bitu val, Bitu len) {$/;"	f
XGA_DrawWaitSub	src/hardware/vga_xga.cpp	/^void XGA_DrawWaitSub(Bitu mixmode, Bitu srcval) {$/;"	f
XGA_GetDualReg	src/hardware/vga_xga.cpp	/^Bitu XGA_GetDualReg(Bit32u reg) {$/;"	f
XGA_GetMixResult	src/hardware/vga_xga.cpp	/^Bitu XGA_GetMixResult(Bitu mixmode, Bitu srcval, Bitu dstdata) {$/;"	f
XGA_GetPoint	src/hardware/vga_xga.cpp	/^Bitu XGA_GetPoint(Bitu x, Bitu y) {$/;"	f
XGA_Read	src/hardware/vga_xga.cpp	/^Bitu XGA_Read(Bitu port, Bitu len) {$/;"	f
XGA_Read_Multifunc	src/hardware/vga_xga.cpp	/^Bitu XGA_Read_Multifunc() {$/;"	f
XGA_SCREEN_WIDTH	src/hardware/vga_xga.cpp	30;"	d	file:
XGA_SHOW_COMMAND_TRACE	src/hardware/vga_xga.cpp	33;"	d	file:
XGA_SetDualReg	src/hardware/vga_xga.cpp	/^void XGA_SetDualReg(Bit32u& reg, Bitu val) {$/;"	f
XGA_WaitCmd	src/hardware/vga_xga.cpp	/^	struct XGA_WaitCmd {$/;"	s	struct:XGAStatus	file:
XGA_Write	src/hardware/vga_xga.cpp	/^void XGA_Write(Bitu port, Bitu val, Bitu len) {$/;"	f
XGA_Write_Multifunc	src/hardware/vga_xga.cpp	/^void XGA_Write_Multifunc(Bitu val, Bitu len) {$/;"	f
XLN_10	src/misc/fixed.cpp	42;"	d	file:
XLN_E	src/misc/fixed.cpp	40;"	d	file:
XMS	src/ints/xms.cpp	/^	XMS(Section* configuration):Module_base(configuration){$/;"	f	class:XMS
XMS	src/ints/xms.cpp	/^class XMS: public Module_base {$/;"	c	file:
XMS_ALLOCATE_ANY_MEMORY	src/ints/xms.cpp	56;"	d	file:
XMS_ALLOCATE_EXTENDED_MEMORY	src/ints/xms.cpp	46;"	d	file:
XMS_ALLOCATE_HIGH_MEMORY	src/ints/xms.cpp	38;"	d	file:
XMS_ALLOCATE_UMB	src/ints/xms.cpp	53;"	d	file:
XMS_AllocateMemory	src/ints/xms.cpp	/^Bitu XMS_AllocateMemory(Bitu size, Bit16u& handle) {	\/\/ size = kb$/;"	f
XMS_BLOCK_LOCKED	src/ints/xms.cpp	73;"	d	file:
XMS_BLOCK_NOT_LOCKED	src/ints/xms.cpp	72;"	d	file:
XMS_Block	src/ints/xms.cpp	/^struct XMS_Block {$/;"	s	file:
XMS_DEALLOCATE_UMB	src/ints/xms.cpp	54;"	d	file:
XMS_DRIVER_VERSION	src/ints/xms.cpp	35;"	d	file:
XMS_EnableA20	src/ints/xms.cpp	/^Bitu XMS_EnableA20(bool enable) {$/;"	f
XMS_FREE_EXTENDED_MEMORY	src/ints/xms.cpp	47;"	d	file:
XMS_FREE_HIGH_MEMORY	src/ints/xms.cpp	39;"	d	file:
XMS_FUNCTION_NOT_IMPLEMENTED	src/ints/xms.cpp	60;"	d	file:
XMS_FreeMemory	src/ints/xms.cpp	/^Bitu XMS_FreeMemory(Bitu handle) {$/;"	f
XMS_GET_EMB_HANDLE_INFORMATION	src/ints/xms.cpp	51;"	d	file:
XMS_GET_EMB_HANDLE_INFORMATION_EXT	src/ints/xms.cpp	57;"	d	file:
XMS_GET_VERSION	src/ints/xms.cpp	37;"	d	file:
XMS_GLOBAL_DISABLE_A20	src/ints/xms.cpp	41;"	d	file:
XMS_GLOBAL_ENABLE_A20	src/ints/xms.cpp	40;"	d	file:
XMS_GetEnabledA20	src/ints/xms.cpp	/^Bitu XMS_GetEnabledA20(void) {$/;"	f
XMS_GetHandleInformation	src/ints/xms.cpp	/^Bitu XMS_GetHandleInformation(Bitu handle, Bit8u& lockCount, Bit8u& numFree, Bit16u& size) {$/;"	f
XMS_HANDLES	src/ints/xms.cpp	33;"	d	file:
XMS_Handler	src/ints/xms.cpp	/^Bitu XMS_Handler(void) {$/;"	f
XMS_INVALID_DEST_HANDLE	src/ints/xms.cpp	69;"	d	file:
XMS_INVALID_DEST_OFFSET	src/ints/xms.cpp	70;"	d	file:
XMS_INVALID_HANDLE	src/ints/xms.cpp	66;"	d	file:
XMS_INVALID_LENGTH	src/ints/xms.cpp	71;"	d	file:
XMS_INVALID_SOURCE_HANDLE	src/ints/xms.cpp	67;"	d	file:
XMS_INVALID_SOURCE_OFFSET	src/ints/xms.cpp	68;"	d	file:
XMS_Init	src/ints/xms.cpp	/^void XMS_Init(Section* sec) {$/;"	f
XMS_LOCAL_DISABLE_A20	src/ints/xms.cpp	43;"	d	file:
XMS_LOCAL_ENABLE_A20	src/ints/xms.cpp	42;"	d	file:
XMS_LOCK_EXTENDED_MEMORY_BLOCK	src/ints/xms.cpp	49;"	d	file:
XMS_LockMemory	src/ints/xms.cpp	/^Bitu XMS_LockMemory(Bitu handle, Bit32u& address) {$/;"	f
XMS_MOVE_EXTENDED_MEMORY_BLOCK	src/ints/xms.cpp	48;"	d	file:
XMS_MemMove	src/ints/xms.cpp	/^struct XMS_MemMove{$/;"	s	file:
XMS_MoveMemory	src/ints/xms.cpp	/^Bitu XMS_MoveMemory(PhysPt bpt) {$/;"	f
XMS_OUT_OF_HANDLES	src/ints/xms.cpp	65;"	d	file:
XMS_OUT_OF_SPACE	src/ints/xms.cpp	64;"	d	file:
XMS_QUERY_A20	src/ints/xms.cpp	44;"	d	file:
XMS_QUERY_ANY_FREE_MEMORY	src/ints/xms.cpp	55;"	d	file:
XMS_QUERY_FREE_EXTENDED_MEMORY	src/ints/xms.cpp	45;"	d	file:
XMS_QueryFreeMemory	src/ints/xms.cpp	/^Bitu XMS_QueryFreeMemory(Bit16u& largestFree, Bit16u& totalFree) {$/;"	f
XMS_RESIZE_ANY_EXTENDED_MEMORY_BLOCK	src/ints/xms.cpp	58;"	d	file:
XMS_RESIZE_EXTENDED_MEMORY_BLOCK	src/ints/xms.cpp	52;"	d	file:
XMS_ResizeMemory	src/ints/xms.cpp	/^Bitu XMS_ResizeMemory(Bitu handle, Bitu newSize) {$/;"	f
XMS_START	include/paging.h	38;"	d
XMS_ShutDown	src/ints/xms.cpp	/^void XMS_ShutDown(Section* \/*sec*\/) {$/;"	f
XMS_UNLOCK_EXTENDED_MEMORY_BLOCK	src/ints/xms.cpp	50;"	d	file:
XMS_UnlockMemory	src/ints/xms.cpp	/^Bitu XMS_UnlockMemory(Bitu handle) {$/;"	f
XMS_VERSION	src/ints/xms.cpp	34;"	d	file:
XORB	src/cpu/arminst.h	57;"	d
XORB	src/cpu/core_normal/prefix_none.h	/^		ALIb(XORB);break;$/;"	v
XORB	src/cpu/core_normal/prefix_none.h	/^		RMEbGb(XORB);break;$/;"	v
XORB	src/cpu/core_normal/prefix_none.h	/^		RMGbEb(XORB);break;$/;"	v
XORB	src/cpu/core_normal/verysimple_prefix_none.h	/^		ALIb(XORB);break;$/;"	v
XORB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEbGb(XORB);break;$/;"	v
XORB	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGbEb(XORB);break;$/;"	v
XORB	src/cpu/instructions.h	54;"	d
XORD	src/cpu/arminst.h	170;"	d
XORD	src/cpu/core_normal/prefix_66.h	/^		EAXId(XORD);break;$/;"	v
XORD	src/cpu/core_normal/prefix_66.h	/^		RMEdGd(XORD);break;	$/;"	v
XORD	src/cpu/core_normal/prefix_66.h	/^		RMGdEd(XORD);break;$/;"	v
XORD	src/cpu/instructions.h	166;"	d
XORW	src/cpu/arminst.h	114;"	d
XORW	src/cpu/core_normal/prefix_none.h	/^		AXIw(XORW);break;$/;"	v
XORW	src/cpu/core_normal/prefix_none.h	/^		RMEwGw(XORW);break;	$/;"	v
XORW	src/cpu/core_normal/prefix_none.h	/^		RMGwEw(XORW);break;$/;"	v
XORW	src/cpu/core_normal/verysimple_prefix_none.h	/^		AXIw(XORW);break;$/;"	v
XORW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMEwGw(XORW);break;	$/;"	v
XORW	src/cpu/core_normal/verysimple_prefix_none.h	/^		RMGwEw(XORW);break;$/;"	v
XORW	src/cpu/instructions.h	110;"	d
XPI	src/misc/fixed.cpp	32;"	d	file:
XPIO2	src/misc/fixed.cpp	36;"	d	file:
XPIO4	src/misc/fixed.cpp	38;"	d	file:
XResolution	src/ints/int10_vesa.cpp	/^	Bit16u XResolution;$/;"	m	struct:MODE_INFO	file:
X_MICKEY	src/ints/mouse.cpp	190;"	d	file:
Xlea	src/debug/disasm_tables.h	/^	XBnd,Xlea,$/;"	e	enum:__anon111
Y8950Init	src/hardware/fmopl.cpp	/^int Y8950Init(int num, int clock, int rate)$/;"	f
Y8950NumChips	src/hardware/fmopl.cpp	/^static int Y8950NumChips = 0;				\/* number of chips *\/$/;"	v	file:
Y8950Read	src/hardware/fmopl.cpp	/^unsigned char Y8950Read(int which, int a)$/;"	f
Y8950ResetChip	src/hardware/fmopl.cpp	/^void Y8950ResetChip(int which)$/;"	f
Y8950SetDeltaTMemory	src/hardware/fmopl.cpp	/^void Y8950SetDeltaTMemory(int which, void * deltat_mem_ptr, int deltat_mem_size )$/;"	f
Y8950SetIRQHandler	src/hardware/fmopl.cpp	/^void Y8950SetIRQHandler(int which,OPL_IRQHANDLER IRQHandler,int param)$/;"	f
Y8950SetKeyboardHandler	src/hardware/fmopl.cpp	/^void Y8950SetKeyboardHandler(int which,OPL_PORTHANDLER_W KeyboardHandler_w,OPL_PORTHANDLER_R KeyboardHandler_r,int param)$/;"	f
Y8950SetPortHandler	src/hardware/fmopl.cpp	/^void Y8950SetPortHandler(int which,OPL_PORTHANDLER_W PortHandler_w,OPL_PORTHANDLER_R PortHandler_r,int param)$/;"	f
Y8950SetTimerHandler	src/hardware/fmopl.cpp	/^void Y8950SetTimerHandler(int which, OPL_TIMERHANDLER TimerHandler, int channelOffset)$/;"	f
Y8950SetUpdateHandler	src/hardware/fmopl.cpp	/^void Y8950SetUpdateHandler(int which,OPL_UPDATEHANDLER UpdateHandler,int param)$/;"	f
Y8950Shutdown	src/hardware/fmopl.cpp	/^void Y8950Shutdown(void)$/;"	f
Y8950TimerOver	src/hardware/fmopl.cpp	/^int Y8950TimerOver(int which, int c)$/;"	f
Y8950UpdateOne	src/hardware/fmopl.cpp	/^void Y8950UpdateOne(int which, INT16 *buffer, int length)$/;"	f
Y8950Write	src/hardware/fmopl.cpp	/^int Y8950Write(int which, int a, int v)$/;"	f
Y8950_deltat_status_reset	src/hardware/fmopl.cpp	/^static void Y8950_deltat_status_reset(UINT8 which, UINT8 changebits)$/;"	f	file:
Y8950_deltat_status_set	src/hardware/fmopl.cpp	/^static void Y8950_deltat_status_set(UINT8 which, UINT8 changebits)$/;"	f	file:
YCharSize	src/ints/int10_vesa.cpp	/^	Bit8u YCharSize;$/;"	m	struct:MODE_INFO	file:
YM3526Init	src/hardware/fmopl.cpp	/^int YM3526Init(int num, int clock, int rate)$/;"	f
YM3526NumChips	src/hardware/fmopl.cpp	/^static int YM3526NumChips = 0;				\/* number of chips *\/$/;"	v	file:
YM3526Read	src/hardware/fmopl.cpp	/^unsigned char YM3526Read(int which, int a)$/;"	f
YM3526ResetChip	src/hardware/fmopl.cpp	/^void YM3526ResetChip(int which)$/;"	f
YM3526SetIRQHandler	src/hardware/fmopl.cpp	/^void YM3526SetIRQHandler(int which,OPL_IRQHANDLER IRQHandler,int param)$/;"	f
YM3526SetTimerHandler	src/hardware/fmopl.cpp	/^void YM3526SetTimerHandler(int which, OPL_TIMERHANDLER TimerHandler, int channelOffset)$/;"	f
YM3526SetUpdateHandler	src/hardware/fmopl.cpp	/^void YM3526SetUpdateHandler(int which,OPL_UPDATEHANDLER UpdateHandler,int param)$/;"	f
YM3526Shutdown	src/hardware/fmopl.cpp	/^void YM3526Shutdown(void)$/;"	f
YM3526TimerOver	src/hardware/fmopl.cpp	/^int YM3526TimerOver(int which, int c)$/;"	f
YM3526UpdateOne	src/hardware/fmopl.cpp	/^void YM3526UpdateOne(int which, INT16 *buffer, int length)$/;"	f
YM3526Write	src/hardware/fmopl.cpp	/^int YM3526Write(int which, int a, int v)$/;"	f
YM3812Init	src/hardware/fmopl.cpp	/^int YM3812Init(int num, int clock, int rate)$/;"	f
YM3812NumChips	src/hardware/fmopl.cpp	/^static int YM3812NumChips = 0;				\/* number of chips *\/$/;"	v	file:
YM3812Read	src/hardware/fmopl.cpp	/^unsigned char YM3812Read(int which, int a)$/;"	f
YM3812ResetChip	src/hardware/fmopl.cpp	/^void YM3812ResetChip(int which)$/;"	f
YM3812SetIRQHandler	src/hardware/fmopl.cpp	/^void YM3812SetIRQHandler(int which,OPL_IRQHANDLER IRQHandler,int param)$/;"	f
YM3812SetTimerHandler	src/hardware/fmopl.cpp	/^void YM3812SetTimerHandler(int which, OPL_TIMERHANDLER TimerHandler, int channelOffset)$/;"	f
YM3812SetUpdateHandler	src/hardware/fmopl.cpp	/^void YM3812SetUpdateHandler(int which,OPL_UPDATEHANDLER UpdateHandler,int param)$/;"	f
YM3812Shutdown	src/hardware/fmopl.cpp	/^void YM3812Shutdown(void)$/;"	f
YM3812TimerOver	src/hardware/fmopl.cpp	/^int YM3812TimerOver(int which, int c)$/;"	f
YM3812UpdateOne	src/hardware/fmopl.cpp	/^void YM3812UpdateOne(int which, INT16 *buffer, int length)$/;"	f
YM3812Write	src/hardware/fmopl.cpp	/^int YM3812Write(int which, int a, int v)$/;"	f
YMF262	src/hardware/ymf262.cpp	/^static OPL3 *YMF262[MAX_OPL3_CHIPS];	\/* array of pointers to the YMF262's *\/$/;"	v	file:
YMF262Init	src/hardware/ymf262.cpp	/^int YMF262Init(int num, int clock, int rate)$/;"	f
YMF262NumChips	src/hardware/ymf262.cpp	/^static int YMF262NumChips = 0;				\/* number of chips *\/$/;"	v	file:
YMF262Read	src/hardware/ymf262.cpp	/^unsigned char YMF262Read(int which, int a)$/;"	f
YMF262ResetChip	src/hardware/ymf262.cpp	/^void YMF262ResetChip(int which)$/;"	f
YMF262SetIRQHandler	src/hardware/ymf262.cpp	/^void YMF262SetIRQHandler(int which,OPL3_IRQHANDLER IRQHandler,int param)$/;"	f
YMF262SetTimerHandler	src/hardware/ymf262.cpp	/^void YMF262SetTimerHandler(int which, OPL3_TIMERHANDLER TimerHandler, int channelOffset)$/;"	f
YMF262SetUpdateHandler	src/hardware/ymf262.cpp	/^void YMF262SetUpdateHandler(int which,OPL3_UPDATEHANDLER UpdateHandler,int param)$/;"	f
YMF262Shutdown	src/hardware/ymf262.cpp	/^void YMF262Shutdown(void)$/;"	f
YMF262TimerOver	src/hardware/ymf262.cpp	/^int YMF262TimerOver(int which, int c)$/;"	f
YMF262UpdateOne	src/hardware/ymf262.cpp	/^void YMF262UpdateOne(int which, INT16 *buffer, int length)$/;"	f
YMF262Write	src/hardware/ymf262.cpp	/^int YMF262Write(int which, int a, int v)$/;"	f
YMF262_H	src/hardware/ymf262.h	2;"	d
YResolution	src/ints/int10_vesa.cpp	/^	Bit16u YResolution;$/;"	m	struct:MODE_INFO	file:
Y_MICKEY	src/ints/mouse.cpp	191;"	d	file:
Yellow	src/libs/gui_tk/gui_tk.h	/^const RGB Yellow = Red|Green;$/;"	m	namespace:GUI::Color
YellowMask	src/libs/gui_tk/gui_tk.h	/^const RGB YellowMask = RedMask|GreenMask;$/;"	m	namespace:GUI::Color
YellowMode2	src/platform/visualc/ntddcdrm.h	/^	YellowMode2,$/;"	e	enum:_TRACK_MODE_TYPE
Z	src/gui/sdl_mapper.cpp	306;"	d	file:
Z	src/gui/sdl_mapper.cpp	394;"	d	file:
ZMBV_FORMAT_15BPP	src/libs/zmbv/zmbv.h	/^	ZMBV_FORMAT_15BPP	= 0x05,$/;"	e	enum:__anon202
ZMBV_FORMAT_16BPP	src/libs/zmbv/zmbv.h	/^	ZMBV_FORMAT_16BPP	= 0x06,$/;"	e	enum:__anon202
ZMBV_FORMAT_1BPP	src/libs/zmbv/zmbv.h	/^	ZMBV_FORMAT_1BPP		= 0x01,$/;"	e	enum:__anon202
ZMBV_FORMAT_24BPP	src/libs/zmbv/zmbv.h	/^	ZMBV_FORMAT_24BPP	= 0x07,$/;"	e	enum:__anon202
ZMBV_FORMAT_2BPP	src/libs/zmbv/zmbv.h	/^	ZMBV_FORMAT_2BPP		= 0x02,$/;"	e	enum:__anon202
ZMBV_FORMAT_32BPP	src/libs/zmbv/zmbv.h	/^	ZMBV_FORMAT_32BPP	= 0x08$/;"	e	enum:__anon202
ZMBV_FORMAT_4BPP	src/libs/zmbv/zmbv.h	/^	ZMBV_FORMAT_4BPP		= 0x03,$/;"	e	enum:__anon202
ZMBV_FORMAT_8BPP	src/libs/zmbv/zmbv.h	/^	ZMBV_FORMAT_8BPP		= 0x04,$/;"	e	enum:__anon202
ZMBV_FORMAT_NONE	src/libs/zmbv/zmbv.h	/^	ZMBV_FORMAT_NONE		= 0x00,$/;"	e	enum:__anon202
Zero	src/platform/visualc/ntddcdrm.h	/^  UCHAR  Zero;$/;"	m	struct:_CDROM_TOC_FULL_TOC_DATA_BLOCK
_APS_NEXT_COMMAND_VALUE	src/libs/zmbv/resource.h	17;"	d
_APS_NEXT_CONTROL_VALUE	src/libs/zmbv/resource.h	18;"	d
_APS_NEXT_RESOURCE_VALUE	src/libs/zmbv/resource.h	16;"	d
_APS_NEXT_SYMED_VALUE	src/libs/zmbv/resource.h	19;"	d
_APS_NO_MFC	src/libs/zmbv/resource.h	15;"	d
_CDROM_AUDIO_CONTROL	src/platform/visualc/ntddcdrm.h	/^typedef struct _CDROM_AUDIO_CONTROL {$/;"	s
_CDROM_DISK_DATA	src/platform/visualc/ntddcdrm.h	/^typedef struct _CDROM_DISK_DATA {$/;"	s
_CDROM_PLAY_AUDIO_MSF	src/platform/visualc/ntddcdrm.h	/^typedef struct _CDROM_PLAY_AUDIO_MSF {$/;"	s
_CDROM_READ_TOC_EX	src/platform/visualc/ntddcdrm.h	/^typedef struct _CDROM_READ_TOC_EX {$/;"	s
_CDROM_SEEK_AUDIO_MSF	src/platform/visualc/ntddcdrm.h	/^typedef struct _CDROM_SEEK_AUDIO_MSF {$/;"	s
_CDROM_SUB_Q_DATA_FORMAT	src/platform/visualc/ntddcdrm.h	/^typedef struct _CDROM_SUB_Q_DATA_FORMAT {$/;"	s
_CDROM_TOC	src/platform/visualc/ntddcdrm.h	/^typedef struct _CDROM_TOC {$/;"	s
_CDROM_TOC_ATIP_DATA_BLOCK	src/platform/visualc/ntddcdrm.h	/^typedef struct _CDROM_TOC_ATIP_DATA_BLOCK {$/;"	s
_CDROM_TOC_CD_TEXT_DATA_BLOCK	src/platform/visualc/ntddcdrm.h	/^typedef struct _CDROM_TOC_CD_TEXT_DATA_BLOCK {$/;"	s
_CDROM_TOC_FULL_TOC_DATA_BLOCK	src/platform/visualc/ntddcdrm.h	/^typedef struct _CDROM_TOC_FULL_TOC_DATA_BLOCK {$/;"	s
_DIRENT_H_	src/platform/visualc/dirent.h	12;"	d
_DRIVES_H__	src/dos/drives.h	22;"	d
_EGA_HALF_CLOCK	src/ints/int10_modes.cpp	30;"	d	file:
_EGA_LINE_DOUBLE	src/ints/int10_modes.cpp	31;"	d	file:
_FIXED_H	src/misc/fixed.h	24;"	d
_IO_SCSI_CAPABILITIES	src/platform/visualc/ntddscsi.h	/^typedef struct _IO_SCSI_CAPABILITIES {$/;"	s
_LogGroup	src/debug/debug_gui.cpp	/^struct _LogGroup {$/;"	s	file:
_RENDER_SCALERS_H	src/gui/render_scalers.h	20;"	d
_SCSI_ADAPTER_BUS_INFO	src/platform/visualc/ntddscsi.h	/^typedef struct _SCSI_ADAPTER_BUS_INFO {$/;"	s
_SCSI_ADDRESS	src/platform/visualc/ntddscsi.h	/^typedef struct _SCSI_ADDRESS {$/;"	s
_SCSI_BUS_DATA	src/platform/visualc/ntddscsi.h	/^typedef struct _SCSI_BUS_DATA {$/;"	s
_SCSI_INQUIRY_DATA	src/platform/visualc/ntddscsi.h	/^typedef struct _SCSI_INQUIRY_DATA {$/;"	s
_SCSI_PASS_THROUGH	src/platform/visualc/ntddscsi.h	/^typedef struct _SCSI_PASS_THROUGH {$/;"	s
_SCSI_PASS_THROUGH_DIRECT	src/platform/visualc/ntddscsi.h	/^typedef struct _SCSI_PASS_THROUGH_DIRECT {$/;"	s
_SRB_IO_CONTROL	src/platform/visualc/ntddscsi.h	/^typedef struct _SRB_IO_CONTROL { $/;"	s
_SUB_Q_CHANNEL_DATA	src/platform/visualc/ntddcdrm.h	/^typedef union _SUB_Q_CHANNEL_DATA {$/;"	u
_SUB_Q_CURRENT_POSITION	src/platform/visualc/ntddcdrm.h	/^typedef struct _SUB_Q_CURRENT_POSITION {$/;"	s
_SUB_Q_HEADER	src/platform/visualc/ntddcdrm.h	/^typedef struct _SUB_Q_HEADER {$/;"	s
_SUB_Q_MEDIA_CATALOG_NUMBER	src/platform/visualc/ntddcdrm.h	/^typedef struct _SUB_Q_MEDIA_CATALOG_NUMBER {$/;"	s
_SUB_Q_TRACK_ISRC	src/platform/visualc/ntddcdrm.h	/^typedef struct _SUB_Q_TRACK_ISRC {$/;"	s
_TCPsocketX	src/hardware/serialport/misc_util.cpp	/^struct _TCPsocketX {$/;"	s	file:
_TRACK_DATA	src/platform/visualc/ntddcdrm.h	/^typedef struct _TRACK_DATA {$/;"	s
_TRACK_MODE_TYPE	src/platform/visualc/ntddcdrm.h	/^typedef enum _TRACK_MODE_TYPE {$/;"	g
_VGA_PIXEL_DOUBLE	src/ints/int10_modes.cpp	32;"	d	file:
_VOLUME_CONTROL	src/platform/visualc/ntddcdrm.h	/^typedef struct _VOLUME_CONTROL {$/;"	s
_WIN32_IE	src/misc/cross.cpp	30;"	d	file:
_X2PI	src/misc/fixed.cpp	33;"	d	file:
_XLN_10	src/misc/fixed.cpp	41;"	d	file:
_XLN_E	src/misc/fixed.cpp	39;"	d	file:
_XPI	src/misc/fixed.cpp	31;"	d	file:
_XPIO2	src/misc/fixed.cpp	35;"	d	file:
_XPIO4	src/misc/fixed.cpp	37;"	d	file:
__CDROM_INTERFACE__	src/dos/cdrom.h	3;"	d
__FMOPL_H_	src/hardware/fmopl.h	2;"	d
__LAZYFLAG_H	src/cpu/lazyflags.h	20;"	d
__MALLOCPTR	src/hardware/adlib.cpp	/^	__MALLOCPTR(void) : m_ptr(NULL) { }$/;"	f	struct:__MALLOCPTR
__MALLOCPTR	src/hardware/adlib.cpp	/^	__MALLOCPTR(void* src) : m_ptr(src) { }$/;"	f	struct:__MALLOCPTR
__MALLOCPTR	src/hardware/adlib.cpp	/^struct __MALLOCPTR {$/;"	s	file:
__NTDDCDRM_H	src/platform/visualc/ntddcdrm.h	24;"	d
__NTDDSCSI_H	src/platform/visualc/ntddscsi.h	24;"	d
__RAW_READ_INFO	src/platform/visualc/ntddcdrm.h	/^typedef struct __RAW_READ_INFO {$/;"	s
__WNASPI32_H__	src/dos/wnaspi32.h	18;"	d
__XMS_H__	src/ints/xms.h	20;"	d
_bool	include/setup.h	/^	bool _bool;$/;"	m	class:Value
_conc2	src/gui/render_scalers.cpp	31;"	d	file:
_conc3	src/gui/render_scalers.cpp	32;"	d	file:
_conc4	src/gui/render_scalers.cpp	33;"	d	file:
_conc5	src/gui/render_scalers.cpp	34;"	d	file:
_dac_channel	src/hardware/disney.cpp	/^typedef struct _dac_channel {$/;"	s	file:
_double	include/setup.h	/^	double _double;$/;"	m	class:Value
_hex	include/setup.h	/^	Hex _hex;$/;"	m	class:Value
_hex	include/setup.h	/^	int _hex;$/;"	m	class:Hex
_int	include/setup.h	/^	int _int;$/;"	m	class:Value
_sinx	src/misc/fixed.cpp	/^FixedPoint _sinx(FixedPoint x)$/;"	f	file:
_start_function	include/control.h	/^	void (* _start_function)(void);$/;"	m	class:Config
_string	include/setup.h	/^	std::string* _string;$/;"	m	class:Value
a	include/paging.h	/^	Bit32u		a:1;$/;"	m	struct:X86_PageEntryBlock
a	src/debug/debug.cpp	/^	bool a;$/;"	m	struct:TLogInst	file:
a20	src/hardware/memory.cpp	/^	} a20;$/;"	m	struct:MemoryBlock	typeref:struct:MemoryBlock::__anon164	file:
a20FixOfs	include/dos_inc.h	/^		Bit16u  a20FixOfs;		\/\/  0x3b a20 fix routine offset$/;"	m	struct:DOS_InfoBlock::sDIB
abind	src/gui/sdl_mapper.cpp	/^	CBind * abind;					\/\/Active Bind$/;"	m	struct:CMapper	file:
abindit	src/gui/sdl_mapper.cpp	/^	CBindList_it abindit;			\/\/Location of active bind in list$/;"	m	struct:CMapper	file:
abort	src/dos/cdrom_aspi_win32.cpp	/^	SRB_Abort           abort;$/;"	m	union:__anon114	file:
absSectStart	src/dos/drives.h	/^		Bit32u absSectStart;$/;"	m	struct:partTable::__anon118
absx	src/misc/fixed.cpp	/^FixedPoint absx( FixedPoint p_Base )$/;"	f
acc_calc	src/hardware/fmopl.cpp	/^INLINE signed int acc_calc(signed int value)$/;"	f
accepts_mode	include/vga.h	/^	tAcceptsMode accepts_mode;$/;"	m	struct:SVGA_Driver
accessDate	src/dos/drives.h	/^	Bit16u accessDate;$/;"	m	struct:direntry
ackClient	src/hardware/ipxserver.cpp	/^static void ackClient(IPaddress clientAddr) {$/;"	f	file:
acknowledged	src/hardware/cmos.cpp	/^		bool acknowledged;$/;"	m	struct:__anon149::__anon150	file:
action	src/gui/sdl_mapper.cpp	/^	CCaptionButton *  action;$/;"	m	struct:__anon145	file:
actionExecuted	src/libs/gui_tk/gui_tk.cpp	/^		void actionExecuted(GUI::ActionEventSource *b, const GUI::String &arg) {$/;"	f	struct:GUI::delwin
actionExecuted	src/libs/gui_tk/gui_tk.cpp	/^		void actionExecuted(GUI::ActionEventSource *b, const GUI::String &arg) {$/;"	f	struct:GUI::newwin
actionExecuted	src/libs/gui_tk/gui_tk.cpp	/^		void actionExecuted(GUI::ActionEventSource *b, const GUI::String &arg) {$/;"	f	struct:GUI::quit
actionExecuted	src/libs/gui_tk/gui_tk.h	/^	virtual void actionExecuted(ActionEventSource *src, const String &arg) {$/;"	f	class:GUI::Frame
actionExecuted	src/libs/gui_tk/gui_tk.h	/^	virtual void actionExecuted(ActionEventSource *src, const String &arg) {$/;"	f	class:GUI::Menubar
actionExecuted	src/libs/gui_tk/gui_tk.h	/^	virtual void actionExecuted(ActionEventSource *src, const String &item) {$/;"	f	class:GUI::ToplevelWindow
actionHandlers	src/libs/gui_tk/gui_tk.h	/^	std::list<ActionEventSource_Callback *> actionHandlers;$/;"	m	class:GUI::ActionEventSource
active	include/bios_disk.h	/^	bool active;$/;"	m	class:imageDisk
active	include/render.h	/^	bool active;$/;"	m	struct:__anon32
active	include/vga.h	/^	bool	active;$/;"	m	struct:__anon57
active	src/cpu/core_dyn_x86/cache.h	/^		CacheBlock * active;$/;"	m	struct:__anon87::__anon88
active	src/cpu/core_dynrec/cache.h	/^		CacheBlockDynRec * active;		\/\/ the current cache block$/;"	m	struct:__anon66::__anon67
active	src/cpu/core_dynrec/save/cache.h	/^		CacheBlockDynRec * active;		\/\/ the current cache block$/;"	m	struct:__anon76::__anon77
active	src/debug/debug.cpp	/^	bool		active;$/;"	m	class:CBreakpoint	file:
active	src/debug/debug.cpp	/^	bool	active;$/;"	m	class:DEBUG	file:
active	src/gui/sdl_mapper.cpp	/^	bool active,holding;$/;"	m	class:CBind	file:
active	src/gui/sdlmain.h	/^		   bool active;$/;"	m	struct:SDL_Block::__anon140
active	src/gui/sdlmain.h	/^	bool active;							\/\/If this isn't set don't draw$/;"	m	struct:SDL_Block
active	src/hardware/keyboard.cpp	/^	bool active;$/;"	m	struct:__anon161	file:
active	src/hardware/pic.cpp	/^	bool active;$/;"	m	struct:IRQ_Block	file:
active	src/hardware/serialport/softmodem.h	/^		bool active;$/;"	m	struct:CSerialModem::__anon182
activeClock	include/dos_inc.h	/^		RealPt	activeClock;		\/\/  0x08 active clock device header$/;"	m	struct:DOS_InfoBlock::sDIB
activeCon	include/dos_inc.h	/^		RealPt	activeCon;		\/\/  0x0c active console device header$/;"	m	struct:DOS_InfoBlock::sDIB
active_block	src/cpu/core_dyn_x86/decoder.h	/^	CacheBlock * active_block;$/;"	m	struct:DynDecode
active_block	src/cpu/core_dynrec/decoder_basic.h	/^	CacheBlockDynRec * active_block;$/;"	m	struct:DynDecode
active_block	src/cpu/core_dynrec/save/decoder_basic.h	/^	CacheBlockDynRec * active_block;$/;"	m	struct:DynDecode
active_blocks	src/cpu/core_dyn_x86/cache.h	/^	Bitu active_blocks;$/;"	m	class:CodePageHandler
active_blocks	src/cpu/core_dynrec/cache.h	/^	Bitu active_blocks;		\/\/ the number of cache blocks in this page$/;"	m	class:CodePageHandlerDynRec
active_blocks	src/cpu/core_dynrec/save/cache.h	/^	Bitu active_blocks;		\/\/ the number of cache blocks in this page$/;"	m	class:CodePageHandlerDynRec
active_count	src/cpu/core_dyn_x86/cache.h	/^	Bitu active_count;$/;"	m	class:CodePageHandler
active_count	src/cpu/core_dynrec/cache.h	/^	Bitu active_count;		\/\/ delaying parameter to not immediately release a page$/;"	m	class:CodePageHandlerDynRec
active_count	src/cpu/core_dynrec/save/cache.h	/^	Bitu active_count;		\/\/ delaying parameter to not immediately release a page$/;"	m	class:CodePageHandlerDynRec
active_page	src/ints/int10_misc.cpp	/^	Bit8u active_page;			\/* 1Dh   BYTE   active display page *\/$/;"	m	struct:Dynamic_Functionality	file:
active_win	src/debug/debug_inc.h	/^	Bit32u active_win;					\/* Current active window *\/$/;"	m	struct:DBGBlock
activity	src/gui/sdl_mapper.cpp	/^	Bitu activity;$/;"	m	class:CEvent	file:
add	src/gui/sdl_mapper.cpp	/^	CBindButton * add;$/;"	m	struct:__anon145	file:
add	src/libs/gui_tk/gui_tk.cpp	/^	GUI::Timer::add(&mw,10);$/;"	m	class:GUI::GUI::Timer	file:
add	src/libs/gui_tk/gui_tk.h	/^	static void add(Timer_Callback *cb, const Ticks ticks) { timers.insert(std::pair<const Ticks,Timer_Callback *>(ticks+Timer::ticks,cb)); }$/;"	f	class:GUI::Timer
add	src/misc/fixed.cpp	/^FixedPoint FixedPoint::add(FixedPoint b)$/;"	f	class:FixedPoint
add	src/misc/fixed.cpp	/^FixedPoint FixedPoint::add(double b)$/;"	f	class:FixedPoint
add	src/misc/fixed.cpp	/^FixedPoint FixedPoint::add(float b)$/;"	f	class:FixedPoint
add	src/misc/fixed.cpp	/^FixedPoint FixedPoint::add(int b)$/;"	f	class:FixedPoint
add	src/misc/fixed.cpp	/^FixedPoint FixedPoint::add(long b)$/;"	f	class:FixedPoint
add	src/misc/fixed.cpp	/^FixedPoint FixedPoint::add(short b)$/;"	f	class:FixedPoint
addActionHandler	src/libs/gui_tk/gui_tk.h	/^	void addActionHandler(ActionEventSource_Callback *handler) { actionHandlers.push_back(handler); }$/;"	f	class:GUI::ActionEventSource
addCloseHandler	src/libs/gui_tk/gui_tk.h	/^	void addCloseHandler(ToplevelWindow_Callback *handler) { closehandlers.push_back(handler); }$/;"	f	class:GUI::ToplevelWindow
addDirectoryEntry	src/dos/drive_fat.cpp	/^bool fatDrive::addDirectoryEntry(Bit32u dirClustNumber, direntry useEntry) {$/;"	f	class:fatDrive
addFont	src/libs/gui_tk/gui_tk.h	/^	static void addFont(const char *name, Font *font) {$/;"	f	class:GUI::Font
addItem	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> void addItem(int index, const STR name) { menus[index]->addItem(name); }$/;"	f	class:GUI::Menubar
addItem	src/libs/gui_tk/gui_tk.h	/^	template <typename T> void addItem(const T item) {$/;"	f	class:GUI::Menu
addMenu	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> void addMenu(const STR name) {$/;"	f	class:GUI::Menubar
addNative	src/libs/gui_tk/gui_tk.h	/^	void addNative(Native *dest) const {$/;"	f	class:GUI::String
addWindowHandler	src/libs/gui_tk/gui_tk.h	/^	void addWindowHandler(Window_Callback *handler) { movehandlers.push_back(handler); }$/;"	f	class:GUI::Window
add_key	src/ints/bios_keyboard.cpp	/^static void add_key(Bit16u code) {$/;"	f	file:
add_x	src/ints/mouse.cpp	/^	float add_x,add_y;$/;"	m	struct:__anon199	file:
add_y	src/ints/mouse.cpp	/^	float add_x,add_y;$/;"	m	struct:__anon199	file:
addb	src/hardware/serialport/softmodem.h	/^	void addb(Bit8u _val) {$/;"	f	class:CFifo
addbind	src/gui/sdl_mapper.cpp	/^	bool addbind;$/;"	m	struct:CMapper	file:
additional_planes	src/dos/dos_keyboard_layout.cpp	/^	Bit8u additional_planes,used_lock_modifiers;$/;"	m	class:keyboard_layout	file:
addr	include/ipx.h	/^		} GCC_ATTRIBUTE(packed) addr;$/;"	m	struct:IPXHeader::transport
addr	include/paging.h	/^		PhysPt addr;$/;"	m	struct:PagingBlock::__anon25
addr	include/vga.h	/^	Bit32u addr;$/;"	m	struct:__anon58
addr32bit	src/debug/debug_disasm.cpp	/^static int addr32bit=0;$/;"	v	file:
addr_mask	include/vga.h	/^	Bitu addr_mask;$/;"	m	struct:__anon47
addr_shift	include/vga.h	/^	Bit8u addr_shift;$/;"	m	struct:__anon37
addr_to_hex	src/debug/debug_disasm.cpp	/^static char *addr_to_hex(UINT32 addr, int splitup) {$/;"	f	file:
address	include/vga.h	/^		Bitu address;$/;"	m	struct:__anon38::__anon40
address	include/vga.h	/^	Bitu address;$/;"	m	struct:__anon38
address	src/hardware/fmopl.cpp	/^	UINT8 address;					\/* address register				*\/$/;"	m	struct:fm_opl_f	file:
address	src/hardware/ymf262.cpp	/^	UINT32	address;				\/* address register				*\/$/;"	m	struct:__anon192	file:
address_add	include/vga.h	/^	Bitu address_add;$/;"	m	struct:__anon38
address_line	include/vga.h	/^	Bitu address_line;$/;"	m	struct:__anon38
address_line_total	include/vga.h	/^	Bitu address_line_total;$/;"	m	struct:__anon38
addrsize	src/debug/debug_disasm.cpp	/^static int addrsize;$/;"	v	file:
addrtype	include/ipx.h	/^		union addrtype {$/;"	u	struct:IPXHeader::transport
adds	src/hardware/serialport/softmodem.h	/^	void adds(Bit8u * _str,Bitu _len) {$/;"	f	class:CFifo
adlib_gusforward	src/hardware/sblaster.cpp	/^static void adlib_gusforward(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
adpcm	src/hardware/sblaster.cpp	/^	} adpcm;$/;"	m	struct:SB_INFO	typeref:struct:SB_INFO::__anon177	file:
adr	src/debug/debug.cpp	/^	PhysPt  adr;$/;"	m	class:CDebugVar	file:
advance	src/hardware/fmopl.cpp	/^INLINE void advance(FM_OPL *OPL)$/;"	f
advance	src/hardware/ymf262.cpp	/^INLINE void advance(OPL3 *chip)$/;"	f
advance_lfo	src/hardware/fmopl.cpp	/^INLINE void advance_lfo(FM_OPL *OPL)$/;"	f
advance_lfo	src/hardware/ymf262.cpp	/^INLINE void advance_lfo(OPL3 *chip)$/;"	f
aevent	src/gui/sdl_mapper.cpp	/^	CEvent * aevent;				\/\/Active Event$/;"	m	struct:CMapper	file:
ahValue	src/debug/debug.cpp	/^	Bit16u		ahValue;$/;"	m	class:CBreakpoint	file:
alarm	src/hardware/cmos.cpp	/^		double alarm;$/;"	m	struct:__anon149::__anon151	file:
all_ch_enable	src/hardware/gameblaster.cpp	/^	int all_ch_enable;				\/* all channels enable *\/$/;"	m	struct:SAA1099	file:
allocateCluster	src/dos/drive_fat.cpp	/^bool fatDrive::allocateCluster(Bit32u useCluster, Bit32u prevCluster) {$/;"	f	class:fatDrive
allocated	src/cpu/core_dynrec/save/cache.h	/^int allocated = 0;$/;"	v
allocation	src/dos/drives.h	/^	} allocation;$/;"	m	class:fatDrive	typeref:struct:fatDrive::__anon120
allocation	src/dos/drives.h	/^	} allocation;$/;"	m	class:localDrive	typeref:struct:localDrive::__anon117
alt	src/ints/bios_keyboard.cpp	/^  Bit16u alt;$/;"	m	struct:__anon194	file:
alt	src/libs/gui_tk/gui_tk.h	/^	bool alt;$/;"	m	class:GUI::Key
amplitude	src/hardware/gameblaster.cpp	/^	int amplitude[2];		\/* amplitude (0x00..0x0f) *\/$/;"	m	struct:saa1099_channel	file:
amplitude_lookup	src/hardware/gameblaster.cpp	/^static int amplitude_lookup[16] = {$/;"	v	file:
ansi	src/dos/dev_con.h	/^	struct ansi { \/* should create a constructor which fills them with the appriorate values *\/$/;"	s	class:device_CON
ansi	src/dos/dev_con.h	/^	} ansi;$/;"	m	class:device_CON	typeref:struct:device_CON::ansi
appendCluster	src/dos/drive_fat.cpp	/^Bit32u fatDrive::appendCluster(Bit32u startCluster) {$/;"	f	class:fatDrive
ar	src/hardware/fmopl.cpp	/^	UINT32	ar;			\/* attack rate: AR<<2			*\/$/;"	m	struct:__anon153	file:
ar	src/hardware/ymf262.cpp	/^	UINT32	ar;			\/* attack rate: AR<<2			*\/$/;"	m	struct:__anon190	file:
ascent	src/libs/gui_tk/gui_tk.h	/^	const int ascent;$/;"	m	class:GUI::BitmapFont
ascents	src/libs/gui_tk/gui_tk.h	/^	const int *const ascents;$/;"	m	class:GUI::BitmapFont
aspect	include/render.h	/^	bool aspect;$/;"	m	struct:__anon32
aspect_ratio	include/vga.h	/^	double aspect_ratio;$/;"	m	struct:__anon38
assert_right_size	src/gui/sdl_mapper.cpp	/^typedef char assert_right_size [MAX_SCANCODES == (sizeof(sdlkey_map)\/sizeof(sdlkey_map[0]))	? 1 : -1];$/;"	t	file:
attr	include/dos_inc.h	/^		Bit8u attr;$/;"	m	struct:DOS_DTA::sDTA
attr	include/dos_system.h	/^	Bit16u attr;$/;"	m	class:DOS_File
attr	include/dos_system.h	/^	Bit16u attr;$/;"	m	struct:FileStat_Block
attr	include/vga.h	/^	VGA_Attr attr;$/;"	m	struct:__anon59
attr	src/dos/cdrom.h	/^		int attr;$/;"	m	struct:CDROM_Interface_Image::Track
attr	src/dos/dev_con.h	/^		Bit8u attr;$/;"	m	struct:device_CON::ansi
attr	src/hardware/vga_attr.cpp	25;"	d	file:
attrib	src/dos/drives.h	/^	Bit8u attrib;$/;"	m	struct:direntry
attrindex	include/vga.h	/^	bool attrindex;$/;"	m	struct:__anon36
audioEnd	src/dos/dos_mscdex.cpp	/^		Bit32u	audioEnd;		\/\/ EndLoc for resume$/;"	m	struct:CMscdex::SDriveInfo	file:
audioPaused	src/dos/dos_mscdex.cpp	/^		bool	audioPaused;	\/\/ audio playing paused$/;"	m	struct:CMscdex::SDriveInfo	file:
audioPlay	src/dos/dos_mscdex.cpp	/^		bool	audioPlay;		\/\/ audio playing active$/;"	m	struct:CMscdex::SDriveInfo	file:
audioStart	src/dos/dos_mscdex.cpp	/^		Bit32u	audioStart;		\/\/ StartLoc for resume$/;"	m	struct:CMscdex::SDriveInfo	file:
audiobuf	src/hardware/hardware.cpp	/^		Bit16s		audiobuf[WAVE_BUF][2];$/;"	m	struct:__anon155::__anon159	file:
audiorate	src/hardware/hardware.cpp	/^		Bitu		audiorate;$/;"	m	struct:__anon155::__anon159	file:
audioused	src/hardware/hardware.cpp	/^		Bitu		audioused;$/;"	m	struct:__anon155::__anon159	file:
audiowritten	src/hardware/hardware.cpp	/^		Bitu		audiowritten;$/;"	m	struct:__anon155::__anon159	file:
auto_eoi	src/hardware/pic.cpp	/^	bool auto_eoi;$/;"	m	struct:PIC_Controller	file:
auto_it	src/shell/shell.cpp	/^typedef std::list<std::string>::iterator auto_it;$/;"	t	file:
autoexec	src/shell/shell.cpp	/^	AutoexecObject autoexec[17];$/;"	m	class:AUTOEXEC	file:
autoexec_data	src/shell/shell.cpp	/^static char autoexec_data[AUTOEXEC_SIZE] = { 0 };$/;"	v	file:
autoexec_echo	src/shell/shell.cpp	/^	AutoexecObject autoexec_echo;$/;"	m	class:AUTOEXEC	file:
autoexec_strings	src/shell/shell.cpp	/^static std::list<std::string> autoexec_strings;$/;"	v	file:
autoexecline	src/hardware/sblaster.cpp	/^	AutoexecObject autoexecline;$/;"	m	class:SBLASTER	file:
autofire	src/gui/sdl_mapper.cpp	/^bool autofire = false;$/;"	v
autoinit	include/dma.h	/^	bool autoinit;$/;"	m	class:DmaChannel
autoinit	src/hardware/sblaster.cpp	/^		bool stereo,sign,autoinit;$/;"	m	struct:SB_INFO::__anon170	file:
avl	include/cpu.h	/^	Bit32u avl			:1;$/;"	m	struct:S_Descriptor
avl	include/paging.h	/^	Bit32u		avl:3;$/;"	m	struct:X86_PageEntryBlock
ax	include/cpu.h	/^    Bit16u ax, cx, dx, bx;       \/* The general purpose registers *\/$/;"	m	struct:TSS_16
axes	src/gui/sdl_mapper.cpp	/^	Bitu stick,emustick,axes,buttons,hats,emulated_axes,emulated_buttons,emulated_hats;$/;"	m	class:CStickBindGroup	file:
axes_cap	src/gui/sdl_mapper.cpp	/^	Bitu button_wrap,button_cap,axes_cap,hats_cap;$/;"	m	class:CStickBindGroup	file:
axis	src/gui/sdl_mapper.cpp	/^	Bitu axis;$/;"	m	class:CJAxisBind	file:
axis	src/gui/sdl_mapper.cpp	/^	Bitu stick,axis;$/;"	m	class:CJAxisEvent	file:
axis_pos	src/gui/sdl_mapper.cpp	/^	Bit16s axis_pos[8];$/;"	m	struct:__anon143	file:
b	include/vga.h	/^	Bit8u b[4];$/;"	m	union:__anon55
b	include/video.h	/^	Bit8u b;$/;"	m	struct:GFX_PalEntry
b	src/cpu/core_full/support.h	/^		Bit8u b;Bit8s bs;$/;"	m	union:FullData::__anon103
b	src/libs/gui_tk/gui_tk.cpp	/^	GUI::Button *b = new GUI::Button(frame,8,20,"Open a new Window");$/;"	m	namespace:GUI	file:
b	src/libs/gui_tk/gui_tk.cpp	/^	b = new GUI::Button(frame,270,20,"Quit");$/;"	m	namespace:GUI	file:
b16	src/hardware/sblaster.cpp	/^			Bit16s b16[DMA_BUFSIZE];$/;"	m	union:SB_INFO::__anon170::__anon171	file:
b2	src/debug/disasm_tables.h	/^	b2,p_es,p_ss,p_cs,p_ds,p_fs,p_gs,p_size,p_addr,p_rep,$/;"	e	enum:__anon111
b8	src/hardware/sblaster.cpp	/^			Bit8u  b8[DMA_BUFSIZE];$/;"	m	union:SB_INFO::__anon170::__anon171	file:
back	include/cpu.h	/^    Bit16u back;                 \/* Back link to other task *\/$/;"	m	struct:TSS_16
back	include/cpu.h	/^    Bit32u back;                \/* Back link to other task *\/$/;"	m	struct:TSS_32
backData	src/ints/mouse.cpp	/^	Bit8u	backData[CURSORX*CURSORY];$/;"	m	struct:__anon199	file:
backcolor	src/hardware/vga_xga.cpp	/^	Bit32u backcolor;$/;"	m	struct:XGAStatus	file:
background	src/ints/mouse.cpp	/^	bool	background;$/;"	m	struct:__anon199	file:
background_set	src/libs/gui_tk/gui_tk.h	/^	const bool background_set;$/;"	m	class:GUI::BitmapFont
backmix	src/hardware/vga_xga.cpp	/^	Bit16u backmix;$/;"	m	struct:XGAStatus	file:
backposx	src/ints/mouse.cpp	/^	Bit16s	backposx, backposy;$/;"	m	struct:__anon199	file:
backposy	src/ints/mouse.cpp	/^	Bit16s	backposx, backposy;$/;"	m	struct:__anon199	file:
backstack	include/vga.h	/^	Bit8u backstack[3];$/;"	m	struct:__anon41
backup	src/hardware/serialport/directserial_posix.h	/^	termios backup;$/;"	m	class:CDirectSerial
bankMask	include/vga.h	/^	Bitu	bankMask;$/;"	m	struct:__anon54
bank_read	include/vga.h	/^	Bit8u	bank_read;$/;"	m	struct:__anon54
bank_read_full	include/vga.h	/^	Bitu	bank_read_full;$/;"	m	struct:__anon54
bank_setup_pvga1a	src/hardware/vga_paradise.cpp	/^static void bank_setup_pvga1a() {$/;"	f	file:
bank_size	include/vga.h	/^	Bitu	bank_size;$/;"	m	struct:__anon54
bank_write	include/vga.h	/^	Bit8u	bank_write;$/;"	m	struct:__anon54
bank_write_full	include/vga.h	/^	Bitu	bank_write_full;$/;"	m	struct:__anon54
bar	src/libs/gui_tk/gui_tk.cpp	/^	GUI::Menubar *bar = new GUI::Menubar(frame,0,0,frame->getWidth());$/;"	m	namespace:GUI	file:
base	include/paging.h	/^	Bit32u		base:20;$/;"	m	struct:X86_PageEntryBlock
base	include/paging.h	/^	} base;$/;"	m	struct:PagingBlock	typeref:struct:PagingBlock::__anon25
base	src/cpu/core_full/support.h	/^		EAPoint base;$/;"	m	struct:FullData::__anon104
base	src/cpu/cpu.cpp	/^	PhysPt base;$/;"	m	class:TaskStateSegment	file:
base	src/hardware/sblaster.cpp	/^		Bitu base;$/;"	m	struct:SB_INFO::__anon178	file:
base	src/hardware/vga_memory.cpp	/^	Bitu base, mask;$/;"	m	struct:__anon186	file:
basePath	include/dos_system.h	/^	char		basePath			[CROSS_LEN];$/;"	m	class:DOS_Drive_Cache
base_0_15	include/cpu.h	/^	Bit32u base_0_15	:16;$/;"	m	struct:S_Descriptor
base_16_23	include/cpu.h	/^	Bit32u base_16_23	:8;$/;"	m	struct:S_Descriptor
base_24_31	include/cpu.h	/^	Bit32u base_24_31	:8;$/;"	m	struct:S_Descriptor
base_ds	src/cpu/core_simple.cpp	/^	PhysPt base_ds,base_ss;$/;"	m	struct:__anon105	file:
base_ds	src/cpu/core_verysimple.cpp	/^	PhysPt base_ds,base_ss;$/;"	m	struct:__anon106	file:
base_path	include/cross.h	/^	char            base_path[MAX_PATH+4];$/;"	m	struct:dir_struct
base_path	include/cross.h	/^	char base_path[CROSS_LEN];$/;"	m	struct:dir_struct
base_path	src/cpu/core_dynrec/cross.h	/^	char base_path[CROSS_LEN];$/;"	m	struct:dir_struct
base_path	src/cpu/core_dynrec/save/cross.h	/^	char base_path[CROSS_LEN];$/;"	m	struct:dir_struct
base_ss	src/cpu/core_simple.cpp	/^	PhysPt base_ds,base_ss;$/;"	m	struct:__anon105	file:
base_ss	src/cpu/core_verysimple.cpp	/^	PhysPt base_ds,base_ss;$/;"	m	struct:__anon106	file:
base_val_ds	src/cpu/core_simple.cpp	/^	SegNames base_val_ds;$/;"	m	struct:__anon105	file:
baseaddr	include/dma.h	/^	Bit16u baseaddr;$/;"	m	class:DmaChannel
basecnt	include/dma.h	/^	Bit16u basecnt;$/;"	m	class:DmaChannel
basedir	src/dos/drives.h	/^	char basedir[CROSS_LEN];$/;"	m	class:localDrive
bat_ext	src/shell/shell_misc.cpp	/^static const char * bat_ext=".BAT";$/;"	v	file:
baud_divider	include/serialport.h	/^	Bit16u baud_divider;$/;"	m	class:CSerial
bcd	src/hardware/cmos.cpp	/^	bool bcd;$/;"	m	struct:__anon149	file:
bcd	src/hardware/timer.cpp	/^	bool bcd;$/;"	m	struct:PIT_Block	file:
beginchs	src/dos/drives.h	/^		Bit8u beginchs[3];$/;"	m	struct:partTable::__anon118
bf	include/shell.h	/^	BatchFile * bf;$/;"	m	class:DOS_Shell
big	include/cpu.h	/^		bool big;$/;"	m	struct:CPUBlock::__anon6
big	include/cpu.h	/^		bool big;$/;"	m	struct:CPUBlock::__anon7
big	include/cpu.h	/^	Bit32u big			:1;$/;"	m	struct:S_Descriptor
big_addr	src/cpu/core_dyn_x86/decoder.h	/^	bool big_addr;$/;"	m	struct:DynDecode
big_addr	src/cpu/core_dynrec/decoder_basic.h	/^	bool big_addr;			\/\/ address modifier$/;"	m	struct:DynDecode
big_addr	src/cpu/core_dynrec/save/decoder_basic.h	/^	bool big_addr;			\/\/ address modifier$/;"	m	struct:DynDecode
big_op	src/cpu/core_dyn_x86/decoder.h	/^	bool big_op;$/;"	m	struct:DynDecode
big_op	src/cpu/core_dynrec/decoder_basic.h	/^	bool big_op;			\/\/ operand modifier$/;"	m	struct:DynDecode
big_op	src/cpu/core_dynrec/save/decoder_basic.h	/^	bool big_op;			\/\/ operand modifier$/;"	m	struct:DynDecode
binary	src/hardware/serialport/nullmodem.h	/^		bool binary[2];$/;"	m	struct:CNullModem::__anon180
binary	src/hardware/serialport/softmodem.h	/^		bool binary[2];$/;"	m	struct:CSerialModem::__anon181
bind_but	src/gui/sdl_mapper.cpp	/^} bind_but;$/;"	v	typeref:struct:__anon145	file:
bind_title	src/gui/sdl_mapper.cpp	/^	CCaptionButton *  bind_title;$/;"	m	struct:__anon145	file:
bindgroups	src/gui/sdl_mapper.cpp	/^static std::vector<CBindGroup *> bindgroups;$/;"	v	file:
bindlist	src/gui/sdl_mapper.cpp	/^	CBindList bindlist;$/;"	m	class:CEvent	file:
biosMode	src/hardware/vga_paradise.cpp	/^	Bitu biosMode;$/;"	m	struct:__anon187	file:
biosMode	src/hardware/vga_tseng.cpp	/^	Bitu biosMode;$/;"	m	struct:__anon188	file:
biosMode	src/hardware/vga_tseng.cpp	/^	Bitu biosMode;$/;"	m	struct:__anon189	file:
biosval	include/bios_disk.h	/^	Bit16u biosval;   \/* Type to return from BIOS *\/$/;"	m	struct:diskGeo
bit_mask	include/vga.h	/^	Bit8u bit_mask;$/;"	m	struct:__anon51
bitmap	src/libs/gui_tk/gui_tk.h	/^	const unsigned char *const bitmap;$/;"	m	class:GUI::BitmapFont
bits	include/vga.h	/^	Bit8u bits;						\/* DAC bits, usually 6 or 8 *\/$/;"	m	struct:__anon53
bits	src/hardware/sblaster.cpp	/^		Bitu bits;$/;"	m	struct:SB_INFO::__anon170	file:
blah1	src/cpu/core_full/support.h	/^		} blah1,blah2,blah_imm;$/;"	m	struct:FullData	typeref:union:FullData::__anon102
blah2	src/cpu/core_full/support.h	/^		} blah1,blah2,blah_imm;$/;"	m	struct:FullData	typeref:union:FullData::__anon102
blah_imm	src/cpu/core_full/support.h	/^		} blah1,blah2,blah_imm;$/;"	m	struct:FullData	typeref:union:FullData::__anon102
blink	src/libs/gui_tk/gui_tk.h	/^	bool blink;$/;"	m	class:GUI::Input
blinking	include/vga.h	/^	Bitu blinking;$/;"	m	struct:__anon38
block	include/paging.h	/^	X86_PageEntryBlock block;$/;"	m	union:X86PageEntry
block	src/cpu/core_dyn_x86/cache.h	/^	} block;$/;"	m	struct:__anon87	typeref:struct:__anon87::__anon88
block	src/cpu/core_dyn_x86/decoder.h	/^	CacheBlock * block;$/;"	m	struct:DynDecode
block	src/cpu/core_dynrec/cache.h	/^	} block;$/;"	m	struct:__anon66	typeref:struct:__anon66::__anon67
block	src/cpu/core_dynrec/decoder_basic.h	/^	CacheBlockDynRec * block;$/;"	m	struct:DynDecode
block	src/cpu/core_dynrec/save/cache.h	/^	} block;$/;"	m	struct:__anon76	typeref:struct:__anon76::__anon77
block	src/cpu/core_dynrec/save/decoder_basic.h	/^	CacheBlockDynRec * block;$/;"	m	struct:DynDecode
blockDevices	include/dos_inc.h	/^		Bit8u	blockDevices;		\/\/  0x20 installed block devices$/;"	m	struct:DOS_InfoBlock::sDIB
block_fnum	src/hardware/fmopl.cpp	/^	UINT32  block_fnum;	\/* block+fnum					*\/$/;"	m	struct:__anon154	file:
block_fnum	src/hardware/ymf262.cpp	/^	UINT32	block_fnum;	\/* block+fnum					*\/$/;"	m	struct:__anon191	file:
blockcount	src/libs/zmbv/zmbv.h	/^	int blockcount; $/;"	m	class:VideoCodec
blockheight	src/libs/zmbv/zmbv.h	/^		unsigned char blockwidth,blockheight;$/;"	m	struct:VideoCodec::KeyframeHeader
blocks	include/vga.h	/^	Bitu blocks;$/;"	m	struct:__anon38
blocks	src/libs/zmbv/zmbv.h	/^	FrameBlock * blocks;$/;"	m	class:VideoCodec
blocksize	src/hardware/mixer.cpp	/^	Bit32u blocksize;$/;"	m	struct:__anon165	file:
blockwidth	src/libs/zmbv/zmbv.h	/^		unsigned char blockwidth,blockheight;$/;"	m	struct:VideoCodec::KeyframeHeader
blue	include/render.h	/^		Bit8u blue;$/;"	m	struct:__anon30::__anon31
blue	include/vga.h	/^	Bit8u blue;$/;"	m	struct:__anon52
blueMask	src/gui/render_16.h	23;"	d
blueMask	src/gui/render_16.h	248;"	d
blueMask	src/gui/render_32.h	158;"	d
blueMask	src/gui/render_32.h	23;"	d
blueMask	src/gui/render_8.h	23;"	d
blueMask	src/gui/render_8.h	244;"	d
blueMask	src/gui/render_9.h	23;"	d
blueMask	src/gui/render_9.h	244;"	d
bootDrive	include/dos_inc.h	/^		Bit8u	bootDrive;		\/\/  0x43 boot drive$/;"	m	struct:DOS_InfoBlock::sDIB
bootSector	include/dos_inc.h	/^union bootSector {$/;"	u
bootbuffer	src/dos/drives.h	/^	bootstrap bootbuffer;$/;"	m	class:fatDrive
bootcode	src/dos/drives.h	/^	Bit8u  bootcode[474];$/;"	m	struct:bootstrap
bootdata	include/dos_inc.h	/^	} bootdata;$/;"	m	union:bootSector	typeref:struct:bootSector::entries
booter	src/dos/drives.h	/^	Bit8u booter[446];$/;"	m	struct:partTable
bootflag	src/dos/drives.h	/^		Bit8u bootflag;$/;"	m	struct:partTable::__anon118
bootstrap	src/dos/drives.h	/^struct bootstrap {$/;"	s
border_bottom	src/libs/gui_tk/gui_tk.h	/^	int border_left, border_top, border_right, border_bottom;$/;"	m	class:GUI::BorderedWindow
border_color	include/vga.h	/^	Bit8u border_color;$/;"	m	struct:__anon47
border_left	src/libs/gui_tk/gui_tk.h	/^	int border_left, border_top, border_right, border_bottom;$/;"	m	class:GUI::BorderedWindow
border_right	src/libs/gui_tk/gui_tk.h	/^	int border_left, border_top, border_right, border_bottom;$/;"	m	class:GUI::BorderedWindow
border_top	src/libs/gui_tk/gui_tk.h	/^	int border_left, border_top, border_right, border_bottom;$/;"	m	class:GUI::BorderedWindow
box	src/libs/gui_tk/gui_tk.cpp	/^	GUI::Frame *box = new GUI::Frame(frame,16,80,300,50);$/;"	m	namespace:GUI	file:
box	src/libs/gui_tk/gui_tk.cpp	/^	box = new GUI::Frame(frame,16,130,300,80,"Radio Buttons");$/;"	m	namespace:GUI	file:
bp	include/cpu.h	/^    Bit16u sp, bp, si, di;       \/* The special purpose registers *\/$/;"	m	struct:TSS_16
bpp	include/render.h	/^		Bitu bpp;$/;"	m	struct:__anon32::__anon33
bpp	src/hardware/hardware.cpp	/^		Bitu		width, height, bpp;$/;"	m	struct:__anon155::__anon159	file:
branch_pos	src/cpu/core_dyn_x86/decoder.h	/^	Bit8u * branch_pos;$/;"	m	struct:__anon91
branch_pos	src/cpu/core_dynrec/decoder_basic.h	/^	DRC_PTR_SIZE_IM branch_pos;$/;"	m	struct:__anon70
branch_pos	src/cpu/core_dynrec/save/decoder_basic.h	/^	DRC_PTR_SIZE_IM branch_pos;$/;"	m	struct:__anon80
breakErrors	include/serialport.h	/^	Bitu breakErrors;$/;"	m	class:CSerial
breakcheck	include/dos_inc.h	/^	bool breakcheck;$/;"	m	struct:DOS_Block
bs	src/cpu/core_full/support.h	/^		Bit8u b;Bit8s bs;$/;"	m	union:FullData::__anon103
bstackpos	include/vga.h	/^	Bit8u fstackpos, bstackpos;$/;"	m	struct:__anon41
buf	include/shell.h	/^	std::string buf;$/;"	m	class:AutoexecObject
buf	src/hardware/hardware.cpp	/^		Bit16s buf[WAVE_BUF][2];$/;"	m	struct:__anon155::__anon156	file:
buf	src/hardware/hardware.cpp	/^		void		*buf;$/;"	m	struct:__anon155::__anon159	file:
buf	src/hardware/sblaster.cpp	/^		} buf;$/;"	m	struct:SB_INFO::__anon170	typeref:union:SB_INFO::__anon170::__anon171	file:
buf	src/misc/support.cxx	/^static char buf[1024];           \/\/greater scope as else it doesn't always gets thrown right (linux\/gcc2.95)$/;"	v	file:
buf1	src/libs/zmbv/zmbv.h	/^	unsigned char *buf1, *buf2, *work;$/;"	m	class:VideoCodec
buf2	src/libs/zmbv/zmbv.h	/^	unsigned char *buf1, *buf2, *work;$/;"	m	class:VideoCodec
bufLen	src/dos/cdrom.h	/^		int     bufLen;$/;"	m	struct:CDROM_Interface_Image::imagePlayer
bufLen	src/dos/cdrom.h	/^		int     bufLen;$/;"	m	struct:CDROM_Interface_Ioctl::dxPlayer
bufSize	src/hardware/hardware.cpp	/^		int			bufSize;$/;"	m	struct:__anon155::__anon159	file:
buffer	include/dos_inc.h	/^  char buffer[127];			 \/* the buffer itself *\/$/;"	m	struct:CommandTail
buffer	include/ipxserver.h	/^	Bit8u buffer[1024];$/;"	m	struct:packetBuffer
buffer	src/dos/cdrom.h	/^		Bit8u   buffer[8192];$/;"	m	struct:CDROM_Interface_Image::imagePlayer
buffer	src/dos/cdrom.h	/^		Bit8u   buffer[8192];$/;"	m	struct:CDROM_Interface_Ioctl::dxPlayer
buffer	src/dos/drive_iso.cpp	/^	Bit8u buffer[ISO_FRAMESIZE];$/;"	m	class:isoFile	file:
buffer	src/hardware/disney.cpp	/^	Bit8u buffer[DISNEY_SIZE];	\/\/ data buffer$/;"	m	struct:_dac_channel	file:
buffer	src/hardware/hardware.cpp	/^		Bit8u buffer[MIDI_BUF];$/;"	m	struct:__anon155::__anon157	file:
buffer	src/hardware/keyboard.cpp	/^	Bit8u buffer[KEYBUFSIZE];$/;"	m	struct:__anon161	file:
buffer	src/libs/gui_tk/gui_tk.h	/^	Drawable *const buffer;$/;"	m	class:GUI::Screen
buffer	src/libs/gui_tk/gui_tk.h	/^	RGB *const buffer;$/;"	m	class:GUI::Drawable
bufferLocation	include/dos_inc.h	/^		Bit8u	bufferLocation;			\/\/  0x53 workspace buffer location$/;"	m	struct:DOS_InfoBlock::sDIB
buffers_x	include/dos_inc.h	/^		Bit16u	buffers_x;		\/\/  0x3f x in BUFFERS x,y$/;"	m	struct:DOS_InfoBlock::sDIB
buffers_y	include/dos_inc.h	/^		Bit16u	buffers_y;		\/\/  0x41 y in BUFFERS x,y$/;"	m	struct:DOS_InfoBlock::sDIB
buflen	include/ipx.h	/^	Bitu buflen;		\/\/ by Interrupt$/;"	m	class:ECBClass
bufsize	src/libs/zmbv/zmbv.h	/^	int bufsize;$/;"	m	class:VideoCodec
busdevicereset	src/dos/cdrom_aspi_win32.cpp	/^	SRB_BusDeviceReset  busdevicereset;$/;"	m	union:__anon114	file:
buswidth	src/hardware/vga_xga.cpp	/^		Bitu buswidth;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
button	src/gui/sdl_mapper.cpp	/^	Bitu button;$/;"	m	class:CJButtonBind	file:
button	src/gui/sdl_mapper.cpp	/^	Bitu stick,button;$/;"	m	class:CJButtonEvent	file:
button	src/hardware/joystick.cpp	/^	bool button[2];$/;"	m	struct:JoyStick	file:
button	src/libs/gui_tk/gui_tk.h	/^	MouseButton button;$/;"	m	class:GUI::Screen
button_autofire	src/gui/sdl_mapper.cpp	/^	Bitu button_autofire[MAXBUTTON];$/;"	m	class:CStickBindGroup	file:
button_cap	src/gui/sdl_mapper.cpp	/^	Bitu button_wrap,button_cap,axes_cap,hats_cap;$/;"	m	class:CStickBindGroup	file:
button_event	src/ints/mouse.cpp	/^struct button_event {$/;"	s	file:
button_lists	src/gui/sdl_mapper.cpp	/^	CBindList * button_lists;$/;"	m	class:CStickBindGroup	file:
button_pressed	src/gui/sdl_mapper.cpp	/^	bool button_pressed[MAX_VJOY_BUTTONS];$/;"	m	struct:__anon143	file:
button_state	src/gui/sdl_mapper.cpp	/^	Bit16u button_state;$/;"	m	class:CCHBindGroup	file:
button_wrap	src/gui/sdl_mapper.cpp	/^	Bitu button_wrap,button_cap,axes_cap,hats_cap;$/;"	m	class:CStickBindGroup	file:
button_wrapping_enabled	src/hardware/joystick.cpp	/^bool button_wrapping_enabled = true;$/;"	v
buttonname	src/gui/sdl_mapper.cpp	/^	const char * buttonname;$/;"	m	class:CHandlerEvent	file:
buttons	src/gui/sdl_mapper.cpp	/^	Bitu stick,emustick,axes,buttons,hats,emulated_axes,emulated_buttons,emulated_hats;$/;"	m	class:CStickBindGroup	file:
buttons	src/gui/sdl_mapper.cpp	/^static std::vector<CButton *> buttons;$/;"	v	file:
buttons	src/ints/mouse.cpp	/^	Bit8u buttons;$/;"	m	struct:__anon199	file:
buttons	src/ints/mouse.cpp	/^	Bit8u buttons;$/;"	m	struct:button_event	file:
bx	include/cpu.h	/^    Bit16u ax, cx, dx, bx;       \/* The general purpose registers *\/$/;"	m	struct:TSS_16
byIP	include/ipx.h	/^			PackedIP byIP ;$/;"	m	union:IPXHeader::transport::addrtype
byNode	include/ipx.h	/^			nodeType byNode;$/;"	m	union:IPXHeader::transport::addrtype
byte	include/regs.h	/^	Bit8u byte[4];$/;"	m	union:GenReg32
byte	src/cpu/core_full/support.h	/^		Bit8u byte[4];$/;"	m	union:FullData::__anon102
byte_panning_shift	include/vga.h	/^	Bitu byte_panning_shift;$/;"	m	struct:__anon38
bytes	src/cpu/core_full/support.h	/^		Bit8s bytes[4];$/;"	m	union:FullData::__anon102
bytes	src/debug/debug_disasm.cpp	/^static int bytes(char c)$/;"	f	file:
bytes	src/ints/ems.cpp	/^	Bit32u bytes;$/;"	m	struct:MoveRegion	file:
bytes_per_char	src/ints/int10_misc.cpp	/^	Bit16u bytes_per_char;		\/* 23h   WORD   bytes\/character *\/$/;"	m	struct:Dynamic_Functionality	file:
bytes_sector	src/dos/drives.h	/^		Bit16u bytes_sector;$/;"	m	struct:fatDrive::__anon120
bytes_sector	src/dos/drives.h	/^		Bit16u bytes_sector;$/;"	m	struct:localDrive::__anon117
bytes_skip	include/vga.h	/^	Bit8u bytes_skip;$/;"	m	struct:__anon37
bytes_skip	include/vga.h	/^	Bitu bytes_skip;$/;"	m	struct:__anon38
bytesect	include/dos_inc.h	/^		Bit16u bytesect;$/;"	m	struct:bootSector::entries
bytespersector	src/dos/drives.h	/^	Bit16u bytespersector;$/;"	m	struct:bootstrap
bytetime	include/serialport.h	/^	float bytetime; \/\/ how long a byte takes to transmit\/receive in milliseconds$/;"	m	class:CSerial
c	src/debug/debug.cpp	/^	bool c;$/;"	m	struct:TLogInst	file:
cAdrCtrl	src/dos/wnaspi32.h	/^ unsigned char  cAdrCtrl;$/;"	m	struct:__anon132
cFirstTrack	src/dos/wnaspi32.h	/^ unsigned char  cFirstTrack;$/;"	m	struct:__anon133
cLastTrack	src/dos/wnaspi32.h	/^ unsigned char  cLastTrack;$/;"	m	struct:__anon133
cTrackNum	src/dos/wnaspi32.h	/^ unsigned char  cTrackNum;$/;"	m	struct:__anon132
cache	src/cpu/core_dyn_x86/cache.h	/^	} cache;$/;"	m	class:CacheBlock	typeref:struct:CacheBlock::__anon84
cache	src/cpu/core_dyn_x86/cache.h	/^} cache;$/;"	v	typeref:struct:__anon87
cache	src/cpu/core_dynrec/cache.h	/^	} cache;$/;"	m	class:CacheBlockDynRec	typeref:struct:CacheBlockDynRec::__anon63
cache	src/cpu/core_dynrec/cache.h	/^} cache;$/;"	v	typeref:struct:__anon66
cache	src/cpu/core_dynrec/save/cache.h	/^	} cache;$/;"	m	class:CacheBlockDynRec	typeref:struct:CacheBlockDynRec::__anon73
cache	src/cpu/core_dynrec/save/cache.h	/^} cache;$/;"	v	typeref:struct:__anon76
cache	src/hardware/adlib.h	/^	RegisterCache cache;$/;"	m	class:Adlib::Module
cache	src/ints/ems.cpp	/^	Bit8u cache;$/;"	m	class:device_EMM	file:
cachePitch	include/render.h	/^		Bitu cachePitch;$/;"	m	struct:__anon32::__anon35
cacheRead	include/render.h	/^		Bit8u *cacheRead;$/;"	m	struct:__anon32::__anon35
cache_addb	src/cpu/core_dyn_x86/cache.h	/^static INLINE void cache_addb(Bit8u val) {$/;"	f
cache_addb	src/cpu/core_dynrec/cache.h	/^static INLINE void cache_addb(Bit8u val) {$/;"	f
cache_addb	src/cpu/core_dynrec/save/cache.h	/^static INLINE void cache_addb(Bit8u val) {$/;"	f
cache_addd	src/cpu/core_dyn_x86/cache.h	/^static INLINE void cache_addd(Bit32u val) {$/;"	f
cache_addd	src/cpu/core_dynrec/cache.h	/^static INLINE void cache_addd(Bit32u val) {$/;"	f
cache_addd	src/cpu/core_dynrec/save/cache.h	/^static INLINE void cache_addd(Bit32u val) {$/;"	f
cache_addq	src/cpu/core_dynrec/cache.h	/^static INLINE void cache_addq(Bit64u val) {$/;"	f
cache_addq	src/cpu/core_dynrec/save/cache.h	/^static INLINE void cache_addq(Bit64u val) {$/;"	f
cache_addunsedblock	src/cpu/core_dyn_x86/cache.h	/^static INLINE void cache_addunsedblock(CacheBlock * block) {$/;"	f
cache_addunusedblock	src/cpu/core_dynrec/cache.h	/^static INLINE void cache_addunusedblock(CacheBlockDynRec * block) {$/;"	f
cache_addunusedblock	src/cpu/core_dynrec/save/cache.h	/^static INLINE void cache_addunusedblock(CacheBlockDynRec * block) {$/;"	f
cache_addw	src/cpu/core_dyn_x86/cache.h	/^static INLINE void cache_addw(Bit16u val) {$/;"	f
cache_addw	src/cpu/core_dynrec/cache.h	/^static INLINE void cache_addw(Bit16u val) {$/;"	f
cache_addw	src/cpu/core_dynrec/save/cache.h	/^static INLINE void cache_addw(Bit16u val) {$/;"	f
cache_block_before_close	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_before_close	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_before_close	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void cache_block_before_close(void) {$/;"	f
cache_block_before_close	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void cache_block_before_close(void) {$/;"	f
cache_block_before_close	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_before_close	src/cpu/core_dynrec/risc_mipsel32.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_before_close	src/cpu/core_dynrec/risc_x64.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_before_close	src/cpu/core_dynrec/risc_x86.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_before_close	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_before_close	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_before_close	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void cache_block_before_close(void) {$/;"	f
cache_block_before_close	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void cache_block_before_close(void) {$/;"	f
cache_block_before_close	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_before_close	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_before_close	src/cpu/core_dynrec/save/risc_x64.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_before_close	src/cpu/core_dynrec/save/risc_x86.h	/^static void cache_block_before_close(void) { }$/;"	f
cache_block_closing	src/cpu/core_dynrec/risc_armv4le-common.h	/^static void cache_block_closing(Bit8u* block_start, Bitu block_size)$/;"	f
cache_block_closing	src/cpu/core_dynrec/risc_armv4le-common.h	/^static void cache_block_closing(Bit8u* block_start,Bitu block_size) {$/;"	f
cache_block_closing	src/cpu/core_dynrec/risc_mipsel32.h	/^static void cache_block_closing(Bit8u* block_start,Bitu block_size) {$/;"	f
cache_block_closing	src/cpu/core_dynrec/risc_x64.h	/^static void cache_block_closing(Bit8u* block_start,Bitu block_size) { }$/;"	f
cache_block_closing	src/cpu/core_dynrec/risc_x86.h	/^static void cache_block_closing(Bit8u* block_start,Bitu block_size) { }$/;"	f
cache_block_closing	src/cpu/core_dynrec/save/risc_armv4le-common.h	/^static void cache_block_closing(Bit8u* block_start, Bitu block_size)$/;"	f
cache_block_closing	src/cpu/core_dynrec/save/risc_armv4le-common.h	/^static void cache_block_closing(Bit8u* block_start,Bitu block_size) {$/;"	f
cache_block_closing	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void cache_block_closing(Bit8u* block_start,Bitu block_size) {$/;"	f
cache_block_closing	src/cpu/core_dynrec/save/risc_x64.h	/^static void cache_block_closing(Bit8u* block_start,Bitu block_size) { }$/;"	f
cache_block_closing	src/cpu/core_dynrec/save/risc_x86.h	/^static void cache_block_closing(Bit8u* block_start,Bitu block_size) { }$/;"	f
cache_blocks	src/cpu/core_dyn_x86/cache.h	/^static CacheBlock * cache_blocks=NULL;$/;"	v
cache_blocks	src/cpu/core_dynrec/cache.h	/^static CacheBlockDynRec * cache_blocks=NULL;$/;"	v
cache_blocks	src/cpu/core_dynrec/save/cache.h	/^static CacheBlockDynRec * cache_blocks=NULL;$/;"	v
cache_checkinstr	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void cache_checkinstr(Bit32u size) {$/;"	f
cache_checkinstr	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void cache_checkinstr(Bit32u size) {$/;"	f
cache_checkinstr	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void cache_checkinstr(Bit32u size) {$/;"	f
cache_checkinstr	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void cache_checkinstr(Bit32u size) {$/;"	f
cache_close	src/cpu/core_dyn_x86/cache.h	/^static void cache_close(void) {$/;"	f
cache_close	src/cpu/core_dynrec/cache.h	/^static void cache_close(void) {$/;"	f
cache_close	src/cpu/core_dynrec/save/cache.h	/^static void cache_close(void) {$/;"	f
cache_closeblock	src/cpu/core_dyn_x86/cache.h	/^static void cache_closeblock(void) {$/;"	f
cache_closeblock	src/cpu/core_dynrec/cache.h	/^static void cache_closeblock(void) {$/;"	f
cache_closeblock	src/cpu/core_dynrec/save/cache.h	/^static void cache_closeblock(void) {$/;"	f
cache_code	src/cpu/core_dyn_x86/cache.h	/^static Bit8u * cache_code=NULL;$/;"	v
cache_code	src/cpu/core_dynrec/cache.h	/^static Bit8u * cache_code=NULL;$/;"	v
cache_code	src/cpu/core_dynrec/save/cache.h	/^static Bit8u * cache_code=NULL;$/;"	v
cache_code_link_blocks	src/cpu/core_dyn_x86/cache.h	/^static Bit8u * cache_code_link_blocks=NULL;$/;"	v
cache_code_link_blocks	src/cpu/core_dynrec/cache.h	/^static Bit8u * cache_code_link_blocks=NULL;$/;"	v
cache_code_link_blocks	src/cpu/core_dynrec/save/cache.h	/^static Bit8u * cache_code_link_blocks=NULL;$/;"	v
cache_code_start_ptr	src/cpu/core_dyn_x86/cache.h	/^static Bit8u * cache_code_start_ptr=NULL;$/;"	v
cache_code_start_ptr	src/cpu/core_dynrec/cache.h	/^static Bit8u * cache_code_start_ptr=NULL;$/;"	v
cache_code_start_ptr	src/cpu/core_dynrec/save/cache.h	/^static Bit8u * cache_code_start_ptr=NULL;$/;"	v
cache_dataindex	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static Bit32u cache_dataindex = 0;		\/\/ used size of data pool = index of free data item (in bytes) in data pool$/;"	v
cache_dataindex	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static Bit32u cache_dataindex = 0;		\/\/ used size of data pool = index of free data item (in bytes) in data pool$/;"	v
cache_dataindex	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static Bit32u cache_dataindex = 0;		\/\/ used size of data pool = index of free data item (in bytes) in data pool$/;"	v
cache_dataindex	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static Bit32u cache_dataindex = 0;		\/\/ used size of data pool = index of free data item (in bytes) in data pool$/;"	v
cache_datapos	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static Bit8u * cache_datapos = NULL;	\/\/ position of data pool in the cache block$/;"	v
cache_datapos	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static Bit8u * cache_datapos = NULL;	\/\/ position of data pool in the cache block$/;"	v
cache_datapos	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static Bit8u * cache_datapos = NULL;	\/\/ position of data pool in the cache block$/;"	v
cache_datapos	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static Bit8u * cache_datapos = NULL;	\/\/ position of data pool in the cache block$/;"	v
cache_datasize	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static Bit32u cache_datasize = 0;		\/\/ total size of data pool$/;"	v
cache_datasize	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static Bit32u cache_datasize = 0;		\/\/ total size of data pool$/;"	v
cache_datasize	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static Bit32u cache_datasize = 0;		\/\/ total size of data pool$/;"	v
cache_datasize	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static Bit32u cache_datasize = 0;		\/\/ total size of data pool$/;"	v
cache_getblock	src/cpu/core_dyn_x86/cache.h	/^static CacheBlock * cache_getblock(void) {$/;"	f
cache_getblock	src/cpu/core_dynrec/cache.h	/^static CacheBlockDynRec * cache_getblock(void) {$/;"	f
cache_getblock	src/cpu/core_dynrec/save/cache.h	/^static CacheBlockDynRec * cache_getblock(void) {$/;"	f
cache_init	src/cpu/core_dyn_x86/cache.h	/^static void cache_init(bool enable) {$/;"	f
cache_init	src/cpu/core_dynrec/cache.h	/^static void cache_init(bool enable) {$/;"	f
cache_init	src/cpu/core_dynrec/save/cache.h	/^static void cache_init(bool enable) {$/;"	f
cache_initialized	src/cpu/core_dyn_x86/cache.h	/^static bool cache_initialized = false;$/;"	v
cache_initialized	src/cpu/core_dynrec/cache.h	/^static bool cache_initialized = false;$/;"	v
cache_initialized	src/cpu/core_dynrec/save/cache.h	/^static bool cache_initialized = false;$/;"	v
cache_openblock	src/cpu/core_dyn_x86/cache.h	/^static CacheBlock * cache_openblock(void) {$/;"	f
cache_openblock	src/cpu/core_dynrec/cache.h	/^static CacheBlockDynRec * cache_openblock(void) {$/;"	f
cache_openblock	src/cpu/core_dynrec/save/cache.h	/^static CacheBlockDynRec * cache_openblock(void) {$/;"	f
cache_reservedata	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static Bit8u * cache_reservedata(void) {$/;"	f
cache_reservedata	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static Bit8u * cache_reservedata(void) {$/;"	f
cache_reservedata	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static Bit8u * cache_reservedata(void) {$/;"	f
cache_reservedata	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static Bit8u * cache_reservedata(void) {$/;"	f
cachedSector	src/dos/drive_iso.cpp	/^	int cachedSector;$/;"	m	class:isoFile	file:
call	include/shell.h	/^	bool call;$/;"	m	class:DOS_Shell
call_10	src/ints/int10.cpp	/^static Bitu call_10;$/;"	v	file:
call_casemap	src/dos/dos_tables.cpp	/^static Bitu call_casemap;$/;"	v	file:
call_default	src/cpu/callback.cpp	/^static Bitu call_stop,call_idle,call_default,call_default2;$/;"	v	file:
call_default2	src/cpu/callback.cpp	/^static Bitu call_stop,call_idle,call_default,call_default2;$/;"	v	file:
call_idle	src/cpu/callback.cpp	/^static Bitu call_stop,call_idle,call_default,call_default2;$/;"	v	file:
call_int13	src/ints/bios_disk.cpp	/^Bitu call_int13;$/;"	v
call_int16	src/ints/bios_keyboard.cpp	/^static Bitu call_int16,call_irq1,call_irq6;$/;"	v	file:
call_int2a	src/dos/dos_misc.cpp	/^static Bitu call_int2f,call_int2a;$/;"	v	file:
call_int2f	src/dos/dos_misc.cpp	/^static Bitu call_int2f,call_int2a;$/;"	v	file:
call_int33	src/ints/mouse.cpp	/^static Bitu call_int33,call_int74,int74_ret_callback,call_mouse_bd;$/;"	v	file:
call_int74	src/ints/mouse.cpp	/^static Bitu call_int33,call_int74,int74_ret_callback,call_mouse_bd;$/;"	v	file:
call_irq1	src/ints/bios_keyboard.cpp	/^static Bitu call_int16,call_irq1,call_irq6;$/;"	v	file:
call_irq6	src/ints/bios_keyboard.cpp	/^static Bitu call_int16,call_irq1,call_irq6;$/;"	v	file:
call_mouse_bd	src/ints/mouse.cpp	/^static Bitu call_int33,call_int74,int74_ret_callback,call_mouse_bd;$/;"	v	file:
call_priv_io	src/cpu/callback.cpp	/^Bitu call_priv_io;$/;"	v
call_program	src/misc/programs.cpp	/^Bitu call_program;$/;"	v
call_ps2	src/ints/mouse.cpp	/^static Bitu call_ps2;$/;"	v	file:
call_shellstop	src/shell/shell.cpp	/^Bitu call_shellstop;$/;"	v
call_stop	src/cpu/callback.cpp	/^static Bitu call_stop,call_idle,call_default,call_default2;$/;"	v	file:
call_v86mon	src/ints/ems.cpp	/^	CALLBACK_HandlerObject call_vdma,int67,call_vcpi,call_v86mon;$/;"	m	class:EMS	file:
call_vcpi	src/ints/ems.cpp	/^	CALLBACK_HandlerObject call_vdma,int67,call_vcpi,call_v86mon;$/;"	m	class:EMS	file:
call_vdma	src/ints/ems.cpp	/^	CALLBACK_HandlerObject call_vdma,int67,call_vcpi,call_v86mon;$/;"	m	class:EMS	file:
callback	include/dma.h	/^	DMA_CallBack callback;$/;"	m	class:DmaChannel
callback	src/cpu/core_dyn_x86.cpp	/^	Bitu callback;$/;"	m	struct:__anon95	file:
callback	src/cpu/core_dynrec.cpp	/^	Bitu callback;				\/\/ the occurred callback$/;"	m	struct:__anon82	file:
callback	src/dos/dos.cpp	/^	CALLBACK_HandlerObject callback[7];$/;"	m	class:DOS	file:
callback	src/ints/bios.cpp	/^	CALLBACK_HandlerObject callback[11];$/;"	m	class:BIOS	file:
callback	src/ints/int10_vesa.cpp	/^} callback;$/;"	v	typeref:struct:__anon198	file:
callback_esr	src/hardware/ipx.cpp	/^	CALLBACK_HandlerObject callback_esr;$/;"	m	class:IPX	file:
callback_ipx	src/hardware/ipx.cpp	/^	CALLBACK_HandlerObject callback_ipx;$/;"	m	class:IPX	file:
callback_ipxint	src/hardware/ipx.cpp	/^	CALLBACK_HandlerObject callback_ipxint;$/;"	m	class:IPX	file:
callbackhandler	src/dos/dos_memory.cpp	/^static	CALLBACK_HandlerObject callbackhandler;$/;"	v	file:
callbackhandler	src/ints/xms.cpp	/^	CALLBACK_HandlerObject callbackhandler;$/;"	m	class:XMS	file:
canchange	include/setup.h	/^		bool canchange;$/;"	m	struct:Section::Function_wrapper
caps_lock_event	src/gui/sdl_mapper.cpp	/^static CKeyEvent * caps_lock_event=NULL;$/;"	v	file:
caption	src/gui/sdl_mapper.cpp	/^	char caption[128];$/;"	m	class:CCaptionButton	file:
capture	src/hardware/hardware.cpp	/^} capture;$/;"	v	typeref:struct:__anon155	file:
capturedir	src/hardware/hardware.cpp	/^static std::string capturedir;$/;"	v	file:
cb1	src/libs/gui_tk/gui_tk.cpp	/^		GUI::Checkbox *cb1, *cb2;$/;"	m	struct:GUI::movewin	file:
cb2	src/libs/gui_tk/gui_tk.cpp	/^		GUI::Checkbox *cb1, *cb2;$/;"	m	struct:GUI::movewin	file:
cd	include/serialport.h	/^	bool cd;			\/\/ bit7: CD$/;"	m	class:CSerial
cd	src/dos/cdrom.h	/^		CDROM_Interface_Image *cd;$/;"	m	struct:CDROM_Interface_Image::imagePlayer
cd	src/dos/cdrom.h	/^		CDROM_Interface_Ioctl *cd;$/;"	m	struct:CDROM_Interface_Ioctl::dxPlayer
cd	src/dos/cdrom.h	/^	SDL_CD*	cd;$/;"	m	class:CDROM_Interface_SDL
cda	src/hardware/sblaster.cpp	/^		Bit8u dac[2],fm[2],cda[2],master[2],lin[2];$/;"	m	struct:SB_INFO::__anon176	file:
cdioctl_cda_selected	src/dos/cdrom.h	/^	cdioctl_cdatype cdioctl_cda_selected;$/;"	m	class:CDROM_Interface_Ioctl
cdioctl_cdatype	src/dos/cdrom.h	/^	enum cdioctl_cdatype { CDIOCTL_CDA_DIO, CDIOCTL_CDA_MCI, CDIOCTL_CDA_DX };$/;"	g	class:CDROM_Interface_Ioctl
cdrom	src/dos/dos_mscdex.cpp	/^	CDROM_Interface*	cdrom[MSCDEX_MAX_DRIVES];$/;"	m	class:CMscdex	file:
cdromDrive	src/dos/drive_local.cpp	/^cdromDrive::cdromDrive(const char driveLetter, const char * startdir,Bit16u _bytes_sector,Bit8u _sectors_cluster,Bit16u _total_clusters,Bit16u _free_clusters,Bit8u _mediaid, int& error)$/;"	f	class:cdromDrive
cdromDrive	src/dos/drives.h	/^class cdromDrive : public localDrive$/;"	c
cega	src/hardware/vga_memory.cpp	/^	VGA_ChainedEGA_Handler		cega;$/;"	m	struct:vg	file:
ceil	src/misc/fixed.cpp	/^FixedPoint FixedPoint::ceil(void)$/;"	f	class:FixedPoint
ceilx	src/misc/fixed.cpp	/^FixedPoint ceilx(FixedPoint fixedVal)$/;"	f
cga16_color_select	src/hardware/vga_other.cpp	/^static void cga16_color_select(Bit8u val) {$/;"	f	file:
cga16_val	src/hardware/vga_other.cpp	/^static Bit8u cga16_val = 0;$/;"	v	file:
cga_masks	src/ints/int10_put_pixel.cpp	/^static Bit8u cga_masks[4]={0x3f,0xcf,0xf3,0xfc};$/;"	v	file:
cga_masks2	src/ints/int10_put_pixel.cpp	/^static Bit8u cga_masks2[8]={0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};$/;"	v	file:
cga_palette	src/ints/int10_modes.cpp	/^static Bit8u cga_palette[16][3]=$/;"	v	file:
cga_palette_2	src/ints/int10_modes.cpp	/^static Bit8u cga_palette_2[64][3]=$/;"	v	file:
ch	src/libs/gui_tk/gui_tk.h	/^	const int ch;$/;"	m	class:GUI::Drawable
chained	include/vga.h	/^	bool chained;					\/* Enable or Disabled Chain 4 Mode *\/$/;"	m	struct:__anon37
chainingUMB	include/dos_inc.h	/^		Bit8u	chainingUMB;			\/\/  0x63 bit0: UMB chain linked to MCB chain$/;"	m	struct:DOS_InfoBlock::sDIB
chan	src/hardware/adlib.h	/^	MixerChannel* chan;$/;"	m	class:Adlib::Module
chan	src/hardware/disney.cpp	/^	MixerChannel * chan;$/;"	m	struct:__anon152	file:
chan	src/hardware/pcspeaker.cpp	/^	MixerChannel * chan;$/;"	m	struct:__anon166	file:
chan	src/hardware/sblaster.cpp	/^		DmaChannel * chan;$/;"	m	struct:SB_INFO::__anon170	file:
chan	src/hardware/sblaster.cpp	/^	MixerChannel * chan;$/;"	m	struct:SB_INFO	file:
chan	src/hardware/tandy_sound.cpp	/^	MixerChannel * chan;$/;"	m	struct:__anon183	file:
chan_calc	src/hardware/ymf262.cpp	/^INLINE void chan_calc( OPL3_CH *CH )$/;"	f
chan_calc_ext	src/hardware/ymf262.cpp	/^INLINE void chan_calc_ext( OPL3_CH *CH )$/;"	f
chan_calc_rhythm	src/hardware/ymf262.cpp	/^INLINE void chan_calc_rhythm( OPL3_CH *CH, unsigned int noise )$/;"	f
change	include/setup.h	/^	const Changeable::Value change;$/;"	m	class:Property
changeLineProperties	src/hardware/serialport/serialport.cpp	/^void CSerial::changeLineProperties() {$/;"	f	class:CSerial
change_action_text	src/gui/sdl_mapper.cpp	/^static void change_action_text(const char* text,Bit8u col) {$/;"	f	file:
changed	include/render.h	/^	bool changed;$/;"	m	struct:__anon30
changes	include/vga.h	/^	VGA_Changes changes;$/;"	m	struct:__anon59
changes	src/hardware/vga_memory.cpp	/^	VGA_Changes_Handler			changes;$/;"	m	struct:vg	file:
channel	src/dos/cdrom.h	/^		MixerChannel	*channel;$/;"	m	struct:CDROM_Interface_Ioctl::dxPlayer
channel	src/dos/cdrom.h	/^		MixerChannel   *channel;$/;"	m	struct:CDROM_Interface_Image::imagePlayer
channel	src/hardware/serialport/misc_util.cpp	/^	SOCKET channel;$/;"	m	struct:_TCPsocketX	file:
channels	src/hardware/gameblaster.cpp	/^	struct saa1099_channel channels[6];    \/* channels *\/$/;"	m	struct:SAA1099	typeref:struct:SAA1099::saa1099_channel	file:
channels	src/hardware/mixer.cpp	/^	MixerChannel * channels;$/;"	m	struct:__anon165	file:
channum	include/dma.h	/^	Bit8u channum;$/;"	m	class:DmaChannel
chanout	src/hardware/ymf262.cpp	/^static signed int chanout[18];			\/* 18 channels *\/$/;"	v	file:
char_position	src/libs/gui_tk/gui_tk.h	/^	const unsigned char *const*const char_position;$/;"	m	class:GUI::BitmapFont
character	src/libs/gui_tk/gui_tk.h	/^	Char character;$/;"	m	class:GUI::Key
character_map_select	include/vga.h	/^	Bit8u character_map_select;$/;"	m	struct:__anon48
character_step	src/libs/gui_tk/gui_tk.h	/^	const int character_step;$/;"	m	class:GUI::BitmapFont
chars	src/dos/dos_tables.cpp	/^	Bit8u chars[256];$/;"	m	struct:DOS_TableCase	file:
checkMask	include/vga.h	/^	Bit8u	checkMask, frame, writeMask;$/;"	m	struct:__anon57
checkOffset	src/libs/gui_tk/gui_tk.h	/^	void checkOffset() {$/;"	f	class:GUI::Input
checkSum	include/ipx.h	/^	Uint8 checkSum[2];$/;"	m	struct:IPXHeader
check_key	src/ints/bios_keyboard.cpp	/^static bool check_key(Bit16u &code) {$/;"	f	file:
checked	src/libs/gui_tk/gui_tk.h	/^	bool checked;$/;"	m	class:GUI::Checkbox
checked	src/libs/gui_tk/gui_tk.h	/^	bool checked;$/;"	m	class:GUI::Radiobox
checksum	src/dos/dos_execute.cpp	/^	Bit16u checksum;$/;"	m	struct:EXE_Header	file:
cheight	src/ints/int10.h	/^	Bitu	cwidth, cheight;$/;"	m	struct:VideoModeBlock
children	src/libs/gui_tk/gui_tk.h	/^	std::list<Window *> children;$/;"	m	class:GUI::Window
chip	src/hardware/adlib.h	/^	Chip	chip[2];$/;"	m	class:Adlib::Module
clear	src/hardware/serialport/serialport.cpp	/^void CSerial::clear (Bit8u priority) {$/;"	f	class:CSerial
clear	src/hardware/serialport/softmodem.h	/^	void clear(void) {$/;"	f	class:CFifo
clear	src/libs/gui_tk/gui_tk.cpp	/^void Drawable::clear(RGB clear)$/;"	f	class:GUI::Drawable
clearMask	include/vga.h	/^	Bit32u  clearMask;$/;"	m	struct:__anon57
clearSelection	src/libs/gui_tk/gui_tk.h	/^	void clearSelection() {$/;"	f	class:GUI::Input
clickms	src/gui/sdlmain.h	/^		   Bit32u clickms;$/;"	m	struct:SDL_Block::__anon140
clientSocketSet	src/hardware/ipx.cpp	/^SDLNet_SocketSet clientSocketSet;$/;"	v
clientport	src/hardware/serialport/nullmodem.h	/^	Bit16u clientport;$/;"	m	class:CNullModem
clientsocket	src/hardware/serialport/nullmodem.h	/^	TCPClientSocket* clientsocket;$/;"	m	class:CNullModem
clientsocket	src/hardware/serialport/softmodem.h	/^	TCPClientSocket* clientsocket;$/;"	m	class:CSerialModem
clipboard	src/libs/gui_tk/gui_tk.h	/^	String clipboard;$/;"	m	class:GUI::Screen
clipx	src/ints/mouse.cpp	/^	Bit16s	clipx,clipy;$/;"	m	struct:__anon199	file:
clipy	src/ints/mouse.cpp	/^	Bit16s	clipx,clipy;$/;"	m	struct:__anon199	file:
clk	include/vga.h	/^	} clk[4],mclk;$/;"	m	struct:__anon42	typeref:struct:__anon42::__anon43
clock	src/hardware/fmopl.cpp	/^	int clock;						\/* master clock  (Hz)			*\/$/;"	m	struct:fm_opl_f	file:
clock	src/hardware/ymf262.cpp	/^	int clock;						\/* master clock  (Hz)			*\/$/;"	m	struct:__anon192	file:
clockFreq	src/hardware/vga_paradise.cpp	/^	Bitu clockFreq[4];$/;"	m	struct:__anon187	file:
clockFreq	src/hardware/vga_tseng.cpp	/^	Bitu clockFreq[16];$/;"	m	struct:__anon188	file:
clockFreq	src/hardware/vga_tseng.cpp	/^	Bitu clockFreq[8];$/;"	m	struct:__anon189	file:
clocking_mode	include/vga.h	/^	Bit8u clocking_mode;$/;"	m	struct:__anon48
close	src/libs/gui_tk/gui_tk.h	/^	Button *close;$/;"	m	class:GUI::MessageBox
close	src/libs/gui_tk/gui_tk.h	/^	void close() {$/;"	f	class:GUI::ToplevelWindow
close_directory	src/misc/cross.cpp	/^void close_directory(dir_information* dirp) {$/;"	f
closehandlers	src/libs/gui_tk/gui_tk.h	/^	std::list<ToplevelWindow_Callback *> closehandlers;$/;"	m	class:GUI::ToplevelWindow
clx	src/fpu/fpu_instructions_x86.h	28;"	d
clx	src/fpu/fpu_instructions_x86.h	30;"	d
clx	src/fpu/fpu_instructions_x86.h	537;"	d
clx	src/fpu/fpu_instructions_x86.h	539;"	d
cmd	include/programs.h	/^	CommandLine * cmd;$/;"	m	class:Program
cmd	include/shell.h	/^	CommandLine * cmd;$/;"	m	class:BatchFile
cmd	include/vga.h	/^		Bit8u cmd;$/;"	m	struct:__anon42::__anon44
cmd	src/hardware/sblaster.cpp	/^		Bit8u cmd;$/;"	m	struct:SB_INFO::__anon173	file:
cmd	src/hardware/vga_xga.cpp	/^		Bit16u cmd;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
cmd_in	src/hardware/sblaster.cpp	/^		Bit8u cmd_in[DSP_BUFSIZE];$/;"	m	struct:SB_INFO::__anon173	file:
cmd_in_pos	src/hardware/sblaster.cpp	/^		Bit8u cmd_in_pos;$/;"	m	struct:SB_INFO::__anon173	file:
cmd_it	include/programs.h	/^	typedef std::list<std::string>::iterator cmd_it;$/;"	t	class:CommandLine
cmd_len	src/hardware/sblaster.cpp	/^		Bit8u cmd_len;$/;"	m	struct:SB_INFO::__anon173	file:
cmd_list	src/shell/shell_cmds.cpp	/^static SHELL_Cmd cmd_list[]={$/;"	v	file:
cmdbuf	src/hardware/serialport/softmodem.h	/^	char cmdbuf[255];$/;"	m	class:CSerialModem
cmdline	include/control.h	/^	CommandLine * cmdline;$/;"	m	class:Config
cmdpause	src/hardware/serialport/softmodem.h	/^	Bitu cmdpause;$/;"	m	class:CSerialModem
cmdpos	src/hardware/serialport/softmodem.h	/^	Bitu cmdpos;$/;"	m	class:CSerialModem
cmds	include/programs.h	/^	std::list<std::string> cmds;$/;"	m	class:CommandLine
cmdtail	include/dos_inc.h	/^		CommandTail cmdtail;		$/;"	m	struct:DOS_PSP::sPSP
cmdtail	include/dos_inc.h	/^		RealPt cmdtail;$/;"	m	struct:DOS_ParamBlock::sExec
cmos	src/hardware/cmos.cpp	/^} cmos;$/;"	v	typeref:struct:__anon149	file:
cmos_checktimer	src/hardware/cmos.cpp	/^static void cmos_checktimer(void) {$/;"	f	file:
cmos_readreg	src/hardware/cmos.cpp	/^static Bitu cmos_readreg(Bitu port,Bitu iolen) {$/;"	f	file:
cmos_selreg	src/hardware/cmos.cpp	/^void cmos_selreg(Bitu port,Bitu val,Bitu iolen) {$/;"	f
cmos_timerevent	src/hardware/cmos.cpp	/^static void cmos_timerevent(Bitu val) {$/;"	f	file:
cmos_writereg	src/hardware/cmos.cpp	/^static void cmos_writereg(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
cms_buf_point	src/hardware/gameblaster.cpp	/^static Bit16s * cms_buf_point[4] = {$/;"	v	file:
cms_buffer	src/hardware/gameblaster.cpp	/^static Bit16s cms_buffer[2][2][CMS_BUFFER_SIZE];$/;"	v	file:
cms_chan	src/hardware/gameblaster.cpp	/^static MixerChannel * cms_chan;$/;"	v	file:
cntr	src/hardware/timer.cpp	/^	Bitu cntr;$/;"	m	struct:PIT_Block	file:
code	include/cpu.h	/^	} code;$/;"	m	struct:CPUBlock	typeref:struct:CPUBlock::__anon7
code	src/cpu/core_dyn_x86/decoder.h	/^		CodePageHandler * code;	$/;"	m	struct:DynDecode::__anon89
code	src/cpu/core_dyn_x86/decoder.h	/^	PhysPt code;$/;"	m	struct:DynDecode
code	src/cpu/core_dynrec/decoder_basic.h	/^		CodePageHandlerDynRec * code;$/;"	m	struct:DynDecode::__anon68
code	src/cpu/core_dynrec/decoder_basic.h	/^	PhysPt code;			\/\/ pointer to next byte in the instruction stream$/;"	m	struct:DynDecode
code	src/cpu/core_dynrec/save/decoder_basic.h	/^		CodePageHandlerDynRec * code;$/;"	m	struct:DynDecode::__anon78
code	src/cpu/core_dynrec/save/decoder_basic.h	/^	PhysPt code;			\/\/ pointer to next byte in the instruction stream$/;"	m	struct:DynDecode
code	src/cpu/core_full/support.h	/^	OpCode code;$/;"	m	struct:FullData
codeViewData	src/debug/debug.cpp	/^} codeViewData;$/;"	v	typeref:struct:SCodeViewData
code_start	src/cpu/core_dyn_x86/decoder.h	/^	PhysPt code_start;$/;"	m	struct:DynDecode
code_start	src/cpu/core_dynrec/decoder_basic.h	/^	PhysPt code_start;		\/\/ pointer to the start of the current code block$/;"	m	struct:DynDecode
code_start	src/cpu/core_dynrec/save/decoder_basic.h	/^	PhysPt code_start;		\/\/ pointer to the start of the current code block$/;"	m	struct:DynDecode
codec	src/hardware/hardware.cpp	/^		VideoCodec	*codec;$/;"	m	struct:__anon155::__anon159	file:
codec	src/libs/zmbv/zmbv_vfw.h	/^	VideoCodec * codec;$/;"	m	class:CodecInst
col_step	src/libs/gui_tk/gui_tk.h	/^	const int col_step;$/;"	m	class:GUI::BitmapFont
collatingseq	include/dos_inc.h	/^		RealPt collatingseq;$/;"	m	struct:DOS_Block::__anon15
color	src/gui/sdl_mapper.cpp	/^	Bit8u color;$/;"	m	class:CButton	file:
color	src/libs/gui_tk/gui_tk.h	/^	RGB color;$/;"	m	class:GUI::Drawable
color	src/libs/gui_tk/gui_tk.h	/^	RGB color;$/;"	m	class:GUI::Label
color_compare	include/vga.h	/^	Bit8u color_compare;$/;"	m	struct:__anon37
color_compare	include/vga.h	/^	Bit8u color_compare;$/;"	m	struct:__anon51
color_dont_care	include/vga.h	/^	Bit8u color_dont_care;$/;"	m	struct:__anon37
color_dont_care	include/vga.h	/^	Bit8u color_dont_care;$/;"	m	struct:__anon51
color_plane_enable	include/vga.h	/^	Bit8u color_plane_enable;$/;"	m	struct:__anon49
color_select	include/vga.h	/^	Bit8u color_select;$/;"	m	struct:__anon47
color_select	include/vga.h	/^	Bit8u color_select;$/;"	m	struct:__anon49
com_ext	src/shell/shell_misc.cpp	/^static const char * com_ext=".COM";$/;"	v	file:
combine	include/vga.h	/^	Bit8u combine[16];$/;"	m	struct:__anon53
combo_1	src/gui/sdl_mapper.cpp	/^static KeyBlock combo_1[14]={$/;"	v	file:
combo_2	src/gui/sdl_mapper.cpp	/^static KeyBlock combo_2[12]={$/;"	v	file:
combo_3	src/gui/sdl_mapper.cpp	/^static KeyBlock combo_3[12]={$/;"	v	file:
combo_4	src/gui/sdl_mapper.cpp	/^static KeyBlock combo_4[11]={$/;"	v	file:
combo_f	src/gui/sdl_mapper.cpp	/^static KeyBlock combo_f[12]={$/;"	v	file:
command	src/hardware/keyboard.cpp	/^	KeyCommands command;$/;"	m	struct:__anon161	file:
command	src/hardware/serialport/nullmodem.h	/^		Bit8u command;$/;"	m	struct:CNullModem::__anon180
command	src/hardware/serialport/softmodem.h	/^		Bit8u command;$/;"	m	struct:CSerialModem::__anon181
command_slashc	src/shell/shell.cpp	/^bool command_slashc = false;$/;"	v
commandmode	src/hardware/serialport/softmodem.h	/^	bool commandmode;		\/\/ true: interpret input as commands$/;"	m	class:CSerialModem
compatible_chain4	include/vga.h	/^	bool compatible_chain4;$/;"	m	struct:__anon37
completion_index	include/shell.h	/^	Bit16u completion_index;$/;"	m	class:DOS_Shell
completion_start	include/shell.h	/^	char *completion_start;$/;"	m	class:DOS_Shell
compress	src/libs/zmbv/zmbv.h	/^	} compress;$/;"	m	class:VideoCodec	typeref:struct:VideoCodec::__anon203
compression	src/libs/zmbv/zmbv.h	/^		unsigned char compression;$/;"	m	struct:VideoCodec::KeyframeHeader
comspec_string	src/shell/shell.cpp	/^static char const * const comspec_string="COMSPEC=Z:\\\\COMMAND.COM";$/;"	v	file:
conc2	src/gui/render_scalers.cpp	36;"	d	file:
conc2d	src/gui/render_scalers.cpp	39;"	d	file:
conc3	src/gui/render_scalers.cpp	37;"	d	file:
conc3d	src/gui/render_16.h	/^static void conc3d(HalfGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_16.h	/^static void conc3d(HalfSpecialGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_16.h	/^static void conc3d(NormalGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_16.h	/^static void conc3d(SpecialGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_32.h	/^static void conc3d(HalfGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_32.h	/^static void conc3d(HalfSpecialGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_32.h	/^static void conc3d(NormalGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_32.h	/^static void conc3d(SpecialGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_8.h	/^static void conc3d(HalfGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_8.h	/^static void conc3d(HalfSpecialGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_8.h	/^static void conc3d(NormalGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_8.h	/^static void conc3d(SpecialGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_9.h	/^static void conc3d(HalfGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_9.h	/^static void conc3d(HalfSpecialGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_9.h	/^static void conc3d(NormalGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_9.h	/^static void conc3d(SpecialGX,SBPP,DBPP) (const void * src) {$/;"	f
conc3d	src/gui/render_scalers.cpp	40;"	d	file:
conc4	src/gui/render_scalers.cpp	38;"	d	file:
concat	src/shell/shell_cmds.cpp	/^	bool concat;$/;"	m	struct:copysource	file:
cond	src/cpu/core_full/support.h	/^	Bitu cond;$/;"	m	struct:FullData
cond	src/gui/sdlmain.h	/^	SDL_cond *cond;$/;"	m	struct:SDL_Block
config	include/vga.h	/^	VGA_Config config;$/;"	m	struct:__anon59
configname	src/gui/sdl_mapper.cpp	/^	char configname[10];$/;"	m	class:CStickBindGroup	file:
configname	src/gui/sdl_mapper.cpp	/^	const char * configname;$/;"	m	class:CKeyBindGroup	file:
connBuffer	src/hardware/ipxserver.cpp	/^packetBuffer connBuffer[SOCKETTABLESIZE];$/;"	v
connect	src/hardware/ymf262.cpp	/^	INT32   *connect;	\/* slot output pointer			*\/$/;"	m	struct:__anon190	file:
connect1	src/hardware/fmopl.cpp	/^	INT32   *connect1;	\/* slot1 output pointer			*\/$/;"	m	struct:__anon153	file:
connected	include/ipxserver.h	/^	bool connected;		\/\/ Connected flag$/;"	m	struct:packetBuffer
connected	src/hardware/serialport/softmodem.h	/^	bool connected;$/;"	m	class:CSerialModem
const_it	include/control.h	/^	typedef std::list<Section*>::const_iterator const_it;$/;"	t	class:Config
const_it	include/setup.h	/^	typedef std::list<Property*>::const_iterator const_it;$/;"	t	class:Section_prop
const_reverse_it	include/control.h	/^	typedef std::list<Section*>::const_reverse_iterator const_reverse_it;$/;"	t	class:Config
control	src/dosbox.cpp	/^Config * control;$/;"	v
control	src/hardware/disney.cpp	/^	Bit8u control;$/;"	m	struct:__anon152	file:
control	src/ints/bios_keyboard.cpp	/^  Bit16u control;$/;"	m	struct:__anon194	file:
control1	src/hardware/vga_xga.cpp	/^	Bit16u control1;$/;"	m	struct:XGAStatus	file:
control2	src/hardware/vga_xga.cpp	/^	Bit16u control2;$/;"	m	struct:XGAStatus	file:
controlport	src/hardware/memory.cpp	/^		Bit8u controlport;$/;"	m	struct:MemoryBlock::__anon164	file:
convToDirFile	src/dos/drive_fat.cpp	/^static void convToDirFile(char *filename, char *filearray) {$/;"	f	file:
copy	src/misc/setup.cpp	/^Value& Value::copy(Value const& in) throw(WrongType) {$/;"	f	class:Value
copySelection	src/libs/gui_tk/gui_tk.h	/^	void copySelection() {$/;"	f	class:GUI::Input
copyright_string	src/hardware/sblaster.cpp	/^static char const * const copyright_string="COPYRIGHT (C) CREATIVE TECHNOLOGY LTD, 1992.";$/;"	v	file:
copysource	src/shell/shell_cmds.cpp	/^	copysource():filename(""),concat(false){ };$/;"	f	struct:copysource
copysource	src/shell/shell_cmds.cpp	/^	copysource(std::string filein,bool concatin):$/;"	f	struct:copysource
copysource	src/shell/shell_cmds.cpp	/^struct copysource {$/;"	s	file:
core	src/cpu/core_simple.cpp	/^} core;$/;"	v	typeref:struct:__anon105	file:
core	src/cpu/core_verysimple.cpp	/^} core;$/;"	v	typeref:struct:__anon106	file:
core_dyn	src/cpu/core_dyn_x86.cpp	/^} core_dyn;$/;"	v	typeref:struct:__anon95	file:
core_dynrec	src/cpu/core_dynrec.cpp	/^} core_dynrec;$/;"	v	typeref:struct:__anon82	file:
cos	src/misc/fixed.cpp	/^FixedPoint FixedPoint::cos(void)$/;"	f	class:FixedPoint
cosx	src/misc/fixed.cpp	/^FixedPoint cosx(FixedPoint x)$/;"	f
count	include/dos_inc.h	/^  Bit8u count;				\/* number of bytes returned *\/$/;"	m	struct:CommandTail
count	include/render.h	/^		Bitu count;$/;"	m	struct:__anon32::__anon34
count	include/vga.h	/^		Bit8u count,delay;$/;"	m	struct:__anon38::__anon40
count	src/hardware/sblaster.cpp	/^		Bitu count;$/;"	m	struct:SB_INFO::__anon179	file:
countLRUcache	include/dos_inc.h	/^		Bit16u	countLRUcache;		\/\/ -0x16 LRU counter for FCB caching$/;"	m	struct:DOS_InfoBlock::sDIB
countLRUopens	include/dos_inc.h	/^		Bit16u	countLRUopens;		\/\/ -0x14 LRU counter for FCB openings$/;"	m	struct:DOS_InfoBlock::sDIB
counter	src/hardware/adlib.h	/^	Bit8u counter;$/;"	m	struct:Adlib::Timer
counter	src/hardware/gameblaster.cpp	/^	double counter;$/;"	m	struct:saa1099_channel	file:
counter	src/hardware/gameblaster.cpp	/^	double counter;$/;"	m	struct:saa1099_noise	file:
counter_latch	src/hardware/timer.cpp	/^static void counter_latch(Bitu counter) {$/;"	f	file:
counter_output	src/hardware/timer.cpp	/^static bool counter_output(Bitu counter) {$/;"	f	file:
counterstatus_set	src/hardware/timer.cpp	/^	bool counterstatus_set;$/;"	m	struct:PIT_Block	file:
counting	src/hardware/timer.cpp	/^	bool counting;$/;"	m	struct:PIT_Block	file:
country	include/dos_inc.h	/^		Bit8u* country;\/\/Will be copied to dos memory. resides in real mem$/;"	m	struct:DOS_Block::__anon15
country_info	src/dos/dos_tables.cpp	/^static Bit8u country_info[0x22] = {$/;"	v	file:
cpl	include/cpu.h	/^	Bitu cpl;							\/* Current Privilege *\/$/;"	m	struct:CPUBlock
cpm_entry	include/dos_inc.h	/^		RealPt	cpm_entry;			\/* CPM Service Request address*\/$/;"	m	struct:DOS_PSP::sPSP
cpmentry	include/dos_inc.h	/^	RealPt cpmentry;$/;"	m	struct:DOS_Block
cpu	src/cpu/cpu.cpp	/^CPUBlock cpu;$/;"	v
cpuLoadDisp	src/dosbox.cpp	/^Bits cpuLoadDisp = 0;$/;"	v
cpuLog	src/debug/debug.cpp	/^static bool		cpuLog			= false;$/;"	v	file:
cpuLogCounter	src/debug/debug.cpp	/^static int		cpuLogCounter	= 0;$/;"	v	file:
cpuLogFile	src/debug/debug.cpp	/^static ofstream 	cpuLogFile;$/;"	v	file:
cpuLogType	src/debug/debug.cpp	/^static int		cpuLogType		= 1;	\/\/ log detail$/;"	v	file:
cpu_regs	src/cpu/cpu.cpp	/^CPU_Regs cpu_regs;$/;"	v
cpu_tss	src/cpu/cpu.cpp	/^TaskStateSegment cpu_tss;$/;"	v
cpudecoder	src/cpu/cpu.cpp	/^CPU_Decoder * cpudecoder;$/;"	v
cr0	include/cpu.h	/^	Bitu cr0;$/;"	m	struct:CPUBlock
cr2	include/paging.h	/^	Bitu			cr2;$/;"	m	struct:PagingBlock
cr3	include/cpu.h	/^	Bit32u cr3;                  \/* The page directory pointer *\/$/;"	m	struct:TSS_32
cr3	include/paging.h	/^	Bitu			cr3;$/;"	m	struct:PagingBlock
created_succesfully	src/dos/drives.h	/^	bool created_succesfully;$/;"	m	class:fatDrive
crit_error_flag	include/dos_inc.h	/^		Bit8u crit_error_flag;		\/* 0x00 Critical Error Flag *\/$/;"	m	struct:DOS_SDA::sSDA
crossblock	src/cpu/core_dyn_x86/cache.h	/^	CacheBlock * crossblock;$/;"	m	class:CacheBlock
crossblock	src/cpu/core_dynrec/cache.h	/^	CacheBlockDynRec * crossblock;$/;"	m	class:CacheBlockDynRec
crossblock	src/cpu/core_dynrec/save/cache.h	/^	CacheBlockDynRec * crossblock;$/;"	m	class:CacheBlockDynRec
crtDate	src/dos/drives.h	/^	Bit16u crtDate;$/;"	m	struct:direntry
crtTime	src/dos/drives.h	/^	Bit16u crtTime;$/;"	m	struct:direntry
crtc	include/vga.h	/^	VGA_Crtc crtc;$/;"	m	struct:__anon59
crtc	src/hardware/vga_crtc.cpp	30;"	d	file:
crtc_address	src/ints/int10_misc.cpp	/^	Bit16u crtc_address;		\/* 1Eh   WORD   CRTC port address *\/$/;"	m	struct:Dynamic_Functionality	file:
cs	include/cpu.h	/^		Bitu cs,eip;$/;"	m	struct:CPUBlock::__anon8
cs	include/cpu.h	/^    Bit16u cs;                   \/* The code selector *\/$/;"	m	struct:TSS_16
cs	include/cpu.h	/^    Bit32u cs;                   \/* The code selector *\/$/;"	m	struct:TSS_32
cs	include/regs.h	/^enum SegNames { es=0,cs,ss,ds,fs,gs};$/;"	e	enum:SegNames
cs	src/cpu/core_normal/prefix_none.h	/^		DO_PREFIX_SEG(cs);break;$/;"	v
cs	src/cpu/core_normal/verysimple_prefix_none.h	/^		DO_PREFIX_SEG(cs);break;$/;"	v
cs	src/cpu/paging.cpp	/^	Bitu cs;$/;"	m	struct:PF_Entry	file:
cs	src/hardware/iohandler.cpp	/^	Bitu cs;$/;"	m	struct:IOF_Entry	file:
cseip	src/cpu/core_full/support.h	/^	EAPoint cseip;$/;"	m	struct:FullData
cseip	src/cpu/core_simple.cpp	/^	HostPt cseip;$/;"	m	struct:__anon105	file:
cseip	src/cpu/core_simple.cpp	/^	volatile HostPt cseip;$/;"	m	struct:__anon105	file:
cseip	src/cpu/core_verysimple.cpp	/^	HostPt cseip;$/;"	m	struct:__anon106	file:
ctrl	src/libs/gui_tk/gui_tk.h	/^	bool ctrl;$/;"	m	class:GUI::Key
ctrlnum	include/dma.h	/^	Bit8u ctrlnum;$/;"	m	class:DmaController
cts	include/serialport.h	/^	bool cts;			\/\/ bit4: CTS$/;"	m	class:CSerial
curDirStructure	include/dos_inc.h	/^		RealPt  curDirStructure;	\/\/  0x16 pointer to current array of directory structure$/;"	m	struct:DOS_InfoBlock::sDIB
curFatSect	src/dos/drive_fat.cpp	/^Bit32u curFatSect;$/;"	v
curReqheaderPtr	src/dos/dos_mscdex.cpp	/^static PhysPt curReqheaderPtr = 0;$/;"	v	file:
curSectOff	src/dos/drive_fat.cpp	/^	Bit32u curSectOff;$/;"	m	class:fatFile	file:
curSelectorName	src/debug/debug.cpp	/^static char curSelectorName[3] = { 0,0,0 };$/;"	v	file:
cur_block	include/dos_inc.h	/^		Bit16u cur_block;		\/* Current Block *\/$/;"	m	struct:DOS_FCB::sFCB
cur_chip	src/hardware/fmopl.cpp	/^static void *cur_chip = NULL;	\/* current chip pointer *\/$/;"	v	file:
cur_chip	src/hardware/ymf262.cpp	/^static void *cur_chip = NULL;			\/* current chip point *\/$/;"	v	file:
cur_mode	src/ints/int10_misc.cpp	/^	Bit8u cur_mode;				\/* 04h   BYTE   video mode in effect *\/$/;"	m	struct:Dynamic_Functionality	file:
cur_rec	include/dos_inc.h	/^		Bit8u  cur_rec;			\/* Current record in current block *\/$/;"	m	struct:DOS_FCB::sFCB
curcommand	src/hardware/vga_xga.cpp	/^	Bitu curcommand;$/;"	m	struct:XGAStatus	file:
curdir	include/dos_system.h	/^	char curdir[DOS_PATHLENGTH];$/;"	m	class:DOS_Drive
curmode	include/vga.h	/^	Bit8u curmode;$/;"	m	struct:__anon41
currFrame	src/dos/cdrom.h	/^		int     currFrame;	$/;"	m	struct:CDROM_Interface_Image::imagePlayer
currFrame	src/dos/cdrom.h	/^		int     currFrame;	$/;"	m	struct:CDROM_Interface_Ioctl::dxPlayer
curraddr	include/dma.h	/^	Bit16u curraddr;$/;"	m	class:DmaChannel
currcnt	include/dma.h	/^	Bit16u currcnt;$/;"	m	class:DmaChannel
current	src/gui/sdlmain.h	/^		   int current;$/;"	m	struct:SDL_Block::__anon141
currentDisk	src/dos/drives.h	/^		Bit32u currentDisk;$/;"	m	struct:DriveManager::DriveInfo
currentDrive	src/dos/drives.cpp	/^int DriveManager::currentDrive;$/;"	m	class:DriveManager	file:
currentDrive	src/dos/drives.h	/^	static int currentDrive;$/;"	m	class:DriveManager
currentSector	src/dos/drive_fat.cpp	/^	Bit32u currentSector;$/;"	m	class:fatFile	file:
currentSector	src/dos/drives.h	/^		Bit32u currentSector;$/;"	m	struct:isoDrive::DirIterator
current_config_dir	src/misc/setup.cpp	/^static std::string current_config_dir; \/\/ Set by parseconfigfile so Prop_path can use it to construct the realpath$/;"	v	file:
current_drive	include/dos_inc.h	/^		Bit8u current_drive;		\/* 0x16 current drive *\/$/;"	m	struct:DOS_SDA::sSDA
current_drive	include/dos_inc.h	/^	Bit8u current_drive;$/;"	m	struct:DOS_Block
current_dta	include/dos_inc.h	/^		Bit32u current_dta;		\/* 0x0C current DTA (Disk Transfer Address) *\/$/;"	m	struct:DOS_SDA::sSDA
current_keyboard_file_name	src/dos/dos_keyboard_layout.cpp	/^	char current_keyboard_file_name[256];$/;"	m	class:keyboard_layout	file:
current_layout	src/dos/dos_keyboard_layout.cpp	/^	Bit16u current_layout[(MAX_SCAN_CODE+1)*layout_pages];$/;"	m	class:keyboard_layout	file:
current_layout_planes	src/dos/dos_keyboard_layout.cpp	/^	} current_layout_planes[layout_pages-4];$/;"	m	class:keyboard_layout	typeref:struct:keyboard_layout::__anon115	file:
current_psp	include/dos_inc.h	/^		Bit16u current_psp; 		\/* 0x10 current PSP *\/$/;"	m	struct:DOS_SDA::sSDA
current_value	src/gui/sdl_mapper.cpp	/^	Bits current_value;$/;"	m	class:CEvent	file:
cursor	include/vga.h	/^	} cursor;$/;"	m	struct:__anon38	typeref:struct:__anon38::__anon40
cursorMask	src/ints/mouse.cpp	/^	Bit16u* cursorMask;$/;"	m	struct:__anon199	file:
cursorOfs	src/debug/debug.cpp	/^	Bit32u	cursorOfs;$/;"	m	struct:SCodeViewData	file:
cursorPos	src/debug/debug.cpp	/^	int		cursorPos;$/;"	m	struct:SCodeViewData	file:
cursorSeg	src/debug/debug.cpp	/^	Bit16u  cursorSeg;$/;"	m	struct:SCodeViewData	file:
cursorType	src/ints/mouse.cpp	/^	Bit16u  cursorType;$/;"	m	struct:__anon199	file:
cursor_end	include/vga.h	/^	Bit8u cursor_end;$/;"	m	struct:__anon46
cursor_end	include/vga.h	/^	Bit8u cursor_end;$/;"	m	struct:__anon50
cursor_location_high	include/vga.h	/^	Bit8u cursor_location_high;$/;"	m	struct:__anon50
cursor_location_low	include/vga.h	/^	Bit8u cursor_location_low;$/;"	m	struct:__anon50
cursor_pos	src/ints/int10_misc.cpp	/^	Bit16u cursor_pos[8];		\/* 0Bh   WORD   cursor position for page 0-7 *\/$/;"	m	struct:Dynamic_Functionality	file:
cursor_start	include/vga.h	/^	Bit8u cursor_start;$/;"	m	struct:__anon46
cursor_start	include/vga.h	/^	Bit8u cursor_start;$/;"	m	struct:__anon50
cursor_start	include/vga.h	/^	Bitu cursor_start;$/;"	m	struct:__anon37
cursor_type	src/ints/int10_misc.cpp	/^	Bit16u cursor_type;			\/* 1Bh   WORD   cursor type *\/$/;"	m	struct:Dynamic_Functionality	file:
curx	src/hardware/vga_xga.cpp	/^		Bit16u curx, cury;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
curx	src/hardware/vga_xga.cpp	/^	Bit16u curx, cury;$/;"	m	struct:XGAStatus	file:
cury	src/hardware/vga_xga.cpp	/^		Bit16u curx, cury;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
cury	src/hardware/vga_xga.cpp	/^	Bit16u curx, cury;$/;"	m	struct:XGAStatus	file:
cutSelection	src/libs/gui_tk/gui_tk.h	/^	void cutSelection() {$/;"	f	class:GUI::Input
cvga	src/hardware/vga_memory.cpp	/^	VGA_ChainedVGA_Handler		cvga;$/;"	m	struct:vg	file:
cw	include/fpu.h	/^	Bit16u		cw,cw_mask_all;$/;"	m	struct:__anon23
cw	src/cpu/core_dyn_x86.cpp	/^	Bit32u		cw,host_cw;$/;"	m	struct:__anon96	file:
cw	src/libs/gui_tk/gui_tk.h	/^	const int cw;$/;"	m	class:GUI::Drawable
cw_mask_all	include/fpu.h	/^	Bit16u		cw,cw_mask_all;$/;"	m	struct:__anon23
cwdDirCluster	src/dos/drives.h	/^	Bit32u cwdDirCluster;$/;"	m	class:fatDrive
cwidth	src/ints/int10.h	/^	Bitu	cwidth, cheight;$/;"	m	struct:VideoModeBlock
cx	include/cpu.h	/^    Bit16u ax, cx, dx, bx;       \/* The general purpose registers *\/$/;"	m	struct:TSS_16
cx	src/libs/gui_tk/gui_tk.h	/^	const int cx;$/;"	m	class:GUI::Drawable
cy	src/libs/gui_tk/gui_tk.h	/^	const int cy;$/;"	m	class:GUI::Drawable
cycle_check	src/cpu/core_dyn_x86/decoder.h	/^enum save_info_type {exception, cycle_check, normal, fpu_restore};$/;"	e	enum:save_info_type
cycle_check	src/cpu/core_dynrec/decoder_basic.h	/^enum save_info_type {exception, cycle_check, string_break};$/;"	e	enum:save_info_type
cycle_check	src/cpu/core_dynrec/save/decoder_basic.h	/^enum save_info_type {exception, cycle_check, string_break};$/;"	e	enum:save_info_type
cycle_count	src/debug/debug.cpp	/^Bitu cycle_count;$/;"	v
cycles	src/cpu/core_dyn_x86/decoder.h	/^	Bitu cycles;$/;"	m	struct:DynDecode
cycles	src/cpu/core_dyn_x86/decoder.h	/^	Bitu cycles;$/;"	m	struct:__anon91
cycles	src/cpu/core_dynrec/decoder_basic.h	/^	Bitu cycles;			\/\/ number cycles used by currently translated code$/;"	m	struct:DynDecode
cycles	src/cpu/core_dynrec/decoder_basic.h	/^	Bitu cycles;$/;"	m	struct:__anon70
cycles	src/cpu/core_dynrec/save/decoder_basic.h	/^	Bitu cycles;			\/\/ number cycles used by currently translated code$/;"	m	struct:DynDecode
cycles	src/cpu/core_dynrec/save/decoder_basic.h	/^	Bitu cycles;$/;"	m	struct:__anon80
cyclesDisp	src/dosbox.cpp	/^Bits cyclesDisp = 0;$/;"	v
cylcount	include/bios_disk.h	/^	Bit16u cylcount;  \/* Cylinders per side *\/$/;"	m	struct:diskGeo
cylinders	include/bios_disk.h	/^	Bit32u heads,cylinders,sectors;$/;"	m	class:imageDisk
cymfile	src/hardware/fmopl.cpp	/^	FILE * cymfile = NULL;$/;"	v
cymfile	src/hardware/ymf262.cpp	/^	FILE * cymfile = NULL;$/;"	v
cymfile_callback	src/hardware/fmopl.cpp	/^static void cymfile_callback (int n)$/;"	f	file:
cymfile_callback	src/hardware/ymf262.cpp	/^static void cymfile_callback (int n)$/;"	f	file:
d	include/fpu.h	/^    double d;$/;"	m	union:__anon19
d	include/paging.h	/^	Bit32u		d:1;$/;"	m	struct:X86_PageEntryBlock
d	include/vga.h	/^	Bit32u d;$/;"	m	union:__anon55
d	src/cpu/core_full/support.h	/^		Bit32u d;Bit32s ds;$/;"	m	union:FullData::__anon103
d1	include/fpu.h	/^    Bit16u d1;$/;"	m	struct:__anon22
d2	include/fpu.h	/^    Bit32u d2;$/;"	m	struct:__anon22
d_cd	include/serialport.h	/^	bool d_cd;			\/\/ bit3: deltaCD$/;"	m	class:CSerial
d_cts	include/serialport.h	/^	bool d_cts;			\/\/ bit0: deltaCTS$/;"	m	class:CSerial
d_dsr	include/serialport.h	/^	bool d_dsr;			\/\/ bit1: deltaDSR$/;"	m	class:CSerial
d_name	src/platform/visualc/dirent.h	/^  char d_name[MAX_PATH];$/;"	m	struct:dirent
d_namlen	src/platform/visualc/dirent.h	/^  char d_namlen;$/;"	m	struct:dirent
d_ri	include/serialport.h	/^	bool d_ri;			\/\/ bit2: deltaRI$/;"	m	class:CSerial
d_severity	include/logging.h	/^	LOG_SEVERITIES  d_severity;$/;"	m	class:LOG
d_type	include/logging.h	/^	LOG_TYPES       d_type;$/;"	m	class:LOG
da	src/hardware/disney.cpp	/^	dac_channel da[2];$/;"	m	struct:__anon152	file:
dac	include/vga.h	/^	VGA_Dac dac;$/;"	m	struct:__anon59
dac	src/hardware/sblaster.cpp	/^		Bit8u dac[2],fm[2],cda[2],master[2],lin[2];$/;"	m	struct:SB_INFO::__anon176	file:
dac	src/hardware/sblaster.cpp	/^	} dac;$/;"	m	struct:SB_INFO	typeref:struct:SB_INFO::__anon175	file:
dac	src/hardware/tandy_sound.cpp	/^	} dac;$/;"	m	struct:__anon183	typeref:struct:__anon183::__anon184	file:
dac_channel	src/hardware/disney.cpp	/^} dac_channel;$/;"	t	typeref:struct:_dac_channel	file:
dasm	src/debug/debug_inc.h	/^	char dasm[80];$/;"	m	struct:DASMLine
data	include/setup.h	/^	std::string data;$/;"	m	class:Section_line
data	src/cpu/core_dyn_x86.cpp	/^	void * data;$/;"	m	struct:DynReg	file:
data	src/dos/dev_con.h	/^		Bit8u data[NUMBER_ANSI_DATA];$/;"	m	struct:device_CON::ansi
data	src/dos/drive_virtual.cpp	/^	Bit8u * data;$/;"	m	struct:VFILE_Block	file:
data	src/dos/drives.h	/^		Bit8u data[ISO_FRAMESIZE];$/;"	m	struct:isoDrive::SectorHashEntry
data	src/hardware/disney.cpp	/^	Bit8u data;$/;"	m	struct:__anon152	file:
data	src/hardware/sblaster.cpp	/^			Bit8u data[DSP_BUFSIZE];$/;"	m	struct:SB_INFO::__anon173::__anon174	file:
data	src/hardware/sblaster.cpp	/^		Bit16s data[DSP_DACSIZE+1];$/;"	m	struct:SB_INFO::__anon175	file:
data	src/hardware/serialport/softmodem.h	/^	Bit8u * data;$/;"	m	class:CFifo
data	src/hardware/vga_xga.cpp	/^		Bit32u data; \/* transient data passed by multiple calls *\/$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
data	src/libs/gui_tk/gui_tk.h	/^		STR *data;$/;"	m	class:GUI::String::NativeArray
data	src/libs/gui_tk/gui_tk.h	/^		STR *data;$/;"	m	class:GUI::String::NativeObject
dataCD	src/dos/drives.h	/^	bool dataCD;$/;"	m	class:isoDrive
dataLengthL	src/dos/drives.h	/^	Bit32u dataLengthL;$/;"	m	struct:isoDirEntry
dataLengthM	src/dos/drives.h	/^	Bit32u dataLengthM;$/;"	m	struct:isoDirEntry
dataOfs	src/debug/debug.cpp	/^static Bit32u	dataOfs;$/;"	v	file:
dataSeg	src/debug/debug.cpp	/^static Bit16u	dataSeg;$/;"	v	file:
data_rotate	include/vga.h	/^	Bit8u data_rotate;$/;"	m	struct:__anon37
data_rotate	include/vga.h	/^	Bit8u data_rotate;$/;"	m	struct:__anon51
databuffer	include/ipx.h	/^	Bit8u* databuffer;	\/\/ received data is stored here until we get called$/;"	m	class:ECBClass
datasize	src/hardware/vga_xga.cpp	/^		Bitu datasize;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
date	include/dos_inc.h	/^		Bit16u date;$/;"	m	struct:DOS_DTA::sDTA
date	include/dos_inc.h	/^		Bit16u date;$/;"	m	struct:DOS_FCB::sFCB
date	include/dos_inc.h	/^	DOS_Date date;$/;"	m	struct:DOS_Block
date	include/dos_system.h	/^	Bit16u date;$/;"	m	class:DOS_File
date	include/dos_system.h	/^	Bit16u date;$/;"	m	struct:FileStat_Block
date	src/dos/drive_virtual.cpp	/^	Bit16u date;$/;"	m	struct:VFILE_Block	file:
dateDay	src/dos/drives.h	/^	Bit8u dateDay;$/;"	m	struct:isoDirEntry
dateMonth	src/dos/drives.h	/^	Bit8u dateMonth;$/;"	m	struct:isoDirEntry
dateYear	src/dos/drives.h	/^	Bit8u dateYear;$/;"	m	struct:isoDirEntry
day	include/dos_inc.h	/^	Bit8u day;$/;"	m	struct:DOS_Date
dbcs	include/dos_inc.h	/^		RealPt dbcs;$/;"	m	struct:DOS_Block::__anon15
dbg	src/debug/debug.cpp	/^DBGBlock dbg;$/;"	v
dbg_aux	include/serialport.h	/^	bool dbg_aux;$/;"	m	class:CSerial
dbg_interrupt	include/serialport.h	/^	bool dbg_interrupt;$/;"	m	class:CSerial
dbg_modemcontrol	include/serialport.h	/^	bool dbg_modemcontrol; \/\/ RTS,CTS,DTR,DSR,RI,CD$/;"	m	class:CSerial
dbg_register	include/serialport.h	/^	bool dbg_register;$/;"	m	class:CSerial
dbg_serialtraffic	include/serialport.h	/^	bool dbg_serialtraffic;$/;"	m	class:CSerial
dcb	src/hardware/serialport/directserial_win32.h	/^	DCB dcb;$/;"	m	class:CDirectSerial
dcc	src/ints/int10_misc.cpp	/^	Bit8u dcc;					\/* 25h   BYTE   display combination code of active display *\/$/;"	m	struct:Dynamic_Functionality	file:
dcc_alternate	src/ints/int10_misc.cpp	/^	Bit8u dcc_alternate;		\/* 26h   BYTE   DCC of alternate display *\/$/;"	m	struct:Dynamic_Functionality	file:
debugCallback	src/debug/debug.cpp	/^Bitu debugCallback;$/;"	v
debugfp	include/serialport.h	/^	FILE * debugfp;$/;"	m	class:CSerial
debugging	src/debug/debug.cpp	/^static bool debugging;$/;"	v	file:
debuglog	src/debug/debug_gui.cpp	/^static FILE* debuglog;$/;"	v	file:
decode	src/cpu/core_dyn_x86/decoder.h	/^} decode;$/;"	v	typeref:struct:DynDecode
decode	src/cpu/core_dynrec/decoder_basic.h	/^} decode;$/;"	v	typeref:struct:DynDecode
decode	src/cpu/core_dynrec/save/decoder_basic.h	/^} decode;$/;"	v	typeref:struct:DynDecode
decode_ADPCM_2_sample	src/hardware/sblaster.cpp	/^static INLINE Bit8u decode_ADPCM_2_sample(Bit8u sample,Bit8u & reference,Bits& scale) {$/;"	f	file:
decode_ADPCM_3_sample	src/hardware/sblaster.cpp	/^INLINE Bit8u decode_ADPCM_3_sample(Bit8u sample,Bit8u & reference,Bits& scale) {$/;"	f
decode_ADPCM_4_sample	src/hardware/sblaster.cpp	/^static INLINE Bit8u decode_ADPCM_4_sample(Bit8u sample,Bit8u & reference,Bits& scale) {$/;"	f	file:
decode_advancepage	src/cpu/core_dynrec/decoder_basic.h	/^static void decode_advancepage(void) {$/;"	f
decode_advancepage	src/cpu/core_dynrec/save/decoder_basic.h	/^static void decode_advancepage(void) {$/;"	f
decode_fetchb	src/cpu/core_dyn_x86/decoder.h	/^static Bit8u decode_fetchb(void) {$/;"	f
decode_fetchb	src/cpu/core_dynrec/decoder_basic.h	/^static Bit8u decode_fetchb(void) {$/;"	f
decode_fetchb	src/cpu/core_dynrec/save/decoder_basic.h	/^static Bit8u decode_fetchb(void) {$/;"	f
decode_fetchb_imm	src/cpu/core_dyn_x86/decoder.h	/^static bool decode_fetchb_imm(Bitu & val) {$/;"	f
decode_fetchb_imm	src/cpu/core_dynrec/decoder_basic.h	/^static bool decode_fetchb_imm(Bitu & val) {$/;"	f
decode_fetchb_imm	src/cpu/core_dynrec/save/decoder_basic.h	/^static bool decode_fetchb_imm(Bitu & val) {$/;"	f
decode_fetchd	src/cpu/core_dyn_x86/decoder.h	/^static Bit32u decode_fetchd(void) {$/;"	f
decode_fetchd	src/cpu/core_dynrec/decoder_basic.h	/^GCC_ATTRIBUTE(noinline) static Bit32u decode_fetchd(void) {$/;"	f
decode_fetchd	src/cpu/core_dynrec/save/decoder_basic.h	/^static Bit32u decode_fetchd(void) {$/;"	f
decode_fetchd_imm	src/cpu/core_dyn_x86/decoder.h	/^static bool decode_fetchd_imm(Bitu & val) {$/;"	f
decode_fetchd_imm	src/cpu/core_dynrec/decoder_basic.h	/^static bool decode_fetchd_imm(Bitu & val) {$/;"	f
decode_fetchd_imm	src/cpu/core_dynrec/save/decoder_basic.h	/^static bool decode_fetchd_imm(Bitu & val) {$/;"	f
decode_fetchw	src/cpu/core_dyn_x86/decoder.h	/^static Bit16u decode_fetchw(void) {$/;"	f
decode_fetchw	src/cpu/core_dynrec/decoder_basic.h	/^GCC_ATTRIBUTE(noinline) static Bit16u decode_fetchw(void) {$/;"	f
decode_fetchw	src/cpu/core_dynrec/save/decoder_basic.h	/^static Bit16u decode_fetchw(void) {$/;"	f
decode_fetchw_imm	src/cpu/core_dyn_x86/decoder.h	/^static bool decode_fetchw_imm(Bitu & val) {$/;"	f
decode_fetchw_imm	src/cpu/core_dynrec/decoder_basic.h	/^static bool decode_fetchw_imm(Bitu & val) {$/;"	f
decode_fetchw_imm	src/cpu/core_dynrec/save/decoder_basic.h	/^static bool decode_fetchw_imm(Bitu & val) {$/;"	f
decode_increase_wmapmask	src/cpu/core_dyn_x86/decoder.h	/^static INLINE void decode_increase_wmapmask(Bitu size) {$/;"	f
decode_increase_wmapmask	src/cpu/core_dynrec/decoder_basic.h	/^static void INLINE decode_increase_wmapmask(Bitu size) {$/;"	f
decode_increase_wmapmask	src/cpu/core_dynrec/save/decoder_basic.h	/^static void INLINE decode_increase_wmapmask(Bitu size) {$/;"	f
decode_table_owner	src/libs/zmbv/zmbv_vfw.cpp	/^CodecInst *encode_table_owner, *decode_table_owner;$/;"	v
defaultBufSeg	src/dos/dos_mscdex.cpp	/^	Bit16u				defaultBufSeg;$/;"	m	class:CMscdex	file:
defaultCursorMask	src/ints/mouse.cpp	/^static Bit16u defaultCursorMask[CURSORY] = {$/;"	v	file:
defaultScreenMask	src/ints/mouse.cpp	/^static Bit16u defaultScreenMask[CURSORY] = {$/;"	v	file:
defaultTextAndMask	src/ints/mouse.cpp	/^static Bit16u defaultTextAndMask = 0x77FF;$/;"	v	file:
defaultTextXorMask	src/ints/mouse.cpp	/^static Bit16u defaultTextXorMask = 0x7700;$/;"	v	file:
default_handler	src/cpu/callback.cpp	/^static Bitu default_handler(void) {$/;"	f	file:
default_value	include/setup.h	/^	Value default_value;$/;"	m	class:Property
defkey	src/gui/sdl_mapper.cpp	/^	MapKeys defkey;$/;"	m	class:CHandlerEvent	file:
defmod	src/gui/sdl_mapper.cpp	/^	Bitu defmod;$/;"	m	class:CHandlerEvent	file:
del	src/gui/sdl_mapper.cpp	/^	CBindButton * del;$/;"	m	struct:__anon145	file:
delay	include/vga.h	/^		Bit8u count,delay;$/;"	m	struct:__anon38::__anon40
delay	include/vga.h	/^	} delay;$/;"	m	struct:__anon38	typeref:struct:__anon38::__anon39
delay	src/hardware/adlib.h	/^	double delay;$/;"	m	struct:Adlib::Timer
delay	src/hardware/cmos.cpp	/^		float delay;$/;"	m	struct:__anon149::__anon150	file:
delay	src/hardware/timer.cpp	/^	float delay;$/;"	m	struct:PIT_Block	file:
delayticks	src/gui/sdlmain.h	/^		   int  delayticks;$/;"	m	struct:SDL_Block::__anon138
deleteClustChain	src/dos/drive_fat.cpp	/^void fatDrive::deleteClustChain(Bit32u startCluster) {$/;"	f	class:fatDrive
deltat	src/hardware/fmopl.cpp	/^	YM_DELTAT *deltat;$/;"	m	struct:fm_opl_f	file:
delwin	src/libs/gui_tk/gui_tk.cpp	/^	static struct delwin : public GUI::ActionEventSource_Callback {$/;"	s	namespace:GUI	file:
desc	src/cpu/cpu.cpp	/^	TSS_Descriptor desc;$/;"	m	class:TaskStateSegment	file:
dest	include/ipx.h	/^	} dest, src;$/;"	m	struct:IPXHeader	typeref:struct:IPXHeader::transport
dest	src/ints/xms.cpp	/^	} dest;$/;"	m	struct:XMS_MemMove	typeref:union:XMS_MemMove::__anon201	file:
dest_handle	src/ints/ems.cpp	/^	Bit16u dest_handle;$/;"	m	struct:MoveRegion	file:
dest_handle	src/ints/xms.cpp	/^	Bit16u dest_handle;$/;"	m	struct:XMS_MemMove	file:
dest_offset	src/ints/ems.cpp	/^	Bit16u dest_offset;$/;"	m	struct:MoveRegion	file:
dest_page_seg	src/ints/ems.cpp	/^	Bit16u dest_page_seg;$/;"	m	struct:MoveRegion	file:
dest_type	src/ints/ems.cpp	/^	Bit8u dest_type;$/;"	m	struct:MoveRegion	file:
destroy	src/misc/setup.cpp	/^void Value::destroy() throw(){$/;"	f	class:Value
destroyfunctions	include/setup.h	/^	std::list<Function_wrapper> destroyfunctions;$/;"	m	class:Section
destx	src/hardware/vga_xga.cpp	/^	Bit16u destx, desty;$/;"	m	struct:XGAStatus	file:
desty	src/hardware/vga_xga.cpp	/^	Bit16u destx, desty;$/;"	m	struct:XGAStatus	file:
determine_mode	include/vga.h	/^	tDetermineMode determine_mode;$/;"	m	struct:SVGA_Driver
devAttributes	src/dos/dos_mscdex.cpp	/^		Bit16u	devAttributes;$/;"	m	struct:DOS_DeviceHeader::sDeviceHeader	file:
device	src/gui/midi_oss.h	/^	int  device;$/;"	m	class:MidiHandler_oss
device_COM	include/serialport.h	/^class device_COM : public DOS_Device {$/;"	c
device_COM	src/hardware/serialport/serialport.cpp	/^device_COM::device_COM(class CSerial* sc) {$/;"	f	class:device_COM
device_CON	src/dos/dev_con.h	/^class device_CON : public DOS_Device {$/;"	c
device_CON	src/dos/dev_con.h	/^device_CON::device_CON() {$/;"	f	class:device_CON
device_EMM	src/ints/ems.cpp	/^	device_EMM() {$/;"	f	class:device_EMM
device_EMM	src/ints/ems.cpp	/^class device_EMM : public DOS_Device {$/;"	c	file:
device_LPT1	src/dos/dos_devices.cpp	/^   	device_LPT1() { SetName("LPT1");}$/;"	f	class:device_LPT1
device_LPT1	src/dos/dos_devices.cpp	/^class device_LPT1 : public device_NUL {$/;"	c	file:
device_MSCDEX	src/dos/dos_mscdex.cpp	/^	device_MSCDEX() { SetName("MSCD001"); }$/;"	f	class:device_MSCDEX
device_MSCDEX	src/dos/dos_mscdex.cpp	/^class device_MSCDEX : public DOS_Device {$/;"	c	file:
device_NUL	src/dos/dos_devices.cpp	/^	device_NUL() { SetName("NUL"); };$/;"	f	class:device_NUL
device_NUL	src/dos/dos_devices.cpp	/^class device_NUL : public DOS_Device {$/;"	c	file:
device_name	src/dos/cdrom.h	/^	char	device_name[512];$/;"	m	class:CDROM_Interface_Ioctl
device_num	src/gui/midi_oss.h	/^	Bit8u device_num;$/;"	m	class:MidiHandler_oss
devnum	include/dos_system.h	/^	Bitu devnum;$/;"	m	class:DOS_Device
dh_fpu_enabled	src/cpu/core_dyn_x86.cpp	/^	Bit32u		dh_fpu_enabled;$/;"	m	struct:__anon96	file:
dh_fpu_esc0	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void dh_fpu_esc0(){$/;"	f
dh_fpu_esc1	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void dh_fpu_esc1(){$/;"	f
dh_fpu_esc2	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void dh_fpu_esc2(){$/;"	f
dh_fpu_esc3	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void dh_fpu_esc3(){$/;"	f
dh_fpu_esc4	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void dh_fpu_esc4(){$/;"	f
dh_fpu_esc5	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void dh_fpu_esc5(){$/;"	f
dh_fpu_esc6	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void dh_fpu_esc6(){$/;"	f
dh_fpu_esc7	src/cpu/core_dyn_x86/dyn_fpu_dh.h	/^static void dh_fpu_esc7(){$/;"	f
dh_fpu_startup	src/cpu/core_dyn_x86/decoder.h	1952;"	d
di	include/cpu.h	/^    Bit16u sp, bp, si, di;       \/* The special purpose registers *\/$/;"	m	struct:TSS_16
diacritics	src/dos/dos_keyboard_layout.cpp	/^	Bit8u diacritics[2048];$/;"	m	class:keyboard_layout	file:
diacritics_character	src/dos/dos_keyboard_layout.cpp	/^	Bit16u diacritics_character;$/;"	m	class:keyboard_layout	file:
diacritics_entries	src/dos/dos_keyboard_layout.cpp	/^	Bit16u diacritics_entries;$/;"	m	class:keyboard_layout	file:
dial	src/hardware/serialport/softmodem.h	/^	} dial;$/;"	m	class:CSerialModem	typeref:struct:CSerialModem::__anon182
dinfo	src/dos/dos_mscdex.cpp	/^	TDriveInfo			dinfo[MSCDEX_MAX_DRIVES];$/;"	m	class:CMscdex	file:
dir	include/cross.h	/^	DIR*  dir;$/;"	m	struct:dir_struct
dir	src/cpu/core_dynrec/cross.h	/^	DIR*  dir;$/;"	m	struct:dir_struct
dir	src/cpu/core_dynrec/save/cross.h	/^	DIR*  dir;$/;"	m	struct:dir_struct
dir	src/gui/sdl_mapper.cpp	/^	Bit8u dir;$/;"	m	class:CJHatBind	file:
dir	src/gui/sdl_mapper.cpp	/^	Bitu stick,hat,dir;$/;"	m	class:CJHatEvent	file:
dirBase	include/dos_system.h	/^	CFileInfo*	dirBase;$/;"	m	class:DOS_Drive_Cache
dirCache	include/dos_system.h	/^	DOS_Drive_Cache dirCache;$/;"	m	class:DOS_Drive
dirCluster	include/dos_inc.h	/^		Bit16u dirCluster;					\/* custom (drive_fat only): cluster number for multiple searches at the same time *\/$/;"	m	struct:DOS_DTA::sDTA
dirCluster	src/dos/drive_fat.cpp	/^	Bit32u dirCluster;$/;"	m	class:fatFile	file:
dirFindFirst	include/dos_system.h	/^	CFileInfo*	dirFindFirst		[MAX_OPENDIRS];$/;"	m	class:DOS_Drive_Cache
dirFirstTime	include/dos_system.h	/^	bool		dirFirstTime;$/;"	m	class:DOS_Drive_Cache
dirID	include/dos_inc.h	/^		Bit16u dirID;						\/* custom: dir-search ID for multiple searches at the same time *\/$/;"	m	struct:DOS_DTA::sDTA
dirIndex	src/dos/drive_fat.cpp	/^	Bit32u dirIndex;$/;"	m	class:fatFile	file:
dirIterators	src/dos/drives.h	/^	} dirIterators[MAX_OPENDIRS];$/;"	m	class:isoDrive	typeref:struct:isoDrive::DirIterator
dirPath	include/dos_system.h	/^	char		dirPath				[CROSS_LEN];$/;"	m	class:DOS_Drive_Cache
dirPosition	src/dos/drives.h	/^	Bit32u dirPosition; \/* Position in directory search *\/$/;"	m	class:fatDrive
dirSearch	include/dos_system.h	/^	CFileInfo*	dirSearch			[MAX_OPENDIRS];$/;"	m	class:DOS_Drive_Cache
dirSearchName	include/dos_system.h	/^	char		dirSearchName		[MAX_OPENDIRS];$/;"	m	class:DOS_Drive_Cache
dir_information	include/cross.h	/^} dir_information;$/;"	t	typeref:struct:dir_struct
dir_information	src/cpu/core_dynrec/cross.h	/^} dir_information;$/;"	t	typeref:struct:dir_struct
dir_information	src/cpu/core_dynrec/save/cross.h	/^} dir_information;$/;"	t	typeref:struct:dir_struct
dir_struct	include/cross.h	/^typedef struct dir_struct { $/;"	s
dir_struct	include/cross.h	/^typedef struct dir_struct {$/;"	s
dir_struct	src/cpu/core_dynrec/cross.h	/^typedef struct dir_struct { $/;"	s
dir_struct	src/cpu/core_dynrec/save/cross.h	/^typedef struct dir_struct { $/;"	s
direction	include/cpu.h	/^	Bits direction;$/;"	m	struct:CPUBlock
directoryBrowse	src/dos/drive_fat.cpp	/^bool fatDrive::directoryBrowse(Bit32u dirClustNumber, direntry *useEntry, Bit32s entNum) {$/;"	f	class:fatDrive
directoryChange	src/dos/drive_fat.cpp	/^bool fatDrive::directoryChange(Bit32u dirClustNumber, direntry *useEntry, Bit32s entNum) {$/;"	f	class:fatDrive
dirent	src/platform/visualc/dirent.h	/^struct dirent {$/;"	s
direntry	src/dos/drives.h	/^struct direntry {$/;"	s
dirname	src/dos/cdrom_image.cpp	/^static string dirname(char * file) {$/;"	f	file:
dirty	src/libs/gui_tk/gui_tk.h	/^	bool dirty;$/;"	m	class:GUI::Window
dirtyDiskBuffers	include/dos_inc.h	/^		Bit16u	dirtyDiskBuffers;	\/\/  0x4b number of dirty disk buffers$/;"	m	struct:DOS_InfoBlock::sDIB
disable_umb_ems_xms	src/dos/dos_programs.cpp	/^	void disable_umb_ems_xms(void) {$/;"	f	class:BOOT	file:
discLabel	src/dos/drives.h	/^	char discLabel[32];$/;"	m	class:isoDrive
diskBufPtr	include/dos_inc.h	/^		RealPt	diskBufPtr;		\/\/ -0x08 pointer to disk buffer$/;"	m	struct:DOS_InfoBlock::sDIB
diskBufferHeadPt	include/dos_inc.h	/^		Bit32u	diskBufferHeadPt;	\/\/  0x47 pointer to least-recently used buffer header$/;"	m	struct:DOS_InfoBlock::sDIB
diskGeo	include/bios_disk.h	/^struct diskGeo {$/;"	s
diskInfoBuffer	include/dos_inc.h	/^		RealPt	diskInfoBuffer;		\/\/  0x12 pointer to disk info buffer$/;"	m	struct:DOS_InfoBlock::sDIB
diskSwap	src/ints/bios_disk.cpp	/^imageDisk *diskSwap[MAX_SWAPPABLE_DISKS];$/;"	v
diskimg	include/bios_disk.h	/^	FILE *diskimg;$/;"	m	class:imageDisk
diskname	include/bios_disk.h	/^	Bit8u diskname[512];$/;"	m	class:imageDisk
diskparm0	src/ints/bios_disk.cpp	/^Bitu diskparm0, diskparm1;$/;"	v
diskparm1	src/ints/bios_disk.cpp	/^Bitu diskparm0, diskparm1;$/;"	v
disks	src/dos/drives.h	/^		std::vector<DOS_Drive*> disks;$/;"	m	struct:DriveManager::DriveInfo
disney	src/hardware/disney.cpp	/^} disney;$/;"	v	typeref:struct:__anon152	file:
disney_read	src/hardware/disney.cpp	/^static Bitu disney_read(Bitu port,Bitu iolen) {$/;"	f	file:
disney_write	src/hardware/disney.cpp	/^static void disney_write(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
disp_bank	include/vga.h	/^	Bit8u disp_bank;$/;"	m	struct:__anon47
display_start	include/vga.h	/^	Bitu display_start;$/;"	m	struct:__anon37
div	src/hardware/cmos.cpp	/^		Bit8u div;$/;"	m	struct:__anon149::__anon150	file:
divide	src/misc/fixed.cpp	/^FixedPoint FixedPoint::divide(FixedPoint b)$/;"	f	class:FixedPoint
divide	src/misc/fixed.cpp	/^FixedPoint FixedPoint::divide(double b)$/;"	f	class:FixedPoint
divide	src/misc/fixed.cpp	/^FixedPoint FixedPoint::divide(float b)$/;"	f	class:FixedPoint
divide	src/misc/fixed.cpp	/^FixedPoint FixedPoint::divide(int b)$/;"	f	class:FixedPoint
divide	src/misc/fixed.cpp	/^FixedPoint FixedPoint::divide(long b)$/;"	f	class:FixedPoint
divide	src/misc/fixed.cpp	/^FixedPoint FixedPoint::divide(short b)$/;"	f	class:FixedPoint
dline	src/debug/debug.cpp	/^	char dline[31];$/;"	m	struct:TLogInst	file:
dma	src/hardware/sblaster.cpp	/^	} dma;$/;"	m	struct:SB_INFO	typeref:struct:SB_INFO::__anon170	file:
dma	src/ints/bios.cpp	/^	Bit8u dma;$/;"	m	struct:__anon193	file:
dma16	src/hardware/sblaster.cpp	/^		Bitu dma8,dma16;$/;"	m	struct:SB_INFO::__anon178	file:
dma8	src/hardware/sblaster.cpp	/^		Bitu dma8,dma16;$/;"	m	struct:SB_INFO::__anon178	file:
do_modrm	src/debug/debug_disasm.cpp	/^static void do_modrm(char subtype)$/;"	f	file:
do_sib	src/debug/debug_disasm.cpp	/^static void do_sib(int m)$/;"	f	file:
done	include/mixer.h	/^	Bitu done,needed;$/;"	m	class:MixerChannel
done	src/hardware/hardware.cpp	/^		Bitu used,done;$/;"	m	struct:__anon155::__anon157	file:
done	src/hardware/mixer.cpp	/^	Bitu pos,done;$/;"	m	struct:__anon165	file:
doresponse	src/hardware/serialport/softmodem.h	/^	Bitu doresponse;$/;"	m	class:CSerialModem
dos	src/dos/dos.cpp	/^DOS_Block dos;$/;"	v
dos_copybuf	src/dos/dos.cpp	/^Bit8u dos_copybuf[DOS_COPYBUFSIZE];$/;"	v
dos_infoblock	src/dos/dos.cpp	/^DOS_InfoBlock dos_infoblock;$/;"	v
dos_memseg	src/dos/dos_tables.cpp	/^static Bit16u dos_memseg=DOS_PRIVATE_SEGMENT;$/;"	v	file:
dos_version	include/dos_inc.h	/^		Bit16u dos_version;$/;"	m	struct:DOS_PSP::sPSP
dospage	src/hardware/ipx.cpp	/^	static Bit16u dospage;$/;"	m	class:IPX	file:
dospage	src/hardware/ipx.cpp	/^Bit16u IPX::dospage = 0;$/;"	m	class:IPX	file:
doubleSpeedThreshold	src/ints/mouse.cpp	/^	Bit16u  doubleSpeedThreshold;$/;"	m	struct:__anon199	file:
double_scan	include/vga.h	/^	bool double_scan;$/;"	m	struct:__anon38
doubleheight	include/vga.h	/^	bool doublewidth,doubleheight;$/;"	m	struct:__anon38
doublewidth	include/vga.h	/^	bool doublewidth,doubleheight;$/;"	m	struct:__anon38
downx	src/libs/gui_tk/gui_tk.h	/^	int downx, downy;$/;"	m	class:GUI::ScreenSDL
downy	src/libs/gui_tk/gui_tk.h	/^	int downx, downy;$/;"	m	class:GUI::ScreenSDL
dpad	src/gui/sdlmain.h	/^	} dpad;$/;"	m	struct:SDL_Block	typeref:struct:SDL_Block::__anon139
dpb	include/dos_inc.h	/^		Bit16u dpb; \/\/Fake Disk parameter system using only the first entry so the drive letter matches$/;"	m	struct:DOS_Block::__anon15
dpl	include/cpu.h	/^	Bit32u dpl			:2;$/;"	m	struct:G_Descriptor
dpl	include/cpu.h	/^	Bit32u dpl			:2;$/;"	m	struct:S_Descriptor
dr	src/hardware/fmopl.cpp	/^	UINT32	dr;			\/* decay rate:  DR<<2			*\/$/;"	m	struct:__anon153	file:
dr	src/hardware/ymf262.cpp	/^	UINT32	dr;			\/* decay rate:  DR<<2			*\/$/;"	m	struct:__anon190	file:
dragx	src/libs/gui_tk/gui_tk.h	/^	int dragx, dragy;$/;"	m	class:GUI::ToplevelWindow
dragy	src/libs/gui_tk/gui_tk.h	/^	int dragx, dragy;$/;"	m	class:GUI::ToplevelWindow
draw	include/vga.h	/^	VGA_Draw draw;$/;"	m	struct:__anon59
drawCircle	src/libs/gui_tk/gui_tk.cpp	/^void Drawable::drawCircle(int d) {$/;"	f	class:GUI::Drawable
drawCircle	src/libs/gui_tk/gui_tk.h	/^	void drawCircle(int x, int y, int d) { gotoXY(x, y); drawCircle(d); };$/;"	f	class:GUI::Drawable
drawDrawable	src/libs/gui_tk/gui_tk.cpp	/^void Drawable::drawDrawable(Drawable &d, unsigned char alpha)$/;"	f	class:GUI::Drawable
drawDrawable	src/libs/gui_tk/gui_tk.h	/^	void drawDrawable(int x, int y, Drawable &d, unsigned char alpha = 1) { gotoXY(x,y); drawDrawable(d, alpha); };$/;"	f	class:GUI::Drawable
drawLine	src/libs/gui_tk/gui_tk.cpp	/^void Drawable::drawLine(int x2, int y2)$/;"	f	class:GUI::Drawable
drawLine	src/libs/gui_tk/gui_tk.h	/^	void drawLine(int x1, int y1, int x2, int y2) { gotoXY(x1,y1); drawLine(x2,y2); };$/;"	f	class:GUI::Drawable
drawPixel	src/libs/gui_tk/gui_tk.h	/^	void drawPixel() { if (x >= cx && x < cw && y >= cy && y < ch) buffer[x+tx+(y+ty)*width] = color; };$/;"	f	class:GUI::Drawable
drawPixel	src/libs/gui_tk/gui_tk.h	/^	void drawPixel(int x, int y) { gotoXY(x,y); drawPixel(); };$/;"	f	class:GUI::Drawable
drawRect	src/libs/gui_tk/gui_tk.cpp	/^void Drawable::drawRect(int w, int h)$/;"	f	class:GUI::Drawable
drawRect	src/libs/gui_tk/gui_tk.h	/^	void drawRect(int x, int y, int w, int h) { gotoXY(x, y); drawRect(w, h); };$/;"	f	class:GUI::Drawable
drawString	src/libs/gui_tk/gui_tk.h	/^	virtual void drawString(Drawable *d, const String &s, Size start, Size len) const {$/;"	f	class:GUI::Font
drawText	src/libs/gui_tk/gui_tk.cpp	/^void Drawable::drawText(const Char c, bool interpret)$/;"	f	class:GUI::Drawable
drawText	src/libs/gui_tk/gui_tk.cpp	/^void Drawable::drawText(const String& text, bool interpret, Size start, Size len) {$/;"	f	class:GUI::Drawable
drawText	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> void drawText(int x, int y, const STR text, bool interpret, Size start, Size len = (Size)-1) { gotoXY(x,y); drawText(String(text), interpret, start, len); };$/;"	f	class:GUI::Drawable
drawText	src/libs/gui_tk/gui_tk.h	/^	void drawText(int x, int y, const Char c, bool interpret = false) { gotoXY(x,y); drawText(c, interpret); };$/;"	f	class:GUI::Drawable
draw_bank	include/vga.h	/^	Bit8u draw_bank, mem_bank;$/;"	m	struct:__anon47
draw_base	include/vga.h	/^	Bit8u *draw_base, *mem_base;$/;"	m	struct:__anon47
draw_surface	src/gui/sdl_mapper.cpp	/^	SDL_Surface * draw_surface;$/;"	m	struct:CMapper	file:
drive	include/dos_inc.h	/^		Bit8u drive;			\/* Drive number 0=default, 1=A, etc *\/$/;"	m	struct:DOS_FCB::sFCB
drive	src/dos/dos_mscdex.cpp	/^		Bit8u	drive;			\/\/ drive letter in dosbox$/;"	m	struct:CMscdex::SDriveInfo	file:
drive	src/dos/drive_iso.cpp	/^	isoDrive *drive;$/;"	m	class:isoFile	file:
driveID	src/dos/cdrom.h	/^	int		driveID;$/;"	m	class:CDROM_Interface_SDL
driveInactive	src/ints/bios_disk.cpp	/^static bool driveInactive(Bitu driveNum) {$/;"	f	file:
driveInfos	src/dos/drives.cpp	/^DriveManager::DriveInfo DriveManager::driveInfos[26];$/;"	m	class:DriveManager	file:
driveInfos	src/dos/drives.h	/^	} driveInfos[DOS_DRIVES];$/;"	m	class:DriveManager	typeref:struct:DriveManager::DriveInfo
driveLetter	src/dos/dos_mscdex.cpp	/^		Bit8u	driveLetter;$/;"	m	struct:DOS_DeviceHeader::sDeviceHeader	file:
driveLetter	src/dos/drives.h	/^	char driveLetter;$/;"	m	class:cdromDrive
driveLetter	src/dos/drives.h	/^	char driveLetter;$/;"	m	class:isoDrive
drive_crit_error	include/dos_inc.h	/^		Bit8u drive_crit_error;		\/* 0x02 Drive on which current critical error occurred or FFh *\/$/;"	m	struct:DOS_SDA::sSDA
drx	include/cpu.h	/^	Bit32u drx[8];$/;"	m	struct:CPUBlock
ds	include/cpu.h	/^    Bit16u ds;                   \/* The data selector *\/$/;"	m	struct:TSS_16
ds	include/cpu.h	/^    Bit32u ds;                   \/* The data selector *\/$/;"	m	struct:TSS_32
ds	include/regs.h	/^enum SegNames { es=0,cs,ss,ds,fs,gs};$/;"	e	enum:SegNames
ds	src/cpu/core_full/support.h	/^		Bit32u d;Bit32s ds;$/;"	m	union:FullData::__anon103
ds	src/cpu/core_normal/prefix_none.h	/^		DO_PREFIX_SEG(ds);break;$/;"	v
ds	src/cpu/core_normal/verysimple_prefix_none.h	/^		DO_PREFIX_SEG(ds);break;$/;"	v
dsp	src/hardware/sblaster.cpp	/^	} dsp;$/;"	m	struct:SB_INFO	typeref:struct:SB_INFO::__anon173	file:
dspeed_val	src/ints/mouse.cpp	/^	Bit16u	dspeed_val;$/;"	m	struct:__anon199	file:
dsr	include/serialport.h	/^	bool dsr;			\/\/ bit5: DSR$/;"	m	class:CSerial
dta	include/dos_inc.h	/^	RealPt dta(){return DOS_SDA(DOS_SDA_SEG,DOS_SDA_OFS).GetDTA();};$/;"	f	struct:DOS_Block
dta	include/dos_inc.h	/^	void dta(RealPt _dta){DOS_SDA(DOS_SDA_SEG,DOS_SDA_OFS).SetDTA(_dta);};$/;"	f	struct:DOS_Block
dtr	include/serialport.h	/^	bool dtr;			\/\/ bit0: DTR$/;"	m	class:CSerial
dtrrespect	src/hardware/serialport/nullmodem.h	/^	bool dtrrespect;	\/\/ dtr behavior - only send data to the serial$/;"	m	class:CNullModem
dual	src/hardware/adlib.h	/^		Bit8u dual[2];$/;"	m	union:Adlib::Module::__anon148
dw	src/libs/gui_tk/gui_tk.cpp	/^	} dw;$/;"	m	namespace:GUI	typeref:struct:GUI::delwin	file:
dword	include/regs.h	/^	Bit32u dword[1];$/;"	m	union:GenReg32
dword	src/cpu/core_full/support.h	/^		Bit32u dword[1];$/;"	m	union:FullData::__anon102
dwords	src/cpu/core_full/support.h	/^		Bit32s dwords[1];$/;"	m	union:FullData::__anon102
dx	include/cpu.h	/^    Bit16u ax, cx, dx, bx;       \/* The general purpose registers *\/$/;"	m	struct:TSS_16
dx	src/gui/sdl_mapper.cpp	/^	Bitu x,y,dx,dy;$/;"	m	class:CButton	file:
dx	src/libs/zmbv/zmbv.h	/^		int dx,dy;$/;"	m	struct:VideoCodec::FrameBlock
dxPlayer	src/dos/cdrom.h	/^	static  struct dxPlayer {$/;"	s	class:CDROM_Interface_Ioctl
dx_CDAudioCallBack	src/dos/cdrom_ioctl_win32.cpp	/^void CDROM_Interface_Ioctl::dx_CDAudioCallBack(Bitu len) {$/;"	f	class:CDROM_Interface_Ioctl
dy	src/gui/sdl_mapper.cpp	/^	Bitu x,y,dx,dy;$/;"	m	class:CButton	file:
dy	src/libs/zmbv/zmbv.h	/^		int dx,dy;$/;"	m	struct:VideoCodec::FrameBlock
dyn_add_iocheck	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_add_iocheck(Bitu access_size) {$/;"	f
dyn_add_iocheck	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_add_iocheck(HostReg reg_port,Bitu access_size) {$/;"	f
dyn_add_iocheck	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_add_iocheck(HostReg reg_port,Bitu access_size) {$/;"	f
dyn_add_iocheck_var	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_add_iocheck_var(Bit8u accessed_port,Bitu access_size) {$/;"	f
dyn_add_iocheck_var	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_add_iocheck_var(Bit8u accessed_port,Bitu access_size) {$/;"	f
dyn_add_iocheck_var	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_add_iocheck_var(Bit8u accessed_port,Bitu access_size) {$/;"	f
dyn_branched_exit	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_branched_exit(BranchTypes btype,Bit32s eip_add) {$/;"	f
dyn_branched_exit	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_branched_exit(BranchTypes btype,Bit32s eip_add) {$/;"	f
dyn_branched_exit	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_branched_exit(BranchTypes btype,Bit32s eip_add) {$/;"	f
dyn_branchflag_to_reg	src/cpu/core_dynrec/operators.h	/^static void dyn_branchflag_to_reg(BranchTypes btype) {$/;"	f
dyn_branchflag_to_reg	src/cpu/core_dynrec/save/operators.h	/^static void dyn_branchflag_to_reg(BranchTypes btype) {$/;"	f
dyn_call_far_imm	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_call_far_imm(void) {$/;"	f
dyn_call_far_imm	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_call_far_imm(void) {$/;"	f
dyn_call_far_imm	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_call_far_imm(void) {$/;"	f
dyn_call_near_imm	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_call_near_imm(void) {$/;"	f
dyn_call_near_imm	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_call_near_imm(void) {$/;"	f
dyn_call_near_imm	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_call_near_imm(void) {$/;"	f
dyn_cbw	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_cbw(void) {$/;"	f
dyn_cbw	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_cbw(void) {$/;"	f
dyn_check_bool_exception	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_check_bool_exception(DynReg * check) {$/;"	f
dyn_check_bool_exception_al	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_check_bool_exception_al(void) {$/;"	f
dyn_check_bool_exception_ne	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_check_bool_exception_ne(void) {$/;"	f
dyn_check_exception	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_check_exception(HostReg reg) {$/;"	f
dyn_check_exception	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_check_exception(HostReg reg) {$/;"	f
dyn_check_irqrequest	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_check_irqrequest(void) {$/;"	f
dyn_closeblock	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_closeblock(void) {$/;"	f
dyn_closeblock	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_closeblock(void) {$/;"	f
dyn_closeblock	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_closeblock(void) {$/;"	f
dyn_cmpxchg_evgv	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_cmpxchg_evgv(void) {$/;"	f
dyn_cwd	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_cwd(void) {$/;"	f
dyn_cwd	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_cwd(void) {$/;"	f
dyn_dh_fpu	src/cpu/core_dyn_x86.cpp	/^} dyn_dh_fpu;$/;"	v	typeref:struct:__anon96	file:
dyn_dop_byte_gencall	src/cpu/core_dynrec/operators.h	/^static void dyn_dop_byte_gencall(DualOps op) {$/;"	f
dyn_dop_byte_gencall	src/cpu/core_dynrec/save/operators.h	/^static void dyn_dop_byte_gencall(DualOps op) {$/;"	f
dyn_dop_byte_imm	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_dop_byte_imm(DualOps op,DynReg * dr1,Bit8u di1) {$/;"	f
dyn_dop_byte_imm	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_byte_imm(DualOps op,Bit8u reg,Bit8u idx) {$/;"	f
dyn_dop_byte_imm	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_byte_imm(DualOps op,Bit8u reg,Bit8u idx) {$/;"	f
dyn_dop_byte_imm_mem	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_byte_imm_mem(DualOps op,Bit8u reg,Bit8u idx) {$/;"	f
dyn_dop_byte_imm_mem	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_byte_imm_mem(DualOps op,Bit8u reg,Bit8u idx) {$/;"	f
dyn_dop_ebgb	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_dop_ebgb(DualOps op) {$/;"	f
dyn_dop_ebgb	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_ebgb(DualOps op) {$/;"	f
dyn_dop_ebgb	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_ebgb(DualOps op) {$/;"	f
dyn_dop_ebgb_mov	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_ebgb_mov(void) {$/;"	f
dyn_dop_ebgb_mov	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_ebgb_mov(void) {$/;"	f
dyn_dop_ebgb_xchg	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_ebgb_xchg(void) {$/;"	f
dyn_dop_ebgb_xchg	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_ebgb_xchg(void) {$/;"	f
dyn_dop_ebib_mov	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_ebib_mov(void) {$/;"	f
dyn_dop_ebib_mov	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_ebib_mov(void) {$/;"	f
dyn_dop_evgv	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_dop_evgv(DualOps op) {$/;"	f
dyn_dop_evgv	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_evgv(DualOps op) {$/;"	f
dyn_dop_evgv	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_evgv(DualOps op) {$/;"	f
dyn_dop_evgv_mov	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_evgv_mov(void) {$/;"	f
dyn_dop_evgv_mov	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_evgv_mov(void) {$/;"	f
dyn_dop_evgv_xchg	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_evgv_xchg(void) {$/;"	f
dyn_dop_evgv_xchg	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_evgv_xchg(void) {$/;"	f
dyn_dop_eviv_mov	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_eviv_mov(void) {$/;"	f
dyn_dop_eviv_mov	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_eviv_mov(void) {$/;"	f
dyn_dop_gbeb	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_dop_gbeb(DualOps op) {$/;"	f
dyn_dop_gbeb	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_gbeb(DualOps op) {$/;"	f
dyn_dop_gbeb	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_gbeb(DualOps op) {$/;"	f
dyn_dop_gbeb_mov	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_gbeb_mov(void) {$/;"	f
dyn_dop_gbeb_mov	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_gbeb_mov(void) {$/;"	f
dyn_dop_gvev	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_dop_gvev(DualOps op) {$/;"	f
dyn_dop_gvev	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_gvev(DualOps op) {$/;"	f
dyn_dop_gvev	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_gvev(DualOps op) {$/;"	f
dyn_dop_gvev_mov	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_gvev_mov(void) {$/;"	f
dyn_dop_gvev_mov	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_gvev_mov(void) {$/;"	f
dyn_dop_word_gencall	src/cpu/core_dynrec/operators.h	/^static void dyn_dop_word_gencall(DualOps op,bool dword) {$/;"	f
dyn_dop_word_gencall	src/cpu/core_dynrec/save/operators.h	/^static void dyn_dop_word_gencall(DualOps op,bool dword) {$/;"	f
dyn_dop_word_imm	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_dop_word_imm(DualOps op,bool dword,DynReg * dr1) {$/;"	f
dyn_dop_word_imm	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_word_imm(DualOps op,Bit8u reg) {$/;"	f
dyn_dop_word_imm	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_word_imm(DualOps op,Bit8u reg) {$/;"	f
dyn_dop_word_imm_old	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dop_word_imm_old(DualOps op,Bit8u reg,Bitu imm) {$/;"	f
dyn_dop_word_imm_old	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dop_word_imm_old(DualOps op,Bit8u reg,Bitu imm) {$/;"	f
dyn_dpshift_dword_gencall	src/cpu/core_dynrec/operators.h	/^static void dyn_dpshift_dword_gencall(bool left) {$/;"	f
dyn_dpshift_dword_gencall	src/cpu/core_dynrec/save/operators.h	/^static void dyn_dpshift_dword_gencall(bool left) {$/;"	f
dyn_dpshift_word_gencall	src/cpu/core_dynrec/operators.h	/^static void dyn_dpshift_word_gencall(bool left) {$/;"	f
dyn_dpshift_word_gencall	src/cpu/core_dynrec/save/operators.h	/^static void dyn_dpshift_word_gencall(bool left) {$/;"	f
dyn_dshift_ev_gv	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_dshift_ev_gv(bool left,bool immediate) {$/;"	f
dyn_dshift_ev_gv	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_dshift_ev_gv(bool left,bool immediate) {$/;"	f
dyn_dshift_ev_gv	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_dshift_ev_gv(bool left,bool immediate) {$/;"	f
dyn_eatree	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void dyn_eatree() {$/;"	f
dyn_eatree	src/cpu/core_dynrec/dyn_fpu.h	/^static void dyn_eatree() {$/;"	f
dyn_eatree	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void dyn_eatree() {$/;"	f
dyn_enter	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_enter(void) {$/;"	f
dyn_enter	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_enter(void) {$/;"	f
dyn_enter	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_enter(void) {$/;"	f
dyn_exit_link	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_exit_link(Bits eip_change) {$/;"	f
dyn_exit_link	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_exit_link(Bits eip_change) {$/;"	f
dyn_exit_link	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_exit_link(Bits eip_change) {$/;"	f
dyn_fill_blocks	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_fill_blocks(void) {$/;"	f
dyn_fill_blocks	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_fill_blocks(void) {$/;"	f
dyn_fill_blocks	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_fill_blocks(void) {$/;"	f
dyn_fill_ea	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_fill_ea(bool addseg=true, DynReg * reg_ea=DREG(EA)) {$/;"	f
dyn_fill_ea	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_fill_ea(HostReg ea_reg,bool addseg=true) {$/;"	f
dyn_fill_ea	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_fill_ea(HostReg ea_reg,bool addseg=true) {$/;"	f
dyn_flags_gen_to_host	src/cpu/core_dyn_x86.cpp	/^static void dyn_flags_gen_to_host(void) {$/;"	f	file:
dyn_flags_host_to_gen	src/cpu/core_dyn_x86.cpp	/^static void dyn_flags_host_to_gen(void) {$/;"	f	file:
dyn_fpu_esc0	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void dyn_fpu_esc0(){$/;"	f
dyn_fpu_esc0	src/cpu/core_dynrec/dyn_fpu.h	/^static void dyn_fpu_esc0(){$/;"	f
dyn_fpu_esc0	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void dyn_fpu_esc0(){$/;"	f
dyn_fpu_esc1	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void dyn_fpu_esc1(){$/;"	f
dyn_fpu_esc1	src/cpu/core_dynrec/dyn_fpu.h	/^static void dyn_fpu_esc1(){$/;"	f
dyn_fpu_esc1	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void dyn_fpu_esc1(){$/;"	f
dyn_fpu_esc2	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void dyn_fpu_esc2(){$/;"	f
dyn_fpu_esc2	src/cpu/core_dynrec/dyn_fpu.h	/^static void dyn_fpu_esc2(){$/;"	f
dyn_fpu_esc2	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void dyn_fpu_esc2(){$/;"	f
dyn_fpu_esc3	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void dyn_fpu_esc3(){$/;"	f
dyn_fpu_esc3	src/cpu/core_dynrec/dyn_fpu.h	/^static void dyn_fpu_esc3(){$/;"	f
dyn_fpu_esc3	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void dyn_fpu_esc3(){$/;"	f
dyn_fpu_esc4	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void dyn_fpu_esc4(){$/;"	f
dyn_fpu_esc4	src/cpu/core_dynrec/dyn_fpu.h	/^static void dyn_fpu_esc4(){$/;"	f
dyn_fpu_esc4	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void dyn_fpu_esc4(){$/;"	f
dyn_fpu_esc5	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void dyn_fpu_esc5(){$/;"	f
dyn_fpu_esc5	src/cpu/core_dynrec/dyn_fpu.h	/^static void dyn_fpu_esc5(){$/;"	f
dyn_fpu_esc5	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void dyn_fpu_esc5(){$/;"	f
dyn_fpu_esc6	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void dyn_fpu_esc6(){$/;"	f
dyn_fpu_esc6	src/cpu/core_dynrec/dyn_fpu.h	/^static void dyn_fpu_esc6(){$/;"	f
dyn_fpu_esc6	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void dyn_fpu_esc6(){$/;"	f
dyn_fpu_esc7	src/cpu/core_dyn_x86/dyn_fpu.h	/^static void dyn_fpu_esc7(){$/;"	f
dyn_fpu_esc7	src/cpu/core_dynrec/dyn_fpu.h	/^static void dyn_fpu_esc7(){$/;"	f
dyn_fpu_esc7	src/cpu/core_dynrec/save/dyn_fpu.h	/^static void dyn_fpu_esc7(){$/;"	f
dyn_fpu_top	src/cpu/core_dyn_x86/dyn_fpu.h	56;"	d
dyn_fpu_top	src/cpu/core_dynrec/dyn_fpu.h	/^static INLINE void dyn_fpu_top() {$/;"	f
dyn_fpu_top	src/cpu/core_dynrec/save/dyn_fpu.h	/^static INLINE void dyn_fpu_top() {$/;"	f
dyn_fpu_top_swapped	src/cpu/core_dynrec/dyn_fpu.h	/^static INLINE void dyn_fpu_top_swapped() {$/;"	f
dyn_fpu_top_swapped	src/cpu/core_dynrec/save/dyn_fpu.h	/^static INLINE void dyn_fpu_top_swapped() {$/;"	f
dyn_get_modrm	src/cpu/core_dyn_x86/decoder.h	/^static INLINE void dyn_get_modrm(void) {$/;"	f
dyn_get_modrm	src/cpu/core_dynrec/decoder_basic.h	/^static void INLINE dyn_get_modrm(void) {$/;"	f
dyn_get_modrm	src/cpu/core_dynrec/save/decoder_basic.h	/^static void INLINE dyn_get_modrm(void) {$/;"	f
dyn_grp1_eb_ib	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_grp1_eb_ib(void) {$/;"	f
dyn_grp1_eb_ib	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_grp1_eb_ib(void) {$/;"	f
dyn_grp1_eb_ib	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_grp1_eb_ib(void) {$/;"	f
dyn_grp1_ev_iv	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_grp1_ev_iv(bool withbyte) {$/;"	f
dyn_grp1_ev_iv	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_grp1_ev_iv(bool withbyte) {$/;"	f
dyn_grp1_ev_ivx	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_grp1_ev_ivx(bool withbyte) {$/;"	f
dyn_grp2_eb	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_grp2_eb(grp2_types type) {$/;"	f
dyn_grp2_eb	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_grp2_eb(grp2_types type) {$/;"	f
dyn_grp2_eb	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_grp2_eb(grp2_types type) {$/;"	f
dyn_grp2_ev	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_grp2_ev(grp2_types type) {$/;"	f
dyn_grp2_ev	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_grp2_ev(grp2_types type) {$/;"	f
dyn_grp2_ev	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_grp2_ev(grp2_types type) {$/;"	f
dyn_grp3_eb	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_grp3_eb(void) {$/;"	f
dyn_grp3_eb	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_grp3_eb(void) {$/;"	f
dyn_grp3_eb	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_grp3_eb(void) {$/;"	f
dyn_grp3_ev	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_grp3_ev(void) {$/;"	f
dyn_grp3_ev	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_grp3_ev(void) {$/;"	f
dyn_grp3_ev	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_grp3_ev(void) {$/;"	f
dyn_grp4_eb	src/cpu/core_dynrec/decoder_opcodes.h	/^static bool dyn_grp4_eb(void) {$/;"	f
dyn_grp4_eb	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static bool dyn_grp4_eb(void) {$/;"	f
dyn_grp4_ev	src/cpu/core_dynrec/decoder_opcodes.h	/^static bool dyn_grp4_ev(void) {$/;"	f
dyn_grp4_ev	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static bool dyn_grp4_ev(void) {$/;"	f
dyn_grp6	src/cpu/core_dynrec/decoder_opcodes.h	/^static bool dyn_grp6(void) {$/;"	f
dyn_grp6	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static bool dyn_grp6(void) {$/;"	f
dyn_grp7	src/cpu/core_dynrec/decoder_opcodes.h	/^static bool dyn_grp7(void) {$/;"	f
dyn_grp7	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static bool dyn_grp7(void) {$/;"	f
dyn_helper_divb	src/cpu/core_dyn_x86/helpers.h	/^static bool dyn_helper_divb(Bit8u val) {$/;"	f
dyn_helper_divd	src/cpu/core_dyn_x86/helpers.h	/^static bool dyn_helper_divd(Bit32u val) {$/;"	f
dyn_helper_divw	src/cpu/core_dyn_x86/helpers.h	/^static bool dyn_helper_divw(Bit16u val) {$/;"	f
dyn_helper_idivb	src/cpu/core_dyn_x86/helpers.h	/^static bool dyn_helper_idivb(Bit8s val) {$/;"	f
dyn_helper_idivd	src/cpu/core_dyn_x86/helpers.h	/^static bool dyn_helper_idivd(Bit32s val) {$/;"	f
dyn_helper_idivw	src/cpu/core_dyn_x86/helpers.h	/^static bool dyn_helper_idivw(Bit16s val) {$/;"	f
dyn_imul_gvev	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_imul_gvev(Bitu immsize) {$/;"	f
dyn_imul_gvev	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_imul_gvev(Bitu immsize) {$/;"	f
dyn_imul_gvev	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_imul_gvev(Bitu immsize) {$/;"	f
dyn_interrupt	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_interrupt(Bitu num) {$/;"	f
dyn_interrupt	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_interrupt(Bit8u num) {$/;"	f
dyn_interrupt	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_interrupt(Bit8u num) {$/;"	f
dyn_iret	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_iret(void) {$/;"	f
dyn_iret	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_iret(void) {$/;"	f
dyn_iret	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_iret(void) {$/;"	f
dyn_jmp_far_imm	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_jmp_far_imm(void) {$/;"	f
dyn_jmp_far_imm	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_jmp_far_imm(void) {$/;"	f
dyn_jmp_far_imm	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_jmp_far_imm(void) {$/;"	f
dyn_lea	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_lea(void) {$/;"	f
dyn_lea	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_lea(void) {$/;"	f
dyn_lea_mem_mem	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_lea_mem_mem(HostReg ea_reg,void* op1,void* op2,Bitu scale,Bits imm) {$/;"	f
dyn_lea_mem_mem	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_lea_mem_mem(HostReg ea_reg,void* op1,void* op2,Bitu scale,Bits imm) {$/;"	f
dyn_lea_mem_regval	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_lea_mem_regval(HostReg ea_reg,void* op1,Bitu op2_index,Bitu scale,Bits imm) {$/;"	f
dyn_lea_mem_regval	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_lea_mem_regval(HostReg ea_reg,void* op1,Bitu op2_index,Bitu scale,Bits imm) {$/;"	f
dyn_lea_regval_regval	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_lea_regval_regval(HostReg ea_reg,Bitu op1_index,Bitu op2_index,Bitu scale,Bits imm) {$/;"	f
dyn_lea_regval_regval	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_lea_regval_regval(HostReg ea_reg,Bitu op1_index,Bitu op2_index,Bitu scale,Bits imm) {$/;"	f
dyn_lea_segphys_mem	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_lea_segphys_mem(HostReg ea_reg,Bitu op1_index,void* op2,Bitu scale,Bits imm) {$/;"	f
dyn_lea_segphys_mem	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_lea_segphys_mem(HostReg ea_reg,Bitu op1_index,void* op2,Bitu scale,Bits imm) {$/;"	f
dyn_lea_segphys_regval	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_lea_segphys_regval(HostReg ea_reg,Bitu op1_index,Bitu op2_index,Bitu scale,Bits imm) {$/;"	f
dyn_lea_segphys_regval	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_lea_segphys_regval(HostReg ea_reg,Bitu op1_index,Bitu op2_index,Bitu scale,Bits imm) {$/;"	f
dyn_leave	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_leave(void) {$/;"	f
dyn_leave	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_leave(void) {$/;"	f
dyn_leave	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_leave(void) {$/;"	f
dyn_load_seg	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_load_seg(SegNames seg,DynReg * src) {$/;"	f
dyn_load_seg_off_ea	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_load_seg_off_ea(SegNames seg) {$/;"	f
dyn_load_seg_off_ea	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_load_seg_off_ea(Bit8u seg) {$/;"	f
dyn_load_seg_off_ea	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_load_seg_off_ea(Bit8u seg) {$/;"	f
dyn_loadstate	src/cpu/core_dyn_x86.cpp	/^static void dyn_loadstate(DynState * state) {$/;"	f	file:
dyn_loop	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_loop(LoopTypes type) {$/;"	f
dyn_loop	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_loop(LoopTypes type) {$/;"	f
dyn_loop	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_loop(LoopTypes type) {$/;"	f
dyn_mov_byte_al_direct	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_mov_byte_al_direct(Bitu imm) {$/;"	f
dyn_mov_byte_al_direct	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_mov_byte_al_direct(Bitu imm) {$/;"	f
dyn_mov_byte_ax_direct	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_mov_byte_ax_direct(Bitu imm) {$/;"	f
dyn_mov_byte_ax_direct	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_mov_byte_ax_direct(Bitu imm) {$/;"	f
dyn_mov_byte_direct_al	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_mov_byte_direct_al() {$/;"	f
dyn_mov_byte_direct_al	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_mov_byte_direct_al() {$/;"	f
dyn_mov_byte_direct_ax	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_mov_byte_direct_ax(Bitu imm) {$/;"	f
dyn_mov_byte_direct_ax	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_mov_byte_direct_ax(Bitu imm) {$/;"	f
dyn_mov_byte_imm	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_mov_byte_imm(Bit8u reg,Bit8u idx,Bit8u imm) {$/;"	f
dyn_mov_byte_imm	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_mov_byte_imm(Bit8u reg,Bit8u idx,Bit8u imm) {$/;"	f
dyn_mov_ebgb	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_mov_ebgb(void) {$/;"	f
dyn_mov_ebib	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_mov_ebib(void) {$/;"	f
dyn_mov_ev_gb	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_mov_ev_gb(bool sign) {$/;"	f
dyn_mov_ev_gw	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_mov_ev_gw(bool sign) {$/;"	f
dyn_mov_ev_seg	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_mov_ev_seg(void) {$/;"	f
dyn_mov_ev_seg	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_mov_ev_seg(void) {$/;"	f
dyn_mov_ev_seg	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_mov_ev_seg(void) {$/;"	f
dyn_mov_evgv	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_mov_evgv(void) {$/;"	f
dyn_mov_eviv	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_mov_eviv(void) {$/;"	f
dyn_mov_from_crx	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_mov_from_crx(void) {$/;"	f
dyn_mov_from_crx	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_mov_from_crx(void) {$/;"	f
dyn_mov_gbeb	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_mov_gbeb(void) {$/;"	f
dyn_mov_gvev	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_mov_gvev(void) {$/;"	f
dyn_mov_seg_ev	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_mov_seg_ev(void) {$/;"	f
dyn_mov_seg_ev	src/cpu/core_dynrec/decoder_opcodes.h	/^ static void dyn_mov_seg_ev(void) {$/;"	f
dyn_mov_seg_ev	src/cpu/core_dynrec/save/decoder_opcodes.h	/^ static void dyn_mov_seg_ev(void) {$/;"	f
dyn_mov_to_crx	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_mov_to_crx(void) {$/;"	f
dyn_mov_to_crx	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_mov_to_crx(void) {$/;"	f
dyn_mov_word_imm	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_mov_word_imm(Bit8u reg) {$/;"	f
dyn_mov_word_imm	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_mov_word_imm(Bit8u reg) {$/;"	f
dyn_movx_ev_gb	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_movx_ev_gb(bool sign) {$/;"	f
dyn_movx_ev_gb	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_movx_ev_gb(bool sign) {$/;"	f
dyn_movx_ev_gw	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_movx_ev_gw(bool sign) {$/;"	f
dyn_movx_ev_gw	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_movx_ev_gw(bool sign) {$/;"	f
dyn_normal_exit	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_normal_exit(BlockReturn code) {$/;"	f
dyn_pop	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_pop(DynReg * dynreg,bool checked=true) {$/;"	f
dyn_pop_ev	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_pop_ev(void) {$/;"	f
dyn_pop_ev	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_pop_ev(void) {$/;"	f
dyn_pop_ev	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_pop_ev(void) {$/;"	f
dyn_pop_reg	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_pop_reg(Bit8u reg) {$/;"	f
dyn_pop_reg	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_pop_reg(Bit8u reg) {$/;"	f
dyn_pop_seg	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_pop_seg(SegNames seg) {$/;"	f
dyn_pop_seg	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_pop_seg(Bit8u seg) {$/;"	f
dyn_pop_seg	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_pop_seg(Bit8u seg) {$/;"	f
dyn_prep_word_imm	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_prep_word_imm(Bit8u reg) {$/;"	f
dyn_prep_word_imm	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_prep_word_imm(Bit8u reg) {$/;"	f
dyn_push	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_push(DynReg * dynreg) {$/;"	f
dyn_push_byte_imm	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_push_byte_imm(Bit8s imm) {$/;"	f
dyn_push_byte_imm	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_push_byte_imm(Bit8s imm) {$/;"	f
dyn_push_reg	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_push_reg(Bit8u reg) {$/;"	f
dyn_push_reg	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_push_reg(Bit8u reg) {$/;"	f
dyn_push_seg	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_push_seg(SegNames seg) {$/;"	f
dyn_push_seg	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_push_seg(Bit8u seg) {$/;"	f
dyn_push_seg	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_push_seg(Bit8u seg) {$/;"	f
dyn_push_unchecked	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_push_unchecked(DynReg * dynreg) {$/;"	f
dyn_push_word_imm	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_push_word_imm(Bitu imm) {$/;"	f
dyn_push_word_imm	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_push_word_imm(Bitu imm) {$/;"	f
dyn_read_byte	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_read_byte(DynReg * addr,DynReg * dst,Bitu high) {$/;"	f
dyn_read_byte	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_read_byte(HostReg reg_addr,HostReg reg_dst) {$/;"	f
dyn_read_byte	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_read_byte(HostReg reg_addr,HostReg reg_dst) {$/;"	f
dyn_read_byte_canuseword	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_read_byte_canuseword(HostReg reg_addr,HostReg reg_dst) {$/;"	f
dyn_read_byte_canuseword	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_read_byte_canuseword(HostReg reg_addr,HostReg reg_dst) {$/;"	f
dyn_read_byte_release	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_read_byte_release(DynReg * addr,DynReg * dst,Bitu high) {$/;"	f
dyn_read_intro	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_read_intro(DynReg * addr,bool release_addr=true) {$/;"	f
dyn_read_port_byte	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_read_port_byte(void) {$/;"	f
dyn_read_port_byte	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_read_port_byte(void) {$/;"	f
dyn_read_port_byte_direct	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_read_port_byte_direct(Bit8u port) {$/;"	f
dyn_read_port_byte_direct	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_read_port_byte_direct(Bit8u port) {$/;"	f
dyn_read_port_word	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_read_port_word(void) {$/;"	f
dyn_read_port_word	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_read_port_word(void) {$/;"	f
dyn_read_port_word_direct	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_read_port_word_direct(Bit8u port) {$/;"	f
dyn_read_port_word_direct	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_read_port_word_direct(Bit8u port) {$/;"	f
dyn_read_word	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_read_word(DynReg * addr,DynReg * dst,bool dword) {$/;"	f
dyn_read_word	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_read_word(HostReg reg_addr,HostReg reg_dst,bool dword) {$/;"	f
dyn_read_word	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_read_word(HostReg reg_addr,HostReg reg_dst,bool dword) {$/;"	f
dyn_read_word_release	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_read_word_release(DynReg * addr,DynReg * dst,bool dword) {$/;"	f
dyn_reduce_cycles	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_reduce_cycles(void) {$/;"	f
dyn_reduce_cycles	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_reduce_cycles(void) {$/;"	f
dyn_reduce_cycles	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_reduce_cycles(void) {$/;"	f
dyn_restoreregister	src/cpu/core_dyn_x86.cpp	/^static void dyn_restoreregister(DynReg * src_reg, DynReg * dst_reg) {$/;"	f	file:
dyn_ret_far	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_ret_far(Bitu bytes) {$/;"	f
dyn_ret_far	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_ret_far(Bitu bytes) {$/;"	f
dyn_ret_far	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_ret_far(Bitu bytes) {$/;"	f
dyn_ret_near	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_ret_near(Bitu bytes) {$/;"	f
dyn_ret_near	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_ret_near(Bitu bytes) {$/;"	f
dyn_ret_near	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_ret_near(Bitu bytes) {$/;"	f
dyn_return	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_return(BlockReturn retcode,bool ret_exception=false) {$/;"	f
dyn_return	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_return(BlockReturn retcode,bool ret_exception=false) {$/;"	f
dyn_run_code	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_run_code(void) {$/;"	f
dyn_run_code	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_run_code(void) {$/;"	f
dyn_sahf	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_sahf(void) {$/;"	f
dyn_sahf	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_sahf(void) {$/;"	f
dyn_save_critical_regs	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_save_critical_regs(void) {$/;"	f
dyn_save_noncritical_regs	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_save_noncritical_regs(void) {$/;"	f
dyn_saveregister	src/cpu/core_dyn_x86.cpp	/^static void dyn_saveregister(DynReg * src_reg, DynReg * dst_reg) {$/;"	f	file:
dyn_savestate	src/cpu/core_dyn_x86.cpp	/^static void dyn_savestate(DynState * state) {$/;"	f	file:
dyn_segprefix	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_segprefix(SegNames seg) {$/;"	f
dyn_segprefix	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_segprefix(Bit8u seg) {$/;"	f
dyn_segprefix	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_segprefix(Bit8u seg) {$/;"	f
dyn_set_eip_end	src/cpu/core_dyn_x86/decoder.h	/^static INLINE void dyn_set_eip_end(DynReg * endreg) {$/;"	f
dyn_set_eip_end	src/cpu/core_dyn_x86/decoder.h	/^static INLINE void dyn_set_eip_end(void) {$/;"	f
dyn_set_eip_end	src/cpu/core_dynrec/decoder_basic.h	/^static INLINE void dyn_set_eip_end(HostReg reg,Bit32u imm=0) {$/;"	f
dyn_set_eip_end	src/cpu/core_dynrec/decoder_basic.h	/^static INLINE void dyn_set_eip_end(void) {$/;"	f
dyn_set_eip_end	src/cpu/core_dynrec/save/decoder_basic.h	/^static INLINE void dyn_set_eip_end(HostReg reg,Bit32u imm=0) {$/;"	f
dyn_set_eip_end	src/cpu/core_dynrec/save/decoder_basic.h	/^static INLINE void dyn_set_eip_end(void) {$/;"	f
dyn_set_eip_last	src/cpu/core_dyn_x86/decoder.h	/^static INLINE void dyn_set_eip_last(void) {$/;"	f
dyn_set_eip_last	src/cpu/core_dynrec/decoder_basic.h	/^static INLINE void dyn_set_eip_last(void) {$/;"	f
dyn_set_eip_last	src/cpu/core_dynrec/save/decoder_basic.h	/^static INLINE void dyn_set_eip_last(void) {$/;"	f
dyn_set_eip_last_end	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_set_eip_last_end(DynReg * endreg) {$/;"	f
dyn_set_eip_last_end	src/cpu/core_dynrec/decoder_basic.h	/^static INLINE void dyn_set_eip_last_end(HostReg reg) {$/;"	f
dyn_set_eip_last_end	src/cpu/core_dynrec/save/decoder_basic.h	/^static INLINE void dyn_set_eip_last_end(HostReg reg) {$/;"	f
dyn_shift_byte_gencall	src/cpu/core_dynrec/operators.h	/^static void dyn_shift_byte_gencall(ShiftOps op) {$/;"	f
dyn_shift_byte_gencall	src/cpu/core_dynrec/save/operators.h	/^static void dyn_shift_byte_gencall(ShiftOps op) {$/;"	f
dyn_shift_word_gencall	src/cpu/core_dynrec/operators.h	/^static void dyn_shift_word_gencall(ShiftOps op,bool dword) {$/;"	f
dyn_shift_word_gencall	src/cpu/core_dynrec/save/operators.h	/^static void dyn_shift_word_gencall(ShiftOps op,bool dword) {$/;"	f
dyn_sop_byte_gencall	src/cpu/core_dynrec/operators.h	/^static void dyn_sop_byte_gencall(SingleOps op) {$/;"	f
dyn_sop_byte_gencall	src/cpu/core_dynrec/save/operators.h	/^static void dyn_sop_byte_gencall(SingleOps op) {$/;"	f
dyn_sop_word	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_sop_word(SingleOps op,Bit8u reg) {$/;"	f
dyn_sop_word	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_sop_word(SingleOps op,Bit8u reg) {$/;"	f
dyn_sop_word_gencall	src/cpu/core_dynrec/operators.h	/^static void dyn_sop_word_gencall(SingleOps op,bool dword) {$/;"	f
dyn_sop_word_gencall	src/cpu/core_dynrec/save/operators.h	/^static void dyn_sop_word_gencall(SingleOps op,bool dword) {$/;"	f
dyn_string	src/cpu/core_dyn_x86/string.h	/^static void dyn_string(STRING_OP op) {$/;"	f
dyn_string	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_string(StringOps op) {$/;"	f
dyn_string	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_string(StringOps op) {$/;"	f
dyn_synchstate	src/cpu/core_dyn_x86.cpp	/^static void dyn_synchstate(DynState * state) {$/;"	f	file:
dyn_write_byte	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_write_byte(DynReg * addr,DynReg * val,Bitu high) {$/;"	f
dyn_write_byte	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_write_byte(DynReg * addr,DynReg * val,bool high) {$/;"	f
dyn_write_byte	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_write_byte(HostReg reg_addr,HostReg reg_val) {$/;"	f
dyn_write_byte	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_write_byte(HostReg reg_addr,HostReg reg_val) {$/;"	f
dyn_write_byte_release	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_write_byte_release(DynReg * addr,DynReg * val,Bitu high) {$/;"	f
dyn_write_byte_release	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_write_byte_release(DynReg * addr,DynReg * val,bool high) {$/;"	f
dyn_write_intro	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_write_intro(DynReg * addr,bool release_addr=true) {$/;"	f
dyn_write_port_byte	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_write_port_byte(void) {$/;"	f
dyn_write_port_byte	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_write_port_byte(void) {$/;"	f
dyn_write_port_byte_direct	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_write_port_byte_direct(Bit8u port) {$/;"	f
dyn_write_port_byte_direct	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_write_port_byte_direct(Bit8u port) {$/;"	f
dyn_write_port_word	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_write_port_word(void) {$/;"	f
dyn_write_port_word	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_write_port_word(void) {$/;"	f
dyn_write_port_word_direct	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_write_port_word_direct(Bit8u port) {$/;"	f
dyn_write_port_word_direct	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_write_port_word_direct(Bit8u port) {$/;"	f
dyn_write_word	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_write_word(DynReg * addr,DynReg * val,bool dword) {$/;"	f
dyn_write_word	src/cpu/core_dynrec/decoder_basic.h	/^static void dyn_write_word(HostReg reg_addr,HostReg reg_val,bool dword) {$/;"	f
dyn_write_word	src/cpu/core_dynrec/save/decoder_basic.h	/^static void dyn_write_word(HostReg reg_addr,HostReg reg_val,bool dword) {$/;"	f
dyn_write_word_release	src/cpu/core_dyn_x86/decoder.h	/^static void dyn_write_word_release(DynReg * addr,DynReg * val,bool dword) {$/;"	f
dyn_xchg_ax	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dyn_xchg_ax(Bit8u reg) {$/;"	f
dyn_xchg_ax	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dyn_xchg_ax(Bit8u reg) {$/;"	f
dynrec_adc_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_adc_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_adc_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_adc_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_adc_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_adc_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_adc_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_adc_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_adc_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_adc_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_adc_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_adc_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_adc_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_adc_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_adc_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_adc_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_adc_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_adc_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_adc_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_adc_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_adc_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_adc_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_adc_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_adc_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_add_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_add_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_add_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_add_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_add_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_add_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_add_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_add_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_add_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_add_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_add_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_add_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_add_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_add_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_add_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_add_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_add_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_add_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_add_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_add_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_add_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_add_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_add_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_add_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_and_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_and_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_and_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_and_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_and_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_and_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_and_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_and_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_and_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_and_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_and_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_and_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_and_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_and_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_and_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_and_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_and_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_and_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_and_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_and_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_and_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_and_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_and_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_and_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_cbw	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_cbw(Bit8u op) {$/;"	f
dynrec_cbw	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_cbw(Bit8u op) {$/;"	f
dynrec_cdq	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_cdq(Bit32u op) {$/;"	f
dynrec_cdq	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_cdq(Bit32u op) {$/;"	f
dynrec_clc	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_clc(void) {$/;"	f
dynrec_clc	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_clc(void) {$/;"	f
dynrec_cld	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_cld(void) {$/;"	f
dynrec_cld	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_cld(void) {$/;"	f
dynrec_cmc	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_cmc(void) {$/;"	f
dynrec_cmc	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_cmc(void) {$/;"	f
dynrec_cmp_byte	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_cmp_byte	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_cmp_byte_simple	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_cmp_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_cmp_dword	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_cmp_dword	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_cmp_dword_simple	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_cmp_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_cmp_word	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_cmp_word	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_cmp_word_simple	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_cmp_word_simple	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_cmp_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_cwd	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_cwd(Bit16u op) {$/;"	f
dynrec_cwd	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_cwd(Bit16u op) {$/;"	f
dynrec_cwde	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_cwde(Bit16u op) {$/;"	f
dynrec_cwde	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_cwde(Bit16u op) {$/;"	f
dynrec_dec_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_dec_byte(Bit8u op) {$/;"	f
dynrec_dec_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_dec_byte(Bit8u op) {$/;"	f
dynrec_dec_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_dec_byte_simple(Bit8u op) {$/;"	f
dynrec_dec_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_dec_byte_simple(Bit8u op) {$/;"	f
dynrec_dec_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dec_dword(Bit32u op) {$/;"	f
dynrec_dec_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dec_dword(Bit32u op) {$/;"	f
dynrec_dec_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dec_dword_simple(Bit32u op) {$/;"	f
dynrec_dec_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dec_dword_simple(Bit32u op) {$/;"	f
dynrec_dec_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dec_word(Bit16u op) {$/;"	f
dynrec_dec_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dec_word(Bit16u op) {$/;"	f
dynrec_dec_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dec_word_simple(Bit16u op) {$/;"	f
dynrec_dec_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dec_word_simple(Bit16u op) {$/;"	f
dynrec_dimul_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dimul_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_dimul_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dimul_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_dimul_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dimul_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_dimul_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dimul_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_div_byte	src/cpu/core_dynrec/operators.h	/^static bool DRC_CALL_CONV dynrec_div_byte(Bit8u op) {$/;"	f
dynrec_div_byte	src/cpu/core_dynrec/save/operators.h	/^static bool DRC_CALL_CONV dynrec_div_byte(Bit8u op) {$/;"	f
dynrec_div_dword	src/cpu/core_dynrec/operators.h	/^static bool DRC_CALL_CONV dynrec_div_dword(Bit32u op) {$/;"	f
dynrec_div_dword	src/cpu/core_dynrec/save/operators.h	/^static bool DRC_CALL_CONV dynrec_div_dword(Bit32u op) {$/;"	f
dynrec_div_word	src/cpu/core_dynrec/operators.h	/^static bool DRC_CALL_CONV dynrec_div_word(Bit16u op) {$/;"	f
dynrec_div_word	src/cpu/core_dynrec/save/operators.h	/^static bool DRC_CALL_CONV dynrec_div_word(Bit16u op) {$/;"	f
dynrec_dshl_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dshl_dword(Bit32u op1,Bit32u op2,Bit8u op3) {$/;"	f
dynrec_dshl_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dshl_dword(Bit32u op1,Bit32u op2,Bit8u op3) {$/;"	f
dynrec_dshl_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dshl_dword_simple(Bit32u op1,Bit32u op2,Bit8u op3) {$/;"	f
dynrec_dshl_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dshl_dword_simple(Bit32u op1,Bit32u op2,Bit8u op3) {$/;"	f
dynrec_dshl_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dshl_word(Bit16u op1,Bit16u op2,Bit8u op3) {$/;"	f
dynrec_dshl_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dshl_word(Bit16u op1,Bit16u op2,Bit8u op3) {$/;"	f
dynrec_dshl_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dshl_word_simple(Bit16u op1,Bit16u op2,Bit8u op3) {$/;"	f
dynrec_dshl_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dshl_word_simple(Bit16u op1,Bit16u op2,Bit8u op3) {$/;"	f
dynrec_dshr_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dshr_dword(Bit32u op1,Bit32u op2,Bit8u op3) {$/;"	f
dynrec_dshr_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dshr_dword(Bit32u op1,Bit32u op2,Bit8u op3) {$/;"	f
dynrec_dshr_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dshr_dword_simple(Bit32u op1,Bit32u op2,Bit8u op3) {$/;"	f
dynrec_dshr_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_dshr_dword_simple(Bit32u op1,Bit32u op2,Bit8u op3) {$/;"	f
dynrec_dshr_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dshr_word(Bit16u op1,Bit16u op2,Bit8u op3) {$/;"	f
dynrec_dshr_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dshr_word(Bit16u op1,Bit16u op2,Bit8u op3) {$/;"	f
dynrec_dshr_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dshr_word_simple(Bit16u op1,Bit16u op2,Bit8u op3) {$/;"	f
dynrec_dshr_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_dshr_word_simple(Bit16u op1,Bit16u op2,Bit8u op3) {$/;"	f
dynrec_get_cf	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_cf(void)		{ return TFLG_B; }$/;"	f
dynrec_get_cf	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_cf(void)		{ return TFLG_B; }$/;"	f
dynrec_get_cf_or_zf	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_cf_or_zf(void)			{ return TFLG_BE; }$/;"	f
dynrec_get_cf_or_zf	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_cf_or_zf(void)			{ return TFLG_BE; }$/;"	f
dynrec_get_ncf	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_ncf(void)	{ return TFLG_NB; }$/;"	f
dynrec_get_ncf	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_ncf(void)	{ return TFLG_NB; }$/;"	f
dynrec_get_ncf_and_nzf	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_ncf_and_nzf(void)		{ return TFLG_NBE; }$/;"	f
dynrec_get_ncf_and_nzf	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_ncf_and_nzf(void)		{ return TFLG_NBE; }$/;"	f
dynrec_get_nof	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_nof(void)	{ return TFLG_NO; }$/;"	f
dynrec_get_nof	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_nof(void)	{ return TFLG_NO; }$/;"	f
dynrec_get_npf	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_npf(void)	{ return TFLG_NP; }$/;"	f
dynrec_get_npf	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_npf(void)	{ return TFLG_NP; }$/;"	f
dynrec_get_nsf	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_nsf(void)	{ return TFLG_NS; }$/;"	f
dynrec_get_nsf	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_nsf(void)	{ return TFLG_NS; }$/;"	f
dynrec_get_nzf	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_nzf(void)	{ return TFLG_NZ; }$/;"	f
dynrec_get_nzf	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_nzf(void)	{ return TFLG_NZ; }$/;"	f
dynrec_get_nzf_and_sf_eq_of	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_nzf_and_sf_eq_of(void)	{ return TFLG_NLE; }$/;"	f
dynrec_get_nzf_and_sf_eq_of	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_nzf_and_sf_eq_of(void)	{ return TFLG_NLE; }$/;"	f
dynrec_get_of	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_of(void)		{ return TFLG_O; }$/;"	f
dynrec_get_of	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_of(void)		{ return TFLG_O; }$/;"	f
dynrec_get_pf	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_pf(void)		{ return TFLG_P; }$/;"	f
dynrec_get_pf	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_pf(void)		{ return TFLG_P; }$/;"	f
dynrec_get_sf	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_sf(void)		{ return TFLG_S; }$/;"	f
dynrec_get_sf	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_sf(void)		{ return TFLG_S; }$/;"	f
dynrec_get_sf_eq_of	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_sf_eq_of(void)			{ return TFLG_NL; }$/;"	f
dynrec_get_sf_eq_of	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_sf_eq_of(void)			{ return TFLG_NL; }$/;"	f
dynrec_get_sf_neq_of	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_sf_neq_of(void)			{ return TFLG_L; }$/;"	f
dynrec_get_sf_neq_of	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_sf_neq_of(void)			{ return TFLG_L; }$/;"	f
dynrec_get_zf	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_zf(void)		{ return TFLG_Z; }$/;"	f
dynrec_get_zf	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_zf(void)		{ return TFLG_Z; }$/;"	f
dynrec_get_zf_or_sf_neq_of	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_zf_or_sf_neq_of(void)	{ return TFLG_LE; }$/;"	f
dynrec_get_zf_or_sf_neq_of	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_get_zf_or_sf_neq_of(void)	{ return TFLG_LE; }$/;"	f
dynrec_idiv_byte	src/cpu/core_dynrec/operators.h	/^static bool DRC_CALL_CONV dynrec_idiv_byte(Bit8u op) {$/;"	f
dynrec_idiv_byte	src/cpu/core_dynrec/save/operators.h	/^static bool DRC_CALL_CONV dynrec_idiv_byte(Bit8u op) {$/;"	f
dynrec_idiv_dword	src/cpu/core_dynrec/operators.h	/^static bool DRC_CALL_CONV dynrec_idiv_dword(Bit32u op) {$/;"	f
dynrec_idiv_dword	src/cpu/core_dynrec/save/operators.h	/^static bool DRC_CALL_CONV dynrec_idiv_dword(Bit32u op) {$/;"	f
dynrec_idiv_word	src/cpu/core_dynrec/operators.h	/^static bool DRC_CALL_CONV dynrec_idiv_word(Bit16u op) {$/;"	f
dynrec_idiv_word	src/cpu/core_dynrec/save/operators.h	/^static bool DRC_CALL_CONV dynrec_idiv_word(Bit16u op) {$/;"	f
dynrec_imul_byte	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_imul_byte(Bit8u op) {$/;"	f
dynrec_imul_byte	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_imul_byte(Bit8u op) {$/;"	f
dynrec_imul_dword	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_imul_dword(Bit32u op) {$/;"	f
dynrec_imul_dword	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_imul_dword(Bit32u op) {$/;"	f
dynrec_imul_word	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_imul_word(Bit16u op) {$/;"	f
dynrec_imul_word	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_imul_word(Bit16u op) {$/;"	f
dynrec_inc_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_inc_byte(Bit8u op) {$/;"	f
dynrec_inc_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_inc_byte(Bit8u op) {$/;"	f
dynrec_inc_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_inc_byte_simple(Bit8u op) {$/;"	f
dynrec_inc_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_inc_byte_simple(Bit8u op) {$/;"	f
dynrec_inc_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_inc_dword(Bit32u op) {$/;"	f
dynrec_inc_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_inc_dword(Bit32u op) {$/;"	f
dynrec_inc_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_inc_dword_simple(Bit32u op) {$/;"	f
dynrec_inc_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_inc_dword_simple(Bit32u op) {$/;"	f
dynrec_inc_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_inc_word(Bit16u op) {$/;"	f
dynrec_inc_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_inc_word(Bit16u op) {$/;"	f
dynrec_inc_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_inc_word_simple(Bit16u op) {$/;"	f
dynrec_inc_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_inc_word_simple(Bit16u op) {$/;"	f
dynrec_leave_dword	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dynrec_leave_dword(void) {$/;"	f
dynrec_leave_dword	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dynrec_leave_dword(void) {$/;"	f
dynrec_leave_word	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dynrec_leave_word(void) {$/;"	f
dynrec_leave_word	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dynrec_leave_word(void) {$/;"	f
dynrec_lodsb_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_lodsb_dword(Bit32u count,Bit32s add_index,PhysPt si_base) {$/;"	f
dynrec_lodsb_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_lodsb_dword(Bit32u count,Bit32s add_index,PhysPt si_base) {$/;"	f
dynrec_lodsb_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_lodsb_word(Bit16u count,Bit16s add_index,PhysPt si_base) {$/;"	f
dynrec_lodsb_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_lodsb_word(Bit16u count,Bit16s add_index,PhysPt si_base) {$/;"	f
dynrec_lodsd_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_lodsd_dword(Bit32u count,Bit32s add_index,PhysPt si_base) {$/;"	f
dynrec_lodsd_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_lodsd_dword(Bit32u count,Bit32s add_index,PhysPt si_base) {$/;"	f
dynrec_lodsd_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_lodsd_word(Bit16u count,Bit16s add_index,PhysPt si_base) {$/;"	f
dynrec_lodsd_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_lodsd_word(Bit16u count,Bit16s add_index,PhysPt si_base) {$/;"	f
dynrec_lodsw_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_lodsw_dword(Bit32u count,Bit32s add_index,PhysPt si_base) {$/;"	f
dynrec_lodsw_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_lodsw_dword(Bit32u count,Bit32s add_index,PhysPt si_base) {$/;"	f
dynrec_lodsw_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_lodsw_word(Bit16u count,Bit16s add_index,PhysPt si_base) {$/;"	f
dynrec_lodsw_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_lodsw_word(Bit16u count,Bit16s add_index,PhysPt si_base) {$/;"	f
dynrec_movsb_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_movsb_dword(Bit32u count,Bit32s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_movsb_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_movsb_dword(Bit32u count,Bit32s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_movsb_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_movsb_word(Bit16u count,Bit16s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_movsb_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_movsb_word(Bit16u count,Bit16s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_movsd_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_movsd_dword(Bit32u count,Bit32s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_movsd_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_movsd_dword(Bit32u count,Bit32s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_movsd_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_movsd_word(Bit16u count,Bit16s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_movsd_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_movsd_word(Bit16u count,Bit16s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_movsw_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_movsw_dword(Bit32u count,Bit32s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_movsw_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_movsw_dword(Bit32u count,Bit32s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_movsw_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_movsw_word(Bit16u count,Bit16s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_movsw_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_movsw_word(Bit16u count,Bit16s add_index,PhysPt si_base,PhysPt di_base) {$/;"	f
dynrec_mul_byte	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_mul_byte(Bit8u op) {$/;"	f
dynrec_mul_byte	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_mul_byte(Bit8u op) {$/;"	f
dynrec_mul_dword	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_mul_dword(Bit32u op) {$/;"	f
dynrec_mul_dword	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_mul_dword(Bit32u op) {$/;"	f
dynrec_mul_word	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_mul_word(Bit16u op) {$/;"	f
dynrec_mul_word	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_mul_word(Bit16u op) {$/;"	f
dynrec_neg_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_neg_byte(Bit8u op) {$/;"	f
dynrec_neg_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_neg_byte(Bit8u op) {$/;"	f
dynrec_neg_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_neg_byte_simple(Bit8u op) {$/;"	f
dynrec_neg_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_neg_byte_simple(Bit8u op) {$/;"	f
dynrec_neg_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_neg_dword(Bit32u op) {$/;"	f
dynrec_neg_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_neg_dword(Bit32u op) {$/;"	f
dynrec_neg_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_neg_dword_simple(Bit32u op) {$/;"	f
dynrec_neg_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_neg_dword_simple(Bit32u op) {$/;"	f
dynrec_neg_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_neg_word(Bit16u op) {$/;"	f
dynrec_neg_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_neg_word(Bit16u op) {$/;"	f
dynrec_neg_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_neg_word_simple(Bit16u op) {$/;"	f
dynrec_neg_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_neg_word_simple(Bit16u op) {$/;"	f
dynrec_not_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_not_byte(Bit8u op) {$/;"	f
dynrec_not_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_not_byte(Bit8u op) {$/;"	f
dynrec_not_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_not_dword(Bit32u op) {$/;"	f
dynrec_not_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_not_dword(Bit32u op) {$/;"	f
dynrec_not_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_not_word(Bit16u op) {$/;"	f
dynrec_not_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_not_word(Bit16u op) {$/;"	f
dynrec_or_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_or_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_or_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_or_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_or_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_or_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_or_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_or_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_or_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_or_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_or_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_or_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_or_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_or_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_or_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_or_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_or_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_or_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_or_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_or_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_or_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_or_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_or_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_or_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_pop_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_pop_dword(void) {$/;"	f
dynrec_pop_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_pop_dword(void) {$/;"	f
dynrec_pop_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_pop_word(void) {$/;"	f
dynrec_pop_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_pop_word(void) {$/;"	f
dynrec_popa_dword	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dynrec_popa_dword(void) {$/;"	f
dynrec_popa_dword	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dynrec_popa_dword(void) {$/;"	f
dynrec_popa_word	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dynrec_popa_word(void) {$/;"	f
dynrec_popa_word	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dynrec_popa_word(void) {$/;"	f
dynrec_push_dword	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_push_dword(Bit32u value) {$/;"	f
dynrec_push_dword	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_push_dword(Bit32u value) {$/;"	f
dynrec_push_word	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_push_word(Bit16u value) {$/;"	f
dynrec_push_word	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_push_word(Bit16u value) {$/;"	f
dynrec_pusha_dword	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dynrec_pusha_dword(void) {$/;"	f
dynrec_pusha_dword	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dynrec_pusha_dword(void) {$/;"	f
dynrec_pusha_word	src/cpu/core_dynrec/decoder_opcodes.h	/^static void dynrec_pusha_word(void) {$/;"	f
dynrec_pusha_word	src/cpu/core_dynrec/save/decoder_opcodes.h	/^static void dynrec_pusha_word(void) {$/;"	f
dynrec_rcl_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_rcl_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_rcl_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_rcl_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_rcl_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_rcl_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_rcl_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_rcl_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_rcl_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_rcl_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_rcl_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_rcl_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_rcr_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_rcr_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_rcr_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_rcr_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_rcr_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_rcr_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_rcr_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_rcr_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_rcr_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_rcr_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_rcr_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_rcr_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_rol_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_rol_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_rol_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_rol_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_rol_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_rol_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_rol_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_rol_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_rol_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_rol_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_rol_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_rol_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_rol_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_rol_dword_simple(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_rol_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_rol_dword_simple(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_rol_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_rol_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_rol_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_rol_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_rol_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_rol_word_simple(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_rol_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_rol_word_simple(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_ror_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_ror_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_ror_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_ror_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_ror_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_ror_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_ror_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_ror_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_ror_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_ror_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_ror_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_ror_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_ror_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_ror_dword_simple(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_ror_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_ror_dword_simple(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_ror_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_ror_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_ror_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_ror_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_ror_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_ror_word_simple(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_ror_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_ror_word_simple(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_sahf	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_sahf(Bit16u op) {$/;"	f
dynrec_sahf	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_sahf(Bit16u op) {$/;"	f
dynrec_sar_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sar_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sar_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sar_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sar_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sar_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sar_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sar_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sar_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sar_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_sar_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sar_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_sar_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sar_dword_simple(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_sar_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sar_dword_simple(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_sar_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sar_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_sar_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sar_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_sar_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sar_word_simple(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_sar_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sar_word_simple(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_sbb_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sbb_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sbb_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sbb_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sbb_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sbb_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sbb_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sbb_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sbb_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sbb_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_sbb_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sbb_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_sbb_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sbb_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_sbb_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sbb_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_sbb_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sbb_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_sbb_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sbb_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_sbb_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sbb_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_sbb_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sbb_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_shl_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_shl_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_shl_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_shl_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_shl_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_shl_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_shl_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_shl_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_shl_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_shl_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_shl_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_shl_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_shl_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_shl_dword_simple(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_shl_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_shl_dword_simple(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_shl_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_shl_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_shl_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_shl_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_shl_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_shl_word_simple(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_shl_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_shl_word_simple(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_shr_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_shr_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_shr_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_shr_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_shr_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_shr_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_shr_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_shr_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_shr_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_shr_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_shr_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_shr_dword(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_shr_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_shr_dword_simple(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_shr_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_shr_dword_simple(Bit32u op1,Bit8u op2) {$/;"	f
dynrec_shr_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_shr_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_shr_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_shr_word(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_shr_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_shr_word_simple(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_shr_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_shr_word_simple(Bit16u op1,Bit8u op2) {$/;"	f
dynrec_stc	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_stc(void) {$/;"	f
dynrec_stc	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_stc(void) {$/;"	f
dynrec_std	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_std(void) {$/;"	f
dynrec_std	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_std(void) {$/;"	f
dynrec_stosb_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_stosb_dword(Bit32u count,Bit32s add_index,PhysPt di_base) {$/;"	f
dynrec_stosb_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_stosb_dword(Bit32u count,Bit32s add_index,PhysPt di_base) {$/;"	f
dynrec_stosb_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_stosb_word(Bit16u count,Bit16s add_index,PhysPt di_base) {$/;"	f
dynrec_stosb_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_stosb_word(Bit16u count,Bit16s add_index,PhysPt di_base) {$/;"	f
dynrec_stosd_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_stosd_dword(Bit32u count,Bit32s add_index,PhysPt di_base) {$/;"	f
dynrec_stosd_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_stosd_dword(Bit32u count,Bit32s add_index,PhysPt di_base) {$/;"	f
dynrec_stosd_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_stosd_word(Bit16u count,Bit16s add_index,PhysPt di_base) {$/;"	f
dynrec_stosd_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_stosd_word(Bit16u count,Bit16s add_index,PhysPt di_base) {$/;"	f
dynrec_stosw_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_stosw_dword(Bit32u count,Bit32s add_index,PhysPt di_base) {$/;"	f
dynrec_stosw_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_stosw_dword(Bit32u count,Bit32s add_index,PhysPt di_base) {$/;"	f
dynrec_stosw_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_stosw_word(Bit16u count,Bit16s add_index,PhysPt di_base) {$/;"	f
dynrec_stosw_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_stosw_word(Bit16u count,Bit16s add_index,PhysPt di_base) {$/;"	f
dynrec_sub_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sub_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sub_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sub_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sub_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sub_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sub_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_sub_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_sub_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sub_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_sub_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sub_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_sub_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sub_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_sub_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_sub_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_sub_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sub_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_sub_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sub_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_sub_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sub_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_sub_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_sub_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_test_byte	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_test_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_test_byte	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_test_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_test_byte_simple	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_test_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_test_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_test_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_test_dword	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_test_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_test_dword	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_test_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_test_dword_simple	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_test_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_test_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_test_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_test_word	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_test_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_test_word	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_test_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_test_word_simple	src/cpu/core_dynrec/operators.h	/^static void DRC_CALL_CONV dynrec_test_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_test_word_simple	src/cpu/core_dynrec/save/operators.h	/^static void DRC_CALL_CONV dynrec_test_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_xor_byte	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_xor_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_xor_byte	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_xor_byte(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_xor_byte_simple	src/cpu/core_dynrec/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_xor_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_xor_byte_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit8u DRC_CALL_CONV dynrec_xor_byte_simple(Bit8u op1,Bit8u op2) {$/;"	f
dynrec_xor_dword	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_xor_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_xor_dword	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_xor_dword(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_xor_dword_simple	src/cpu/core_dynrec/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_xor_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_xor_dword_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit32u DRC_CALL_CONV dynrec_xor_dword_simple(Bit32u op1,Bit32u op2) {$/;"	f
dynrec_xor_word	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_xor_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_xor_word	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_xor_word(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_xor_word_simple	src/cpu/core_dynrec/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_xor_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynrec_xor_word_simple	src/cpu/core_dynrec/save/operators.h	/^static Bit16u DRC_CALL_CONV dynrec_xor_word_simple(Bit16u op1,Bit16u op2) {$/;"	f
dynreg	src/cpu/core_dyn_x86/risc_x86.h	/^	DynReg  * dynreg;$/;"	m	class:GenReg
e2	src/hardware/sblaster.cpp	/^	} e2;$/;"	m	struct:SB_INFO	typeref:struct:SB_INFO::__anon179	file:
ea	src/cpu/core_dyn_x86.cpp	/^	Bitu ea,tmpb,tmpd,stack,shift,newesp;$/;"	m	struct:__anon94	file:
ea	src/debug/debug_inc.h	/^	PhysPt ea;$/;"	m	struct:DASMLine
ea_table	src/cpu/core_simple.cpp	/^	GetEAHandler * ea_table;$/;"	m	struct:__anon105	file:
ea_table	src/cpu/core_verysimple.cpp	/^	GetEAHandler * ea_table;$/;"	m	struct:__anon106	file:
eaoff	src/debug/debug_inc.h	/^	Bit32u eaoff;$/;"	m	struct:DASMLine
easeg	src/debug/debug_inc.h	/^	Bit16u easeg;$/;"	m	struct:DASMLine
eax	include/cpu.h	/^    Bit32u eax, ecx, edx, ebx;   \/* The general purpose registers *\/$/;"	m	struct:TSS_32
eax	src/debug/debug.cpp	/^	Bit32u eax,ebx,ecx,edx,esi,edi,ebp,esp,eip;$/;"	m	struct:__anon110	file:
eax	src/debug/debug.cpp	/^	Bit32u eax;$/;"	m	struct:TLogInst	file:
ebp	include/cpu.h	/^    Bit32u esp, ebp, esi, edi;   \/* The special purpose registers *\/$/;"	m	struct:TSS_32
ebp	src/debug/debug.cpp	/^	Bit32u eax,ebx,ecx,edx,esi,edi,ebp,esp,eip;$/;"	m	struct:__anon110	file:
ebp	src/debug/debug.cpp	/^	Bit32u ebp;$/;"	m	struct:TLogInst	file:
ebx	include/cpu.h	/^    Bit32u eax, ecx, edx, ebx;   \/* The general purpose registers *\/$/;"	m	struct:TSS_32
ebx	src/debug/debug.cpp	/^	Bit32u eax,ebx,ecx,edx,esi,edi,ebp,esp,eip;$/;"	m	struct:__anon110	file:
ebx	src/debug/debug.cpp	/^	Bit32u ebx;$/;"	m	struct:TLogInst	file:
echo	include/dos_inc.h	/^	bool echo;          \/\/ if set to true dev_con::read will echo input $/;"	m	struct:DOS_Block
echo	include/shell.h	/^	bool echo;$/;"	m	class:BatchFile
echo	include/shell.h	/^	bool echo;$/;"	m	class:DOS_Shell
echo	src/hardware/serialport/nullmodem.h	/^		bool echo[2];$/;"	m	struct:CNullModem::__anon180
echo	src/hardware/serialport/softmodem.h	/^		bool echo[2];$/;"	m	struct:CSerialModem::__anon181
echo	src/hardware/serialport/softmodem.h	/^	bool echo;				\/\/ local echo on or off$/;"	m	class:CSerialModem
ecx	include/cpu.h	/^    Bit32u eax, ecx, edx, ebx;   \/* The general purpose registers *\/$/;"	m	struct:TSS_32
ecx	src/debug/debug.cpp	/^	Bit32u eax,ebx,ecx,edx,esi,edi,ebp,esp,eip;$/;"	m	struct:__anon110	file:
ecx	src/debug/debug.cpp	/^	Bit32u ecx;$/;"	m	struct:TLogInst	file:
edi	include/cpu.h	/^    Bit32u esp, ebp, esi, edi;   \/* The special purpose registers *\/$/;"	m	struct:TSS_32
edi	src/debug/debug.cpp	/^	Bit32u eax,ebx,ecx,edx,esi,edi,ebp,esp,eip;$/;"	m	struct:__anon110	file:
edi	src/debug/debug.cpp	/^	Bit32u edi;$/;"	m	struct:TLogInst	file:
edx	include/cpu.h	/^    Bit32u eax, ecx, edx, ebx;   \/* The general purpose registers *\/$/;"	m	struct:TSS_32
edx	src/debug/debug.cpp	/^	Bit32u eax,ebx,ecx,edx,esi,edi,ebp,esp,eip;$/;"	m	struct:__anon110	file:
edx	src/debug/debug.cpp	/^	Bit32u edx;$/;"	m	struct:TLogInst	file:
eflags	include/cpu.h	/^    Bit32u eflags;               \/* The flags *\/$/;"	m	struct:TSS_32
eg_cnt	src/hardware/fmopl.cpp	/^	UINT32	eg_cnt;					\/* global envelope generator counter	*\/$/;"	m	struct:fm_opl_f	file:
eg_cnt	src/hardware/ymf262.cpp	/^	UINT32	eg_cnt;					\/* global envelope generator counter	*\/$/;"	m	struct:__anon192	file:
eg_inc	src/hardware/fmopl.cpp	/^static const unsigned char eg_inc[15*RATE_STEPS]={$/;"	v	file:
eg_inc	src/hardware/ymf262.cpp	/^static const unsigned char eg_inc[15*RATE_STEPS]={$/;"	v	file:
eg_m_ar	src/hardware/ymf262.cpp	/^	UINT32	eg_m_ar;	\/* (attack state)				*\/$/;"	m	struct:__anon190	file:
eg_m_dr	src/hardware/ymf262.cpp	/^	UINT32	eg_m_dr;	\/* (decay state)				*\/$/;"	m	struct:__anon190	file:
eg_m_rr	src/hardware/ymf262.cpp	/^	UINT32	eg_m_rr;	\/* (release state)				*\/$/;"	m	struct:__anon190	file:
eg_rate_select	src/hardware/fmopl.cpp	/^static const unsigned char eg_rate_select[16+64+16]={	\/* Envelope Generator rates (16 + 64 rates + 16 RKS) *\/$/;"	v	file:
eg_rate_select	src/hardware/ymf262.cpp	/^static const unsigned char eg_rate_select[16+64+16]={	\/* Envelope Generator rates (16 + 64 rates + 16 RKS) *\/$/;"	v	file:
eg_rate_shift	src/hardware/fmopl.cpp	/^static const unsigned char eg_rate_shift[16+64+16]={	\/* Envelope Generator counter shifts (16 + 64 rates + 16 RKS) *\/$/;"	v	file:
eg_rate_shift	src/hardware/ymf262.cpp	/^static const unsigned char eg_rate_shift[16+64+16]={	\/* Envelope Generator counter shifts (16 + 64 rates + 16 RKS) *\/$/;"	v	file:
eg_sel_ar	src/hardware/fmopl.cpp	/^	UINT8	eg_sel_ar;	\/* (attack state)				*\/$/;"	m	struct:__anon153	file:
eg_sel_ar	src/hardware/ymf262.cpp	/^	UINT8	eg_sel_ar;	\/* (attack state)				*\/$/;"	m	struct:__anon190	file:
eg_sel_dr	src/hardware/fmopl.cpp	/^	UINT8	eg_sel_dr;	\/* (decay state)				*\/$/;"	m	struct:__anon153	file:
eg_sel_dr	src/hardware/ymf262.cpp	/^	UINT8	eg_sel_dr;	\/* (decay state)				*\/$/;"	m	struct:__anon190	file:
eg_sel_rr	src/hardware/fmopl.cpp	/^	UINT8	eg_sel_rr;	\/* (release state)				*\/$/;"	m	struct:__anon153	file:
eg_sel_rr	src/hardware/ymf262.cpp	/^	UINT8	eg_sel_rr;	\/* (release state)				*\/$/;"	m	struct:__anon190	file:
eg_sh_ar	src/hardware/fmopl.cpp	/^	UINT8	eg_sh_ar;	\/* (attack state)				*\/$/;"	m	struct:__anon153	file:
eg_sh_ar	src/hardware/ymf262.cpp	/^	UINT8	eg_sh_ar;	\/* (attack state)				*\/$/;"	m	struct:__anon190	file:
eg_sh_dr	src/hardware/fmopl.cpp	/^	UINT8	eg_sh_dr;	\/* (decay state)				*\/$/;"	m	struct:__anon153	file:
eg_sh_dr	src/hardware/ymf262.cpp	/^	UINT8	eg_sh_dr;	\/* (decay state)				*\/$/;"	m	struct:__anon190	file:
eg_sh_rr	src/hardware/fmopl.cpp	/^	UINT8	eg_sh_rr;	\/* (release state)				*\/$/;"	m	struct:__anon153	file:
eg_sh_rr	src/hardware/ymf262.cpp	/^	UINT8	eg_sh_rr;	\/* (release state)				*\/$/;"	m	struct:__anon190	file:
eg_timer	src/hardware/fmopl.cpp	/^	UINT32	eg_timer;				\/* global envelope generator counter works at frequency = chipclock\/72 *\/$/;"	m	struct:fm_opl_f	file:
eg_timer	src/hardware/ymf262.cpp	/^	UINT32	eg_timer;				\/* global envelope generator counter works at frequency = chipclock\/288 (288=8*36) *\/$/;"	m	struct:__anon192	file:
eg_timer_add	src/hardware/fmopl.cpp	/^	UINT32	eg_timer_add;			\/* step of eg_timer						*\/$/;"	m	struct:fm_opl_f	file:
eg_timer_add	src/hardware/ymf262.cpp	/^	UINT32	eg_timer_add;			\/* step of eg_timer						*\/$/;"	m	struct:__anon192	file:
eg_timer_overflow	src/hardware/fmopl.cpp	/^	UINT32	eg_timer_overflow;		\/* envelope generator timer overlfows every 1 sample (on real chip) *\/$/;"	m	struct:fm_opl_f	file:
eg_timer_overflow	src/hardware/ymf262.cpp	/^	UINT32	eg_timer_overflow;		\/* envelope generator timer overlfows every 1 sample (on real chip) *\/$/;"	m	struct:__anon192	file:
eg_type	src/hardware/fmopl.cpp	/^	UINT8	eg_type;	\/* percussive\/non-percussive mode *\/$/;"	m	struct:__anon153	file:
eg_type	src/hardware/ymf262.cpp	/^	UINT8	eg_type;	\/* percussive\/non-percussive mode *\/$/;"	m	struct:__anon190	file:
ega_palette	src/ints/int10_modes.cpp	/^static Bit8u ega_palette[64][3]=$/;"	v	file:
eip	include/cpu.h	/^		Bitu cs,eip;$/;"	m	struct:CPUBlock::__anon8
eip	include/cpu.h	/^    Bit32u eip;                  \/* The instruction pointer *\/$/;"	m	struct:TSS_32
eip	src/cpu/paging.cpp	/^	Bitu eip;$/;"	m	struct:PF_Entry	file:
eip	src/debug/debug.cpp	/^	Bit32u eax,ebx,ecx,edx,esi,edi,ebp,esp,eip;$/;"	m	struct:__anon110	file:
eip	src/debug/debug.cpp	/^	Bit32u eip;$/;"	m	struct:TLogInst	file:
eip	src/hardware/iohandler.cpp	/^	Bitu eip;$/;"	m	struct:IOF_Entry	file:
eip_change	src/cpu/core_dyn_x86/decoder.h	/^	Bit32u eip_change;$/;"	m	struct:__anon91
eip_change	src/cpu/core_dynrec/decoder_basic.h	/^	Bit32u eip_change;$/;"	m	struct:__anon70
eip_change	src/cpu/core_dynrec/save/decoder_basic.h	/^	Bit32u eip_change;$/;"	m	struct:__anon80
eline	include/vga.h	/^		Bit8u sline,eline;$/;"	m	struct:__anon38::__anon40
emm_handles	src/ints/ems.cpp	/^static EMM_Handle emm_handles[EMM_MAX_HANDLES];$/;"	v	file:
emm_mappings	src/ints/ems.cpp	/^static EMM_Mapping emm_mappings[EMM_MAX_PHYS];$/;"	v	file:
emm_segmentmappings	src/ints/ems.cpp	/^static EMM_Mapping emm_segmentmappings[0x40];$/;"	v	file:
empty	src/hardware/vga_memory.cpp	/^	VGA_Empty_Handler			empty;$/;"	m	struct:vg	file:
empty_char	src/shell/shell_cmds.cpp	/^static char empty_char = 0;$/;"	v	file:
empty_sel	src/debug/debug.cpp	/^static char empty_sel[] = { ' ',' ',0 };$/;"	v	file:
empty_string	src/shell/shell_cmds.cpp	/^static char* empty_string = &empty_char;$/;"	v	file:
ems_board_mapping	src/hardware/dma.cpp	/^Bit32u ems_board_mapping[LINK_START];$/;"	v
ems_handle	src/ints/ems.cpp	/^	Bit16u ems_handle;$/;"	m	struct:__anon195	file:
emsnameseg	src/ints/ems.cpp	/^	static Bit16u emsnameseg;$/;"	m	class:EMS	file:
emsnameseg	src/ints/ems.cpp	/^Bit16u EMS::emsnameseg = 0;$/;"	m	class:EMS	file:
emulated_axes	src/gui/sdl_mapper.cpp	/^	Bitu stick,emustick,axes,buttons,hats,emulated_axes,emulated_buttons,emulated_hats;$/;"	m	class:CStickBindGroup	file:
emulated_buttons	src/gui/sdl_mapper.cpp	/^	Bitu stick,emustick,axes,buttons,hats,emulated_axes,emulated_buttons,emulated_hats;$/;"	m	class:CStickBindGroup	file:
emulated_hats	src/gui/sdl_mapper.cpp	/^	Bitu stick,emustick,axes,buttons,hats,emulated_axes,emulated_buttons,emulated_hats;$/;"	m	class:CStickBindGroup	file:
emustick	src/gui/sdl_mapper.cpp	/^	Bitu stick,emustick,axes,buttons,hats,emulated_axes,emulated_buttons,emulated_hats;$/;"	m	class:CStickBindGroup	file:
enable_bits	include/vga.h	/^	Bit8u enable_bits;$/;"	m	struct:__anon45
enable_set_reset	include/vga.h	/^	Bit8u enable_set_reset;$/;"	m	struct:__anon51
enabled	include/mixer.h	/^	bool enabled;$/;"	m	class:MixerChannel
enabled	include/paging.h	/^	bool		enabled;$/;"	m	struct:PagingBlock
enabled	include/vga.h	/^		Bit8u enabled;$/;"	m	struct:__anon38::__anon40
enabled	include/vga.h	/^	Bit8u enabled;$/;"	m	struct:__anon49
enabled	src/debug/debug_gui.cpp	/^	bool enabled;$/;"	m	struct:_LogGroup	file:
enabled	src/dos/dev_con.h	/^		bool enabled;$/;"	m	struct:device_CON::ansi
enabled	src/gui/sdl_mapper.cpp	/^	bool enabled;$/;"	m	class:CButton	file:
enabled	src/hardware/adlib.h	/^	bool enabled, overflow, masked;$/;"	m	struct:Adlib::Timer
enabled	src/hardware/cmos.cpp	/^		bool enabled;$/;"	m	struct:__anon149::__anon150	file:
enabled	src/hardware/joystick.cpp	/^	bool enabled;$/;"	m	struct:JoyStick	file:
enabled	src/hardware/memory.cpp	/^		bool enabled;$/;"	m	struct:MemoryBlock::__anon164	file:
enabled	src/hardware/sblaster.cpp	/^		bool enabled;$/;"	m	struct:SB_INFO::__anon176	file:
enabled	src/hardware/tandy_sound.cpp	/^	bool enabled;$/;"	m	struct:__anon183	file:
enabled	src/ints/ems.cpp	/^	bool enabled;$/;"	m	struct:__anon195	file:
enabled	src/ints/mouse.cpp	/^	bool enabled;$/;"	m	struct:__anon199	file:
encode_table_owner	src/libs/zmbv/zmbv_vfw.cpp	/^CodecInst *encode_table_owner, *decode_table_owner;$/;"	v
end	src/cpu/core_dyn_x86/cache.h	/^		Bit16u start,end;				\/\/Where the page is the original code$/;"	m	struct:CacheBlock::__anon83
end	src/cpu/core_dynrec/cache.h	/^		Bit16u start,end;		\/\/ where in the page is the original code$/;"	m	struct:CacheBlockDynRec::__anon62
end	src/cpu/core_dynrec/save/cache.h	/^		Bit16u start,end;		\/\/ where in the page is the original code$/;"	m	struct:CacheBlockDynRec::__anon72
endSector	src/dos/drives.h	/^		Bit32u endSector;$/;"	m	struct:isoDrive::DirIterator
end_horizontal_blanking	include/vga.h	/^	Bit8u end_horizontal_blanking;$/;"	m	struct:__anon50
end_horizontal_retrace	include/vga.h	/^	Bit8u end_horizontal_retrace;$/;"	m	struct:__anon50
end_page	src/hardware/memory.cpp	/^		Bitu		end_page;$/;"	m	struct:MemoryBlock::__anon163	file:
end_sel	src/libs/gui_tk/gui_tk.h	/^	Size start_sel, end_sel;$/;"	m	class:GUI::Input
end_vertical_blanking	include/vga.h	/^	Bit8u end_vertical_blanking;$/;"	m	struct:__anon50
endchs	src/dos/drives.h	/^		Bit8u endchs[3];$/;"	m	struct:partTable::__anon118
ended	src/hardware/cmos.cpp	/^		double ended;$/;"	m	struct:__anon149::__anon151	file:
entries	include/dos_inc.h	/^	struct entries {$/;"	s	union:bootSector
entries	include/paging.h	/^		Bit32u entries[PAGING_LINKS];$/;"	m	struct:PagingBlock::__anon27
entries	src/cpu/paging.cpp	/^	PF_Entry entries[PF_QUEUESIZE];$/;"	m	struct:__anon109	file:
entries	src/hardware/iohandler.cpp	/^	IOF_Entry entries[IOF_QUEUESIZE];$/;"	m	struct:__anon160	file:
entries	src/hardware/pcspeaker.cpp	/^	DelayEntry entries[SPKR_ENTRIES];$/;"	m	struct:__anon166	file:
entries	src/hardware/pic.cpp	/^	PICEntry entries[PIC_QUEUESIZE];$/;"	m	struct:__anon167	file:
entry	src/cpu/core_full/support.h	/^	Bitu entry;$/;"	m	struct:FullData
entry	src/gui/sdl_mapper.cpp	/^	char entry[16];$/;"	m	class:CEvent	file:
entry	src/gui/sdl_mapper.cpp	/^	const char * entry;$/;"	m	struct:KeyBlock	file:
entryname	src/dos/drives.h	/^	Bit8u entryname[11];$/;"	m	struct:direntry
entrysize	src/dos/drives.h	/^	Bit32u entrysize;$/;"	m	struct:direntry
env	include/dos_inc.h	/^	Bit16u env;$/;"	m	struct:DOS_Block
env_bits	src/hardware/gameblaster.cpp	/^	int env_bits[2];				\/* non zero = 3 bits resolution *\/$/;"	m	struct:SAA1099	file:
env_clock	src/hardware/gameblaster.cpp	/^	int env_clock[2];				\/* envelope clock mode (non-zero external) *\/$/;"	m	struct:SAA1099	file:
env_enable	src/hardware/gameblaster.cpp	/^	int env_enable[2];				\/* envelope generators enable *\/$/;"	m	struct:SAA1099	file:
env_mode	src/hardware/gameblaster.cpp	/^	int env_mode[2];				\/* envelope generators mode *\/$/;"	m	struct:SAA1099	file:
env_reverse_right	src/hardware/gameblaster.cpp	/^	int env_reverse_right[2];		\/* envelope reversed for right channel *\/$/;"	m	struct:SAA1099	file:
env_step	src/hardware/gameblaster.cpp	/^    int env_step[2];                \/* current envelope step *\/$/;"	m	struct:SAA1099	file:
envelope	src/hardware/gameblaster.cpp	/^	int envelope[2];		\/* envelope (0x00..0x0f or 0x10 == off) *\/$/;"	m	struct:saa1099_channel	file:
envelope	src/hardware/gameblaster.cpp	/^static UINT8 envelope[8][64] = {$/;"	v	file:
environment	include/dos_inc.h	/^		Bit16u	environment;		\/* Segment of evironment table *\/$/;"	m	struct:DOS_PSP::sPSP
envseg	include/dos_inc.h	/^		Bit16u envseg;$/;"	m	struct:DOS_ParamBlock::sExec
equals	src/misc/fixed.cpp	/^bool FixedPoint::equals(FixedPoint b)$/;"	f	class:FixedPoint
error	include/cpu.h	/^		Bitu which,error;$/;"	m	struct:CPUBlock::__anon9
error_class	include/dos_inc.h	/^		Bit8u error_class;		\/* 0x07 class of last error*\/$/;"	m	struct:DOS_SDA::sSDA
errorcode	include/dos_inc.h	/^	Bit16u errorcode;$/;"	m	struct:DOS_Block
errormsg_pending	include/serialport.h	/^	bool errormsg_pending;$/;"	m	class:CSerial
es	include/cpu.h	/^    Bit16u es;                   \/* The extra selector *\/$/;"	m	struct:TSS_16
es	include/cpu.h	/^    Bit32u es;                   \/* The extra selector *\/$/;"	m	struct:TSS_32
es	include/regs.h	/^enum SegNames { es=0,cs,ss,ds,fs,gs};$/;"	e	enum:SegNames
es	src/cpu/core_normal/prefix_none.h	/^		DO_PREFIX_SEG(es);break;$/;"	v
es	src/cpu/core_normal/verysimple_prefix_none.h	/^		DO_PREFIX_SEG(es);break;$/;"	v
esc	src/dos/dev_con.h	/^		bool esc;$/;"	m	struct:device_CON::ansi
esi	include/cpu.h	/^    Bit32u esp, ebp, esi, edi;   \/* The special purpose registers *\/$/;"	m	struct:TSS_32
esi	src/debug/debug.cpp	/^	Bit32u eax,ebx,ecx,edx,esi,edi,ebp,esp,eip;$/;"	m	struct:__anon110	file:
esi	src/debug/debug.cpp	/^	Bit32u esi;$/;"	m	struct:TLogInst	file:
esp	include/cpu.h	/^    Bit32u esp, ebp, esi, edi;   \/* The special purpose registers *\/$/;"	m	struct:TSS_32
esp	src/debug/debug.cpp	/^	Bit32u eax,ebx,ecx,edx,esi,edi,ebp,esp,eip;$/;"	m	struct:__anon110	file:
esp	src/debug/debug.cpp	/^	Bit32u esp;$/;"	m	struct:TLogInst	file:
esp0	include/cpu.h	/^	Bit32u esp0;		         \/* The CK stack pointer *\/$/;"	m	struct:TSS_32
esp1	include/cpu.h	/^	Bit32u esp1;                 \/* The parent KL stack pointer *\/$/;"	m	struct:TSS_32
esp2	include/cpu.h	/^	Bit32u esp2;                 \/* Unused *\/$/;"	m	struct:TSS_32
et3k	src/hardware/vga_tseng.cpp	/^static SVGA_ET3K_DATA et3k = { 0,0,0,0,0,0,0,0,0,0, 0,0, 0,0, {0,0,0,0,0,0,0,0}, 0 };$/;"	v	file:
et4k	src/hardware/vga_tseng.cpp	/^static SVGA_ET4K_DATA et4k = { 1,0,0,0,0,0,0,0,0, 0,0, 0,0,$/;"	v	file:
ev	src/gui/midi_alsa.h	/^	snd_seq_event_t ev;$/;"	m	class:MidiHandler_alsa
event	src/gui/sdl_mapper.cpp	/^	CEvent * event;$/;"	m	class:CBind	file:
event	src/gui/sdl_mapper.cpp	/^	CEvent * event;$/;"	m	class:CEventButton	file:
event	src/libs/gui_tk/gui_tk.cpp	/^	SDL_Event event;$/;"	m	namespace:GUI	file:
event	src/libs/gui_tk/gui_tk.h	/^	bool event(const SDL_Event *ev) { return event(*ev); }$/;"	f	class:GUI::ScreenSDL
event_queue	src/ints/mouse.cpp	/^	button_event event_queue[QUEUE_SIZE];$/;"	m	struct:__anon199	file:
event_title	src/gui/sdl_mapper.cpp	/^	CCaptionButton *  event_title;$/;"	m	struct:__anon145	file:
eventend	src/gui/sdl_mapper.cpp	/^	const char * eventend;$/;"	m	struct:__anon146	file:
events	src/gui/sdl_mapper.cpp	/^static std::vector<CEvent *> events;$/;"	v	file:
events	src/ints/mouse.cpp	/^	Bit8u events;\/\/Increase if QUEUE_SIZE >255 (currently 32)$/;"	m	struct:__anon199	file:
ex	src/libs/gui_tk/gui_tk.cpp	/^	(new GUI::Button(frame,200,20,"1"))->addActionHandler(&ex);$/;"	m	namespace:GUI	file:
ex	src/libs/gui_tk/gui_tk.cpp	/^	(new GUI::Button(frame,235,20,"2"))->addActionHandler(&ex);$/;"	m	namespace:GUI	file:
ex	src/libs/gui_tk/gui_tk.cpp	/^	(new GUI::Input(frame,16,55,150))->addActionHandler(&ex);$/;"	m	namespace:GUI	file:
ex	src/libs/gui_tk/gui_tk.cpp	/^	} ex;$/;"	m	namespace:GUI	typeref:struct:GUI::quit	file:
ex_hor_overflow	include/vga.h	/^	Bit8u ex_hor_overflow;$/;"	m	struct:__anon42
ex_ver_overflow	include/vga.h	/^	Bit8u ex_ver_overflow;$/;"	m	struct:__anon42
exc_mask	src/fpu/fpu_instructions_x86.h	/^const Bit16u exc_mask=0x7f00;$/;"	v
exc_mask	src/fpu/fpu_instructions_x86.h	/^const Bit16u exc_mask=0xffbf;$/;"	v
exception	include/cpu.h	/^	} exception;$/;"	m	struct:CPUBlock	typeref:struct:CPUBlock::__anon9
exception	src/cpu/core_dyn_x86/decoder.h	/^enum save_info_type {exception, cycle_check, normal, fpu_restore};$/;"	e	enum:save_info_type
exception	src/cpu/core_dynrec/decoder_basic.h	/^enum save_info_type {exception, cycle_check, string_break};$/;"	e	enum:save_info_type
exception	src/cpu/core_dynrec/save/decoder_basic.h	/^enum save_info_type {exception, cycle_check, string_break};$/;"	e	enum:save_info_type
exe_block	src/misc/programs.cpp	/^static Bit8u exe_block[]={$/;"	v	file:
exe_ext	src/shell/shell_misc.cpp	/^static const char * exe_ext=".EXE";$/;"	v	file:
exec	include/dos_inc.h	/^	sExec exec;$/;"	m	class:DOS_ParamBlock
execscsicmd	src/dos/cdrom_aspi_win32.cpp	/^	SRB_ExecSCSICmd     execscsicmd;$/;"	m	union:__anon114	file:
execute	src/libs/gui_tk/gui_tk.h	/^	virtual void execute() {$/;"	f	class:GUI::Checkbox
execute	src/libs/gui_tk/gui_tk.h	/^	void execute() {$/;"	f	class:GUI::Menu
executeAction	src/libs/gui_tk/gui_tk.h	/^	void executeAction() { executeAction(name); }$/;"	f	class:GUI::ActionEventSource
executeAction	src/libs/gui_tk/gui_tk.h	/^	void executeAction(const String &arg) {$/;"	f	class:GUI::ActionEventSource
exit	include/dos_inc.h	/^		Bit8u	exit[2];			\/* CP\/M-like exit poimt *\/$/;"	m	struct:DOS_PSP::sPSP
exit	include/shell.h	/^	bool exit;$/;"	m	class:DOS_Shell
exit	src/gui/sdl_mapper.cpp	/^	CBindButton * exit;   $/;"	m	struct:__anon145	file:
exit	src/gui/sdl_mapper.cpp	/^	bool exit;$/;"	m	struct:CMapper	file:
exitLoop	src/debug/debug.cpp	/^bool	exitLoop	= false;$/;"	v
exp	src/misc/fixed.cpp	/^FixedPoint FixedPoint::exp(void)$/;"	f	class:FixedPoint
expx	src/misc/fixed.cpp	/^FixedPoint expx(FixedPoint fixedVal)$/;"	f
ext	include/dos_inc.h	/^		Bit8u ext[3];			\/* Space padded extension *\/$/;"	m	struct:DOS_FCB::sFCB
extAttrLength	src/dos/drives.h	/^	Bit8u extAttrLength;$/;"	m	struct:isoDirEntry
ext_mem_ctrl	include/vga.h	/^	Bit8u ext_mem_ctrl;$/;"	m	struct:__anon42
extended	include/dos_inc.h	/^	bool extended;$/;"	m	class:DOS_FCB
extended	src/hardware/ymf262.cpp	/^	UINT8	extended;	\/* set to 1 if this channel forms up a 4op channel with another channel(only used by first of pair of channels, ie 0,1,2 and 9,10,11) *\/$/;"	m	struct:__anon191	file:
extendedSize	include/dos_inc.h	/^		Bit16u	extendedSize;		\/\/  0x45 size of extended memory$/;"	m	struct:DOS_InfoBlock::sDIB
extended_break_flag	include/dos_inc.h	/^		Bit8u extended_break_flag; 	\/* 0x17 extended break flag *\/$/;"	m	struct:DOS_SDA::sSDA
extended_error_code	include/dos_inc.h	/^		Bit16u extended_error_code;	\/* 0x04 extended error code of last error *\/$/;"	m	struct:DOS_SDA::sSDA
extended_ram	include/vga.h	/^	Bit8u extended_ram;$/;"	m	struct:__anon47
extensionsEnabled	src/hardware/vga_tseng.cpp	/^	Bit8u extensionsEnabled;$/;"	m	struct:__anon188	file:
extentLocationL	src/dos/drives.h	/^	Bit32u extentLocationL;$/;"	m	struct:isoDirEntry
extentLocationM	src/dos/drives.h	/^	Bit32u extentLocationM;$/;"	m	struct:isoDirEntry
extra	src/cpu/core_full/support.h	/^	Bit8u load,op,save,extra;$/;"	m	struct:OpCode
extra_info	include/dos_inc.h	/^		Bit8u extra_info;$/;"	m	struct:DOS_FCB::sFCB
extra_regs	src/cpu/core_dyn_x86.cpp	/^} extra_regs;$/;"	v	typeref:struct:__anon94	file:
extrabytes	src/dos/dos_execute.cpp	/^	Bit16u extrabytes;					\/* Bytes on the last page *\/$/;"	m	struct:EXE_Header	file:
extract_codepage	src/dos/dos_keyboard_layout.cpp	/^Bit16u keyboard_layout::extract_codepage(const char* keyboard_file_name) {$/;"	f	class:keyboard_layout
f0	src/debug/debug_disasm.cpp	/^static char const *f0[]     = { 0, 0, 0, 0, 0, 0, 0, 0};$/;"	v	file:
f1	src/hardware/serialport/softmodem.h	/^		double f1, f2;$/;"	m	struct:CSerialModem::__anon182
f2	src/hardware/serialport/softmodem.h	/^		double f1, f2;$/;"	m	struct:CSerialModem::__anon182
fSuccess	src/hardware/serialport/directserial_os2.h	/^	BOOL fSuccess;$/;"	m	class:CDirectSerial
fSuccess	src/hardware/serialport/directserial_win32.h	/^	BOOL fSuccess;$/;"	m	class:CDirectSerial
false	src/cpu/core_normal/prefix_none.h	/^		DO_PREFIX_REP(false);	$/;"	v
false	src/cpu/core_normal/verysimple_prefix_none.h	/^		DO_PREFIX_REP(false);	$/;"	v
far_call	include/dos_inc.h	/^		Bit8u	far_call;			\/* far call opcode *\/$/;"	m	struct:DOS_PSP::sPSP
fastmem	include/vga.h	/^	Bit8u* fastmem;  \/* memory for fast (usually 16-color) rendering, always twice as big as vmemsize *\/$/;"	m	struct:__anon59
fastmem_orgptr	include/vga.h	/^	Bit8u* fastmem_orgptr;$/;"	m	struct:__anon59
fatDrive	src/dos/drive_fat.cpp	/^fatDrive::fatDrive(const char *sysFilename, Bit32u bytesector, Bit32u cylsector, Bit32u headscyl, Bit32u cylinders, Bit32u startSector) {$/;"	f	class:fatDrive
fatDrive	src/dos/drives.h	/^class fatDrive : public DOS_Drive {$/;"	c
fatFile	src/dos/drive_fat.cpp	/^class fatFile : public DOS_File {$/;"	c	file:
fatFile	src/dos/drive_fat.cpp	/^fatFile::fatFile(const char* \/*name*\/, Bit32u startCluster, Bit32u fileLen, fatDrive *useDrive) {$/;"	f	class:fatFile
fatSectBuffer	src/dos/drive_fat.cpp	/^Bit8u fatSectBuffer[1024];$/;"	v
fatcopies	src/dos/drives.h	/^	Bit8u  fatcopies;$/;"	m	struct:bootstrap
fattype	src/dos/drives.h	/^	Bit8u fattype;$/;"	m	class:fatDrive
fc	src/hardware/fmopl.cpp	/^	UINT32  fc;			\/* Freq. Increment base			*\/$/;"	m	struct:__anon154	file:
fc	src/hardware/ymf262.cpp	/^	UINT32	fc;			\/* Freq. Increment base			*\/$/;"	m	struct:__anon191	file:
fcb1	include/dos_inc.h	/^		Bit8u	fcb1[16];			\/* first FCB *\/$/;"	m	struct:DOS_PSP::sPSP
fcb1	include/dos_inc.h	/^		RealPt fcb1;$/;"	m	struct:DOS_ParamBlock::sExec
fcb2	include/dos_inc.h	/^		Bit8u	fcb2[16];			\/* second FCB *\/$/;"	m	struct:DOS_PSP::sPSP
fcb2	include/dos_inc.h	/^		RealPt fcb2;$/;"	m	struct:DOS_ParamBlock::sExec
fcbTable	include/dos_inc.h	/^		RealPt	fcbTable;		\/\/  0x1a pointer to system FCB table$/;"	m	struct:DOS_InfoBlock::sDIB
fct_ptr	src/cpu/core_dynrec/decoder_basic.h	/^	void* fct_ptr;$/;"	m	struct:__anon71
fct_ptr	src/cpu/core_dynrec/save/decoder_basic.h	/^	void* fct_ptr;$/;"	m	struct:__anon81
fhandle	src/dos/drive_local.cpp	/^	FILE * fhandle;$/;"	m	class:localFile	file:
fifo_warn	include/serialport.h	/^	bool fifo_warn;$/;"	m	class:CSerial
file	src/dos/cdrom.h	/^		TrackFile *file;$/;"	m	struct:CDROM_Interface_Image::Track
file	src/dos/cdrom.h	/^		std::ifstream *file;$/;"	m	class:CDROM_Interface_Image::BinaryFile
fileBegin	src/dos/drive_iso.cpp	/^	Bit32u fileBegin;$/;"	m	class:isoFile	file:
fileEnd	src/dos/drive_iso.cpp	/^	Bit32u fileEnd;$/;"	m	class:isoFile	file:
fileFlags	src/dos/drives.h	/^	Bit8u fileFlags;$/;"	m	struct:isoDirEntry
fileHandle	src/hardware/serialport/directserial_posix.h	/^	int fileHandle;$/;"	m	class:CDirectSerial
fileIdentLength	src/dos/drives.h	/^	Bit8u fileIdentLength;$/;"	m	struct:isoDirEntry
fileInfoCounter	src/dos/drive_cache.cpp	/^int fileInfoCounter = 0;$/;"	v
fileList	include/dos_system.h	/^		std::vector<CFileInfo*>	fileList;$/;"	m	class:DOS_Drive_Cache::CFileInfo
fileName	src/dos/drives.h	/^	char fileName[CROSS_LEN];$/;"	m	class:isoDrive
filePos	src/dos/drive_iso.cpp	/^	Bit32u filePos;$/;"	m	class:isoFile	file:
fileUnitSize	src/dos/drives.h	/^	Bit8u fileUnitSize;$/;"	m	struct:isoDirEntry
file_data	src/dos/drive_virtual.cpp	/^	Bit8u * file_data;$/;"	m	class:Virtual_File	file:
file_handle	include/dos_inc.h	/^		Bit8u file_handle;$/;"	m	struct:DOS_FCB::sFCB
file_handle	include/shell.h	/^	Bit16u file_handle;$/;"	m	class:BatchFile
file_name	include/programs.h	/^	std::string file_name;$/;"	m	class:CommandLine
file_pos	src/dos/drive_virtual.cpp	/^	Bit32u file_pos;$/;"	m	class:Virtual_File	file:
file_size	src/dos/drive_virtual.cpp	/^	Bit32u file_size;$/;"	m	class:Virtual_File	file:
file_table	include/dos_inc.h	/^		RealPt	file_table;			\/* Pointer to File Table PSP:0x18 *\/$/;"	m	struct:DOS_PSP::sPSP
filelength	src/dos/drive_fat.cpp	/^	Bit32u filelength;$/;"	m	class:fatFile	file:
filename	include/dos_inc.h	/^		Bit8u filename[8];		\/* Space padded name *\/$/;"	m	struct:DOS_FCB::sFCB
filename	include/dos_inc.h	/^		Bit8u filename[8];$/;"	m	struct:DOS_MCB::sMCB
filename	src/gui/sdl_mapper.cpp	/^	std::string filename;$/;"	m	struct:CMapper	file:
filename	src/shell/shell_cmds.cpp	/^	std::string filename;$/;"	m	struct:copysource	file:
filenamechar	include/dos_inc.h	/^		RealPt filenamechar;$/;"	m	struct:DOS_Block::__anon15
files	include/dos_inc.h	/^		Bit8u	files[20];			\/* File Table - 0xff is unused *\/$/;"	m	struct:DOS_PSP::sPSP
filesize	include/dos_inc.h	/^		Bit32u filesize;		\/* File Size *\/$/;"	m	struct:DOS_FCB::sFCB
fill	include/cpu.h	/^		Bit32u fill[2];$/;"	m	union:Descriptor::__anon5
fill	include/dos_inc.h	/^		Bit8u fill[2];			\/* 0x18 flag: code page switching || flag: copy of previous byte in case of INT 24 Abort*\/$/;"	m	struct:DOS_SDA::sSDA
fill	include/dos_inc.h	/^		Bit8u fill[4];$/;"	m	struct:DOS_DTA::sDTA
fill	src/libs/gui_tk/gui_tk.cpp	/^void Drawable::fill()$/;"	f	class:GUI::Drawable
fill	src/libs/gui_tk/gui_tk.h	/^	void fill(int x, int y) { gotoXY(x,y); fill(); };$/;"	f	class:GUI::Drawable
fillCircle	src/libs/gui_tk/gui_tk.cpp	/^void Drawable::fillCircle(int d)$/;"	f	class:GUI::Drawable
fillCircle	src/libs/gui_tk/gui_tk.h	/^	void fillCircle(int x, int y, int d) { gotoXY(x, y); fillCircle(d); };$/;"	f	class:GUI::Drawable
fillRect	src/libs/gui_tk/gui_tk.cpp	/^void Drawable::fillRect(int w, int h)$/;"	f	class:GUI::Drawable
fillRect	src/libs/gui_tk/gui_tk.h	/^	void fillRect(int x, int y, int w, int h) { gotoXY(x, y); fillRect(w, h); };$/;"	f	class:GUI::Drawable
fill_1	include/dos_inc.h	/^		Bit8u	fill_1;				\/* single char fill *\/$/;"	m	struct:DOS_PSP::sPSP
fill_2	include/dos_inc.h	/^		Bit8u	fill_2[14];			\/* Lot's of unused stuff i can't care aboue *\/$/;"	m	struct:DOS_PSP::sPSP
fill_3	include/dos_inc.h	/^		Bit8u	fill_3[9];			\/* This has some blocks with FCB info *\/$/;"	m	struct:DOS_PSP::sPSP
fill_4	include/dos_inc.h	/^		Bit8u	fill_4[4];			\/* unused *\/$/;"	m	struct:DOS_PSP::sPSP
filtered	src/hardware/sblaster.cpp	/^		bool filtered;$/;"	m	struct:SB_INFO::__anon176	file:
findFileData	src/platform/visualc/dirent.h	/^    WIN32_FIND_DATA findFileData;$/;"	m	struct:my_dir
first	include/render.h	/^	Bitu first;$/;"	m	struct:__anon30
first	src/cpu/core_dyn_x86/cache.h	/^		CacheBlock * first;$/;"	m	struct:__anon87::__anon88
first	src/cpu/core_dyn_x86/decoder.h	/^		Bitu first;$/;"	m	struct:DynDecode::__anon89
first	src/cpu/core_dynrec/cache.h	/^		CacheBlockDynRec * first;		\/\/ the first cache block in the list$/;"	m	struct:__anon66::__anon67
first	src/cpu/core_dynrec/decoder_basic.h	/^		Bitu first;		\/\/ page number $/;"	m	struct:DynDecode::__anon68
first	src/cpu/core_dynrec/save/cache.h	/^		CacheBlockDynRec * first;		\/\/ the first cache block in the list$/;"	m	struct:__anon76::__anon77
first	src/cpu/core_dynrec/save/decoder_basic.h	/^		Bitu first;		\/\/ page number $/;"	m	struct:DynDecode::__anon78
first	src/cpu/paging.cpp	/^bool first=false;$/;"	v
firstCluster	src/dos/drive_fat.cpp	/^	Bit32u firstCluster;$/;"	m	class:fatFile	file:
firstDPB	include/dos_inc.h	/^		RealPt	firstDPB;		\/\/  0x00 first drive parameter block$/;"	m	struct:DOS_InfoBlock::sDIB
firstDataSector	src/dos/drives.h	/^	Bit32u firstDataSector;$/;"	m	class:fatDrive
firstFileTable	include/dos_inc.h	/^		RealPt	firstFileTable;		\/\/  0x04 first system file table$/;"	m	struct:DOS_InfoBlock::sDIB
firstInstSize	src/debug/debug.cpp	/^	Bit16u  firstInstSize;$/;"	m	struct:SCodeViewData	file:
firstMCB	include/dos_inc.h	/^		Bit16u	firstMCB;		\/\/ -0x02 first memory control block$/;"	m	struct:DOS_InfoBlock::sDIB
firstMCB	include/dos_inc.h	/^	Bit16u firstMCB;$/;"	m	struct:DOS_Block
firstMouseUp	src/libs/gui_tk/gui_tk.h	/^	bool firstMouseUp;$/;"	m	class:GUI::Menu
firstRootDirSect	src/dos/drives.h	/^	Bit32u firstRootDirSect;$/;"	m	class:fatDrive
firstTime	src/platform/visualc/dirent.h	/^    BOOLEAN         firstTime;$/;"	m	struct:my_dir
first_changed	include/vga.h	/^	Bitu first_changed;$/;"	m	struct:__anon53
first_file	src/dos/drive_virtual.cpp	/^static VFILE_Block * first_file;	$/;"	v	file:
first_shell	src/shell/shell.cpp	/^Program * first_shell = 0; $/;"	v
first_space	src/debug/debug_disasm.cpp	/^static int first_space = 1;$/;"	v	file:
firstmb	include/paging.h	/^	Bit32u		firstmb[LINK_START];$/;"	m	struct:PagingBlock
firstticker	src/hardware/pic.cpp	/^static TickerBlock * firstticker=0;$/;"	v	file:
flags	include/cpu.h	/^    Bit16u flags;                \/* The flags *\/$/;"	m	struct:TSS_16
flags	include/dos_system.h	/^	Bit32u flags;$/;"	m	class:DOS_File
flags	include/paging.h	/^	Bitu flags;$/;"	m	class:PageHandler
flags	include/regs.h	/^	Bitu flags;$/;"	m	struct:CPU_Regs
flags	include/shell.h	/^	Bit32u flags;									\/* Flags about the command *\/$/;"	m	struct:SHELL_Cmd
flags	src/cpu/core_dyn_x86.cpp	/^	Bitu flags;$/;"	m	struct:DynReg	file:
flags	src/gui/sdl_mapper.cpp	/^	Bitu mods,flags;$/;"	m	class:CBind	file:
flagsactive	src/cpu/core_dyn_x86/risc_x86.h	/^	bool flagsactive;$/;"	m	struct:__anon92
flipflop	include/dma.h	/^	bool flipflop;$/;"	m	class:DmaController
floating_point	src/debug/debug_disasm.cpp	/^static void floating_point(int e1)$/;"	f	file:
floatops	src/debug/debug_disasm.cpp	/^static const char *floatops[] = { \/* assumed " %EF" at end of each.  mod != 3 only *\/$/;"	v	file:
floor	src/misc/fixed.cpp	/^FixedPoint FixedPoint::floor(void)$/;"	f	class:FixedPoint
floorx	src/misc/fixed.cpp	/^FixedPoint floorx(FixedPoint fixedVal)$/;"	f
floppytype	include/bios_disk.h	/^	Bit8u floppytype;$/;"	m	class:imageDisk
flowcontrol	src/hardware/serialport/softmodem.h	/^	Bitu flowcontrol;$/;"	m	class:CSerialModem
fm	src/hardware/sblaster.cpp	/^		Bit8u dac[2],fm[2],cda[2],master[2],lin[2];$/;"	m	struct:SB_INFO::__anon176	file:
fm_opl_f	src/hardware/fmopl.cpp	/^typedef struct fm_opl_f {$/;"	s	file:
fn_tab	src/hardware/fmopl.cpp	/^	UINT32	fn_tab[1024];			\/* fnumber->increment counter	*\/$/;"	m	struct:fm_opl_f	file:
fn_tab	src/hardware/ymf262.cpp	/^	UINT32	fn_tab[1024];			\/* fnumber->increment counter	*\/$/;"	m	struct:__anon192	file:
focusChanged	src/libs/gui_tk/gui_tk.h	/^	virtual void focusChanged(bool gained) {$/;"	f	class:GUI::TransientWindow
focusChanged	src/libs/gui_tk/gui_tk.h	/^	virtual void focusChanged(bool gained) {$/;"	f	class:GUI::Window
font	include/vga.h	/^	Bit8u font[64*1024];$/;"	m	struct:__anon38
font	src/libs/gui_tk/gui_tk.h	/^	const Font *font;$/;"	m	class:GUI::Drawable
font	src/libs/gui_tk/gui_tk.h	/^	const Font *font;$/;"	m	class:GUI::Label
font_14	src/ints/int10.h	/^		RealPt font_14;$/;"	m	struct:__anon196::__anon197
font_14_alternate	src/ints/int10.h	/^		RealPt font_14_alternate;$/;"	m	struct:__anon196::__anon197
font_16	src/ints/int10.h	/^		RealPt font_16;$/;"	m	struct:__anon196::__anon197
font_16_alternate	src/ints/int10.h	/^		RealPt font_16_alternate;$/;"	m	struct:__anon196::__anon197
font_8_first	src/ints/int10.h	/^		RealPt font_8_first;$/;"	m	struct:__anon196::__anon197
font_8_second	src/ints/int10.h	/^		RealPt font_8_second;$/;"	m	struct:__anon196::__anon197
font_ega3_cpx	src/dos/dos_codepages.h	/^Bit8u font_ega3_cpx[5455] = {$/;"	v
font_ega5_cpx	src/dos/dos_codepages.h	/^Bit8u font_ega5_cpx[5720] = {$/;"	v
font_ega_cpx	src/dos/dos_codepages.h	/^Bit8u font_ega_cpx[6322] = {$/;"	v
font_tables	include/vga.h	/^	Bit8u * font_tables[2];$/;"	m	struct:__anon38
fop_10	src/debug/debug_disasm.cpp	/^static char const *fop_10[] = { "fnop", 0, 0, 0, 0, 0, 0, 0 };$/;"	v	file:
fop_11	src/debug/debug_disasm.cpp	/^static char const *fop_11[]  = { "*fst st,%GF" };$/;"	v	file:
fop_12	src/debug/debug_disasm.cpp	/^static char const *fop_12[] = { "fchs", "fabs", 0, 0, "ftst", "fxam", 0, 0 };$/;"	v	file:
fop_13	src/debug/debug_disasm.cpp	/^static char const *fop_13[] = { "fld1", "fldl2t", "fldl2e", "fldpi",$/;"	v	file:
fop_14	src/debug/debug_disasm.cpp	/^static char const *fop_14[] = { "f2xm1", "fyl2x", "fptan", "fpatan",$/;"	v	file:
fop_15	src/debug/debug_disasm.cpp	/^static char const *fop_15[] = { "fprem", "fyl2xp1", "fsqrt", "fsincos",$/;"	v	file:
fop_21	src/debug/debug_disasm.cpp	/^static char const *fop_21[] = { 0, "fucompp", 0, 0, 0, 0, 0, 0 };$/;"	v	file:
fop_28	src/debug/debug_disasm.cpp	/^static char const *fop_28[] = { "[fneni]", "[fndis]", "fclex", "finit", "[fnsetpm]", "[frstpm]", 0, 0 };$/;"	v	file:
fop_32	src/debug/debug_disasm.cpp	/^static char const *fop_32[] = { "*fadd %GF,st" };$/;"	v	file:
fop_33	src/debug/debug_disasm.cpp	/^static char const *fop_33[] = { "*fmul %GF,st" };$/;"	v	file:
fop_34	src/debug/debug_disasm.cpp	/^static char const *fop_34[] = { "*fcom %GF,st" };$/;"	v	file:
fop_35	src/debug/debug_disasm.cpp	/^static char const *fop_35[] = { "*fcomp %GF,st" };$/;"	v	file:
fop_36	src/debug/debug_disasm.cpp	/^static char const *fop_36[] = { "*fsubr %GF,st" };$/;"	v	file:
fop_37	src/debug/debug_disasm.cpp	/^static char const *fop_37[] = { "*fsub %GF,st" };$/;"	v	file:
fop_38	src/debug/debug_disasm.cpp	/^static char const *fop_38[] = { "*fdivr %GF,st" };$/;"	v	file:
fop_39	src/debug/debug_disasm.cpp	/^static char const *fop_39[] = { "*fdiv %GF,st" };$/;"	v	file:
fop_40	src/debug/debug_disasm.cpp	/^static char const *fop_40[] = { "*ffree %GF" };$/;"	v	file:
fop_41	src/debug/debug_disasm.cpp	/^static char const *fop_41[] = { "*fxch %GF" };$/;"	v	file:
fop_42	src/debug/debug_disasm.cpp	/^static char const *fop_42[] = { "*fst %GF" };$/;"	v	file:
fop_43	src/debug/debug_disasm.cpp	/^static char const *fop_43[] = { "*fstp %GF" };$/;"	v	file:
fop_44	src/debug/debug_disasm.cpp	/^static char const *fop_44[] = { "*fucom %GF" };$/;"	v	file:
fop_45	src/debug/debug_disasm.cpp	/^static char const *fop_45[] = { "*fucomp %GF" };$/;"	v	file:
fop_48	src/debug/debug_disasm.cpp	/^static char const *fop_48[] = { "*faddp %GF,st" };$/;"	v	file:
fop_49	src/debug/debug_disasm.cpp	/^static char const *fop_49[] = { "*fmulp %GF,st" };$/;"	v	file:
fop_50	src/debug/debug_disasm.cpp	/^static char const *fop_50[] = { "*fcomp %GF,st" };$/;"	v	file:
fop_51	src/debug/debug_disasm.cpp	/^static char const *fop_51[] = { 0, "fcompp", 0, 0, 0, 0, 0, 0 };$/;"	v	file:
fop_52	src/debug/debug_disasm.cpp	/^static char const *fop_52[] = { "*fsubrp %GF,st" };$/;"	v	file:
fop_53	src/debug/debug_disasm.cpp	/^static char const *fop_53[] = { "*fsubp %GF,st" };$/;"	v	file:
fop_54	src/debug/debug_disasm.cpp	/^static char const *fop_54[] = { "*fdivrp %GF,st" };$/;"	v	file:
fop_55	src/debug/debug_disasm.cpp	/^static char const *fop_55[] = { "*fdivp %GF,st" };$/;"	v	file:
fop_60	src/debug/debug_disasm.cpp	/^static char const *fop_60[] = { "fstsw ax", 0, 0, 0, 0, 0, 0, 0 };$/;"	v	file:
fop_8	src/debug/debug_disasm.cpp	/^static char const *fop_8[]  = { "*fld st,%GF" };$/;"	v	file:
fop_9	src/debug/debug_disasm.cpp	/^static char const *fop_9[]  = { "*fxch st,%GF" };$/;"	v	file:
forbidden_flags	src/dos/dos_keyboard_layout.cpp	/^		Bit16u required_flags,forbidden_flags;$/;"	m	struct:keyboard_layout::__anon115	file:
forbidden_userflags	src/dos/dos_keyboard_layout.cpp	/^		Bit16u required_userflags,forbidden_userflags;$/;"	m	struct:keyboard_layout::__anon115	file:
forceCD	src/dos/dos_mscdex.cpp	/^int forceCD				= -1;$/;"	v
forced	src/gui/sdlmain.h	/^		   bool forced;        		   $/;"	m	struct:SDL_Block::__anon141
forcedsize	src/gui/sdlmain.h	/^		   int forcedsize;$/;"	m	struct:SDL_Block::__anon141
forecolor	src/hardware/vga_xga.cpp	/^	Bit32u forecolor;$/;"	m	struct:XGAStatus	file:
foremix	src/hardware/vga_xga.cpp	/^	Bit16u foremix;$/;"	m	struct:XGAStatus	file:
forestack	include/vga.h	/^	Bit8u forestack[3];$/;"	m	struct:__anon41
format	src/libs/zmbv/zmbv.h	/^		unsigned char format;$/;"	m	struct:VideoCodec::KeyframeHeader
format	src/libs/zmbv/zmbv.h	/^	zmbv_format_t format;$/;"	m	class:VideoCodec
fp_addr	src/debug/debug_disasm.cpp	101;"	d	file:
fp_offset	src/debug/debug_disasm.cpp	100;"	d	file:
fp_segment	src/debug/debug_disasm.cpp	99;"	d	file:
fps	include/render.h	/^		float fps;$/;"	m	struct:__anon32::__anon33
fps	src/hardware/hardware.cpp	/^		float		fps;$/;"	m	struct:__anon155::__anon159	file:
fpu	src/fpu/fpu.cpp	/^FPU_rec fpu;$/;"	v
fpu_restore	src/cpu/core_dyn_x86/decoder.h	/^enum save_info_type {exception, cycle_check, normal, fpu_restore};$/;"	e	enum:save_info_type
fr	src/dos/cdrom.h	/^	unsigned char fr;$/;"	m	struct:SMSF
fragmentDescriptor	include/ipx.h	/^struct fragmentDescriptor {$/;"	s
frame	include/vga.h	/^	Bit8u	checkMask, frame, writeMask;$/;"	m	struct:__anon57
frame	src/libs/gui_tk/gui_tk.cpp	/^		GUI::ToplevelWindow *frame;$/;"	m	struct:GUI::movewin	file:
frame	src/libs/gui_tk/gui_tk.cpp	/^		GUI::ToplevelWindow *frame;$/;"	m	struct:GUI::quit	file:
frame	src/libs/gui_tk/gui_tk.cpp	/^	GUI::ToplevelWindow *frame = new GUI::ToplevelWindow(&guiscreen,205,100,380,250,"GUI::Frame");$/;"	m	namespace:GUI	file:
frames	src/hardware/hardware.cpp	/^		Bitu		frames;$/;"	m	struct:__anon155::__anon159	file:
frameskip	include/render.h	/^	} frameskip;$/;"	m	struct:__anon32	typeref:struct:__anon32::__anon34
framestart	include/vga.h	/^		double framestart;$/;"	m	struct:__anon38::__anon39
framingErrors	include/serialport.h	/^	Bitu framingErrors;$/;"	m	class:CSerial
free	include/dos_system.h	/^	bool		free				[MAX_OPENDIRS];$/;"	m	class:DOS_Drive_Cache
free	src/cpu/core_dyn_x86/cache.h	/^		CacheBlock * free;$/;"	m	struct:__anon87::__anon88
free	src/cpu/core_dynrec/cache.h	/^		CacheBlockDynRec * free;		\/\/ pointer to the free list$/;"	m	struct:__anon66::__anon67
free	src/cpu/core_dynrec/save/cache.h	/^		CacheBlockDynRec * free;		\/\/ pointer to the free list$/;"	m	struct:__anon76::__anon77
free	src/ints/xms.cpp	/^	bool	free;$/;"	m	struct:XMS_Block	file:
free_clusters	src/dos/drives.h	/^		Bit16u free_clusters;$/;"	m	struct:fatDrive::__anon120
free_clusters	src/dos/drives.h	/^		Bit16u free_clusters;$/;"	m	struct:localDrive::__anon117
free_entry	src/hardware/pic.cpp	/^	PICEntry * free_entry;$/;"	m	struct:__anon167	file:
free_pages	src/cpu/core_dyn_x86/cache.h	/^	CodePageHandler * free_pages;$/;"	m	struct:__anon87
free_pages	src/cpu/core_dynrec/cache.h	/^	CodePageHandlerDynRec * free_pages;		\/\/ pointer to the free list$/;"	m	struct:__anon66
free_pages	src/cpu/core_dynrec/save/cache.h	/^	CodePageHandlerDynRec * free_pages;		\/\/ pointer to the free list$/;"	m	struct:__anon76
freq	src/hardware/gameblaster.cpp	/^	double freq;$/;"	m	struct:saa1099_channel	file:
freq	src/hardware/gameblaster.cpp	/^	double freq;$/;"	m	struct:saa1099_noise	file:
freq	src/hardware/hardware.cpp	/^		Bit32u freq;$/;"	m	struct:__anon155::__anon156	file:
freq	src/hardware/mixer.cpp	/^	Bit32u freq;$/;"	m	struct:__anon165	file:
freq	src/hardware/mixer.cpp	/^	Bitu freq;$/;"	m	struct:MIXER_Channel	file:
freq	src/hardware/sblaster.cpp	/^	Bitu freq;$/;"	m	struct:SB_INFO	file:
freq_add	include/mixer.h	/^	Bitu freq_add,freq_index;$/;"	m	class:MixerChannel
freq_enable	src/hardware/gameblaster.cpp	/^	int freq_enable;		\/* frequency enable *\/$/;"	m	struct:saa1099_channel	file:
freq_index	include/mixer.h	/^	Bitu freq_add,freq_index;$/;"	m	class:MixerChannel
freqbase	src/hardware/fmopl.cpp	/^	double freqbase;				\/* frequency base				*\/$/;"	m	struct:fm_opl_f	file:
freqbase	src/hardware/ymf262.cpp	/^	double freqbase;				\/* frequency base				*\/$/;"	m	struct:__anon192	file:
frequency	src/hardware/gameblaster.cpp	/^	int frequency;			\/* frequency (0x00..0xff) *\/$/;"	m	struct:saa1099_channel	file:
from	src/cpu/core_dyn_x86/cache.h	/^		CacheBlock * from;$/;"	m	struct:CacheBlock::__anon86
from	src/cpu/core_dynrec/cache.h	/^		CacheBlockDynRec * from;	\/\/ the from-block can transfer control to this block$/;"	m	struct:CacheBlockDynRec::__anon65
from	src/cpu/core_dynrec/save/cache.h	/^		CacheBlockDynRec * from;	\/\/ the from-block can transfer control to this block$/;"	m	struct:CacheBlockDynRec::__anon75
fromSpecial	src/libs/gui_tk/gui_tk.h	/^	virtual Char fromSpecial(SpecialChar c) const { if (special == NULL) return Font::fromSpecial(c); Char i = 0; while(special[i] != c) i++; return i; }$/;"	f	class:GUI::BitmapFont
fromSpecial	src/libs/gui_tk/gui_tk.h	/^	virtual Char fromSpecial(SpecialChar c) const { return c; }$/;"	f	class:GUI::Font
front	src/debug/debug_gui.cpp	/^	char const* front;$/;"	m	struct:_LogGroup	file:
fs	include/cpu.h	/^    Bit32u fs;                   \/* And another extra selector *\/$/;"	m	struct:TSS_32
fs	include/regs.h	/^enum SegNames { es=0,cs,ss,ds,fs,gs};$/;"	e	enum:SegNames
fs	src/cpu/core_normal/prefix_none.h	/^		DO_PREFIX_SEG(fs);break;$/;"	v
fs	src/cpu/core_normal/verysimple_prefix_none.h	/^		DO_PREFIX_SEG(fs);break;$/;"	v
fspecial	src/debug/debug_disasm.cpp	/^static char const **fspecial[] = { \/* 0=use st(i), 1=undefined 0 in fop_* means undefined *\/$/;"	v	file:
fstackpos	include/vga.h	/^	Bit8u fstackpos, bstackpos;$/;"	m	struct:__anon41
ftype	src/cpu/core_dynrec/decoder_basic.h	/^	Bitu ftype;$/;"	m	struct:__anon71
ftype	src/cpu/core_dynrec/save/decoder_basic.h	/^	Bitu ftype;$/;"	m	struct:__anon81
fullFrame	include/render.h	/^	bool fullFrame;$/;"	m	struct:__anon32
full_arguments	src/shell/shell_misc.cpp	/^std::string full_arguments = "";$/;"	v
full_bit_mask	include/vga.h	/^	Bit32u full_bit_mask;$/;"	m	struct:__anon37
full_enable_and_set_reset	include/vga.h	/^	Bit32u full_enable_and_set_reset;$/;"	m	struct:__anon37
full_enable_set_reset	include/vga.h	/^	Bit32u full_enable_set_reset;$/;"	m	struct:__anon37
full_map_mask	include/vga.h	/^	Bit32u full_map_mask;$/;"	m	struct:__anon37
full_name	src/shell/shell.cpp	/^static char const * const full_name="Z:\\\\COMMAND.COM";$/;"	v	file:
full_not_enable_set_reset	include/vga.h	/^	Bit32u full_not_enable_set_reset;$/;"	m	struct:__anon37
full_not_map_mask	include/vga.h	/^	Bit32u full_not_map_mask;$/;"	m	struct:__anon37
full_set_reset	include/vga.h	/^	Bit32u full_set_reset;$/;"	m	struct:__anon37
fullscreen	src/gui/sdlmain.h	/^		bool fullscreen;$/;"	m	struct:SDL_Block::__anon137
function	include/setup.h	/^		SectionFunction function;$/;"	m	struct:Section::Function_wrapper
g	include/cpu.h	/^	Bit32u g			:1;$/;"	m	struct:S_Descriptor
g	include/paging.h	/^	Bit32u		g:1;$/;"	m	struct:X86_PageEntryBlock
g	include/video.h	/^	Bit8u g;$/;"	m	struct:GFX_PalEntry
gate	include/cpu.h	/^		G_Descriptor gate;$/;"	m	union:Descriptor::__anon5
gate2	src/hardware/timer.cpp	/^static bool gate2;$/;"	v	file:
gdevblock	src/dos/cdrom_aspi_win32.cpp	/^	SRB_GDEVBlock       gdevblock;$/;"	m	union:__anon114	file:
gdt	include/cpu.h	/^	GDTDescriptorTable gdt;$/;"	m	struct:CPUBlock
gen_add	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/risc_x64.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/risc_x86.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_add(HostReg reg,void* op) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/risc_x64.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/risc_x86.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_byte	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_add_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/risc_x64.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/risc_x86.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_direct_word	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_add_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/risc_x64.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/risc_x86.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_imm	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_add_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_regval32_to_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_add_regval32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_add_seg32_to_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_add_seg32_to_reg(HostReg reg,Bitu index) {$/;"	f
gen_addr_temp1	src/cpu/core_dynrec/risc_mipsel32.h	/^static Bit16s gen_addr_temp1(Bit32u addr) {$/;"	f
gen_addr_temp1	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static Bit16s gen_addr_temp1(Bit32u addr) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/risc_x64.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/risc_x86.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_and_imm	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_and_imm(HostReg reg,Bit32u imm) {$/;"	f
gen_call_function	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_call_function(void * func,char const* ops,...) {$/;"	f
gen_call_function_I	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_I(void * func,Bitu op) {$/;"	f
gen_call_function_I	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_I(void * func,Bitu op) {$/;"	f
gen_call_function_IA	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_IA(void * func,Bitu op1,DRC_PTR_SIZE_IM op2) {$/;"	f
gen_call_function_IA	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_IA(void * func,Bitu op1,DRC_PTR_SIZE_IM op2) {$/;"	f
gen_call_function_II	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_II(void * func,Bitu op1,Bitu op2) {$/;"	f
gen_call_function_II	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_II(void * func,Bitu op1,Bitu op2) {$/;"	f
gen_call_function_III	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_III(void * func,Bitu op1,Bitu op2,Bitu op3) {$/;"	f
gen_call_function_III	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_III(void * func,Bitu op1,Bitu op2,Bitu op3) {$/;"	f
gen_call_function_IIIR	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_IIIR(void * func,Bitu op1,Bitu op2,Bitu op3,Bitu op4) {$/;"	f
gen_call_function_IIIR	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_IIIR(void * func,Bitu op1,Bitu op2,Bitu op3,Bitu op4) {$/;"	f
gen_call_function_IIR	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_IIR(void * func,Bitu op1,Bitu op2,Bitu op3) {$/;"	f
gen_call_function_IIR	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_IIR(void * func,Bitu op1,Bitu op2,Bitu op3) {$/;"	f
gen_call_function_IR	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_IR(void * func,Bitu op1,Bitu op2) {$/;"	f
gen_call_function_IR	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_IR(void * func,Bitu op1,Bitu op2) {$/;"	f
gen_call_function_IRRR	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_IRRR(void * func,Bitu op1,Bitu op2,Bitu op3,Bitu op4) {$/;"	f
gen_call_function_IRRR	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_IRRR(void * func,Bitu op1,Bitu op2,Bitu op3,Bitu op4) {$/;"	f
gen_call_function_R	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_R(void * func,Bitu op) {$/;"	f
gen_call_function_R	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_R(void * func,Bitu op) {$/;"	f
gen_call_function_R3	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_R3(void * func,Bitu op) {$/;"	f
gen_call_function_R3	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_R3(void * func,Bitu op) {$/;"	f
gen_call_function_RA	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_RA(void * func,Bitu op1,DRC_PTR_SIZE_IM op2) {$/;"	f
gen_call_function_RA	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_RA(void * func,Bitu op1,DRC_PTR_SIZE_IM op2) {$/;"	f
gen_call_function_RI	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_RI(void * func,Bitu op1,Bitu op2) {$/;"	f
gen_call_function_RI	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_RI(void * func,Bitu op1,Bitu op2) {$/;"	f
gen_call_function_RR	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_RR(void * func,Bitu op1,Bitu op2) {$/;"	f
gen_call_function_RR	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_RR(void * func,Bitu op1,Bitu op2) {$/;"	f
gen_call_function_helper	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_call_function_helper(void * func) {$/;"	f
gen_call_function_helper	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_call_function_helper(void * func) {$/;"	f
gen_call_function_helper	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_call_function_helper(void * func) {$/;"	f
gen_call_function_helper	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_call_function_helper(void * func) {$/;"	f
gen_call_function_m	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_m(void * func,Bitu op) {$/;"	f
gen_call_function_m	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_m(void * func,Bitu op) {$/;"	f
gen_call_function_mm	src/cpu/core_dynrec/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_mm(void * func,Bitu op1,Bitu op2) {$/;"	f
gen_call_function_mm	src/cpu/core_dynrec/save/decoder_basic.h	/^static DRC_PTR_SIZE_IM INLINE gen_call_function_mm(void * func,Bitu op1,Bitu op2) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/risc_x64.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/risc_x86.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/save/risc_x64.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_raw	src/cpu/core_dynrec/save/risc_x86.h	/^static void INLINE gen_call_function_raw(void * func) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/risc_mipsel32.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/risc_x64.h	/^static Bit64u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/risc_x86.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/save/risc_x64.h	/^static Bit64u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_function_setup	src/cpu/core_dynrec/save/risc_x86.h	/^static Bit32u INLINE gen_call_function_setup(void * func,Bitu paramcount,bool fastcall=false) {$/;"	f
gen_call_write	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_call_write(DynReg * dr,Bit32u val,Bitu write_size) {$/;"	f
gen_cbw	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_cbw(bool dword,DynReg * dyn_ax) {$/;"	f
gen_clearzeroflag	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_clearzeroflag(void) {$/;"	f
gen_create_branch	src/cpu/core_dyn_x86/risc_x86.h	/^static Bit8u * gen_create_branch(BranchTypes type) {$/;"	f
gen_create_branch_long	src/cpu/core_dyn_x86/risc_x86.h	/^static Bit8u * gen_create_branch_long(BranchTypes type) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/risc_mipsel32.h	/^static Bit32u INLINE gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/risc_x64.h	/^static Bit64u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/risc_x86.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static Bit32u INLINE gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/save/risc_x64.h	/^static Bit64u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_leqzero	src/cpu/core_dynrec/save/risc_x86.h	/^static Bit32u gen_create_branch_long_leqzero(HostReg reg) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/risc_mipsel32.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/risc_x64.h	/^static Bit64u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/risc_x86.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/save/risc_x64.h	/^static Bit64u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_long_nonzero	src/cpu/core_dynrec/save/risc_x86.h	/^static Bit32u gen_create_branch_long_nonzero(HostReg reg,bool isdword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/risc_mipsel32.h	/^static Bit32u INLINE gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/risc_x64.h	/^static Bit64u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/risc_x86.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static Bit32u INLINE gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/save/risc_x64.h	/^static Bit64u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_nonzero	src/cpu/core_dynrec/save/risc_x86.h	/^static Bit32u gen_create_branch_on_nonzero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/risc_mipsel32.h	/^static Bit32u INLINE gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/risc_x64.h	/^static Bit64u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/risc_x86.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static Bit32u INLINE gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/save/risc_x64.h	/^static Bit64u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_on_zero	src/cpu/core_dynrec/save/risc_x86.h	/^static Bit32u gen_create_branch_on_zero(HostReg reg,bool dword) {$/;"	f
gen_create_branch_short	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_create_branch_short(void * func) {$/;"	f
gen_create_branch_short	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_create_branch_short(void * func) {$/;"	f
gen_create_branch_short	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_create_branch_short(void * func) {$/;"	f
gen_create_branch_short	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_create_branch_short(void * func) {$/;"	f
gen_create_jump	src/cpu/core_dyn_x86/risc_x86.h	/^static Bit8u * gen_create_jump(Bit8u * to=0) {$/;"	f
gen_cwd	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_cwd(bool dword,DynReg * dyn_ax,DynReg * dyn_dx) {$/;"	f
gen_discardflags	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_discardflags(void) {$/;"	f
gen_dop_byte	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_dop_byte(DualOps op,DynReg * dr1,Bit8u di1,DynReg * dr2,Bit8u di2) {$/;"	f
gen_dop_byte_imm	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_dop_byte_imm(DualOps op,DynReg * dr1,Bit8u di1,Bitu imm) {$/;"	f
gen_dop_byte_imm_mem	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_dop_byte_imm_mem(DualOps op,DynReg * dr1,Bit8u di1,void* data) {$/;"	f
gen_dop_word	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_dop_word(DualOps op,bool dword,DynReg * dr1,DynReg * dr2) {$/;"	f
gen_dop_word_imm	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_dop_word_imm(DualOps op,bool dword,DynReg * dr1,Bits imm) {$/;"	f
gen_dop_word_imm_mem	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_dop_word_imm_mem(DualOps op,bool dword,DynReg * dr1,void* data) {$/;"	f
gen_dop_word_var	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_dop_word_var(DualOps op,bool dword,DynReg * dr1,void* drd) {$/;"	f
gen_dshift_cl	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_dshift_cl(bool dword,bool left,DynReg * dr1,DynReg * dr2,DynReg * drecx) {$/;"	f
gen_dshift_imm	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_dshift_imm(bool dword,bool left,DynReg * dr1,DynReg * dr2,Bitu imm) {$/;"	f
gen_extend_byte	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_extend_byte(bool sign,bool dword,DynReg * ddr,DynReg * dsr,Bit8u dsi) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/risc_x64.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/risc_x86.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_byte	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_extend_byte(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_extend_word(bool sign,DynReg * ddr,DynReg * dsr) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/risc_x64.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/risc_x86.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_extend_word	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_extend_word(bool sign,HostReg reg) {$/;"	f
gen_fill_branch	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_fill_branch(Bit8u * data,Bit8u * from=cache.pos) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/risc_x64.h	/^static void gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/risc_x86.h	/^static void gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_fill_branch(DRC_PTR_SIZE_IM data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_fill_branch_long(Bit8u * data,Bit8u * from=cache.pos) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/risc_x64.h	/^static void gen_fill_branch_long(Bit64u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/risc_x86.h	/^static void gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_fill_branch_long(Bit64u data) {$/;"	f
gen_fill_branch_long	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_fill_branch_long(Bit32u data) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/risc_x64.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/risc_x86.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_function_ptr	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_fill_function_ptr(Bit8u * pos,void* fct_ptr,Bitu flags_type) {$/;"	f
gen_fill_jump	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_fill_jump(Bit8u * data,Bit8u * to=cache.pos) {$/;"	f
gen_imul_word	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_imul_word(bool dword,DynReg * dr1,DynReg * dr2) {$/;"	f
gen_imul_word_imm	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_imul_word_imm(bool dword,DynReg * dr1,DynReg * dr2,Bits imm) {$/;"	f
gen_init	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_init(void) {$/;"	f
gen_jmp_ptr	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/risc_x64.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/risc_x86.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_jmp_ptr	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_jmp_ptr(void * ptr,Bits imm=0) {$/;"	f
gen_lea	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_lea(DynReg * ddr,DynReg * dsr1,DynReg * dsr2,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_mipsel32.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_mipsel32.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_x64.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_x64.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_x86.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/risc_x86.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_x64.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_x64.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_x86.h	/^static INLINE void gen_lea(HostReg dest_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea	src/cpu/core_dynrec/save/risc_x86.h	/^static INLINE void gen_lea(HostReg dest_reg,HostReg scale_reg,Bitu scale,Bits imm) {$/;"	f
gen_lea_imm_mem	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_lea_imm_mem(DynReg * ddr,DynReg * dsr,void* data) {$/;"	f
gen_load_flags	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_load_flags(DynReg * dynreg) {$/;"	f
gen_load_host	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_load_host(void * data,DynReg * dr1,Bitu size) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/risc_x64.h	/^static void INLINE gen_load_param_addr(DRC_PTR_SIZE_IM addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/risc_x86.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/save/risc_x64.h	/^static void INLINE gen_load_param_addr(DRC_PTR_SIZE_IM addr,Bitu param) {$/;"	f
gen_load_param_addr	src/cpu/core_dynrec/save/risc_x86.h	/^static void INLINE gen_load_param_addr(Bitu addr,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/risc_x64.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/risc_x86.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/save/risc_x64.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_imm	src/cpu/core_dynrec/save/risc_x86.h	/^static void INLINE gen_load_param_imm(Bitu imm,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/risc_x64.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/risc_x86.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/save/risc_x64.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_mem	src/cpu/core_dynrec/save/risc_x86.h	/^static void INLINE gen_load_param_mem(Bitu mem,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/risc_x64.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/risc_x86.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/save/risc_x64.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_load_param_reg	src/cpu/core_dynrec/save/risc_x86.h	/^static void INLINE gen_load_param_reg(Bitu reg,Bitu param) {$/;"	f
gen_memaddr	src/cpu/core_dynrec/risc_x64.h	/^static INLINE void gen_memaddr(HostReg reg,void* data) {$/;"	f
gen_memaddr	src/cpu/core_dynrec/save/risc_x64.h	/^static INLINE void gen_memaddr(HostReg reg,void* data) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/risc_x86.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_from_reg_low	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_mov_byte_from_reg_low(HostReg src_reg,void* dest) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/risc_x86.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_mov_byte_to_reg_low(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_x86.h	/^static void gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_mov_byte_to_reg_low_canuseword(HostReg dest_reg,void* data) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/risc_x86.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_mov_byte_to_reg_low_imm(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/risc_x86.h	/^static void gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_byte_to_reg_low_imm_canuseword	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_mov_byte_to_reg_low_imm_canuseword(HostReg dest_reg,Bit8u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/risc_x86.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_dword	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_mov_direct_dword(void* dest,Bit32u imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/risc_x64.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/risc_x86.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/save/risc_x64.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_direct_ptr	src/cpu/core_dynrec/save/risc_x86.h	/^static void INLINE gen_mov_direct_ptr(void* dest,DRC_PTR_SIZE_IM imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/risc_x86.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_dword_to_reg_imm	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_mov_dword_to_reg_imm(HostReg dest_reg,Bit32u imm) {$/;"	f
gen_mov_host	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_mov_host(void * data,DynReg * dr1,Bitu size,Bit8u di1=0) {$/;"	f
gen_mov_reg_qword	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_reg_qword(HostReg dest_reg,Bit64u imm) {$/;"	f
gen_mov_reg_qword	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_reg_qword(HostReg dest_reg,Bit64u imm) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_from_reg_low	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_regbyte_from_reg_low(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_regbyte_to_reg_low(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regbyte_to_reg_low_canuseword	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_mov_regbyte_to_reg_low_canuseword(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/risc_x86.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regs	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_mov_regs(HostReg reg_dst,HostReg reg_src) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_from_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_regval16_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval16_to_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_regval16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_from_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_regval32_from_reg(HostReg src_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regval32_to_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_regval32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_from_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_regword_from_reg(HostReg src_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_regword_to_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_regword_to_reg(HostReg dest_reg,Bitu index,bool dword) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg16_to_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_seg16_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_seg32_to_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_seg32_to_reg(HostReg dest_reg,Bitu index) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/risc_x86.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_mov_word_from_reg(HostReg src_reg,void* dest,bool dword) {$/;"	f
gen_mov_word_from_reg_helper	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_word_from_reg_helper(HostReg src_reg,void* dest,bool dword, HostReg data_reg) {$/;"	f
gen_mov_word_from_reg_helper	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_word_from_reg_helper(HostReg src_reg,void* dest,bool dword, HostReg data_reg) {$/;"	f
gen_mov_word_from_reg_helper	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_word_from_reg_helper(HostReg src_reg,void* dest,bool dword, HostReg data_reg) {$/;"	f
gen_mov_word_from_reg_helper	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_word_from_reg_helper(HostReg src_reg,void* dest,bool dword, HostReg data_reg) {$/;"	f
gen_mov_word_from_reg_helper	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_word_from_reg_helper(HostReg src_reg,void* dest,bool dword, HostReg data_reg) {$/;"	f
gen_mov_word_from_reg_helper	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_word_from_reg_helper(HostReg src_reg,void* dest,bool dword, HostReg data_reg) {$/;"	f
gen_mov_word_from_reg_helper	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_word_from_reg_helper(HostReg src_reg,void* dest,bool dword, HostReg data_reg) {$/;"	f
gen_mov_word_from_reg_helper	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_word_from_reg_helper(HostReg src_reg,void* dest,bool dword, HostReg data_reg) {$/;"	f
gen_mov_word_from_reg_helper	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_word_from_reg_helper(HostReg src_reg,void* dest,bool dword, HostReg data_reg) {$/;"	f
gen_mov_word_from_reg_helper	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_word_from_reg_helper(HostReg src_reg,void* dest,bool dword, HostReg data_reg) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/risc_x86.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_mov_word_to_reg(HostReg dest_reg,void* data,bool dword) {$/;"	f
gen_mov_word_to_reg_helper	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_word_to_reg_helper(HostReg dest_reg,void* data,bool dword,HostReg data_reg) {$/;"	f
gen_mov_word_to_reg_helper	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_mov_word_to_reg_helper(HostReg dest_reg,void* data,bool dword,HostReg data_reg) {$/;"	f
gen_mov_word_to_reg_helper	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_mov_word_to_reg_helper(HostReg dest_reg,void* data,bool dword,HostReg data_reg) {$/;"	f
gen_mov_word_to_reg_helper	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_mov_word_to_reg_helper(HostReg dest_reg,void* data,bool dword,HostReg data_reg) {$/;"	f
gen_mov_word_to_reg_helper	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_mov_word_to_reg_helper(HostReg dest_reg,void* data,bool dword,HostReg data_reg) {$/;"	f
gen_mov_word_to_reg_helper	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_word_to_reg_helper(HostReg dest_reg,void* data,bool dword,HostReg data_reg) {$/;"	f
gen_mov_word_to_reg_helper	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_mov_word_to_reg_helper(HostReg dest_reg,void* data,bool dword,HostReg data_reg) {$/;"	f
gen_mov_word_to_reg_helper	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_mov_word_to_reg_helper(HostReg dest_reg,void* data,bool dword,HostReg data_reg) {$/;"	f
gen_mov_word_to_reg_helper	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_mov_word_to_reg_helper(HostReg dest_reg,void* data,bool dword,HostReg data_reg) {$/;"	f
gen_mov_word_to_reg_helper	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_mov_word_to_reg_helper(HostReg dest_reg,void* data,bool dword,HostReg data_reg) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void INLINE gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void INLINE gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void INLINE gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void INLINE gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/risc_x64.h	/^static void gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/risc_x86.h	/^static void gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void INLINE gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void INLINE gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void INLINE gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void INLINE gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mov_word_to_reg_imm	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_mov_word_to_reg_imm(HostReg dest_reg,Bit16u imm) {$/;"	f
gen_mul_byte	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_mul_byte(bool imul,DynReg * dyn_ax,DynReg * dr1,Bit8u di1) {$/;"	f
gen_mul_word	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_mul_word(bool imul,DynReg * dyn_ax,DynReg * dyn_dx,bool dword,DynReg * dr1) {$/;"	f
gen_needcarry	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_needcarry(void) {$/;"	f
gen_needflags	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_needflags(void) {$/;"	f
gen_preloadreg	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_preloadreg(DynReg * dynreg) {$/;"	f
gen_protect_addr_reg	src/cpu/core_dynrec/decoder_basic.h	/^static void gen_protect_addr_reg(void) {$/;"	f
gen_protect_addr_reg	src/cpu/core_dynrec/save/decoder_basic.h	/^static void gen_protect_addr_reg(void) {$/;"	f
gen_protect_reg	src/cpu/core_dynrec/decoder_basic.h	/^static void gen_protect_reg(HostReg reg) {$/;"	f
gen_protect_reg	src/cpu/core_dynrec/save/decoder_basic.h	/^static void gen_protect_reg(HostReg reg) {$/;"	f
gen_protectflags	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_protectflags(void) {$/;"	f
gen_reinit	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_reinit(void) {$/;"	f
gen_releasereg	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_releasereg(DynReg * dynreg) {$/;"	f
gen_restore_addr_reg	src/cpu/core_dynrec/decoder_basic.h	/^static void gen_restore_addr_reg(void) {$/;"	f
gen_restore_addr_reg	src/cpu/core_dynrec/save/decoder_basic.h	/^static void gen_restore_addr_reg(void) {$/;"	f
gen_restore_reg	src/cpu/core_dynrec/decoder_basic.h	/^static void gen_restore_reg(HostReg reg) {$/;"	f
gen_restore_reg	src/cpu/core_dynrec/decoder_basic.h	/^static void gen_restore_reg(HostReg reg,HostReg dest_reg) {$/;"	f
gen_restore_reg	src/cpu/core_dynrec/save/decoder_basic.h	/^static void gen_restore_reg(HostReg reg) {$/;"	f
gen_restore_reg	src/cpu/core_dynrec/save/decoder_basic.h	/^static void gen_restore_reg(HostReg reg,HostReg dest_reg) {$/;"	f
gen_return	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_return(BlockReturn retcode) {$/;"	f
gen_return_fast	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_return_fast(BlockReturn retcode,bool ret_exception=false) {$/;"	f
gen_return_function	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/risc_x64.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/risc_x86.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_return_function(void) {$/;"	f
gen_return_function	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_return_function(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/risc_mipsel32.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/risc_x64.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/risc_x86.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_run_code(void) {$/;"	f
gen_run_code	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_run_code(void) {$/;"	f
gen_runcode	src/cpu/core_dyn_x86/risc_x86.h	/^static BlockReturn gen_runcode(Bit8u * code) {$/;"	f
gen_save_flags	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_save_flags(DynReg * dynreg) {$/;"	f
gen_save_host_direct	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_save_host_direct(void * data,Bits imm) {$/;"	f
gen_setupreg	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_setupreg(DynReg * dnew,DynReg * dsetup) {$/;"	f
gen_setzeroflag	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_setzeroflag(void) {$/;"	f
gen_shift_byte_cl	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_shift_byte_cl(Bitu op,DynReg * dr1,Bit8u di1,DynReg * drecx) {$/;"	f
gen_shift_byte_imm	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_shift_byte_imm(Bitu op,DynReg * dr1,Bit8u di1,Bit8u imm) {$/;"	f
gen_shift_word_cl	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_shift_word_cl(Bitu op,bool dword,DynReg * dr1,DynReg * drecx) {$/;"	f
gen_shift_word_imm	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_shift_word_imm(Bitu op,bool dword,DynReg * dr1,Bit8u imm) {$/;"	f
gen_sop_byte	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_sop_byte(SingleOps op,DynReg * dr1,Bit8u di1) {$/;"	f
gen_sop_word	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_sop_word(SingleOps op,bool dword,DynReg * dr1) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/risc_x64.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/risc_x86.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_byte	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_sub_direct_byte(void* dest,Bit8s imm) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/risc_armv4le-s3.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/risc_armv4le-thumb.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/risc_x64.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/risc_x86.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/save/risc_armv4le-s3.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/save/risc_x64.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_sub_direct_word	src/cpu/core_dynrec/save/risc_x86.h	/^static void gen_sub_direct_word(void* dest,Bit32u imm,bool dword) {$/;"	f
gen_synchreg	src/cpu/core_dyn_x86/risc_x86.h	/^static void gen_synchreg(DynReg * dnew,DynReg * dsynch) {$/;"	f
genreg	src/cpu/core_dyn_x86.cpp	/^	GenReg * genreg;$/;"	m	struct:DynReg	file:
getAbsoluteSectFromBytePos	src/dos/drive_fat.cpp	/^Bit32u fatDrive::getAbsoluteSectFromBytePos(Bit32u startClustNum, Bit32u bytePos) {$/;"	f	class:fatDrive
getAbsoluteSectFromChain	src/dos/drive_fat.cpp	/^Bit32u fatDrive::getAbsoluteSectFromChain(Bit32u startClustNum, Bit32u logicalSector) {$/;"	f	class:fatDrive
getAscent	src/libs/gui_tk/gui_tk.h	/^	virtual int getAscent() const { return ascent; };$/;"	f	class:GUI::BitmapFont
getBituSubstring	src/hardware/serialport/serialport.cpp	/^bool CSerial::getBituSubstring(const char* name,Bitu* data, CommandLine* cmd) {$/;"	f	class:CSerial
getCD	src/hardware/serialport/serialport.cpp	/^bool CSerial::getCD () {$/;"	f	class:CSerial
getCTS	src/hardware/serialport/serialport.cpp	/^bool CSerial::getCTS () {$/;"	f	class:CSerial
getChild	src/libs/gui_tk/gui_tk.h	/^	Window *getChild(int n) {$/;"	f	class:GUI::Window
getClipHeight	src/libs/gui_tk/gui_tk.h	/^	int getClipHeight() { return ch; }$/;"	f	class:GUI::Drawable
getClipWidth	src/libs/gui_tk/gui_tk.h	/^	int getClipWidth() { return cw; }$/;"	f	class:GUI::Drawable
getClipX	src/libs/gui_tk/gui_tk.h	/^	int getClipX() { return cx; }$/;"	f	class:GUI::Drawable
getClipY	src/libs/gui_tk/gui_tk.h	/^	int getClipY() { return cy; }$/;"	f	class:GUI::Drawable
getClipboard	src/libs/gui_tk/gui_tk.h	/^	virtual const String& getClipboard() { return clipboard; }$/;"	f	class:GUI::Screen
getClipboard	src/libs/gui_tk/gui_tk.h	/^	virtual const String& getClipboard() { return parent->getClipboard(); };$/;"	f	class:GUI::Window
getClustFirstSect	src/dos/drive_fat.cpp	/^Bit32u fatDrive::getClustFirstSect(Bit32u clustNum) {$/;"	f	class:fatDrive
getClusterValue	src/dos/drive_fat.cpp	/^Bit32u fatDrive::getClusterValue(Bit32u clustNum) {$/;"	f	class:fatDrive
getColor	src/libs/gui_tk/gui_tk.h	/^	RGB getColor() { return color; }$/;"	f	class:GUI::Label
getColor	src/libs/gui_tk/gui_tk.h	/^	RGB getColor() { return color; };$/;"	f	class:GUI::Drawable
getDSR	src/hardware/serialport/serialport.cpp	/^bool CSerial::getDSR () {$/;"	f	class:CSerial
getDTR	src/hardware/serialport/serialport.cpp	/^bool CSerial::getDTR () {$/;"	f	class:CSerial
getDirClustNum	src/dos/drive_fat.cpp	/^bool fatDrive::getDirClustNum(char *dir, Bit32u *clustNum, bool parDir) {$/;"	f	class:fatDrive
getESRAddr	src/hardware/ipx.cpp	/^RealPt ECBClass::getESRAddr(void) {$/;"	f	class:ECBClass
getEntryName	src/dos/drive_fat.cpp	/^bool fatDrive::getEntryName(char *fullname, char *entname) {$/;"	f	class:fatDrive
getFSFile	src/dos/dos_programs.cpp	/^	FILE *getFSFile(char const * filename, Bit32u *ksize, Bit32u *bsize,bool tryload=false) {$/;"	f	class:BOOT	file:
getFSFile_mounted	src/dos/dos_programs.cpp	/^	FILE *getFSFile_mounted(char const* filename, Bit32u *ksize, Bit32u *bsize, Bit8u *error) {$/;"	f	class:BOOT	file:
getFileDirEntry	src/dos/drive_fat.cpp	/^bool fatDrive::getFileDirEntry(char const * const filename, direntry * useEntry, Bit32u * dirClust, Bit32u * subEntry) {$/;"	f	class:fatDrive
getFirstFreeClust	src/dos/drive_fat.cpp	/^Bit32u fatDrive::getFirstFreeClust(void) {$/;"	f	class:fatDrive
getFont	src/libs/gui_tk/gui_tk.h	/^	const Font *getFont() { return font; }$/;"	f	class:GUI::Label
getFont	src/libs/gui_tk/gui_tk.h	/^	const Font *getFont() { return font; };$/;"	f	class:GUI::Drawable
getFont	src/libs/gui_tk/gui_tk.h	/^	static const Font *getFont(const char *name) {$/;"	f	class:GUI::Font
getFragCount	src/hardware/ipx.cpp	/^Bit16u ECBClass::getFragCount(void) {$/;"	f	class:ECBClass
getFragDesc	src/hardware/ipx.cpp	/^void ECBClass::getFragDesc(Bit16u descNum, fragmentDescriptor *fragDesc) {$/;"	f	class:ECBClass
getHeight	src/libs/gui_tk/gui_tk.h	/^	virtual int getHeight() const { return height; }$/;"	f	class:GUI::Window
getHeight	src/libs/gui_tk/gui_tk.h	/^	virtual int getHeight() const { return height; };$/;"	f	class:GUI::BitmapFont
getImmAddress	src/hardware/ipx.cpp	/^void ECBClass::getImmAddress(Bit8u* immAddr) {$/;"	f	class:ECBClass
getInUseFlag	src/hardware/ipx.cpp	/^Bit8u ECBClass::getInUseFlag(void) {$/;"	f	class:ECBClass
getLength	src/dos/cdrom_image.cpp	/^int CDROM_Interface_Image::AudioFile::getLength()$/;"	f	class:CDROM_Interface_Image::AudioFile
getLength	src/dos/cdrom_image.cpp	/^int CDROM_Interface_Image::BinaryFile::getLength()$/;"	f	class:CDROM_Interface_Image::BinaryFile
getLineWidth	src/libs/gui_tk/gui_tk.h	/^	int getLineWidth() { return lineWidth; };$/;"	f	class:GUI::Drawable
getName	src/libs/gui_tk/gui_tk.h	/^	const String &getName() const { return name; }$/;"	f	class:GUI::ActionEventSource
getNative	src/libs/gui_tk/gui_tk.h	/^	static STR& getNative(const String &src) { STR::_this_string_type_is_not_supported_();return*new STR(); }$/;"	f	class:GUI::NativeString
getNative	src/libs/gui_tk/gui_tk.h	/^	static std::string& getNative(const String &src) {$/;"	f	class:GUI::NativeString
getNative	src/libs/gui_tk/gui_tk.h	/^	static std::string* getNative(const String &src) {$/;"	f	class:GUI::NativeString
getNative	src/libs/gui_tk/gui_tk.h	/^template <typename STR> STR* NativeString<STR*>::getNative(const String &src) {$/;"	f	class:GUI::NativeString
getParent	src/libs/gui_tk/gui_tk.h	/^	Window *getParent() const { return parent; }$/;"	f	class:GUI::Window
getPixel	src/libs/gui_tk/gui_tk.h	/^	RGB getPixel() { if (x >= cx && x < cw && y >= cy && y < ch) return buffer[x+tx+(y+ty)*width]; return Color::Transparent; };$/;"	f	class:GUI::Drawable
getPixel	src/libs/gui_tk/gui_tk.h	/^	RGB getPixel(int x, int y) { gotoXY(x,y); return getPixel(); };$/;"	f	class:GUI::Drawable
getPreferredHeight	src/libs/gui_tk/gui_tk.h	/^	virtual Size getPreferredHeight() {$/;"	f	class:GUI::Menu
getPreferredWidth	src/libs/gui_tk/gui_tk.h	/^	virtual Size getPreferredWidth() {$/;"	f	class:GUI::Menu
getRI	src/hardware/serialport/serialport.cpp	/^bool CSerial::getRI () {$/;"	f	class:CSerial
getRTS	src/hardware/serialport/serialport.cpp	/^bool CSerial::getRTS () {$/;"	f	class:CSerial
getScreenX	src/libs/gui_tk/gui_tk.h	/^	virtual int getScreenX() const { return (parent == NULL?0:parent->getScreenX()+x); }$/;"	f	class:GUI::Window
getScreenX	src/libs/gui_tk/gui_tk.h	/^	virtual int getScreenX() const { return Window::getScreenX()+border_left; }$/;"	f	class:GUI::BorderedWindow
getScreenY	src/libs/gui_tk/gui_tk.h	/^	virtual int getScreenY() const { return (parent == NULL?0:parent->getScreenY()+y); }$/;"	f	class:GUI::Window
getScreenY	src/libs/gui_tk/gui_tk.h	/^	virtual int getScreenY() const { return Window::getScreenY()+border_top; }$/;"	f	class:GUI::BorderedWindow
getSectSize	src/ints/bios_disk.cpp	/^Bit32u imageDisk::getSectSize(void) {$/;"	f	class:imageDisk
getSectorSize	src/dos/drive_fat.cpp	/^Bit32u fatDrive::getSectorSize(void) {$/;"	f	class:fatDrive
getSocket	src/hardware/ipx.cpp	/^Bit16u ECBClass::getSocket(void) {$/;"	f	class:ECBClass
getString	src/libs/gui_tk/gui_tk.h	/^	static void getString(String &dest, const STR &src)  { STR::_this_string_type_is_not_supported_(); }$/;"	f	class:GUI::NativeString
getString	src/libs/gui_tk/gui_tk.h	/^	static void getString(String &dest, const std::string &src) {$/;"	f	class:GUI::NativeString
getString	src/libs/gui_tk/gui_tk.h	/^	static void getString(String &dest, const std::string *src) {$/;"	f	class:GUI::NativeString
getString	src/libs/gui_tk/gui_tk.h	/^template <typename STR> void NativeString<STR*>::getString(String &dest, const STR* src) {$/;"	f	class:GUI::NativeString
getSurface	src/libs/gui_tk/gui_tk.h	/^	SDL_Surface *getSurface() { return surface; }$/;"	f	class:GUI::ScreenSDL
getSwapRequest	src/ints/bios_disk.cpp	/^bool getSwapRequest(void) {$/;"	f
getText	src/libs/gui_tk/gui_tk.h	/^	const String& getText() { return text; }$/;"	f	class:GUI::Label
getText	src/libs/gui_tk/gui_tk.h	/^	const String& getText() { return text; };$/;"	f	class:GUI::Input
getTitle	src/libs/gui_tk/gui_tk.h	/^	const String& getTitle() { return title; }$/;"	f	class:GUI::ToplevelWindow
getWidth	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> int getWidth(const STR s, Size start = 0, Size len = (Size)-1) const {$/;"	f	class:GUI::Font
getWidth	src/libs/gui_tk/gui_tk.h	/^	virtual int getWidth() const { return width; }$/;"	f	class:GUI::Window
getWidth	src/libs/gui_tk/gui_tk.h	/^	virtual int getWidth(Char c = 'M') const { return (widths != NULL?widths[c]:width); };$/;"	f	class:GUI::BitmapFont
getWidth	src/libs/gui_tk/gui_tk.h	/^	virtual int getWidth(const String &s, Size start = 0, Size len = (Size)-1) const {$/;"	f	class:GUI::Font
getX	src/libs/gui_tk/gui_tk.h	/^	int getX() { return x; }$/;"	f	class:GUI::Drawable
getX	src/libs/gui_tk/gui_tk.h	/^	virtual int getX() const { return x-realparent->getScreenX(); }$/;"	f	class:GUI::TransientWindow
getX	src/libs/gui_tk/gui_tk.h	/^	virtual int getX() const { return x; }$/;"	f	class:GUI::Window
getY	src/libs/gui_tk/gui_tk.h	/^	int getY() { return y; }$/;"	f	class:GUI::Drawable
getY	src/libs/gui_tk/gui_tk.h	/^	virtual int getY() const { return y-realparent->getScreenY(); }$/;"	f	class:GUI::TransientWindow
getY	src/libs/gui_tk/gui_tk.h	/^	virtual int getY() const { return y; }$/;"	f	class:GUI::Window
get_AF	src/cpu/flags.cpp	/^Bit32u get_AF(void) {$/;"	f
get_CF	src/cpu/flags.cpp	/^Bit32u get_CF(void) {$/;"	f
get_OF	src/cpu/flags.cpp	/^Bit32u get_OF(void) {$/;"	f
get_PF	src/cpu/flags.cpp	/^Bit32u get_PF(void) {$/;"	f
get_SF	src/cpu/flags.cpp	/^Bit32u get_SF(void) {$/;"	f
get_ZF	src/cpu/flags.cpp	/^Bit32u get_ZF(void) {$/;"	f
get_clock	include/vga.h	/^	tGetClock get_clock;$/;"	m	struct:SVGA_Driver
get_clock_index_et3k	src/hardware/vga_tseng.cpp	/^static Bitu get_clock_index_et3k() {$/;"	f	file:
get_clock_index_et4k	src/hardware/vga_tseng.cpp	/^static Bitu get_clock_index_et4k() {$/;"	f	file:
get_imm_gen_len	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static Bits get_imm_gen_len(Bit32u imm) {$/;"	f
get_imm_gen_len	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static Bits get_imm_gen_len(Bit32u imm) {$/;"	f
get_key	src/ints/bios_keyboard.cpp	/^static bool get_key(Bit16u &code) {$/;"	f	file:
get_layout_name	src/dos/dos_keyboard_layout.cpp	/^const char* keyboard_layout::get_layout_name() {$/;"	f	class:keyboard_layout
get_method_imm_gen_len	src/cpu/core_dynrec/risc_armv4le-o3.h	/^static Bits get_method_imm_gen_len(Bit32u imm, Bits preffer00, Bits *num) {$/;"	f
get_method_imm_gen_len	src/cpu/core_dynrec/save/risc_armv4le-o3.h	/^static Bits get_method_imm_gen_len(Bit32u imm, Bits preffer00, Bits *num) {$/;"	f
get_tlb_entry	include/paging.h	/^INLINE tlb_entry *get_tlb_entry(PhysPt address) {$/;"	f
get_tlb_read	include/paging.h	/^INLINE HostPt get_tlb_read(PhysPt address) {$/;"	f
get_tlb_readhandler	include/paging.h	/^INLINE PageHandler* get_tlb_readhandler(PhysPt address) {$/;"	f
get_tlb_write	include/paging.h	/^INLINE HostPt get_tlb_write(PhysPt address) {$/;"	f
get_tlb_writehandler	include/paging.h	/^INLINE PageHandler* get_tlb_writehandler(PhysPt address) {$/;"	f
getb	src/hardware/serialport/softmodem.h	/^	Bit8u getb(void) {$/;"	f	class:CFifo
getbyte	src/debug/debug_disasm.cpp	/^static UINT8 getbyte(void) {$/;"	f	file:
getbyte_mac	src/debug/debug_disasm.cpp	/^static PhysPt getbyte_mac;$/;"	v	file:
getdiskinfo	src/dos/cdrom_aspi_win32.cpp	/^	SRB_GetDiskInfo     getdiskinfo;$/;"	m	union:__anon114	file:
gets	src/hardware/serialport/softmodem.h	/^	void gets(Bit8u * _str,Bitu _len) {$/;"	f	class:CFifo
getsettimeouts	src/dos/cdrom_aspi_win32.cpp	/^	SRB_GetSetTimeouts  getsettimeouts;$/;"	m	union:__anon114	file:
gfx	include/vga.h	/^	VGA_Gfx gfx;$/;"	m	struct:__anon59
gfx	src/gui/sdlmain.h	/^		   Bit16u gfx[320*120];$/;"	m	struct:SDL_Block::__anon141
gfx	src/hardware/vga_gfx.cpp	25;"	d	file:
gfxReg3C5	src/ints/mouse.cpp	/^static Bit8u index3C4,gfxReg3C5;$/;"	v	file:
gfxReg3CE	src/ints/mouse.cpp	/^static Bit8u gfxReg3CE[9];$/;"	v	file:
gfx_control	include/vga.h	/^	Bit8u gfx_control;$/;"	m	struct:__anon47
global_mask	src/debug/debug_inc.h	/^	Bit32u global_mask;					\/* Current msgmask *\/$/;"	m	struct:DBGBlock
go_read_latch	src/hardware/timer.cpp	/^	bool go_read_latch;$/;"	m	struct:PIT_Block	file:
gotoXY	src/libs/gui_tk/gui_tk.h	/^	void gotoXY(int x, int y) { this->x = x; this->y = y; };$/;"	f	class:GUI::Drawable
green	include/render.h	/^		Bit8u green;$/;"	m	struct:__anon30::__anon31
green	include/vga.h	/^	Bit8u green;$/;"	m	struct:__anon52
greenMask	src/gui/render_16.h	22;"	d
greenMask	src/gui/render_16.h	247;"	d
greenMask	src/gui/render_32.h	157;"	d
greenMask	src/gui/render_32.h	22;"	d
greenMask	src/gui/render_8.h	22;"	d
greenMask	src/gui/render_8.h	243;"	d
greenMask	src/gui/render_9.h	22;"	d
greenMask	src/gui/render_9.h	243;"	d
group	src/gui/sdl_mapper.cpp	/^	CBindGroup * group;$/;"	m	class:CJAxisBind	file:
group	src/gui/sdl_mapper.cpp	/^	CBindGroup * group;$/;"	m	class:CJButtonBind	file:
group	src/gui/sdl_mapper.cpp	/^	CBindGroup * group;$/;"	m	class:CJHatBind	file:
groups	src/debug/debug_disasm.cpp	/^static char const *groups[][8] = {   \/* group 0 is group 3 for %Ev set *\/$/;"	v	file:
grp1_table	src/cpu/core_dyn_x86/decoder.h	/^static DualOps grp1_table[8]={DOP_ADD,DOP_OR,DOP_ADC,DOP_SBB,DOP_AND,DOP_SUB,DOP_XOR,DOP_CMP};$/;"	v
grp1_table	src/cpu/core_dynrec/decoder_basic.h	/^static DualOps grp1_table[8]={$/;"	v
grp1_table	src/cpu/core_dynrec/save/decoder_basic.h	/^static DualOps grp1_table[8]={$/;"	v
grp2_1	src/cpu/core_dyn_x86/decoder.h	/^	grp2_1,grp2_imm,grp2_cl,$/;"	e	enum:grp2_types
grp2_1	src/cpu/core_dynrec/decoder_basic.h	/^	grp2_1,grp2_imm,grp2_cl,$/;"	e	enum:grp2_types
grp2_1	src/cpu/core_dynrec/save/decoder_basic.h	/^	grp2_1,grp2_imm,grp2_cl,$/;"	e	enum:grp2_types
grp2_cl	src/cpu/core_dyn_x86/decoder.h	/^	grp2_1,grp2_imm,grp2_cl,$/;"	e	enum:grp2_types
grp2_cl	src/cpu/core_dynrec/decoder_basic.h	/^	grp2_1,grp2_imm,grp2_cl,$/;"	e	enum:grp2_types
grp2_cl	src/cpu/core_dynrec/save/decoder_basic.h	/^	grp2_1,grp2_imm,grp2_cl,$/;"	e	enum:grp2_types
grp2_imm	src/cpu/core_dyn_x86/decoder.h	/^	grp2_1,grp2_imm,grp2_cl,$/;"	e	enum:grp2_types
grp2_imm	src/cpu/core_dynrec/decoder_basic.h	/^	grp2_1,grp2_imm,grp2_cl,$/;"	e	enum:grp2_types
grp2_imm	src/cpu/core_dynrec/save/decoder_basic.h	/^	grp2_1,grp2_imm,grp2_cl,$/;"	e	enum:grp2_types
grp2_types	src/cpu/core_dyn_x86/decoder.h	/^enum grp2_types {$/;"	g
grp2_types	src/cpu/core_dynrec/decoder_basic.h	/^enum grp2_types {$/;"	g
grp2_types	src/cpu/core_dynrec/save/decoder_basic.h	/^enum grp2_types {$/;"	g
gs	include/cpu.h	/^    Bit32u gs;                   \/* ... and another one *\/$/;"	m	struct:TSS_32
gs	include/regs.h	/^enum SegNames { es=0,cs,ss,ds,fs,gs};$/;"	e	enum:SegNames
gs	src/cpu/core_normal/prefix_none.h	/^		DO_PREFIX_SEG(gs);break;$/;"	v
gs	src/cpu/core_normal/verysimple_prefix_none.h	/^		DO_PREFIX_SEG(gs);break;$/;"	v
hASPI	src/dos/cdrom.h	/^	HINSTANCE	hASPI;$/;"	m	class:CDROM_Interface_Aspi
hCom	src/hardware/serialport/directserial_os2.h	/^	HFILE hCom;$/;"	m	class:CDirectSerial
hCom	src/hardware/serialport/directserial_win32.h	/^	HANDLE hCom;$/;"	m	class:CDirectSerial
hEvent	src/dos/cdrom.h	/^	HANDLE		hEvent;											\/\/ global event$/;"	m	class:CDROM_Interface_Aspi
hIOCTL	src/dos/cdrom.h	/^	HANDLE	hIOCTL;$/;"	m	class:CDROM_Interface_Ioctl
haId	src/dos/cdrom.h	/^	BYTE	haId;$/;"	m	class:CDROM_Interface_Aspi
hainquiry	src/dos/cdrom_aspi_win32.cpp	/^	SRB_HAInquiry       hainquiry;$/;"	m	union:__anon114	file:
handle	include/cross.h	/^	HANDLE          handle;$/;"	m	struct:dir_struct
handle	src/hardware/hardware.cpp	/^		FILE		*handle;$/;"	m	struct:__anon155::__anon159	file:
handle	src/hardware/hardware.cpp	/^		FILE * handle;$/;"	m	struct:__anon155::__anon156	file:
handle	src/hardware/hardware.cpp	/^		FILE * handle;$/;"	m	struct:__anon155::__anon157	file:
handle	src/ints/ems.cpp	/^	Bit16u handle;$/;"	m	struct:EMM_Mapping	file:
handle	src/platform/visualc/dirent.h	/^    HANDLE          handle;$/;"	m	struct:my_dir
handleEvent	src/hardware/serialport/serialport.cpp	/^void CSerial::handleEvent(Bit16u type) {$/;"	f	class:CSerial
handleIpxRequest	src/hardware/ipx.cpp	/^static void handleIpxRequest(void) {$/;"	f	file:
handleUpperEvent	src/hardware/serialport/directserial_os2.cpp	/^void CDirectSerial::handleUpperEvent(Bit16u type)$/;"	f	class:CDirectSerial
handleUpperEvent	src/hardware/serialport/directserial_posix.cpp	/^void CDirectSerial::handleUpperEvent(Bit16u type) {$/;"	f	class:CDirectSerial
handleUpperEvent	src/hardware/serialport/directserial_win32.cpp	/^void CDirectSerial::handleUpperEvent(Bit16u type) {$/;"	f	class:CDirectSerial
handleUpperEvent	src/hardware/serialport/nullmodem.cpp	/^void CNullModem::handleUpperEvent(Bit16u type) {$/;"	f	class:CNullModem
handleUpperEvent	src/hardware/serialport/serialdummy.cpp	/^void CSerialDummy::handleUpperEvent(Bit16u type) {$/;"	f	class:CSerialDummy
handleUpperEvent	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::handleUpperEvent(Bit16u type) {$/;"	f	class:CSerialModem
handler	include/mixer.h	/^	MIXER_Handler handler;$/;"	m	class:MixerChannel
handler	include/shell.h	/^	void (DOS_Shell::*handler)(char * args);		\/* Handler for this command *\/$/;"	m	struct:SHELL_Cmd
handler	include/vga.h	/^	PageHandler *handler;$/;"	m	struct:__anon58
handler	src/cpu/core_dyn_x86/cache.h	/^		CodePageHandler * handler;		\/\/Page containing this code$/;"	m	struct:CacheBlock::__anon83
handler	src/cpu/core_dynrec/cache.h	/^		CodePageHandlerDynRec * handler;			\/\/ page containing this code$/;"	m	struct:CacheBlockDynRec::__anon62
handler	src/cpu/core_dynrec/save/cache.h	/^		CodePageHandlerDynRec * handler;			\/\/ page containing this code$/;"	m	struct:CacheBlockDynRec::__anon72
handler	src/gui/sdl_mapper.cpp	/^	MAPPER_Handler * handler;$/;"	m	class:CHandlerEvent	file:
handler	src/hardware/adlib.h	/^	Handler* handler;				\/\/Handler that will generate the sound$/;"	m	class:Adlib::Module
handler	src/hardware/memory.cpp	/^		PageHandler *handler;$/;"	m	struct:MemoryBlock::__anon163	file:
handler	src/hardware/mixer.cpp	/^	MIXER_MixHandler handler;$/;"	m	struct:MIXER_Channel	file:
handler	src/hardware/pic.cpp	/^	TIMER_TickHandler handler;$/;"	m	struct:TickerBlock	file:
handlergroup	src/gui/sdl_mapper.cpp	/^static std::vector<CHandlerEvent *> handlergroup;$/;"	v	file:
hardDrive	include/bios_disk.h	/^	bool hardDrive;$/;"	m	class:imageDisk
hardware_cursor_active	include/vga.h	/^	tHWCursorActive hardware_cursor_active;$/;"	m	struct:SVGA_Driver
hasFocus	src/libs/gui_tk/gui_tk.h	/^	virtual bool hasFocus() const { return parent->hasFocus() && *parent->children.rbegin() == this; }$/;"	f	class:GUI::Window
hasFocus	src/libs/gui_tk/gui_tk.h	/^	virtual bool hasFocus() const { return true; }$/;"	f	class:GUI::Screen
hash	src/cpu/core_dyn_x86/cache.h	/^	} hash;$/;"	m	class:CacheBlock	typeref:struct:CacheBlock::__anon85
hash	src/cpu/core_dynrec/cache.h	/^	} hash;$/;"	m	class:CacheBlockDynRec	typeref:struct:CacheBlockDynRec::__anon64
hash	src/cpu/core_dynrec/save/cache.h	/^	} hash;$/;"	m	class:CacheBlockDynRec	typeref:struct:CacheBlockDynRec::__anon74
hash_map	src/cpu/core_dyn_x86/cache.h	/^	CacheBlock * hash_map[1+DYN_PAGE_HASH];$/;"	m	class:CodePageHandler
hash_map	src/cpu/core_dynrec/cache.h	/^	CacheBlockDynRec * hash_map[1+DYN_PAGE_HASH];$/;"	m	class:CodePageHandlerDynRec
hash_map	src/cpu/core_dynrec/save/cache.h	/^	CacheBlockDynRec * hash_map[1+DYN_PAGE_HASH];$/;"	m	class:CodePageHandlerDynRec
hat	src/gui/sdl_mapper.cpp	/^	Bitu hat;$/;"	m	class:CJHatBind	file:
hat	src/gui/sdl_mapper.cpp	/^	Bitu stick,hat,dir;$/;"	m	class:CJHatEvent	file:
hat_lists	src/gui/sdl_mapper.cpp	/^	CBindList * hat_lists;$/;"	m	class:CStickBindGroup	file:
hat_pressed	src/gui/sdl_mapper.cpp	/^	bool hat_pressed[16];$/;"	m	struct:__anon143	file:
hats	src/gui/sdl_mapper.cpp	/^	Bitu stick,emustick,axes,buttons,hats,emulated_axes,emulated_buttons,emulated_hats;$/;"	m	class:CStickBindGroup	file:
hats_cap	src/gui/sdl_mapper.cpp	/^	Bitu button_wrap,button_cap,axes_cap,hats_cap;$/;"	m	class:CStickBindGroup	file:
haveref	src/hardware/sblaster.cpp	/^		bool haveref;$/;"	m	struct:SB_INFO::__anon177	file:
hblkend	include/vga.h	/^		double hblkstart, hblkend;	\/\/ H-blanking$/;"	m	struct:__anon38::__anon39
hblkstart	include/vga.h	/^		double hblkstart, hblkend;	\/\/ H-blanking$/;"	m	struct:__anon38::__anon39
hdend	include/vga.h	/^		double hdend, htotal;$/;"	m	struct:__anon38::__anon39
hdend	include/vga.h	/^	Bit8u hdend;$/;"	m	struct:__anon46
hdispend	src/ints/int10.h	/^	Bitu	hdispend,vdispend;$/;"	m	struct:VideoModeBlock
hdrive	include/dos_system.h	/^	Bit8u hdrive;$/;"	m	class:DOS_File
headcount	src/dos/drives.h	/^	Bit16u headcount;$/;"	m	struct:bootstrap
headersize	src/dos/dos_execute.cpp	/^	Bit16u headersize;					\/* Paragraphs in header *\/$/;"	m	struct:EXE_Header	file:
heads	include/bios_disk.h	/^	Bit32u heads,cylinders,sectors;$/;"	m	class:imageDisk
headscyl	include/bios_disk.h	/^	Bit16u headscyl;  \/* Heads per cylinder *\/$/;"	m	struct:diskGeo
height	include/render.h	/^		Bitu height;$/;"	m	struct:__anon32::__anon33
height	include/render.h	/^		Bitu width, height;$/;"	m	struct:__anon32::__anon35
height	include/vga.h	/^	Bitu height;$/;"	m	struct:__anon38
height	src/gui/sdlmain.h	/^		   int height;$/;"	m	struct:SDL_Block::__anon141
height	src/gui/sdlmain.h	/^		Bit32u height;$/;"	m	struct:SDL_Block::__anon137
height	src/hardware/hardware.cpp	/^		Bitu		width, height, bpp;$/;"	m	struct:__anon155::__anon159	file:
height	src/libs/gui_tk/gui_tk.h	/^	const int height;$/;"	m	class:GUI::BitmapFont
height	src/libs/gui_tk/gui_tk.h	/^	const int height;$/;"	m	class:GUI::Drawable
height	src/libs/gui_tk/gui_tk.h	/^	int height;$/;"	m	class:GUI::Window
height	src/libs/zmbv/zmbv.h	/^	int height, width, pitch;$/;"	m	class:VideoCodec
help	include/shell.h	/^	const char * help;								\/* String with command help *\/$/;"	m	struct:SHELL_Cmd
herc	include/vga.h	/^	VGA_HERC herc;$/;"	m	struct:__anon59
hgc	include/vga.h	/^	VGA_HWCURSOR hgc;$/;"	m	struct:__anon42
hiFirstClust	src/dos/drives.h	/^	Bit16u hiFirstClust;$/;"	m	struct:direntry
hidden	src/ints/mouse.cpp	/^	Bit16u hidden;$/;"	m	struct:__anon199	file:
hiddensectorcount	src/dos/drives.h	/^	Bit32u hiddensectorcount;$/;"	m	struct:bootstrap
high_version	src/libs/zmbv/zmbv.h	/^		unsigned char high_version;$/;"	m	struct:VideoCodec::KeyframeHeader
hlines_skip	include/vga.h	/^	Bit8u hlines_skip;$/;"	m	struct:__anon37
hlt	include/cpu.h	/^	} hlt;$/;"	m	struct:CPUBlock	typeref:struct:CPUBlock::__anon8
hmoduleCodec	src/libs/zmbv/drvproc.cpp	/^HMODULE hmoduleCodec=0;$/;"	v
hold	src/gui/sdl_mapper.cpp	/^	CCheckButton * mod1,* mod2,* mod3,* hold;$/;"	m	struct:__anon145	file:
holding	src/gui/sdl_mapper.cpp	/^	bool active,holding;$/;"	m	class:CBind	file:
holdlist	src/gui/sdl_mapper.cpp	/^static CBindList holdlist;$/;"	v	file:
hor_overflow	include/vga.h	/^	Bit8u hor_overflow;$/;"	m	struct:__anon60
horizontal_display_end	include/vga.h	/^	Bit8u horizontal_display_end;$/;"	m	struct:__anon50
horizontal_pel_panning	include/vga.h	/^	Bit8u horizontal_pel_panning;$/;"	m	struct:__anon49
horizontal_total	include/vga.h	/^	Bit8u horizontal_total;$/;"	m	struct:__anon50
host	include/ipx.h	/^	Uint32 host;$/;"	m	struct:PackedIP
hostRead	src/hardware/vga_memory.cpp	/^static INLINE Bitu  hostRead(HostPt off ) {$/;"	f	file:
hostWrite	src/hardware/vga_memory.cpp	/^static INLINE void hostWrite(HostPt off, Bitu val) {$/;"	f	file:
host_cw	src/cpu/core_dyn_x86.cpp	/^	Bit32u		cw,host_cw;$/;"	m	struct:__anon96	file:
host_readb	include/mem.h	/^INLINE Bit8u host_readb(HostPt off) {$/;"	f
host_readd	include/mem.h	/^INLINE Bit32u host_readd(HostPt off) {$/;"	f
host_readw	include/mem.h	/^INLINE Bit16u host_readw(HostPt off) {$/;"	f
host_writeb	include/mem.h	/^INLINE void host_writeb(HostPt off,Bit8u val) {$/;"	f
host_writed	include/mem.h	/^INLINE void host_writed(HostPt off,Bit32u val) {$/;"	f
host_writew	include/mem.h	/^INLINE void host_writew(HostPt off,Bit16u val) {$/;"	f
hostmem	src/cpu/core_dyn_x86/cache.h	/^	HostPt hostmem;	$/;"	m	class:CodePageHandler
hostmem	src/cpu/core_dynrec/cache.h	/^	HostPt hostmem;	$/;"	m	class:CodePageHandlerDynRec
hostmem	src/cpu/core_dynrec/save/cache.h	/^	HostPt hostmem;	$/;"	m	class:CodePageHandlerDynRec
hostnamebuffer	src/hardware/serialport/nullmodem.h	/^	Bit8u hostnamebuffer[128]; \/\/ the name passed to us by the user$/;"	m	class:CNullModem
hotx	src/ints/mouse.cpp	/^	Bit16s  hotx,hoty;$/;"	m	struct:__anon199	file:
hoty	src/ints/mouse.cpp	/^	Bit16s  hotx,hoty;$/;"	m	struct:__anon199	file:
hrend	include/vga.h	/^		double hrstart, hrend;		\/\/ H-retrace$/;"	m	struct:__anon38::__anon39
hrstart	include/vga.h	/^		double hrstart, hrend;		\/\/ H-retrace$/;"	m	struct:__anon38::__anon39
hsyncp	include/vga.h	/^	Bit8u hsyncp;$/;"	m	struct:__anon46
htotal	include/vga.h	/^		double hdend, htotal;$/;"	m	struct:__anon38::__anon39
htotal	include/vga.h	/^	Bit8u htotal;$/;"	m	struct:__anon46
htotal	include/vga.h	/^	Bitu htotal;$/;"	m	struct:__anon60
htotal	src/ints/int10.h	/^	Bitu	htotal,vtotal;$/;"	m	struct:VideoModeBlock
hue_offset	src/hardware/vga_other.cpp	/^static double hue_offset = 0.0;$/;"	v	file:
hw	src/hardware/sblaster.cpp	/^	} hw;$/;"	m	struct:SB_INFO	typeref:struct:SB_INFO::__anon178	file:
i	src/debug/debug.cpp	/^	bool i;$/;"	m	struct:TLogInst	file:
iExp2	src/misc/fixed.cpp	/^FixedPoint iExp2(FixedPoint p_Base)$/;"	f	file:
iLog2	src/misc/fixed.cpp	/^FixedPoint iLog2( FixedPoint p_Base )$/;"	f	file:
iabs	src/misc/fixed.cpp	/^long iabs( register long p_Base )$/;"	f	file:
icw_index	src/hardware/pic.cpp	/^	Bitu icw_index;$/;"	m	struct:PIC_Controller	file:
icw_words	src/hardware/pic.cpp	/^	Bitu icw_words;$/;"	m	struct:PIC_Controller	file:
ident	src/dos/drives.h	/^	Bit8u ident[222];$/;"	m	struct:isoDirEntry
idnumber	include/serialport.h	/^	Bitu idnumber;$/;"	m	class:CSerial
idt	include/cpu.h	/^	DescriptorTable idt;$/;"	m	struct:CPUBlock
ignoreAddressOnce	src/debug/debug.cpp	/^Bitu					ignoreAddressOnce = 0;$/;"	v
ignoreOnce	src/debug/debug.cpp	/^	static CBreakpoint*				ignoreOnce;$/;"	m	class:CBreakpoint	file:
ignoreOnce	src/debug/debug.cpp	/^CBreakpoint*			CBreakpoint::ignoreOnce = 0;$/;"	m	class:CBreakpoint	file:
illegal_handler	src/cpu/callback.cpp	/^static Bitu illegal_handler(void) {$/;"	f	file:
illegal_page_handler	src/hardware/memory.cpp	/^static IllegalPageHandler illegal_page_handler;$/;"	v	file:
ilog10	src/misc/fixed.cpp	/^FixedPoint ilog10( FixedPoint p_Base )$/;"	f	file:
image	src/hardware/hardware.cpp	/^	} image;$/;"	m	struct:__anon155	typeref:struct:__anon155::__anon158	file:
imageDisk	include/bios_disk.h	/^class imageDisk  {$/;"	c
imageDisk	src/ints/bios_disk.cpp	/^imageDisk::imageDisk(FILE *imgFile, Bit8u *imgName, Bit32u imgSizeK, bool isHardDisk) {$/;"	f	class:imageDisk
imageDiskList	src/ints/bios_disk.cpp	/^imageDisk *imageDiskList[MAX_DISK_IMAGES];$/;"	v
imagePlayer	src/dos/cdrom.h	/^static  struct imagePlayer {$/;"	s	class:CDROM_Interface_Image
images	src/dos/cdrom.h	/^static	CDROM_Interface_Image* images[26];$/;"	m	class:CDROM_Interface_Image
images	src/dos/cdrom_image.cpp	/^CDROM_Interface_Image* CDROM_Interface_Image::images[26];$/;"	m	class:CDROM_Interface_Image	file:
imax	src/libs/gui_tk/gui_tk.h	111;"	d
imgDTA	src/ints/bios_disk.cpp	/^DOS_DTA *imgDTA;$/;"	v
imgDTAPtr	src/ints/bios_disk.cpp	/^RealPt imgDTAPtr;$/;"	v
imgDTASeg	src/ints/bios_disk.cpp	/^Bit16u imgDTASeg;$/;"	v
imin	src/libs/gui_tk/gui_tk.h	110;"	d
imm	src/cpu/core_full/support.h	/^	} op1,op2,imm;$/;"	m	struct:FullData	typeref:union:FullData::__anon103
in	src/hardware/sblaster.cpp	/^		} in,out;$/;"	m	struct:SB_INFO::__anon173	typeref:struct:SB_INFO::__anon173::__anon174	file:
inBuffer	src/hardware/ipxserver.cpp	/^Bit8u inBuffer[IPXBUFFERSIZE];$/;"	v
inDOS_flag	include/dos_inc.h	/^		Bit8u inDOS_flag;		\/* 0x01 InDOS flag (count of active INT 21 calls) *\/$/;"	m	struct:DOS_SDA::sSDA
inIAC	src/hardware/serialport/nullmodem.h	/^		bool inIAC;$/;"	m	struct:CNullModem::__anon180
inIAC	src/hardware/serialport/softmodem.h	/^		bool inIAC;$/;"	m	struct:CSerialModem::__anon181
inLine	include/render.h	/^		Bitu inLine, outLine;$/;"	m	struct:__anon32::__anon35
inMode	include/render.h	/^		scalerMode_t inMode;$/;"	m	struct:__anon32::__anon35
inPacket	include/ipxserver.h	/^	bool inPacket;      \/\/ In packet reception flag$/;"	m	struct:packetBuffer
incomingPacket	src/hardware/ipx.cpp	/^packetBuffer incomingPacket;$/;"	v
increment	include/dma.h	/^	bool increment;$/;"	m	class:DmaChannel
index	include/vga.h	/^	Bit8u index;$/;"	m	struct:__anon46
index	include/vga.h	/^	Bit8u index;$/;"	m	struct:__anon48
index	include/vga.h	/^	Bit8u index;$/;"	m	struct:__anon49
index	include/vga.h	/^	Bit8u index;$/;"	m	struct:__anon50
index	include/vga.h	/^	Bit8u index;$/;"	m	struct:__anon51
index	src/cpu/core_dyn_x86/cache.h	/^		Bitu index;$/;"	m	struct:CacheBlock::__anon85
index	src/cpu/core_dyn_x86/decoder.h	/^		Bitu index;$/;"	m	struct:DynDecode::__anon89
index	src/cpu/core_dyn_x86/risc_x86.h	/^    Bit8u index;$/;"	m	class:GenReg
index	src/cpu/core_dynrec/cache.h	/^		Bitu index;$/;"	m	struct:CacheBlockDynRec::__anon64
index	src/cpu/core_dynrec/decoder_basic.h	/^		Bitu index;		\/\/ index to the current byte of the instruction stream$/;"	m	struct:DynDecode::__anon68
index	src/cpu/core_dynrec/save/cache.h	/^		Bitu index;$/;"	m	struct:CacheBlockDynRec::__anon74
index	src/cpu/core_dynrec/save/decoder_basic.h	/^		Bitu index;		\/\/ index to the current byte of the instruction stream$/;"	m	struct:DynDecode::__anon78
index	src/hardware/hardware.cpp	/^		Bit8u		*index;$/;"	m	struct:__anon155::__anon159	file:
index	src/hardware/pcspeaker.cpp	/^	float index;$/;"	m	struct:DelayEntry	file:
index	src/hardware/pic.cpp	/^	float index;$/;"	m	struct:PICEntry	file:
index	src/hardware/sblaster.cpp	/^		Bit8u index;$/;"	m	struct:SB_INFO::__anon176	file:
index3C4	src/ints/mouse.cpp	/^static Bit8u index3C4,gfxReg3C5;$/;"	v	file:
index9warned	src/hardware/vga_gfx.cpp	/^static bool index9warned=false;$/;"	v	file:
indexsize	src/hardware/hardware.cpp	/^		Bitu		indexsize, indexused;$/;"	m	struct:__anon155::__anon159	file:
indexused	src/hardware/hardware.cpp	/^		Bitu		indexsize, indexused;$/;"	m	struct:__anon155::__anon159	file:
info	include/dos_system.h	/^	char info[256];$/;"	m	class:DOS_Drive
info	src/debug/disasm_tables.h	/^	Bit8u info[MAX_INFO];$/;"	m	struct:Dentry
info	src/dos/drive_fat.cpp	/^	Bit16u info;$/;"	m	class:fatFile	file:
info	src/dos/drive_iso.cpp	/^	Bit16u info;$/;"	m	class:isoFile	file:
inhibit_draw	src/ints/mouse.cpp	/^	bool inhibit_draw;$/;"	m	struct:__anon199	file:
initCS	src/dos/dos_execute.cpp	/^	Bit16u initCS;$/;"	m	struct:EXE_Header	file:
initIP	src/dos/dos_execute.cpp	/^	Bit16u initIP;$/;"	m	struct:EXE_Header	file:
initSP	src/dos/dos_execute.cpp	/^	Bit16u initSP;$/;"	m	struct:EXE_Header	file:
initSS	src/dos/dos_execute.cpp	/^	Bit16u initSS;$/;"	m	struct:EXE_Header	file:
init_line	src/shell/shell.cpp	/^static char const * const init_line="\/INIT AUTOEXEC.BAT";$/;"	v	file:
init_page_handler	src/cpu/paging.cpp	/^static InitPageHandler init_page_handler;$/;"	v	file:
init_page_handler_userro	src/cpu/paging.cpp	/^static InitPageUserROHandler init_page_handler_userro;$/;"	v	file:
init_tables	src/hardware/fmopl.cpp	/^static int init_tables(void)$/;"	f	file:
init_tables	src/hardware/ymf262.cpp	/^static int init_tables(void)$/;"	f	file:
initcsip	include/dos_inc.h	/^		RealPt initcsip;$/;"	m	struct:DOS_ParamBlock::sExec
inited	src/cpu/cpu.cpp	/^	static bool inited;$/;"	m	class:CPU	file:
inited	src/cpu/cpu.cpp	/^bool CPU::inited=false;$/;"	m	class:CPU	file:
initfunctions	include/setup.h	/^	std::list<Function_wrapper> initfunctions;$/;"	m	class:Section
initsssp	include/dos_inc.h	/^		RealPt initsssp;$/;"	m	struct:DOS_ParamBlock::sExec
inputMode	src/debug/debug.cpp	/^	bool	inputMode;$/;"	m	struct:SCodeViewData	file:
inputStr	src/debug/debug.cpp	/^	char	inputStr[255];$/;"	m	struct:SCodeViewData	file:
input_count	src/debug/debug.cpp	/^static Bitu input_count;$/;"	v	file:
input_handle	include/shell.h	/^	Bit16u input_handle;$/;"	m	class:DOS_Shell
input_y	src/debug/debug_inc.h	/^	Bit32u input_y;$/;"	m	struct:DBGBlock
insert	src/libs/gui_tk/gui_tk.h	/^	bool insert;$/;"	m	class:GUI::Input
inservice	src/hardware/pic.cpp	/^	bool inservice;$/;"	m	struct:IRQ_Block	file:
inst_imm_b	src/cpu/core_full/support.h	211;"	d
inst_imm_b	src/cpu/core_full/support.h	234;"	d
inst_imm_bs	src/cpu/core_full/support.h	212;"	d
inst_imm_bs	src/cpu/core_full/support.h	235;"	d
inst_imm_d	src/cpu/core_full/support.h	215;"	d
inst_imm_d	src/cpu/core_full/support.h	238;"	d
inst_imm_ds	src/cpu/core_full/support.h	216;"	d
inst_imm_ds	src/cpu/core_full/support.h	239;"	d
inst_imm_w	src/cpu/core_full/support.h	213;"	d
inst_imm_w	src/cpu/core_full/support.h	236;"	d
inst_imm_ws	src/cpu/core_full/support.h	214;"	d
inst_imm_ws	src/cpu/core_full/support.h	237;"	d
inst_op1_b	src/cpu/core_full/support.h	197;"	d
inst_op1_b	src/cpu/core_full/support.h	220;"	d
inst_op1_bs	src/cpu/core_full/support.h	198;"	d
inst_op1_bs	src/cpu/core_full/support.h	221;"	d
inst_op1_d	src/cpu/core_full/support.h	201;"	d
inst_op1_d	src/cpu/core_full/support.h	224;"	d
inst_op1_ds	src/cpu/core_full/support.h	202;"	d
inst_op1_ds	src/cpu/core_full/support.h	225;"	d
inst_op1_w	src/cpu/core_full/support.h	199;"	d
inst_op1_w	src/cpu/core_full/support.h	222;"	d
inst_op1_ws	src/cpu/core_full/support.h	200;"	d
inst_op1_ws	src/cpu/core_full/support.h	223;"	d
inst_op2_b	src/cpu/core_full/support.h	204;"	d
inst_op2_b	src/cpu/core_full/support.h	227;"	d
inst_op2_bs	src/cpu/core_full/support.h	205;"	d
inst_op2_bs	src/cpu/core_full/support.h	228;"	d
inst_op2_d	src/cpu/core_full/support.h	208;"	d
inst_op2_d	src/cpu/core_full/support.h	231;"	d
inst_op2_ds	src/cpu/core_full/support.h	209;"	d
inst_op2_ds	src/cpu/core_full/support.h	232;"	d
inst_op2_w	src/cpu/core_full/support.h	206;"	d
inst_op2_w	src/cpu/core_full/support.h	229;"	d
inst_op2_ws	src/cpu/core_full/support.h	207;"	d
inst_op2_ws	src/cpu/core_full/support.h	230;"	d
installed	include/callback.h	/^		bool installed;$/;"	m	struct:CALLBACK_HandlerObject::__anon4
installed	include/callback.h	/^	bool installed;$/;"	m	class:CALLBACK_HandlerObject
installed	include/inout.h	/^	bool installed;$/;"	m	class:IO_Base
installed	include/mixer.h	/^	bool installed;$/;"	m	class:MixerObject
installed	include/shell.h	/^	bool installed;$/;"	m	class:AutoexecObject
instruction_offset	src/debug/debug_disasm.cpp	/^static int instruction_offset;$/;"	v	file:
int10	src/ints/int10.cpp	/^Int10Data int10;$/;"	v
int10_font_08	src/ints/int10_memory.cpp	/^Bit8u int10_font_08[256 * 8] = {$/;"	v
int10_font_14	src/ints/int10_memory.cpp	/^Bit8u int10_font_14[256 * 14] = {$/;"	v
int10_font_16	src/ints/int10_memory.cpp	/^Bit8u int10_font_16[256 * 16] = {$/;"	v
int16_t	src/libs/gui_tk/gui_tk.h	/^typedef signed __int16  int16_t;$/;"	t
int32_t	src/libs/gui_tk/gui_tk.h	/^typedef signed __int32  int32_t;$/;"	t
int67	src/ints/ems.cpp	/^	CALLBACK_HandlerObject call_vdma,int67,call_vcpi,call_v86mon;$/;"	m	class:EMS	file:
int74_ret_callback	src/ints/mouse.cpp	/^static Bitu call_int33,call_int74,int74_ret_callback,call_mouse_bd;$/;"	v	file:
int8_t	src/libs/gui_tk/gui_tk.h	/^typedef signed __int8   int8_t;$/;"	t
intNr	src/debug/debug.cpp	/^	Bit8u		intNr;$/;"	m	class:CBreakpoint	file:
int_22	include/dos_inc.h	/^		RealPt	int_22;				\/* Terminate Address *\/$/;"	m	struct:DOS_PSP::sPSP
int_23	include/dos_inc.h	/^		RealPt	int_23;				\/* Break Address *\/$/;"	m	struct:DOS_PSP::sPSP
int_24	include/dos_inc.h	/^		RealPt	int_24;				\/* Critical Error Address *\/$/;"	m	struct:DOS_PSP::sPSP
interface_det	src/hardware/disney.cpp	/^	Bitu interface_det;$/;"	m	struct:__anon152	file:
interim_flag	include/dos_inc.h	/^		Bit8u interim_flag;$/;"	m	struct:DOS_PSP::sPSP
interleaveGapSize	src/dos/drives.h	/^	Bit8u interleaveGapSize;$/;"	m	struct:isoDirEntry
internal	include/vga.h	/^	VGA_Internal internal;$/;"	m	struct:__anon59
internal_progs	src/misc/programs.cpp	/^static std::vector<PROGRAMS_Main*> internal_progs;$/;"	v	file:
interpret	src/libs/gui_tk/gui_tk.h	/^	bool interpret;$/;"	m	class:GUI::Label
interrupt	include/callback.h	/^		Bit8u interrupt;$/;"	m	struct:CALLBACK_HandlerObject::__anon4
interrupt	src/dos/dos_mscdex.cpp	/^		Bit16u	interrupt;$/;"	m	struct:DOS_DeviceHeader::sDeviceHeader	file:
inuse	src/hardware/serialport/softmodem.h	/^	INLINE Bitu inuse(void) {$/;"	f	class:CFifo
invalid	src/gui/sdlmain.h	/^		   int invalid;$/;"	m	struct:SDL_Block::__anon141
invalid_opcode	src/debug/debug_disasm.cpp	/^static int invalid_opcode = 0;$/;"	v	file:
invalidation_map	src/cpu/core_dyn_x86/cache.h	/^	Bit8u * invalidation_map;$/;"	m	class:CodePageHandler
invalidation_map	src/cpu/core_dynrec/cache.h	/^	Bit8u * invalidation_map;$/;"	m	class:CodePageHandlerDynRec
invalidation_map	src/cpu/core_dynrec/save/cache.h	/^	Bit8u * invalidation_map;$/;"	m	class:CodePageHandlerDynRec
invmap	src/cpu/core_dyn_x86/decoder.h	/^		Bit8u * invmap;$/;"	m	struct:DynDecode::__anon89
invmap	src/cpu/core_dynrec/decoder_basic.h	/^		Bit8u * invmap;	\/\/ invalidation map$/;"	m	struct:DynDecode::__anon68
invmap	src/cpu/core_dynrec/save/decoder_basic.h	/^		Bit8u * invmap;	\/\/ invalidation map$/;"	m	struct:DynDecode::__anon78
io_readhandlers	src/hardware/iohandler.cpp	/^IO_ReadHandler * io_readhandlers[3][IO_MAX];$/;"	v
io_writehandlers	src/hardware/iohandler.cpp	/^IO_WriteHandler * io_writehandlers[3][IO_MAX];$/;"	v
iof_queue	src/hardware/iohandler.cpp	/^} iof_queue;$/;"	v	typeref:struct:__anon160	file:
ip	include/cpu.h	/^    Bit16u ip;                   \/* The instruction pointer *\/$/;"	m	struct:TSS_16
ip	include/regs.h	/^	GenReg32 regs[8],ip;$/;"	m	struct:CPU_Regs
ipconn	src/hardware/ipxserver.cpp	/^IPaddress ipconn[SOCKETTABLESIZE];  \/\/ Active TCP\/IP connection $/;"	v
ipow	src/misc/fixed.cpp	/^FixedPoint ipow( FixedPoint p_Base, FixedPoint p_Power )$/;"	f	file:
ipxClientSocket	src/hardware/ipx.cpp	/^UDPsocket ipxClientSocket;$/;"	v
ipxServConnIp	src/hardware/ipx.cpp	/^IPaddress ipxServConnIp;			\/\/ IPAddress for client connection to server$/;"	v
ipxServerIp	src/hardware/ipxserver.cpp	/^IPaddress ipxServerIp;  \/\/ IPAddress for server's listening port$/;"	v
ipxServerSocket	src/hardware/ipxserver.cpp	/^UDPsocket ipxServerSocket;  \/\/ Listening server socket$/;"	v
ipx_callback	src/hardware/ipx.cpp	/^static RealPt ipx_callback;$/;"	v	file:
ipxnetaddr	src/hardware/ipx.cpp	/^struct ipxnetaddr {$/;"	s	file:
irq	include/serialport.h	/^	Bitu irq;$/;"	m	class:CSerial
irq	src/hardware/sblaster.cpp	/^		Bitu irq;$/;"	m	struct:SB_INFO::__anon178	file:
irq	src/hardware/sblaster.cpp	/^	} irq;$/;"	m	struct:SB_INFO	typeref:struct:SB_INFO::__anon172	file:
irq	src/ints/bios.cpp	/^	Bit8u irq;$/;"	m	struct:__anon193	file:
irq_active	include/serialport.h	/^	bool irq_active;$/;"	m	class:CSerial
irqs	src/hardware/pic.cpp	/^static IRQ_Block irqs[16];$/;"	v	file:
is386	src/cpu/cpu.cpp	/^	Bitu is386;$/;"	m	class:TaskStateSegment	file:
isChecked	src/libs/gui_tk/gui_tk.h	/^	virtual bool isChecked() { return checked; }$/;"	f	class:GUI::Checkbox
isChecked	src/libs/gui_tk/gui_tk.h	/^	virtual bool isChecked() { return checked; }$/;"	f	class:GUI::Radiobox
isDir	include/dos_system.h	/^		bool		isDir;$/;"	m	class:DOS_Drive_Cache::CFileInfo
isInESRList	include/ipx.h	/^	bool isInESRList;$/;"	m	class:ECBClass
isIpxConnected	src/hardware/ipx.cpp	/^bool isIpxConnected;$/;"	v
isIpxServer	src/hardware/ipx.cpp	/^bool isIpxServer;$/;"	v
isOpen	src/gui/midi_oss.h	/^	bool isOpen;$/;"	m	class:MidiHandler_oss
isOpen	src/gui/midi_win32.h	/^	bool isOpen;$/;"	m	class:MidiHandler_win32
isPaused	src/dos/cdrom.h	/^		bool    isPaused;$/;"	m	struct:CDROM_Interface_Image::imagePlayer
isPaused	src/dos/cdrom.h	/^		bool    isPaused;$/;"	m	struct:CDROM_Interface_Ioctl::dxPlayer
isPlaying	src/dos/cdrom.h	/^		bool    isPlaying;$/;"	m	struct:CDROM_Interface_Image::imagePlayer
isPlaying	src/dos/cdrom.h	/^		bool    isPlaying;$/;"	m	struct:CDROM_Interface_Ioctl::dxPlayer
isRemote	src/dos/drive_fat.cpp	/^bool fatDrive::isRemote(void) {	return false; }$/;"	f	class:fatDrive
isRemote	src/dos/drive_iso.cpp	/^bool isoDrive::isRemote(void)$/;"	f	class:isoDrive
isRemote	src/dos/drive_local.cpp	/^bool cdromDrive::isRemote(void) {$/;"	f	class:cdromDrive
isRemote	src/dos/drive_local.cpp	/^bool localDrive::isRemote(void) {$/;"	f	class:localDrive
isRemote	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::isRemote(void) {$/;"	f	class:Virtual_Drive
isRemovable	src/dos/drive_fat.cpp	/^bool fatDrive::isRemovable(void) { return false; }$/;"	f	class:fatDrive
isRemovable	src/dos/drive_iso.cpp	/^bool isoDrive::isRemovable(void)$/;"	f	class:isoDrive
isRemovable	src/dos/drive_local.cpp	/^bool cdromDrive::isRemovable(void) {$/;"	f	class:cdromDrive
isRemovable	src/dos/drive_local.cpp	/^bool localDrive::isRemovable(void) {$/;"	f	class:localDrive
isRemovable	src/dos/drive_virtual.cpp	/^bool Virtual_Drive::isRemovable(void) {$/;"	f	class:Virtual_Drive
isVisible	src/libs/gui_tk/gui_tk.h	/^	virtual bool isVisible() const { return (!parent || parent->isVisible()) && visible; }$/;"	f	class:GUI::Window
is_dummy	src/gui/sdl_mapper.cpp	/^	bool is_dummy;$/;"	m	class:CStickBindGroup	file:
isign	src/libs/gui_tk/gui_tk.h	112;"	d
isoDirEntry	src/dos/drives.h	/^struct isoDirEntry {$/;"	s
isoDrive	src/dos/drive_iso.cpp	/^isoDrive::isoDrive(char driveLetter, const char *fileName, Bit8u mediaid, int &error)$/;"	f	class:isoDrive
isoDrive	src/dos/drives.h	/^class isoDrive : public DOS_Drive {$/;"	c
isoFile	src/dos/drive_iso.cpp	/^class isoFile : public DOS_File {$/;"	c	file:
isoFile	src/dos/drive_iso.cpp	/^isoFile::isoFile(isoDrive *drive, const char *name, FileStat_Block *stat, Bit32u offset)$/;"	f	class:isoFile
isoPVD	src/dos/drives.h	/^struct isoPVD {$/;"	s
isopen	src/hardware/serialport/misc_util.h	/^	bool isopen;$/;"	m	class:TCPClientSocket
isopen	src/hardware/serialport/misc_util.h	/^	bool isopen;$/;"	m	class:TCPServerSocket
isqrtB	src/misc/fixed.cpp	/^FixedPoint isqrtB(FixedPoint p_Square)$/;"	f	file:
isvalid	src/dos/dos_files.cpp	/^static bool isvalid(const char in){$/;"	f	file:
it	include/control.h	/^	typedef std::list<Section*>::iterator it;$/;"	t	class:Config
it	include/setup.h	/^	typedef std::list<Property*>::iterator it;$/;"	t	class:Section_prop
items	src/libs/gui_tk/gui_tk.h	/^	std::vector<String> items;$/;"	m	class:GUI::Menu
iter	include/setup.h	/^	typedef std::vector<Value>::iterator iter;$/;"	t	class:Property
itmb	src/misc/messages.cpp	/^typedef list<MessageBlock>::iterator itmb;$/;"	t	file:
iuflag	include/ipx.h	/^	Bit8u iuflag;		\/\/ Need to save data since we are not always in$/;"	m	class:ECBClass
joindedDrives	include/dos_inc.h	/^		Bit8u	joindedDrives;		\/\/  0x34 joined drives$/;"	m	struct:DOS_InfoBlock::sDIB
joytype	src/hardware/joystick.cpp	/^JoystickType joytype;$/;"	v
jump	include/dos_inc.h	/^		Bit8u jump[3];$/;"	m	struct:bootSector::entries
kcode	src/hardware/fmopl.cpp	/^	UINT8   kcode;		\/* key code (for key scaling)	*\/$/;"	m	struct:__anon154	file:
kcode	src/hardware/ymf262.cpp	/^	UINT8	kcode;		\/* key code (for key scaling)	*\/$/;"	m	struct:__anon191	file:
key	src/gui/sdl_mapper.cpp	/^	Bitu key;$/;"	m	struct:__anon146	file:
key	src/gui/sdl_mapper.cpp	/^	KBD_KEYS key;$/;"	m	class:CKeyEvent	file:
key	src/gui/sdl_mapper.cpp	/^	KBD_KEYS key;$/;"	m	struct:KeyBlock	file:
key	src/gui/sdl_mapper.cpp	/^	SDLKey key;$/;"	m	class:CKeyBind	file:
key	src/hardware/fmopl.cpp	/^	UINT32	key;		\/* 0 = KEY OFF, >0 = KEY ON		*\/$/;"	m	struct:__anon153	file:
key	src/hardware/keyboard.cpp	/^		KBD_KEYS key;$/;"	m	struct:__anon161::__anon162	file:
key	src/hardware/ymf262.cpp	/^	UINT32	key;		\/* 0 = KEY OFF, >0 = KEY ON		*\/$/;"	m	struct:__anon190	file:
keyDown	src/libs/gui_tk/gui_tk.h	/^	virtual bool keyDown(const Key &key) { return true; };$/;"	f	class:GUI::Menubar
keyDown	src/libs/gui_tk/gui_tk.h	/^	virtual bool keyDown(const Key &key) {$/;"	f	class:GUI::Menu
keyUp	src/libs/gui_tk/gui_tk.h	/^	virtual bool keyUp(const Key &key) { return true; };$/;"	f	class:GUI::Menubar
keyb	src/hardware/keyboard.cpp	/^} keyb;$/;"	v	typeref:struct:__anon161	file:
keyboard_layout	src/dos/dos_keyboard_layout.cpp	/^	keyboard_layout() {$/;"	f	class:keyboard_layout
keyboard_layout	src/dos/dos_keyboard_layout.cpp	/^class keyboard_layout {$/;"	c	file:
keyboard_param	src/hardware/fmopl.cpp	/^	int		keyboard_param;$/;"	m	struct:fm_opl_f	file:
keyboardhandler_r	src/hardware/fmopl.cpp	/^	OPL_PORTHANDLER_R keyboardhandler_r;$/;"	m	struct:fm_opl_f	file:
keyboardhandler_w	src/hardware/fmopl.cpp	/^	OPL_PORTHANDLER_W keyboardhandler_w;$/;"	m	struct:fm_opl_f	file:
keycode	src/gui/sdlmain.h	/^		   Bit8u keycode[320*120];$/;"	m	struct:SDL_Block::__anon141
keys	src/gui/sdl_mapper.cpp	/^	Bitu keys;$/;"	m	class:CKeyBindGroup	file:
killRead	src/ints/bios_disk.cpp	/^bool killRead;$/;"	v
ksize	include/bios_disk.h	/^	Bit32u ksize;  \/* Size in kilobytes *\/$/;"	m	struct:diskGeo
ksl	src/hardware/fmopl.cpp	/^	UINT8	ksl;		\/* keyscale level				*\/$/;"	m	struct:__anon153	file:
ksl	src/hardware/ymf262.cpp	/^	UINT8	ksl;		\/* keyscale level				*\/$/;"	m	struct:__anon190	file:
ksl_base	src/hardware/fmopl.cpp	/^	UINT32  ksl_base;	\/* KeyScaleLevel Base step		*\/$/;"	m	struct:__anon154	file:
ksl_base	src/hardware/ymf262.cpp	/^	UINT32	ksl_base;	\/* KeyScaleLevel Base step		*\/$/;"	m	struct:__anon191	file:
ksl_level	src/hardware/fmopl.cpp	/^static const INT32 ksl_level[4]=$/;"	v	file:
ksl_level	src/hardware/ymf262.cpp	/^static const INT32 ksl_level[4]=$/;"	v	file:
ksl_tab	src/hardware/fmopl.cpp	/^static const UINT32 ksl_tab[8*16]=$/;"	v	file:
ksl_tab	src/hardware/ymf262.cpp	/^static const UINT32 ksl_tab[8*16]=$/;"	v	file:
ksr	src/hardware/fmopl.cpp	/^	UINT8	ksr;		\/* key scale rate: kcode>>KSR	*\/$/;"	m	struct:__anon153	file:
ksr	src/hardware/ymf262.cpp	/^	UINT8	ksr;		\/* key scale rate: kcode>>KSR	*\/$/;"	m	struct:__anon190	file:
l	include/fpu.h	/^    } l;$/;"	m	union:__anon19	typeref:struct:__anon19::__anon20
l	include/fpu.h	/^    } l;$/;"	m	union:__anon19	typeref:struct:__anon19::__anon21
lAddr	src/dos/wnaspi32.h	/^ unsigned long  lAddr;$/;"	m	struct:__anon132
l_completion	include/shell.h	/^	std::list<std::string> l_history, l_completion;$/;"	m	class:DOS_Shell
l_history	include/shell.h	/^	std::list<std::string> l_history, l_completion;$/;"	m	class:DOS_Shell
la_window	include/vga.h	/^	Bit16u la_window;$/;"	m	struct:__anon42
label	include/dos_system.h	/^	char		label				[CROSS_LEN];$/;"	m	class:DOS_Drive_Cache
label	src/libs/gui_tk/gui_tk.h	/^	String label;$/;"	m	class:GUI::Frame
laltstate	src/gui/sdlmain.h	/^	Bit8u laltstate;$/;"	m	struct:SDL_Block
language	src/ints/mouse.cpp	/^	Bit16u  language;$/;"	m	struct:__anon199	file:
language_code_count	src/dos/dos_keyboard_layout.cpp	/^	Bitu language_code_count;$/;"	m	class:keyboard_layout	file:
language_codes	src/dos/dos_keyboard_layout.cpp	/^	char** language_codes;$/;"	m	class:keyboard_layout	file:
last	include/mixer.h	/^	Bits last[2];$/;"	m	class:MixerChannel
last	include/render.h	/^	Bitu last;$/;"	m	struct:__anon30
last	include/vga.h	/^	Bit32u	start, last;$/;"	m	struct:__anon57
last	src/hardware/cmos.cpp	/^	} last;$/;"	m	struct:__anon149	typeref:struct:__anon149::__anon151	file:
last	src/hardware/hardware.cpp	/^		Bit32u last;$/;"	m	struct:__anon155::__anon157	file:
last	src/hardware/sblaster.cpp	/^		Bit16s last;$/;"	m	struct:SB_INFO::__anon175	file:
last	src/libs/gui_tk/gui_tk.h	/^	const Char last;$/;"	m	class:GUI::BitmapFont
lastAddress	include/vga.h	/^	Bit32u	lastAddress;$/;"	m	struct:__anon57
lastCount	src/dos/cdrom.h	/^		int lastCount;$/;"	m	class:CDROM_Interface_Image::AudioFile
lastResult	src/dos/dos_mscdex.cpp	/^		bool	lastResult;		\/\/ last operation success ?$/;"	m	struct:CMscdex::SDriveInfo	file:
lastSeek	src/dos/cdrom.h	/^		int lastSeek;$/;"	m	class:CDROM_Interface_Image::AudioFile
lastUsed	src/hardware/adlib.h	/^	Bit32u lastUsed;				\/\/Ticks when adlib was last used to turn of mixing after a few second$/;"	m	class:Adlib::Module
last_action	src/dos/drive_fat.cpp	/^	enum { NONE,READ,WRITE } last_action;$/;"	m	class:fatFile	typeref:enum:fatFile::__anon121	file:
last_action	src/dos/drive_local.cpp	/^	enum { NONE,READ,WRITE } last_action;$/;"	m	class:localFile	typeref:enum:localFile::__anon122	file:
last_clicked	src/gui/sdl_mapper.cpp	/^static CEventButton * last_clicked = NULL;$/;"	v	file:
last_command	src/hardware/gameblaster.cpp	/^static Bitu last_command;$/;"	v	file:
last_drive	src/ints/bios_disk.cpp	/^static Bit8u last_drive;$/;"	v	file:
last_error_pointer	include/dos_inc.h	/^		Bit32u last_error_pointer; 	\/* 0x08 ES:DI pointer for last error *\/$/;"	m	struct:DOS_SDA::sSDA
last_index	src/hardware/pcspeaker.cpp	/^	float last_index;$/;"	m	struct:__anon166	file:
last_page	src/cpu/core_dyn_x86/cache.h	/^	CodePageHandler * last_page;$/;"	m	struct:__anon87
last_page	src/cpu/core_dynrec/cache.h	/^	CodePageHandlerDynRec * last_page;		\/\/ the last used page$/;"	m	struct:__anon66
last_page	src/cpu/core_dynrec/save/cache.h	/^	CodePageHandlerDynRec * last_page;		\/\/ the last used page$/;"	m	struct:__anon76
last_pressed_x	src/ints/mouse.cpp	/^	Bit16u last_pressed_x[MOUSE_BUTTONS];$/;"	m	struct:__anon199	file:
last_pressed_y	src/ints/mouse.cpp	/^	Bit16u last_pressed_y[MOUSE_BUTTONS];$/;"	m	struct:__anon199	file:
last_released_x	src/ints/mouse.cpp	/^	Bit16u last_released_x[MOUSE_BUTTONS];$/;"	m	struct:__anon199	file:
last_released_y	src/ints/mouse.cpp	/^	Bit16u last_released_y[MOUSE_BUTTONS];$/;"	m	struct:__anon199	file:
last_status	src/ints/bios_disk.cpp	/^static Bit8u last_status;$/;"	v	file:
last_ticks	src/hardware/pcspeaker.cpp	/^	Bitu last_ticks;$/;"	m	struct:__anon166	file:
last_used	src/cpu/core_dyn_x86/risc_x86.h	/^	Bitu last_used;			\/\/Keeps track of last assigned regs $/;"	m	class:GenReg
last_used	src/cpu/core_dyn_x86/risc_x86.h	/^	Bitu last_used;$/;"	m	struct:__anon92
last_used	src/hardware/disney.cpp	/^	Bitu last_used;$/;"	m	struct:__anon152	file:
last_write	src/hardware/joystick.cpp	/^static Bit32u last_write = 0;$/;"	v	file:
last_write	src/hardware/tandy_sound.cpp	/^	Bitu last_write;$/;"	m	struct:__anon183	file:
lastclick	src/libs/gui_tk/gui_tk.h	/^	Ticks lastclick;$/;"	m	class:GUI::ScreenSDL
lastdrive	include/dos_inc.h	/^		Bit8u	lastdrive;		\/\/  0x21 lastdrive$/;"	m	struct:DOS_InfoBlock::sDIB
lastint	src/cpu/cpu.cpp	/^Bit8u lastint;$/;"	v
lastmode	include/vga.h	/^	VGAModes lastmode;$/;"	m	struct:__anon59
lastpos	src/libs/gui_tk/gui_tk.h	/^	Size lastpos;$/;"	m	class:GUI::Input
lastwrite	src/dos/dev_con.h	/^	Bit8u lastwrite;$/;"	m	class:device_CON
lastx	src/libs/gui_tk/gui_tk.h	/^	int lastx;$/;"	m	class:GUI::Menubar
latch	include/vga.h	/^	VGA_Latch latch;$/;"	m	struct:__anon59
latch_mode	src/hardware/timer.cpp	/^	Bit8u latch_mode;$/;"	m	struct:PIT_Block	file:
latched_timerstatus	src/hardware/timer.cpp	/^static Bit8u latched_timerstatus;$/;"	v	file:
latched_timerstatus_locked	src/hardware/timer.cpp	/^static bool latched_timerstatus_locked;$/;"	v	file:
layout_key	src/dos/dos_keyboard_layout.cpp	/^bool keyboard_layout::layout_key(Bitu key, Bit8u flags1, Bit8u flags2, Bit8u flags3) {$/;"	f	class:keyboard_layout
layout_keyboardsys	src/dos/dos_keyboard_layout_data.h	/^Bit8u layout_keyboardsys[33196] = {$/;"	v
layout_keybrd2sys	src/dos/dos_keyboard_layout_data.h	/^Bit8u layout_keybrd2sys[25431] = {$/;"	v
layout_keybrd3sys	src/dos/dos_keyboard_layout_data.h	/^Bit8u layout_keybrd3sys[27122] = {$/;"	v
layout_pages	src/dos/dos_keyboard_layout.cpp	/^	static const Bit8u layout_pages=12;$/;"	m	class:keyboard_layout	file:
ldt	include/cpu.h	/^    Bit16u ldt;                  \/* The local descriptor table *\/$/;"	m	struct:TSS_16
ldt	include/cpu.h	/^    Bit32u ldt;                  \/* The local descriptor table *\/$/;"	m	struct:TSS_32
ldt_base	include/cpu.h	/^	PhysPt ldt_base;$/;"	m	class:GDTDescriptorTable
ldt_limit	include/cpu.h	/^	Bitu ldt_limit;$/;"	m	class:GDTDescriptorTable
ldt_value	include/cpu.h	/^	Bitu ldt_value;$/;"	m	class:GDTDescriptorTable
le_int16	src/debug/debug_disasm.cpp	96;"	d	file:
le_int32	src/debug/debug_disasm.cpp	97;"	d	file:
le_int8	src/debug/debug_disasm.cpp	95;"	d	file:
le_uint16	src/debug/debug_disasm.cpp	/^INLINE UINT16 le_uint16(const void* ptr) {$/;"	f
le_uint32	src/debug/debug_disasm.cpp	/^INLINE UINT32 le_uint32(const void* ptr) {$/;"	f
le_uint8	src/debug/debug_disasm.cpp	83;"	d	file:
leader	src/hardware/disney.cpp	/^	dac_channel* leader;$/;"	m	struct:__anon152	file:
left	src/hardware/sblaster.cpp	/^		Bitu total,left,min;$/;"	m	struct:SB_INFO::__anon170	file:
left	src/hardware/serialport/softmodem.h	/^	INLINE Bitu left(void) {$/;"	f	class:CFifo
len	src/hardware/serialport/softmodem.h	/^		Bitu len,pos;$/;"	m	struct:CSerialModem::__anon182
length	include/ipx.h	/^	Uint8 length[2];$/;"	m	struct:IPXHeader
length	src/dos/cdrom.h	/^		int length;$/;"	m	struct:CDROM_Interface_Image::Track
length	src/dos/drives.h	/^	Bit8u length;$/;"	m	struct:isoDirEntry
length	src/hardware/hardware.cpp	/^		Bit32u length;$/;"	m	struct:__anon155::__anon156	file:
length	src/ints/xms.cpp	/^	Bit32u length;$/;"	m	struct:XMS_MemMove	file:
lessthan	src/misc/fixed.cpp	/^bool FixedPoint::lessthan(FixedPoint b)$/;"	f	class:FixedPoint
lessthanequal	src/misc/fixed.cpp	/^bool FixedPoint::lessthanequal(FixedPoint b)$/;"	f	class:FixedPoint
letter	src/dos/cdrom.h	/^	char	letter;$/;"	m	class:CDROM_Interface_Aspi
level	src/hardware/gameblaster.cpp	/^	int level;						\/* noise polynomal shifter *\/$/;"	m	struct:saa1099_noise	file:
level	src/hardware/gameblaster.cpp	/^	int level;$/;"	m	struct:saa1099_channel	file:
lf_resb	src/cpu/lazyflags.h	47;"	d
lf_resd	src/cpu/lazyflags.h	55;"	d
lf_resw	src/cpu/lazyflags.h	51;"	d
lf_var1b	src/cpu/lazyflags.h	45;"	d
lf_var1d	src/cpu/lazyflags.h	53;"	d
lf_var1w	src/cpu/lazyflags.h	49;"	d
lf_var2b	src/cpu/lazyflags.h	46;"	d
lf_var2d	src/cpu/lazyflags.h	54;"	d
lf_var2w	src/cpu/lazyflags.h	50;"	d
lfb	include/vga.h	/^	VGA_LFB lfb;$/;"	m	struct:__anon59
lfb	src/hardware/memory.cpp	/^	} lfb;$/;"	m	struct:MemoryBlock	typeref:struct:MemoryBlock::__anon163	file:
lfb	src/hardware/vga_memory.cpp	/^	VGA_LFB_Handler				lfb;$/;"	m	struct:vg	file:
lfbchanges	src/hardware/vga_memory.cpp	/^	VGA_LFBChanges_Handler		lfbchanges;$/;"	m	struct:vg	file:
lflags	src/cpu/flags.cpp	/^LazyFlags lflags;$/;"	v
lfo_am_cnt	src/hardware/fmopl.cpp	/^	UINT32	lfo_am_cnt;$/;"	m	struct:fm_opl_f	file:
lfo_am_cnt	src/hardware/ymf262.cpp	/^	UINT32	lfo_am_cnt;$/;"	m	struct:__anon192	file:
lfo_am_depth	src/hardware/fmopl.cpp	/^	UINT8	lfo_am_depth;$/;"	m	struct:fm_opl_f	file:
lfo_am_depth	src/hardware/ymf262.cpp	/^	UINT8	lfo_am_depth;$/;"	m	struct:__anon192	file:
lfo_am_inc	src/hardware/fmopl.cpp	/^	UINT32	lfo_am_inc;$/;"	m	struct:fm_opl_f	file:
lfo_am_inc	src/hardware/ymf262.cpp	/^	UINT32	lfo_am_inc;$/;"	m	struct:__anon192	file:
lfo_am_table	src/hardware/fmopl.cpp	/^static const UINT8 lfo_am_table[LFO_AM_TAB_ELEMENTS] = {$/;"	v	file:
lfo_am_table	src/hardware/ymf262.cpp	/^static const UINT8 lfo_am_table[LFO_AM_TAB_ELEMENTS] = {$/;"	v	file:
lfo_pm_cnt	src/hardware/fmopl.cpp	/^	UINT32	lfo_pm_cnt;$/;"	m	struct:fm_opl_f	file:
lfo_pm_cnt	src/hardware/ymf262.cpp	/^	UINT32	lfo_pm_cnt;$/;"	m	struct:__anon192	file:
lfo_pm_depth_range	src/hardware/fmopl.cpp	/^	UINT8	lfo_pm_depth_range;$/;"	m	struct:fm_opl_f	file:
lfo_pm_depth_range	src/hardware/ymf262.cpp	/^	UINT8	lfo_pm_depth_range;$/;"	m	struct:__anon192	file:
lfo_pm_inc	src/hardware/fmopl.cpp	/^	UINT32	lfo_pm_inc;$/;"	m	struct:fm_opl_f	file:
lfo_pm_inc	src/hardware/ymf262.cpp	/^	UINT32	lfo_pm_inc;$/;"	m	struct:__anon192	file:
lfo_pm_table	src/hardware/fmopl.cpp	/^static const INT8 lfo_pm_table[8*8*2] = {$/;"	v	file:
lfo_pm_table	src/hardware/ymf262.cpp	/^static const INT8 lfo_pm_table[8*8*2] = {$/;"	v	file:
limit	src/cpu/cpu.cpp	/^	Bitu limit;$/;"	m	class:TaskStateSegment	file:
limit	src/hardware/fmopl.cpp	/^INLINE int limit( int val, int max, int min ) {$/;"	f
limit	src/hardware/ymf262.cpp	/^INLINE int limit( int val, int max, int min ) {$/;"	f
limit_0_15	include/cpu.h	/^	Bit32u limit_0_15	:16;$/;"	m	struct:S_Descriptor
limit_16_19	include/cpu.h	/^	Bit32u limit_16_19	:4;$/;"	m	struct:S_Descriptor
lin	src/hardware/sblaster.cpp	/^		Bit8u dac[2],fm[2],cda[2],master[2],lin[2];$/;"	m	struct:SB_INFO::__anon176	file:
lin4	src/hardware/vga_memory.cpp	/^	VGA_LIN4_Handler			lin4;$/;"	m	struct:vg	file:
lineHandler	include/render.h	/^		ScalerLineHandler_t lineHandler;$/;"	m	struct:__anon32::__anon35
linePalHandler	include/render.h	/^		ScalerLineHandler_t linePalHandler;$/;"	m	struct:__anon32::__anon35
lineWidth	src/libs/gui_tk/gui_tk.h	/^	int lineWidth;$/;"	m	class:GUI::Drawable
line_compare	include/vga.h	/^	Bit8u line_compare;$/;"	m	struct:__anon50
line_compare	include/vga.h	/^	Bitu line_compare;$/;"	m	struct:__anon37
line_length	include/vga.h	/^	Bitu line_length;$/;"	m	struct:__anon38
line_mask	include/vga.h	/^	Bit8u line_mask, line_shift;$/;"	m	struct:__anon47
line_shift	include/vga.h	/^	Bit8u line_mask, line_shift;$/;"	m	struct:__anon47
linear	include/vga.h	/^	Bit8u* linear;$/;"	m	struct:__anon56
linear_base	include/vga.h	/^	Bit8u *linear_base;$/;"	m	struct:__anon38
linear_mask	include/vga.h	/^	Bitu linear_mask;$/;"	m	struct:__anon38
linear_orgptr	include/vga.h	/^	Bit8u* linear_orgptr;$/;"	m	struct:__anon56
linesDone	src/libs/zmbv/zmbv.h	/^		int		linesDone;$/;"	m	struct:VideoCodec::__anon203
lines_done	include/vga.h	/^	Bitu lines_done;$/;"	m	struct:__anon38
lines_scaled	include/vga.h	/^	Bitu lines_scaled;$/;"	m	struct:__anon38
lines_total	include/vga.h	/^	Bitu lines_total;$/;"	m	struct:__anon38
link	src/cpu/core_dyn_x86/cache.h	/^	} link[2];$/;"	m	class:CacheBlock	typeref:struct:CacheBlock::__anon86
link	src/cpu/core_dynrec/cache.h	/^	} link[2];	\/\/ maximal two links (conditional jumps)$/;"	m	class:CacheBlockDynRec	typeref:struct:CacheBlockDynRec::__anon65
link	src/cpu/core_dynrec/save/cache.h	/^	} link[2];	\/\/ maximal two links (conditional jumps)$/;"	m	class:CacheBlockDynRec	typeref:struct:CacheBlockDynRec::__anon75
link_blocks	src/cpu/core_dyn_x86/cache.h	/^static CacheBlock link_blocks[2];$/;"	v
link_blocks	src/cpu/core_dynrec/cache.h	/^static CacheBlockDynRec link_blocks[2];		\/\/ default linking (specially marked)$/;"	v
link_blocks	src/cpu/core_dynrec/save/cache.h	/^static CacheBlockDynRec link_blocks[2];		\/\/ default linking (specially marked)$/;"	v
links	include/paging.h	/^	} links;$/;"	m	struct:PagingBlock	typeref:struct:PagingBlock::__anon27
links	src/hardware/memory.cpp	/^	LinkBlock links;$/;"	m	struct:MemoryBlock	file:
list	src/gui/sdl_mapper.cpp	/^	CBindList * list;$/;"	m	class:CBind	file:
listenport	src/hardware/serialport/softmodem.h	/^	Bitu listenport;$/;"	m	class:CSerialModem
listensocketset	src/hardware/serialport/misc_util.h	/^	SDLNet_SocketSet listensocketset;$/;"	m	class:TCPClientSocket
lists	src/gui/sdl_mapper.cpp	/^	CBindList * lists;$/;"	m	class:CKeyBindGroup	file:
ll	include/fpu.h	/^    Bit64s ll;$/;"	m	union:__anon19
loFirstClust	src/dos/drives.h	/^	Bit16u loFirstClust;$/;"	m	struct:direntry
load	include/paging.h	/^	Bit32u load;$/;"	m	union:X86PageEntry
load	src/cpu/core_full/support.h	/^	Bit8u load,op,save,extra;$/;"	m	struct:OpCode
loadImage	src/dos/drive_iso.cpp	/^bool isoDrive :: loadImage()$/;"	f	class:isoDrive
loadedDisk	src/dos/drives.h	/^	imageDisk *loadedDisk;$/;"	m	class:fatDrive
loadedSector	src/dos/drive_fat.cpp	/^	bool loadedSector;$/;"	m	class:fatFile	file:
loaded_codepage	include/dos_inc.h	/^	Bit16u loaded_codepage;$/;"	m	struct:DOS_Block
loaded_layout	src/dos/dos_keyboard_layout.cpp	/^static keyboard_layout* loaded_layout=NULL;$/;"	v	file:
loadseg	include/dos_inc.h	/^		Bit16u loadseg;$/;"	m	struct:DOS_ParamBlock::sOverlay
localAddress	src/hardware/serialport/misc_util.cpp	/^	IPaddress localAddress;$/;"	m	struct:_TCPsocketX	file:
localDrive	src/dos/drive_local.cpp	/^localDrive::localDrive(const char * startdir,Bit16u _bytes_sector,Bit8u _sectors_cluster,Bit16u _total_clusters,Bit16u _free_clusters,Bit8u _mediaid) {$/;"	f	class:localDrive
localDrive	src/dos/drives.h	/^class localDrive : public DOS_Drive {$/;"	c
localFile	src/dos/drive_local.cpp	/^class localFile : public DOS_File {$/;"	c	file:
localFile	src/dos/drive_local.cpp	/^localFile::localFile(const char* _name, FILE * handle) {$/;"	f	class:localFile
localIpxAddr	src/hardware/ipx.cpp	/^} localIpxAddr;$/;"	v	typeref:struct:ipxnetaddr
location	include/shell.h	/^	Bit32u location;$/;"	m	class:BatchFile
location	src/debug/debug.cpp	/^	PhysPt		location;$/;"	m	class:CBreakpoint	file:
locationOptPathTableL	src/dos/drives.h	/^	Bit32u locationOptPathTableL;$/;"	m	struct:isoPVD
locationOptPathTableM	src/dos/drives.h	/^	Bit32u locationOptPathTableM;$/;"	m	struct:isoPVD
locationPathTableL	src/dos/drives.h	/^	Bit32u locationPathTableL;$/;"	m	struct:isoPVD
locationPathTableM	src/dos/drives.h	/^	Bit32u locationPathTableM;$/;"	m	struct:isoPVD
lock	include/vga.h	/^		Bit8u lock;$/;"	m	struct:__anon42::__anon44
locked	src/dos/dos_mscdex.cpp	/^		bool	locked;			\/\/ drive locked ?$/;"	m	struct:CMscdex::SDriveInfo	file:
locked	src/hardware/vga_paradise.cpp	/^	inline bool locked() { return (PR5&7)!=5; }$/;"	f	struct:__anon187
locked	src/ints/xms.cpp	/^	Bit8u	locked;$/;"	m	struct:XMS_Block	file:
locus_of_last_error	include/dos_inc.h	/^		Bit8u locus_of_last_error;	\/* 0x03 locus of last error *\/$/;"	m	struct:DOS_SDA::sSDA
log	src/misc/fixed.cpp	/^FixedPoint FixedPoint::log(void)$/;"	f	class:FixedPoint
log10	src/misc/fixed.cpp	/^FixedPoint FixedPoint::log10(void)$/;"	f	class:FixedPoint
log10x	src/misc/fixed.cpp	/^FixedPoint log10x(FixedPoint fixedVal)$/;"	f
logBuff	src/debug/debug_gui.cpp	/^static list<string> logBuff;$/;"	v	file:
logBuffPos	src/debug/debug_gui.cpp	/^static list<string>::iterator logBuffPos = logBuff.end();$/;"	v	file:
logCount	src/debug/debug.cpp	/^static Bit32u logCount = 0;$/;"	v	file:
logCpuCS	src/debug/debug.cpp	/^static Bit16u logCpuCS [LOGCPUMAX];$/;"	v	file:
logCpuEIP	src/debug/debug.cpp	/^static Bit32u logCpuEIP[LOGCPUMAX];$/;"	v	file:
logHeavy	src/debug/debug.cpp	/^bool	logHeavy	= false;$/;"	v
logInst	src/debug/debug.cpp	/^TLogInst logInst[LOGCPUMAX];$/;"	v
logerror	src/hardware/adlib.cpp	48;"	d	file:
loggrp	src/debug/debug_gui.cpp	/^static _LogGroup loggrp[LOG_MAX]={{"",true},{0,false}};$/;"	v	file:
logicBlockSizeL	src/dos/drives.h	/^	Bit16u logicBlockSizeL;$/;"	m	struct:isoPVD
logicBlockSizeM	src/dos/drives.h	/^	Bit16u logicBlockSizeM;$/;"	m	struct:isoPVD
logx	src/misc/fixed.cpp	/^FixedPoint logx(FixedPoint fixedVal)$/;"	f
long2para	include/dos_inc.h	/^INLINE Bit16u long2para(Bit32u size) {$/;"	f
longNameList	include/dos_system.h	/^		std::vector<CFileInfo*>	longNameList;$/;"	m	class:DOS_Drive_Cache::CFileInfo
lookaheadBufNumber	include/dos_inc.h	/^		Bit16u	lookaheadBufNumber;		\/\/  0x51 number of lookahead buffers$/;"	m	struct:DOS_InfoBlock::sDIB
lookaheadBufPt	include/dos_inc.h	/^		Bit32u	lookaheadBufPt;		\/\/  0x4d pointer to lookahead buffer$/;"	m	struct:DOS_InfoBlock::sDIB
lookup	src/dos/drive_iso.cpp	/^bool isoDrive :: lookup(isoDirEntry *de, const char *path)$/;"	f	class:isoDrive
lookupRMEAregb	src/cpu/modrm.cpp	/^Bit8u * lookupRMEAregb[256]={$/;"	v
lookupRMEAregd	src/cpu/modrm.cpp	/^Bit32u * lookupRMEAregd[256]={$/;"	v
lookupRMEAregw	src/cpu/modrm.cpp	/^Bit16u * lookupRMEAregw[256]={$/;"	v
lookupRMregb	src/cpu/modrm.cpp	/^Bit8u * lookupRMregb[]=$/;"	v
lookupRMregd	src/cpu/modrm.cpp	/^Bit32u * lookupRMregd[256]={$/;"	v
lookupRMregw	src/cpu/modrm.cpp	/^Bit16u * lookupRMregw[]={$/;"	v
loop	src/dosbox.cpp	/^static LoopHandler * loop;$/;"	v	file:
loopback	include/serialport.h	/^	bool loopback;		\/\/ bit4: loop back enable$/;"	m	class:CSerial
loopback_data	include/serialport.h	/^	Bit8u loopback_data;$/;"	m	class:CSerial
loopbackdata	src/hardware/serialport/serialdummy.h	/^	Bit8u loopbackdata;$/;"	m	class:CSerialDummy
low_version	src/libs/zmbv/zmbv.h	/^		unsigned char low_version;$/;"	m	struct:VideoCodec::KeyframeHeader
lowcase	include/support.h	/^INLINE char * lowcase(char * str) {$/;"	f
lowcase	src/misc/support.cxx	/^char * lowcase(char * str) {$/;"	f
lowcase	src/misc/support.cxx	/^void lowcase(std::string &str) {$/;"	f
lower	include/fpu.h	/^        Bit32u lower;$/;"	m	struct:__anon19::__anon20
lower	include/fpu.h	/^        Bit32u lower;$/;"	m	struct:__anon19::__anon21
lower	src/libs/gui_tk/gui_tk.h	/^	virtual void lower() {$/;"	f	class:GUI::Window
lpen_high	include/vga.h	/^	Bit8u lpen_low, lpen_high;$/;"	m	struct:__anon46
lpen_low	include/vga.h	/^	Bit8u lpen_low, lpen_high;$/;"	m	struct:__anon46
ltrim	src/misc/support.cxx	/^char *ltrim(char *str) { $/;"	f
ltstr	src/libs/gui_tk/gui_tk.h	/^	struct ltstr { bool operator()(const char* s1, const char* s2) const {$/;"	s	class:GUI::Font
ltuint	src/libs/gui_tk/gui_tk.h	/^	struct ltuint { bool operator()(Ticks i1, Ticks i2) const {$/;"	s	class:GUI::Timer
ltvoid	src/libs/gui_tk/gui_tk.h	/^struct ltvoid { bool operator()(const void* s1, const void* s2) const { return s1 < s2; } };$/;"	s	namespace:GUI
lun	src/dos/cdrom.h	/^	BYTE	lun;$/;"	m	class:CDROM_Interface_Aspi
lut	include/render.h	/^		Bit16u lut[256];$/;"	m	struct:__anon30
m	include/vga.h	/^		Bit8u m;$/;"	m	struct:__anon42::__anon43
m1	include/fpu.h	/^    Bit32u m1;$/;"	m	struct:__anon22
m2	include/fpu.h	/^    Bit32u m2;$/;"	m	struct:__anon22
m3	include/fpu.h	/^    Bit16u m3;$/;"	m	struct:__anon22
m_auGraph	src/gui/midi_coreaudio.h	/^	AUGraph m_auGraph;$/;"	m	class:MidiHandler_coreaudio
m_callback	include/callback.h	/^	Bit16u m_callback;$/;"	m	class:CALLBACK_HandlerObject
m_client	src/gui/midi_coremidi.h	/^	MIDIClientRef m_client;$/;"	m	class:MidiHandler_coremidi
m_configuration	include/setup.h	/^	Section* m_configuration;$/;"	m	class:Module_base
m_endpoint	src/gui/midi_coremidi.h	/^	MIDIEndpointRef m_endpoint;$/;"	m	class:MidiHandler_coremidi
m_event	src/gui/midi_win32.h	/^	HANDLE m_event;$/;"	m	class:MidiHandler_win32
m_hdr	src/gui/midi_win32.h	/^	MIDIHDR m_hdr;$/;"	m	class:MidiHandler_win32
m_mask	include/inout.h	/^	Bitu m_port, m_mask,m_range;$/;"	m	class:IO_Base
m_nVal	src/misc/fixed.h	/^	long	m_nVal;$/;"	m	class:FixedPoint
m_name	include/mixer.h	/^	char m_name[32];$/;"	m	class:MixerObject
m_out	src/gui/midi_win32.h	/^	HMIDIOUT m_out;$/;"	m	class:MidiHandler_win32
m_pCurPacket	src/gui/midi_coremidi.h	/^	MIDIPacket* m_pCurPacket;$/;"	m	class:MidiHandler_coremidi
m_port	include/inout.h	/^	Bitu m_port, m_mask,m_range;$/;"	m	class:IO_Base
m_port	src/gui/midi_coremidi.h	/^	MIDIPortRef m_port;$/;"	m	class:MidiHandler_coremidi
m_ptr	src/hardware/adlib.cpp	/^	void* m_ptr;$/;"	m	struct:__MALLOCPTR	file:
m_range	include/inout.h	/^	Bitu m_port, m_mask,m_range;$/;"	m	class:IO_Base
m_synth	src/gui/midi_coreaudio.h	/^	AudioUnit m_synth;$/;"	m	class:MidiHandler_coreaudio
m_type	include/callback.h	/^	enum {NONE,SETUP,SETUPAT} m_type;$/;"	m	class:CALLBACK_HandlerObject	typeref:enum:CALLBACK_HandlerObject::__anon3
machine	src/dosbox.cpp	/^MachineType machine;$/;"	v
magic1	src/dos/drives.h	/^	Bit8u  magic1; \/* 0x55 *\/$/;"	m	struct:bootstrap
magic1	src/dos/drives.h	/^	Bit8u  magic1; \/* 0x55 *\/$/;"	m	struct:partTable
magic2	src/dos/drives.h	/^	Bit8u  magic2; \/* 0xaa *\/$/;"	m	struct:bootstrap
magic2	src/dos/drives.h	/^	Bit8u  magic2; \/* 0xaa *\/$/;"	m	struct:partTable
magicWord	include/dos_inc.h	/^		Bit16u	magicWord;			\/\/ -0x22 needs to be 1$/;"	m	struct:DOS_InfoBlock::sDIB
major	include/dos_inc.h	/^	Bit8u major,minor,revision;$/;"	m	struct:DOS_Version
make_default_value	src/misc/setup.cpp	/^void Prop_multival::make_default_value(){$/;"	f	class:Prop_multival
map	include/vga.h	/^	Bit8u*	map; \/* allocated dynamically: [(VGA_MEMORY >> VGA_CHANGE_SHIFT) + 32] *\/$/;"	m	struct:__anon57
map	src/hardware/vga_memory.cpp	/^	VGA_Map_Handler				map;$/;"	m	struct:vg	file:
map_key	src/dos/dos_keyboard_layout.cpp	/^bool keyboard_layout::map_key(Bitu key, Bit16u layouted_key, bool is_command, bool is_keypair) {$/;"	f	class:keyboard_layout
map_mask	include/vga.h	/^	Bit8u map_mask;$/;"	m	struct:__anon48
map_offset	src/ints/int10_memory.cpp	/^static Bit16u map_offset[8]={$/;"	v	file:
map_pal	src/gui/sdl_mapper.cpp	/^static SDL_Color map_pal[5]={$/;"	v	file:
mapper	src/gui/sdl_mapper.cpp	/^} mapper;$/;"	v	typeref:struct:CMapper	file:
mask	include/cpu.h	/^		Bitu mask,notmask;$/;"	m	struct:CPUBlock::__anon6
mask	include/vga.h	/^	Bit32u mask;$/;"	m	struct:__anon58
mask	src/hardware/vga_memory.cpp	/^	Bitu base, mask;$/;"	m	struct:__anon186	file:
masked	include/dma.h	/^	bool masked;$/;"	m	class:DmaChannel
masked	src/hardware/adlib.h	/^	bool enabled, overflow, masked;$/;"	m	struct:Adlib::Timer
masked	src/hardware/pic.cpp	/^	Bitu masked;$/;"	m	struct:PIC_Controller	file:
masked	src/hardware/pic.cpp	/^	bool masked;$/;"	m	struct:IRQ_Block	file:
masklen	src/cpu/core_dyn_x86/cache.h	/^		Bit16u masklen;$/;"	m	struct:CacheBlock::__anon84
masklen	src/cpu/core_dynrec/cache.h	/^		Bit16u masklen;$/;"	m	struct:CacheBlockDynRec::__anon63
masklen	src/cpu/core_dynrec/save/cache.h	/^		Bit16u masklen;$/;"	m	struct:CacheBlockDynRec::__anon73
maskstart	src/cpu/core_dyn_x86/cache.h	/^		Bit16u maskstart;$/;"	m	struct:CacheBlock::__anon84
maskstart	src/cpu/core_dynrec/cache.h	/^		Bit16u maskstart;$/;"	m	struct:CacheBlockDynRec::__anon63
maskstart	src/cpu/core_dynrec/save/cache.h	/^		Bit16u maskstart;$/;"	m	struct:CacheBlockDynRec::__anon73
master	src/hardware/sblaster.cpp	/^		Bit8u dac[2],fm[2],cda[2],master[2],lin[2];$/;"	m	struct:SB_INFO::__anon176	file:
mastervol	src/hardware/mixer.cpp	/^	float mastervol[2];$/;"	m	struct:__anon165	file:
max	include/render.h	/^		Bitu max;$/;"	m	struct:__anon32::__anon34
max	include/setup.h	/^	Value min,max;$/;"	m	class:Prop_int
max	src/hardware/sblaster.cpp	222;"	d	file:
maxSectorLength	include/dos_inc.h	/^		Bit16u	maxSectorLength;	\/\/  0x10 maximum bytes per sector of any block device;$/;"	m	struct:DOS_InfoBlock::sDIB
max_files	include/dos_inc.h	/^		Bit16u	max_files;			\/* Maximum open files *\/$/;"	m	struct:DOS_PSP::sPSP
max_needed	src/hardware/mixer.cpp	/^	Bitu needed, min_needed, max_needed;$/;"	m	struct:__anon165	file:
max_scanline	include/vga.h	/^	Bit8u max_scanline;$/;"	m	struct:__anon46
max_x	src/ints/mouse.cpp	/^	Bit16s min_x,max_x,min_y,max_y;$/;"	m	struct:__anon199	file:
max_y	src/ints/mouse.cpp	/^	Bit16s min_x,max_x,min_y,max_y;$/;"	m	struct:__anon199	file:
maximum_scan_line	include/vga.h	/^	Bit8u maximum_scan_line;$/;"	m	struct:__anon50
maxmemory	src/dos/dos_execute.cpp	/^	Bit16u maxmemory;					\/* Maximum amount of memory *\/$/;"	m	struct:EXE_Header	file:
mc	include/vga.h	/^	Bit8u mc[64][64];$/;"	m	struct:__anon41
mci_CDClose	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::mci_CDClose(void) {$/;"	f	class:CDROM_Interface_Ioctl
mci_CDOpen	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::mci_CDOpen(char drive) {$/;"	f	class:CDROM_Interface_Ioctl
mci_CDPause	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::mci_CDPause(void) {$/;"	f	class:CDROM_Interface_Ioctl
mci_CDPlay	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::mci_CDPlay(int start, int length) {$/;"	f	class:CDROM_Interface_Ioctl
mci_CDPosition	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::mci_CDPosition(int *position) {$/;"	f	class:CDROM_Interface_Ioctl
mci_CDResume	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::mci_CDResume(void) {$/;"	f	class:CDROM_Interface_Ioctl
mci_CDStatus	src/dos/cdrom_ioctl_win32.cpp	/^int CDROM_Interface_Ioctl::mci_CDStatus(void) {$/;"	f	class:CDROM_Interface_Ioctl
mci_CDStop	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::mci_CDStop(void) {$/;"	f	class:CDROM_Interface_Ioctl
mci_CDioctl	src/dos/cdrom_ioctl_win32.cpp	/^bool CDROM_Interface_Ioctl::mci_CDioctl(UINT msg, DWORD flags, void *arg) {$/;"	f	class:CDROM_Interface_Ioctl
mci_devid	src/dos/cdrom.h	/^	int		mci_devid;$/;"	m	class:CDROM_Interface_Ioctl
mclk	include/vga.h	/^	} clk[4],mclk;$/;"	m	struct:__anon42	typeref:struct:__anon42::__anon43
mcn	src/dos/cdrom.h	/^	std::string	mcn;$/;"	m	class:CDROM_Interface_Image
mediadescriptor	src/dos/drives.h	/^	Bit8u  mediadescriptor;$/;"	m	struct:bootstrap
mediaid	include/dos_inc.h	/^		RealPt mediaid;$/;"	m	struct:DOS_Block::__anon15
mediaid	src/dos/drives.h	/^		Bit8u mediaid;$/;"	m	struct:fatDrive::__anon120
mediaid	src/dos/drives.h	/^		Bit8u mediaid;$/;"	m	struct:localDrive::__anon117
mediaid	src/dos/drives.h	/^	Bit8u mediaid;$/;"	m	class:isoDrive
mem	include/vga.h	/^	VGA_Memory mem;$/;"	m	struct:__anon59
mem	src/ints/ems.cpp	/^	MemHandle mem;$/;"	m	struct:EMM_Handle	file:
mem	src/ints/xms.cpp	/^	MemHandle mem;$/;"	m	struct:XMS_Block	file:
memAllocScanStart	include/dos_inc.h	/^		Bit16u	memAllocScanStart;		\/\/  0x68 start paragraph for memory allocation$/;"	m	struct:DOS_InfoBlock::sDIB
memAllocStrategy	src/dos/dos_memory.cpp	/^static Bit16u memAllocStrategy = 0x00;$/;"	v	file:
mem_bank	include/vga.h	/^	Bit8u draw_bank, mem_bank;$/;"	m	struct:__anon47
mem_base	include/vga.h	/^	Bit8u *draw_base, *mem_base;$/;"	m	struct:__anon47
mem_memcpy	src/hardware/memory.cpp	/^void mem_memcpy(PhysPt dest,PhysPt src,Bitu size) {$/;"	f
mem_readb	src/hardware/memory.cpp	/^Bit8u mem_readb(PhysPt address) {$/;"	f
mem_readb_checked	include/paging.h	/^INLINE bool mem_readb_checked(PhysPt address, Bit8u * val) {$/;"	f
mem_readb_checked_dcx86	src/cpu/core_dyn_x86/decoder.h	/^bool mem_readb_checked_dcx86(PhysPt address) {$/;"	f
mem_readb_checked_drc	src/cpu/core_dynrec/decoder_basic.h	/^bool DRC_CALL_CONV mem_readb_checked_drc(PhysPt address) {$/;"	f
mem_readb_checked_drc	src/cpu/core_dynrec/save/decoder_basic.h	/^bool DRC_CALL_CONV mem_readb_checked_drc(PhysPt address) {$/;"	f
mem_readb_inline	include/paging.h	/^INLINE Bit8u mem_readb_inline(PhysPt address) {$/;"	f
mem_readd	src/hardware/memory.cpp	/^Bit32u mem_readd(PhysPt address) {$/;"	f
mem_readd_checked	include/paging.h	/^INLINE bool mem_readd_checked(PhysPt address, Bit32u * val) {$/;"	f
mem_readd_checked_dcx86	src/cpu/core_dyn_x86/decoder.h	/^bool mem_readd_checked_dcx86(PhysPt address) {$/;"	f
mem_readd_checked_drc	src/cpu/core_dynrec/decoder_basic.h	/^bool DRC_CALL_CONV mem_readd_checked_drc(PhysPt address) {$/;"	f
mem_readd_checked_drc	src/cpu/core_dynrec/save/decoder_basic.h	/^bool DRC_CALL_CONV mem_readd_checked_drc(PhysPt address) {$/;"	f
mem_readd_inline	include/paging.h	/^INLINE Bit32u mem_readd_inline(PhysPt address) {$/;"	f
mem_readw	src/hardware/memory.cpp	/^Bit16u mem_readw(PhysPt address) {$/;"	f
mem_readw_checked	include/paging.h	/^INLINE bool mem_readw_checked(PhysPt address, Bit16u * val) {$/;"	f
mem_readw_checked_drc	src/cpu/core_dynrec/decoder_basic.h	/^bool DRC_CALL_CONV mem_readw_checked_drc(PhysPt address) {$/;"	f
mem_readw_checked_drc	src/cpu/core_dynrec/save/decoder_basic.h	/^bool DRC_CALL_CONV mem_readw_checked_drc(PhysPt address) {$/;"	f
mem_readw_inline	include/paging.h	/^INLINE Bit16u mem_readw_inline(PhysPt address) {$/;"	f
mem_strcpy	src/hardware/memory.cpp	/^void mem_strcpy(PhysPt dest,PhysPt src) {$/;"	f
mem_strlen	src/hardware/memory.cpp	/^Bitu mem_strlen(PhysPt pt) {$/;"	f
mem_unalignedreadd	src/hardware/memory.cpp	/^Bit32u mem_unalignedreadd(PhysPt address) {$/;"	f
mem_unalignedreadd_checked	src/hardware/memory.cpp	/^bool mem_unalignedreadd_checked(PhysPt address, Bit32u * val) {$/;"	f
mem_unalignedreadw	src/hardware/memory.cpp	/^Bit16u mem_unalignedreadw(PhysPt address) {$/;"	f
mem_unalignedreadw_checked	src/hardware/memory.cpp	/^bool mem_unalignedreadw_checked(PhysPt address, Bit16u * val) {$/;"	f
mem_unalignedwrited	src/hardware/memory.cpp	/^void mem_unalignedwrited(PhysPt address,Bit32u val) {$/;"	f
mem_unalignedwrited_checked	src/hardware/memory.cpp	/^bool mem_unalignedwrited_checked(PhysPt address,Bit32u val) {$/;"	f
mem_unalignedwritew	src/hardware/memory.cpp	/^void mem_unalignedwritew(PhysPt address,Bit16u val) {$/;"	f
mem_unalignedwritew_checked	src/hardware/memory.cpp	/^bool mem_unalignedwritew_checked(PhysPt address,Bit16u val) {$/;"	f
mem_writeb	src/hardware/memory.cpp	/^void mem_writeb(PhysPt address,Bit8u val) {$/;"	f
mem_writeb_checked	include/paging.h	/^INLINE bool mem_writeb_checked(PhysPt address,Bit8u val) {$/;"	f
mem_writeb_checked_drc	src/cpu/core_dynrec/decoder_basic.h	/^bool DRC_CALL_CONV mem_writeb_checked_drc(PhysPt address,Bit8u val) {$/;"	f
mem_writeb_checked_drc	src/cpu/core_dynrec/save/decoder_basic.h	/^bool DRC_CALL_CONV mem_writeb_checked_drc(PhysPt address,Bit8u val) {$/;"	f
mem_writeb_inline	include/paging.h	/^INLINE void mem_writeb_inline(PhysPt address,Bit8u val) {$/;"	f
mem_writed	src/hardware/memory.cpp	/^void mem_writed(PhysPt address,Bit32u val) {$/;"	f
mem_writed_checked	include/paging.h	/^INLINE bool mem_writed_checked(PhysPt address,Bit32u val) {$/;"	f
mem_writed_checked_drc	src/cpu/core_dynrec/decoder_basic.h	/^bool DRC_CALL_CONV mem_writed_checked_drc(PhysPt address,Bit32u val) {$/;"	f
mem_writed_checked_drc	src/cpu/core_dynrec/save/decoder_basic.h	/^bool DRC_CALL_CONV mem_writed_checked_drc(PhysPt address,Bit32u val) {$/;"	f
mem_writed_inline	include/paging.h	/^INLINE void mem_writed_inline(PhysPt address,Bit32u val) {$/;"	f
mem_writew	src/hardware/memory.cpp	/^void mem_writew(PhysPt address,Bit16u val) {$/;"	f
mem_writew_checked	include/paging.h	/^INLINE bool mem_writew_checked(PhysPt address,Bit16u val) {$/;"	f
mem_writew_checked_drc	src/cpu/core_dynrec/decoder_basic.h	/^bool DRC_CALL_CONV mem_writew_checked_drc(PhysPt address,Bit16u val) {$/;"	f
mem_writew_checked_drc	src/cpu/core_dynrec/save/decoder_basic.h	/^bool DRC_CALL_CONV mem_writew_checked_drc(PhysPt address,Bit16u val) {$/;"	f
mem_writew_inline	include/paging.h	/^INLINE void mem_writew_inline(PhysPt address,Bit16u val) {$/;"	f
memory	src/hardware/memory.cpp	/^} memory;$/;"	v	typeref:struct:MemoryBlock	file:
memory_mode	include/vga.h	/^	Bit8u memory_mode;$/;"	m	struct:__anon48
menus	src/libs/gui_tk/gui_tk.h	/^	std::vector<Menu*> menus;$/;"	m	class:GUI::Menubar
message	src/libs/gui_tk/gui_tk.h	/^	Label *message;$/;"	m	class:GUI::MessageBox
mf_functions	src/cpu/core_dynrec/decoder_basic.h	/^} mf_functions[64];$/;"	v	typeref:struct:__anon71
mf_functions	src/cpu/core_dynrec/save/decoder_basic.h	/^} mf_functions[64];$/;"	v	typeref:struct:__anon81
mf_functions_num	src/cpu/core_dynrec/decoder_basic.h	/^static Bitu mf_functions_num=0;$/;"	v
mf_functions_num	src/cpu/core_dynrec/save/decoder_basic.h	/^static Bitu mf_functions_num=0;$/;"	v
mh_mask	include/vga.h	/^	Bitu mh_mask;$/;"	m	struct:__anon37
mhandles	src/hardware/memory.cpp	/^	MemHandle * mhandles;$/;"	m	struct:MemoryBlock	file:
mic	src/hardware/sblaster.cpp	/^		Bit8u mic;$/;"	m	struct:SB_INFO::__anon176	file:
mickey_x	src/ints/mouse.cpp	/^	float mickey_x,mickey_y;$/;"	m	struct:__anon199	file:
mickey_y	src/ints/mouse.cpp	/^	float mickey_x,mickey_y;$/;"	m	struct:__anon199	file:
mickeysPerPixel_x	src/ints/mouse.cpp	/^	float	mickeysPerPixel_x;$/;"	m	struct:__anon199	file:
mickeysPerPixel_y	src/ints/mouse.cpp	/^	float	mickeysPerPixel_y;$/;"	m	struct:__anon199	file:
midi	src/hardware/hardware.cpp	/^	} midi;$/;"	m	struct:__anon155	typeref:struct:__anon155::__anon157	file:
midi	src/hardware/sblaster.cpp	/^	bool midi;$/;"	m	struct:SB_INFO	file:
midi_header	src/hardware/hardware.cpp	/^static Bit8u midi_header[]={$/;"	v	file:
milliSecondStamp	src/dos/drives.h	/^	Bit8u milliSecondStamp;$/;"	m	struct:direntry
min	include/setup.h	/^	Value min,max;$/;"	m	class:Prop_int
min	src/dos/cdrom.h	/^	unsigned char min;$/;"	m	struct:SMSF
min	src/hardware/sblaster.cpp	/^		Bitu total,left,min;$/;"	m	struct:SB_INFO::__anon170	file:
min	src/hardware/sblaster.cpp	225;"	d	file:
minMemForExec	include/dos_inc.h	/^		Bit16u	minMemForExec;			\/\/  0x64 minimum paragraphs needed for current program$/;"	m	struct:DOS_InfoBlock::sDIB
min_needed	src/hardware/mixer.cpp	/^	Bitu needed, min_needed, max_needed;$/;"	m	struct:__anon165	file:
min_tr	src/hardware/pcspeaker.cpp	/^	Bitu min_tr;$/;"	m	struct:__anon166	file:
min_x	src/ints/mouse.cpp	/^	Bit16s min_x,max_x,min_y,max_y;$/;"	m	struct:__anon199	file:
min_y	src/ints/mouse.cpp	/^	Bit16s min_x,max_x,min_y,max_y;$/;"	m	struct:__anon199	file:
minmemory	src/dos/dos_execute.cpp	/^	Bit16u minmemory;					\/* Minimum amount of memory *\/$/;"	m	struct:EXE_Header	file:
minor	include/dos_inc.h	/^	Bit8u major,minor,revision;$/;"	m	struct:DOS_Version
misc	include/dos_inc.h	/^		Bit8u misc[496];$/;"	m	struct:bootSector::entries
misc_control_2	include/vga.h	/^	Bit8u misc_control_2;$/;"	m	struct:__anon42
misc_flags	src/ints/int10_misc.cpp	/^	Bit8u misc_flags;			\/* 2Dh   BYTE   miscellaneous flags$/;"	m	struct:Dynamic_Functionality	file:
misc_output	include/vga.h	/^	Bit8u misc_output;$/;"	m	struct:__anon59
miscellaneous	include/vga.h	/^	Bit8u miscellaneous;$/;"	m	struct:__anon51
mixer	src/hardware/mixer.cpp	/^} mixer;$/;"	v	typeref:struct:__anon165	file:
mixer	src/hardware/sblaster.cpp	/^	} mixer;$/;"	m	struct:SB_INFO	typeref:struct:SB_INFO::__anon176	file:
mmio	src/hardware/vga_memory.cpp	/^	VGA_MMIO_Handler			mmio;$/;"	m	struct:vg	file:
mmiohandler	src/hardware/memory.cpp	/^		PageHandler *mmiohandler;$/;"	m	struct:MemoryBlock::__anon163	file:
mo	src/hardware/disney.cpp	/^	MixerObject * mo;$/;"	m	struct:__anon152	file:
mod	src/cpu/core_dyn_x86/decoder.h	/^		Bitu mod;$/;"	m	struct:DynDecode::__anon90
mod	src/cpu/core_dynrec/decoder_basic.h	/^		Bitu mod;$/;"	m	struct:DynDecode::__anon69
mod	src/cpu/core_dynrec/save/decoder_basic.h	/^		Bitu mod;$/;"	m	struct:DynDecode::__anon79
mod1	src/gui/sdl_mapper.cpp	/^	CCheckButton * mod1,* mod2,* mod3,* hold;$/;"	m	struct:__anon145	file:
mod2	src/gui/sdl_mapper.cpp	/^	CCheckButton * mod1,* mod2,* mod3,* hold;$/;"	m	struct:__anon145	file:
mod3	src/gui/sdl_mapper.cpp	/^	CCheckButton * mod1,* mod2,* mod3,* hold;$/;"	m	struct:__anon145	file:
modDate	src/dos/drives.h	/^	Bit16u modDate;$/;"	m	struct:direntry
modTime	src/dos/drives.h	/^	Bit16u modTime;$/;"	m	struct:direntry
mode	include/vga.h	/^	Bit8u mode;$/;"	m	struct:__anon51
mode	include/vga.h	/^	VGAModes mode;								\/* The mode the vga system is in *\/$/;"	m	struct:__anon59
mode	src/hardware/adlib.h	/^	Mode mode;$/;"	m	class:Adlib::Module
mode	src/hardware/fmopl.cpp	/^	UINT8 mode;						\/* Reg.08 : CSM,notesel,etc.	*\/$/;"	m	struct:fm_opl_f	file:
mode	src/hardware/mixer.cpp	/^	Bit8u mode;$/;"	m	struct:MIXER_Channel	file:
mode	src/hardware/pcspeaker.cpp	/^	SPKR_MODES mode;$/;"	m	struct:__anon166	file:
mode	src/hardware/sblaster.cpp	/^		DMA_MODES mode;$/;"	m	struct:SB_INFO::__anon170	file:
mode	src/hardware/sblaster.cpp	/^	DSP_MODES mode;$/;"	m	struct:SB_INFO	file:
mode	src/hardware/timer.cpp	/^	Bit8u mode;$/;"	m	struct:PIT_Block	file:
mode	src/ints/int10.h	/^	Bitu	mode;$/;"	m	struct:VideoModeBlock
mode2	src/dos/cdrom.h	/^		bool mode2;$/;"	m	struct:CDROM_Interface_Image::Track
modeNo	include/vga.h	/^	Bitu modeNo;$/;"	m	struct:__anon60
mode_control	include/vga.h	/^	Bit8u mode_control;$/;"	m	struct:__anon45
mode_control	include/vga.h	/^	Bit8u mode_control;$/;"	m	struct:__anon47
mode_control	include/vga.h	/^	Bit8u mode_control;$/;"	m	struct:__anon49
mode_control	include/vga.h	/^	Bit8u mode_control;$/;"	m	struct:__anon50
modified	include/render.h	/^	Bit8u modified[256];$/;"	m	struct:__anon30
modify_cycles	src/dos/dos.cpp	/^static inline void modify_cycles(Bits \/* value *\/) {$/;"	f	file:
modify_cycles	src/dos/dos.cpp	/^static inline void modify_cycles(Bits value) {$/;"	f	file:
modrm	src/cpu/core_dyn_x86/decoder.h	/^	} modrm;$/;"	m	struct:DynDecode	typeref:struct:DynDecode::__anon90
modrm	src/cpu/core_dynrec/decoder_basic.h	/^	} modrm;$/;"	m	struct:DynDecode	typeref:struct:DynDecode::__anon69
modrm	src/cpu/core_dynrec/save/decoder_basic.h	/^	} modrm;$/;"	m	struct:DynDecode	typeref:struct:DynDecode::__anon79
modrm	src/debug/debug_disasm.cpp	/^static int modrm(void)$/;"	f	file:
modrmv	src/debug/debug_disasm.cpp	/^static int modrmv;            \/* flag for getting modrm byte *\/$/;"	v	file:
mods	src/gui/sdl_mapper.cpp	/^	Bitu mods,flags;$/;"	m	class:CBind	file:
mods	src/gui/sdl_mapper.cpp	/^	Bitu mods;$/;"	m	struct:CMapper	file:
module	src/hardware/adlib.cpp	/^static Adlib::Module module;$/;"	v	file:
month	include/dos_inc.h	/^	Bit8u month;$/;"	m	struct:DOS_Date
mouse	src/gui/sdlmain.h	/^	} mouse;$/;"	m	struct:SDL_Block	typeref:struct:SDL_Block::__anon138
mouse	src/ints/mouse.cpp	/^} mouse;$/;"	v	typeref:struct:__anon199	file:
mouseChild	src/libs/gui_tk/gui_tk.h	/^	Window  *mouseChild;$/;"	m	class:GUI::Window
mouseClicked	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseClicked(int x, int y, MouseButton button) {$/;"	f	class:GUI::Button
mouseDoubleClicked	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseDoubleClicked(int x, int y, MouseButton button) {$/;"	f	class:GUI::ToplevelWindow
mouseDown	src/libs/gui_tk/gui_tk.cpp	/^bool ToplevelWindow::mouseDown(int x, int y, MouseButton button) {$/;"	f	class:GUI::ToplevelWindow
mouseDown	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseDown(int x, int y, MouseButton button)  { return true; }$/;"	f	class:GUI::Menu
mouseDown	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseDown(int x, int y, MouseButton button) {$/;"	f	class:GUI::Button
mouseDown	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseDown(int x, int y, MouseButton button) {$/;"	f	class:GUI::Checkbox
mouseDown	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseDown(int x, int y, MouseButton button) {$/;"	f	class:GUI::Menubar
mouseDown	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseDown(int x, int y, MouseButton button) {$/;"	f	class:GUI::Radiobox
mouseDragged	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseDragged(int x, int y, MouseButton b)  {$/;"	f	class:GUI::Menu
mouseDragged	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseDragged(int x, int y, MouseButton button) {$/;"	f	class:GUI::ToplevelWindow
mouseMoved	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseMoved(int x, int y)  {$/;"	f	class:GUI::Menu
mouseMoved	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseMoved(int x, int y) {$/;"	f	class:GUI::ToplevelWindow
mouseTakenFrom	src/libs/gui_tk/gui_tk.h	/^	Window *mouseTakenFrom;$/;"	m	class:GUI::Menu
mouseUp	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseUp(int x, int y, MouseButton button)  {$/;"	f	class:GUI::Button
mouseUp	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseUp(int x, int y, MouseButton button)  {$/;"	f	class:GUI::Checkbox
mouseUp	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseUp(int x, int y, MouseButton button)  {$/;"	f	class:GUI::Menu
mouseUp	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseUp(int x, int y, MouseButton button)  {$/;"	f	class:GUI::Radiobox
mouseUp	src/libs/gui_tk/gui_tk.h	/^	virtual bool mouseUp(int x, int y, MouseButton button) {$/;"	f	class:GUI::ToplevelWindow
mov_imm_to_temp1	src/cpu/core_dynrec/risc_mipsel32.h	/^static void INLINE mov_imm_to_temp1(Bit32u imm) {$/;"	f
mov_imm_to_temp1	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static void INLINE mov_imm_to_temp1(Bit32u imm) {$/;"	f
move	src/libs/gui_tk/gui_tk.h	/^	virtual void move(int x, int y) { relx = x; rely = y;$/;"	f	class:GUI::TransientWindow
moved	src/gui/sdlmain.h	/^		   bool moved;		   $/;"	m	struct:SDL_Block::__anon140
movehandlers	src/libs/gui_tk/gui_tk.h	/^	std::list<Window_Callback *> movehandlers;$/;"	m	class:GUI::Window
movewin	src/libs/gui_tk/gui_tk.cpp	/^	struct movewin : public GUI::Timer_Callback, public GUI::ToplevelWindow_Callback {$/;"	s	namespace:GUI	file:
mpl	include/cpu.h	/^	Bitu mpl;$/;"	m	struct:CPUBlock
mpl	src/cpu/paging.cpp	/^	Bitu mpl;$/;"	m	struct:PF_Entry	file:
mscdex	src/dos/dos_mscdex.cpp	/^static CMscdex* mscdex = 0;$/;"	v	file:
mtext_palette	src/ints/int10_modes.cpp	/^static Bit8u mtext_palette[64][3]=$/;"	v	file:
mtext_s3_palette	src/ints/int10_modes.cpp	/^static Bit8u mtext_s3_palette[64][3]=$/;"	v	file:
mul	src/hardware/fmopl.cpp	/^	UINT8	mul;		\/* multiple: mul_tab[ML]		*\/$/;"	m	struct:__anon153	file:
mul	src/hardware/sblaster.cpp	/^		Bitu rate,mul;$/;"	m	struct:SB_INFO::__anon170	file:
mul	src/hardware/ymf262.cpp	/^	UINT8	mul;		\/* multiple: mul_tab[ML]		*\/$/;"	m	struct:__anon190	file:
mul_tab	src/hardware/fmopl.cpp	/^static const UINT8 mul_tab[16]= {$/;"	v	file:
mul_tab	src/hardware/ymf262.cpp	/^static const UINT8 mul_tab[16]= {$/;"	v	file:
multi	src/libs/gui_tk/gui_tk.h	/^	bool multi;$/;"	m	class:GUI::Input
multiplex_xms	src/ints/xms.cpp	/^static bool multiplex_xms(void) {$/;"	f	file:
multiply	src/misc/fixed.cpp	/^FixedPoint FixedPoint::multiply(FixedPoint b)$/;"	f	class:FixedPoint
multiply	src/misc/fixed.cpp	/^FixedPoint FixedPoint::multiply(double b)$/;"	f	class:FixedPoint
multiply	src/misc/fixed.cpp	/^FixedPoint FixedPoint::multiply(float b)$/;"	f	class:FixedPoint
multiply	src/misc/fixed.cpp	/^FixedPoint FixedPoint::multiply(int b)$/;"	f	class:FixedPoint
multiply	src/misc/fixed.cpp	/^FixedPoint FixedPoint::multiply(long b)$/;"	f	class:FixedPoint
multiply	src/misc/fixed.cpp	/^FixedPoint FixedPoint::multiply(short b)$/;"	f	class:FixedPoint
must_do_size	src/debug/debug_disasm.cpp	/^static UINT8 must_do_size;   \/* used with size of operand *\/$/;"	v	file:
mutex	src/dos/cdrom.h	/^		SDL_mutex		*mutex;$/;"	m	struct:CDROM_Interface_Ioctl::dxPlayer
mutex	src/dos/cdrom.h	/^		SDL_mutex 	*mutex;$/;"	m	struct:CDROM_Interface_Image::imagePlayer
mw	src/libs/gui_tk/gui_tk.cpp	/^	} mw;$/;"	m	namespace:GUI	typeref:struct:GUI::movewin	file:
myDrive	src/dos/drive_fat.cpp	/^	fatDrive *myDrive;$/;"	m	class:fatFile	file:
my_client	src/gui/midi_alsa.h	/^	int my_client, my_port;$/;"	m	class:MidiHandler_alsa
my_dir	src/platform/visualc/dirent.h	/^typedef struct my_dir {$/;"	s
my_port	src/gui/midi_alsa.h	/^	int my_client, my_port;$/;"	m	class:MidiHandler_alsa
my_snd_seq_open	src/gui/midi_alsa.h	31;"	d
my_snd_seq_open	src/gui/midi_alsa.h	34;"	d
mydosdevice	include/serialport.h	/^	DOS_Device* mydosdevice;$/;"	m	class:CSerial
myfree	src/cpu/core_dynrec/save/cache.h	/^static void myfree(void* addr)$/;"	f
mymalloc	src/cpu/core_dynrec/save/cache.h	/^static void * mymalloc(int size)$/;"	f
mysock	src/hardware/serialport/misc_util.h	/^	TCPsocket mysock;$/;"	m	class:TCPClientSocket
mysock	src/hardware/serialport/misc_util.h	/^	TCPsocket mysock;$/;"	m	class:TCPServerSocket
mysocket	include/ipx.h	/^	Bit16u mysocket;	\/\/ real mode$/;"	m	class:ECBClass
n	include/vga.h	/^		Bit8u n;$/;"	m	struct:__anon42::__anon43
n	src/libs/gui_tk/gui_tk.cpp	/^		int n;$/;"	m	struct:GUI::newwin	file:
name	include/dos_inc.h	/^		char name[DOS_NAMELENGTH_ASCII];$/;"	m	struct:DOS_DTA::sDTA
name	include/dos_system.h	/^	char* name;$/;"	m	class:DOS_File
name	include/mixer.h	/^	const char * name;$/;"	m	class:MixerChannel
name	include/shell.h	/^	const char * name;								\/* Command name*\/$/;"	m	struct:SHELL_Cmd
name	src/debug/debug.cpp	/^	char	name[16];$/;"	m	class:CDebugVar	file:
name	src/dos/dos_mscdex.cpp	/^		Bit8u	name[8];$/;"	m	struct:DOS_DeviceHeader::sDeviceHeader	file:
name	src/dos/drive_virtual.cpp	/^	const char * name;$/;"	m	struct:VFILE_Block	file:
name	src/hardware/mixer.cpp	/^	char * name;$/;"	m	struct:MIXER_Channel	file:
name	src/ints/ems.cpp	/^	char name[8];$/;"	m	struct:EMM_Handle	file:
name	src/libs/gui_tk/gui_tk.h	/^	String name;$/;"	m	class:GUI::ActionEventSource
name	src/misc/messages.cpp	/^	string name;$/;"	m	struct:MessageBlock	file:
nativetcpstruct	src/hardware/serialport/misc_util.h	/^	Bit8u* nativetcpstruct;$/;"	m	class:TCPClientSocket
ncols	src/dos/dev_con.h	/^		Bit16u ncols;$/;"	m	struct:device_CON::ansi
nearjmp	src/dos/drives.h	/^	Bit8u  nearjmp[3];$/;"	m	struct:bootstrap
needed	include/mixer.h	/^	Bitu done,needed;$/;"	m	class:MixerChannel
needed	src/hardware/mixer.cpp	/^	Bitu needed, min_needed, max_needed;$/;"	m	struct:__anon165	file:
needticks	src/gui/sdlmain.h	/^		   bool needticks;$/;"	m	struct:SDL_Block::__anon138
neg_axis_lists	src/gui/sdl_mapper.cpp	/^	CBindList * neg_axis_lists;$/;"	m	class:CStickBindGroup	file:
netnode	src/hardware/ipx.cpp	/^	Uint8 netnode[6];$/;"	m	struct:ipxnetaddr	file:
netnum	src/hardware/ipx.cpp	/^	Uint8 netnum[4];   \/\/ Both are big endian$/;"	m	struct:ipxnetaddr	file:
network	include/ipx.h	/^		Uint8 network[4];$/;"	m	struct:IPXHeader::transport
new_flags	src/cpu/core_full/support.h	/^	Bitu new_flags;$/;"	m	struct:FullData
new_mode	src/hardware/timer.cpp	/^	bool new_mode;$/;"	m	struct:PIT_Block	file:
newesp	src/cpu/core_dyn_x86.cpp	/^	Bitu ea,tmpb,tmpd,stack,shift,newesp;$/;"	m	struct:__anon94	file:
newframe	src/libs/zmbv/zmbv.h	/^	unsigned char *oldframe, *newframe;$/;"	m	class:VideoCodec
newline	src/hardware/vga_xga.cpp	/^		bool newline;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
newwin	src/libs/gui_tk/gui_tk.cpp	/^	struct newwin : public GUI::ActionEventSource_Callback {$/;"	s	namespace:GUI	file:
next	include/mixer.h	/^	MixerChannel * next;$/;"	m	class:MixerChannel
next	src/cpu/core_dyn_x86/cache.h	/^		CacheBlock * next;$/;"	m	struct:CacheBlock::__anon84
next	src/cpu/core_dyn_x86/cache.h	/^		CacheBlock * next;$/;"	m	struct:CacheBlock::__anon85
next	src/cpu/core_dyn_x86/cache.h	/^		CacheBlock * next;$/;"	m	struct:CacheBlock::__anon86
next	src/cpu/core_dyn_x86/cache.h	/^	CodePageHandler * next, * prev;$/;"	m	class:CodePageHandler
next	src/cpu/core_dynrec/cache.h	/^		CacheBlockDynRec * next;$/;"	m	struct:CacheBlockDynRec::__anon63
next	src/cpu/core_dynrec/cache.h	/^		CacheBlockDynRec * next;$/;"	m	struct:CacheBlockDynRec::__anon64
next	src/cpu/core_dynrec/cache.h	/^		CacheBlockDynRec * next;$/;"	m	struct:CacheBlockDynRec::__anon65
next	src/cpu/core_dynrec/cache.h	/^	CodePageHandlerDynRec * next, * prev;	\/\/ page linking$/;"	m	class:CodePageHandlerDynRec
next	src/cpu/core_dynrec/save/cache.h	/^		CacheBlockDynRec * next;$/;"	m	struct:CacheBlockDynRec::__anon73
next	src/cpu/core_dynrec/save/cache.h	/^		CacheBlockDynRec * next;$/;"	m	struct:CacheBlockDynRec::__anon74
next	src/cpu/core_dynrec/save/cache.h	/^		CacheBlockDynRec * next;$/;"	m	struct:CacheBlockDynRec::__anon75
next	src/cpu/core_dynrec/save/cache.h	/^	CodePageHandlerDynRec * next, * prev;	\/\/ page linking$/;"	m	class:CodePageHandlerDynRec
next	src/dos/drive_virtual.cpp	/^	VFILE_Block * next;$/;"	m	struct:VFILE_Block	file:
next	src/gui/sdl_mapper.cpp	/^	CBindButton * next;$/;"	m	struct:__anon145	file:
next	src/hardware/mixer.cpp	/^	MIXER_Channel * next;$/;"	m	struct:MIXER_Channel	file:
next	src/hardware/pic.cpp	/^	PICEntry * next;$/;"	m	struct:PICEntry	file:
next	src/hardware/pic.cpp	/^	TickerBlock * next;$/;"	m	struct:TickerBlock	file:
nextDeviceHeader	src/dos/dos_mscdex.cpp	/^		RealPt	nextDeviceHeader;$/;"	m	struct:DOS_DeviceHeader::sDeviceHeader	file:
nextECB	include/ipx.h	/^	ECBClass *nextECB;$/;"	m	class:ECBClass
nextEntry	include/dos_system.h	/^		Bitu		nextEntry;$/;"	m	class:DOS_Drive_Cache::CFileInfo
nextFreeDirIterator	src/dos/drives.h	/^	int nextFreeDirIterator;$/;"	m	class:isoDrive
nextFreeFindFirst	include/dos_system.h	/^	Bitu		nextFreeFindFirst;$/;"	m	class:DOS_Drive_Cache
next_entry	src/hardware/pic.cpp	/^	PICEntry * next_entry;$/;"	m	struct:__anon167	file:
next_seg	include/dos_inc.h	/^		Bit16u	next_seg;			\/* Segment of first byte beyond memory allocated or program *\/$/;"	m	struct:DOS_PSP::sPSP
nmi	src/hardware/cmos.cpp	/^	bool nmi;$/;"	m	struct:__anon149	file:
nn_flags	include/dos_inc.h	/^		Bit16u nn_flags;$/;"	m	struct:DOS_PSP::sPSP
no	src/debug/disasm_tables.h	/^	no=0xff$/;"	e	enum:__anon111
noclick	src/gui/sdlmain.h	/^	       bool noclick;	$/;"	m	struct:SDL_Block::__anon138
node	include/ipx.h	/^	Uint8 node[6];$/;"	m	struct:nodeType
nodeType	include/ipx.h	/^struct nodeType {$/;"	s
noise	src/hardware/gameblaster.cpp	/^	struct saa1099_noise noise[2];	\/* noise generators *\/$/;"	m	struct:SAA1099	typeref:struct:SAA1099::saa1099_noise	file:
noise_enable	src/hardware/gameblaster.cpp	/^	int noise_enable;		\/* noise enable *\/$/;"	m	struct:saa1099_channel	file:
noise_f	src/hardware/fmopl.cpp	/^	UINT32	noise_f;				\/* current noise period			*\/$/;"	m	struct:fm_opl_f	file:
noise_f	src/hardware/ymf262.cpp	/^	UINT32	noise_f;				\/* current noise period			*\/$/;"	m	struct:__anon192	file:
noise_p	src/hardware/fmopl.cpp	/^	UINT32	noise_p;				\/* current noise 'phase'		*\/$/;"	m	struct:fm_opl_f	file:
noise_p	src/hardware/ymf262.cpp	/^	UINT32	noise_p;				\/* current noise 'phase'		*\/$/;"	m	struct:__anon192	file:
noise_params	src/hardware/gameblaster.cpp	/^	int noise_params[2];			\/* noise generators parameters *\/$/;"	m	struct:SAA1099	file:
noise_rng	src/hardware/fmopl.cpp	/^	UINT32	noise_rng;				\/* 23 bit noise shift register	*\/$/;"	m	struct:fm_opl_f	file:
noise_rng	src/hardware/ymf262.cpp	/^	UINT32	noise_rng;				\/* 23 bit noise shift register	*\/$/;"	m	struct:__anon192	file:
none	src/ints/bios_keyboard.cpp	36;"	d	file:
normal	src/cpu/core_dyn_x86/decoder.h	/^enum save_info_type {exception, cycle_check, normal, fpu_restore};$/;"	e	enum:save_info_type
normal	src/hardware/adlib.h	/^		Bit32u normal;$/;"	m	union:Adlib::Module::__anon148
normal	src/ints/bios_keyboard.cpp	/^  Bit16u normal;$/;"	m	struct:__anon194	file:
nosound	src/hardware/mixer.cpp	/^	bool nosound;$/;"	m	struct:__anon165	file:
notmask	include/cpu.h	/^		Bitu mask,notmask;$/;"	m	struct:CPUBlock::__anon6
notusable	src/cpu/core_dyn_x86/risc_x86.h	/^	bool notusable;$/;"	m	class:GenReg
now	src/libs/gui_tk/gui_tk.h	/^	static Ticks now() { return ticks; }$/;"	f	class:GUI::Timer
nrows	src/dos/dev_con.h	/^		Bit16u nrows;$/;"	m	struct:device_CON::ansi
nts	src/hardware/ymf262.cpp	/^	UINT8	nts;					\/* NTS (note select)			*\/$/;"	m	struct:__anon192	file:
nulAttributes	include/dos_inc.h	/^		Bit16u	nulAttributes;	\/\/  0x26 NUL driver aattributes$/;"	m	struct:DOS_InfoBlock::sDIB
nulNextDriver	include/dos_inc.h	/^		Bit32u	nulNextDriver;	\/\/  0x22 NUL driver next pointer$/;"	m	struct:DOS_InfoBlock::sDIB
nulStrategy	include/dos_inc.h	/^		Bit32u	nulStrategy;	\/\/  0x28 NUL driver strategy routine$/;"	m	struct:DOS_InfoBlock::sDIB
nulString	include/dos_inc.h	/^		Bit8u	nulString[8];	\/\/  0x2c NUL driver name string$/;"	m	struct:DOS_InfoBlock::sDIB
num	src/gui/sdl_mapper.cpp	/^		Bitu num_groups,num;$/;"	m	struct:CMapper::__anon144	file:
numDrives	src/dos/dos_mscdex.cpp	/^	Bit16u		numDrives;$/;"	m	class:CMscdex	file:
numSubUnits	src/dos/dos_mscdex.cpp	/^		Bit8u	numSubUnits;$/;"	m	struct:DOS_DeviceHeader::sDeviceHeader	file:
num_colors	src/ints/int10_misc.cpp	/^	Bit16u num_colors;			\/* 27h   WORD   number of colors supported in current mode *\/$/;"	m	struct:Dynamic_Functionality	file:
num_cols	src/ints/int10_misc.cpp	/^	Bit16u num_cols;			\/* 05h   WORD   number of columns *\/$/;"	m	struct:Dynamic_Functionality	file:
num_groups	src/gui/sdl_mapper.cpp	/^		Bitu num_groups,num;$/;"	m	struct:CMapper::__anon144	file:
num_joysticks	src/gui/sdlmain.h	/^	Bitu num_joysticks;$/;"	m	struct:SDL_Block
num_lock	src/hardware/fmopl.cpp	/^static int num_lock = 0;$/;"	v	file:
num_lock	src/hardware/ymf262.cpp	/^static int num_lock = 0;$/;"	v	file:
num_lock_event	src/gui/sdl_mapper.cpp	/^static CKeyEvent * num_lock_event=NULL;$/;"	v	file:
num_pages	src/ints/int10_misc.cpp	/^	Bit8u num_pages;			\/* 29h   BYTE   number of pages supported in current mode *\/$/;"	m	struct:Dynamic_Functionality	file:
num_rows	src/ints/int10_misc.cpp	/^	Bit8u num_rows;				\/* 22h   BYTE   number of rows *\/$/;"	m	struct:Dynamic_Functionality	file:
num_scanlines	src/ints/int10_misc.cpp	/^	Bit8u num_scanlines;		\/* 2Ah   BYTE   number of scan lines active mode (0,1,2,3) = (200,350,400,480) *\/$/;"	m	struct:Dynamic_Functionality	file:
number	src/dos/cdrom.h	/^		int number;$/;"	m	struct:CDROM_Interface_Image::Track
numberofarg	src/dos/dev_con.h	/^		Bit8u numberofarg;$/;"	m	struct:device_CON::ansi
numericresponse	src/hardware/serialport/softmodem.h	/^	bool numericresponse;	\/\/ true: send control response as number.$/;"	m	class:CSerialModem
nw	src/libs/gui_tk/gui_tk.cpp	/^	} nw;$/;"	m	namespace:GUI	typeref:struct:GUI::newwin	file:
o	src/debug/debug.cpp	/^	bool o;$/;"	m	struct:TLogInst	file:
octave	src/hardware/gameblaster.cpp	/^	int octave; 			\/* octave (0x00..0x07) *\/$/;"	m	struct:saa1099_channel	file:
oem_name	include/dos_inc.h	/^		Bit8u oem_name[8];$/;"	m	struct:bootSector::entries
oemname	src/dos/drives.h	/^	Bit8u  oemname[8];$/;"	m	struct:bootstrap
oemstring	src/ints/int10.h	/^		RealPt oemstring;$/;"	m	struct:__anon196::__anon197
offset	include/ipx.h	/^	Bit16u offset;$/;"	m	struct:fragmentDescriptor
offset	include/vga.h	/^	Bit8u offset;$/;"	m	struct:__anon50
offset	include/vga.h	/^	Bitu offset;$/;"	m	struct:__anon60
offset	src/debug/debug.cpp	/^	Bit32u		offset;$/;"	m	class:CBreakpoint	file:
offset	src/ints/xms.cpp	/^		Bit32u offset;$/;"	m	union:XMS_MemMove::__anon200	file:
offset	src/ints/xms.cpp	/^		Bit32u offset;$/;"	m	union:XMS_MemMove::__anon201	file:
offset	src/libs/gui_tk/gui_tk.h	/^	int offset;$/;"	m	class:GUI::Input
offset_0_15	include/cpu.h	/^	Bit32u offset_0_15	:16;$/;"	m	struct:G_Descriptor
offset_16_31	include/cpu.h	/^	Bit32u offset_16_31	:16;$/;"	m	struct:G_Descriptor
old4b_pointer	src/ints/ems.cpp	/^	RealPt old4b_pointer,old67_pointer;$/;"	m	class:EMS	file:
old67_pointer	src/ints/ems.cpp	/^	RealPt old4b_pointer,old67_pointer;$/;"	m	class:EMS	file:
oldDTRstate	src/hardware/serialport/softmodem.h	/^	bool oldDTRstate;$/;"	m	class:CSerialModem
oldData	src/debug/debug.cpp	/^	Bit8u		oldData;$/;"	m	class:CBreakpoint	file:
oldLeadOut	src/dos/cdrom.h	/^	TMSF		oldLeadOut;$/;"	m	class:CDROM_Interface_Aspi
oldLeadOut	src/dos/cdrom.h	/^	TMSF	oldLeadOut;$/;"	m	class:CDROM_Interface_Ioctl
oldLeadOut	src/dos/cdrom.h	/^	Uint32	oldLeadOut;$/;"	m	class:CDROM_Interface_SDL
old_73_vector	src/hardware/ipx.cpp	/^	RealPt old_73_vector;$/;"	m	class:IPX	file:
old_button_state	src/gui/sdl_mapper.cpp	/^	bool old_button_state[MAXBUTTON];$/;"	m	class:CStickBindGroup	file:
old_cursor_state	src/debug/debug.cpp	/^int old_cursor_state;$/;"	v
old_decoder	include/cpu.h	/^		CPU_Decoder * old_decoder;$/;"	m	struct:CPUBlock::__anon8
old_hat_position	src/gui/sdl_mapper.cpp	/^	Uint8 old_hat_position;$/;"	m	class:CFCSBindGroup	file:
old_hat_state	src/gui/sdl_mapper.cpp	/^	Uint8 old_hat_state[16];$/;"	m	class:CStickBindGroup	file:
old_neg_axis_state	src/gui/sdl_mapper.cpp	/^	bool old_neg_axis_state[16];$/;"	m	class:CStickBindGroup	file:
old_pagehandler	src/cpu/core_dyn_x86/cache.h	/^	PageHandler * old_pagehandler;$/;"	m	class:CodePageHandler
old_pagehandler	src/cpu/core_dynrec/cache.h	/^	PageHandler * old_pagehandler;$/;"	m	class:CodePageHandlerDynRec
old_pagehandler	src/cpu/core_dynrec/save/cache.h	/^	PageHandler * old_pagehandler;$/;"	m	class:CodePageHandlerDynRec
old_pos_axis_state	src/gui/sdl_mapper.cpp	/^	bool old_pos_axis_state[16];$/;"	m	class:CStickBindGroup	file:
old_vector	include/callback.h	/^		RealPt old_vector;$/;"	m	struct:CALLBACK_HandlerObject::__anon4
oldcf	src/cpu/lazyflags.h	/^	Bitu oldcf;$/;"	m	struct:LazyFlags
oldcpucpl	src/debug/debug.cpp	/^static Bitu oldflags,oldcpucpl;$/;"	v	file:
oldflags	src/debug/debug.cpp	/^static Bitu oldflags,oldcpucpl;$/;"	v	file:
oldframe	src/libs/zmbv/zmbv.h	/^	unsigned char *oldframe, *newframe;$/;"	m	class:VideoCodec
oldhidden	src/ints/mouse.cpp	/^	Bit16u	oldhidden;$/;"	m	struct:__anon199	file:
oldmouseX	src/ints/mouse.cpp	/^static Bit16s oldmouseX, oldmouseY;$/;"	v	file:
oldmouseY	src/ints/mouse.cpp	/^static Bit16s oldmouseX, oldmouseY;$/;"	v	file:
oldregs	src/debug/debug.cpp	/^} oldregs;$/;"	v	typeref:struct:__anon110	file:
oldscpos	src/gui/sdlmain.h	/^		   int oldscpos;$/;"	m	struct:SDL_Block::__anon141
oldsegs	src/debug/debug.cpp	/^static Segment oldsegs[6];$/;"	v	file:
on	src/gui/sdlmain.h	/^		   bool on; $/;"	m	struct:SDL_Block::__anon139
on	src/gui/sdlmain.h	/^		   bool on;$/;"	m	struct:SDL_Block::__anon140
once	src/debug/debug.cpp	/^	bool		once;$/;"	m	class:CBreakpoint	file:
op	src/cpu/core_full/support.h	/^	Bit8u load,op,save,extra;$/;"	m	struct:OpCode
op1	include/serialport.h	/^	bool op1;			\/\/ bit2: OP1$/;"	m	class:CSerial
op1	src/cpu/core_full/support.h	/^	} op1,op2,imm;$/;"	m	struct:FullData	typeref:union:FullData::__anon103
op1_out	src/hardware/fmopl.cpp	/^	INT32   op1_out[2];	\/* slot1 output for feedback	*\/$/;"	m	struct:__anon153	file:
op1_out	src/hardware/ymf262.cpp	/^	INT32   op1_out[2];	\/* slot1 output for feedback	*\/$/;"	m	struct:__anon190	file:
op2	include/serialport.h	/^	bool op2;			\/\/ bit3: OP2$/;"	m	class:CSerial
op2	src/cpu/core_full/support.h	/^	} op1,op2,imm;$/;"	m	struct:FullData	typeref:union:FullData::__anon103
op386map1	src/debug/debug_disasm.cpp	/^static char const * op386map1[256] = {$/;"	v	file:
op_calc	src/hardware/fmopl.cpp	/^INLINE signed int op_calc(UINT32 phase, unsigned int env, signed int pm, unsigned int wave_tab)$/;"	f
op_calc	src/hardware/ymf262.cpp	/^INLINE signed int op_calc(UINT32 phase, unsigned int env, signed int pm, unsigned int wave_tab)$/;"	f
op_calc1	src/hardware/fmopl.cpp	/^INLINE signed int op_calc1(UINT32 phase, unsigned int env, signed int pm, unsigned int wave_tab)$/;"	f
op_calc1	src/hardware/ymf262.cpp	/^INLINE signed int op_calc1(UINT32 phase, unsigned int env, signed int pm, unsigned int wave_tab)$/;"	f
op_start	src/cpu/core_dyn_x86/decoder.h	/^	PhysPt op_start;$/;"	m	struct:DynDecode
op_start	src/cpu/core_dynrec/decoder_basic.h	/^	PhysPt op_start;		\/\/ pointer to the start of the current instruction$/;"	m	struct:DynDecode
op_start	src/cpu/core_dynrec/save/decoder_basic.h	/^	PhysPt op_start;		\/\/ pointer to the start of the current instruction$/;"	m	struct:DynDecode
opcode_index	src/cpu/core_simple.cpp	/^	Bitu opcode_index;$/;"	m	struct:__anon105	file:
opcode_index	src/cpu/core_verysimple.cpp	/^	Bitu opcode_index;$/;"	m	struct:__anon106	file:
open	include/dos_system.h	/^	bool open;$/;"	m	class:DOS_File
open_directory	src/misc/cross.cpp	/^dir_information* open_directory(const char* dirname) {$/;"	f
opensockets	src/hardware/ipx.cpp	/^static Bit16u opensockets[SOCKTABLESIZE]; $/;"	v	file:
operator !=	src/libs/gui_tk/gui_tk.h	/^	bool operator!=(const String &src) const { return *(std::vector<Char>*)this != src; }$/;"	f	class:GUI::String
operator !=	src/libs/gui_tk/gui_tk.h	/^	template <typename T> bool operator!=(const T &src) const { return *this != String(src); }$/;"	f	class:GUI::String
operator !=	src/misc/fixed.cpp	/^bool FixedPoint::operator!=(FixedPoint fixedVal)$/;"	f	class:FixedPoint
operator !=	src/misc/fixed.cpp	/^bool FixedPoint::operator!=(double floatVal)$/;"	f	class:FixedPoint
operator !=	src/misc/fixed.cpp	/^bool FixedPoint::operator!=(float floatVal)$/;"	f	class:FixedPoint
operator !=	src/misc/fixed.cpp	/^bool FixedPoint::operator!=(int intVal)$/;"	f	class:FixedPoint
operator !=	src/misc/fixed.cpp	/^bool FixedPoint::operator!=(long intVal)$/;"	f	class:FixedPoint
operator !=	src/misc/fixed.cpp	/^bool FixedPoint::operator!=(short intVal)$/;"	f	class:FixedPoint
operator %	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator%(FixedPoint fixedVal)$/;"	f	class:FixedPoint
operator %	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator%(int intVal)$/;"	f	class:FixedPoint
operator %	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator%(long longVal)$/;"	f	class:FixedPoint
operator %	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator%(short shortVal)$/;"	f	class:FixedPoint
operator ()	include/logging.h	/^	void operator()(char const* )													{ }$/;"	f	struct:LOG
operator ()	include/logging.h	/^	void operator()(char const* , char const* )									{ }$/;"	f	struct:LOG
operator ()	include/logging.h	/^	void operator()(char const* , char const* , double )							{ }$/;"	f	struct:LOG
operator ()	include/logging.h	/^	void operator()(char const* , char const* , double ,double )				{ }$/;"	f	struct:LOG
operator ()	include/logging.h	/^	void operator()(char const* , double )											{ }$/;"	f	struct:LOG
operator ()	include/logging.h	/^	void operator()(char const* , double , char const* )						{ }$/;"	f	struct:LOG
operator ()	include/logging.h	/^	void operator()(char const* , double , double )								{ }$/;"	f	struct:LOG
operator ()	include/logging.h	/^	void operator()(char const* , double , double , double )					{ }$/;"	f	struct:LOG
operator ()	include/logging.h	/^	void operator()(char const* , double , double , double , double )					{ }$/;"	f	struct:LOG
operator ()	include/logging.h	/^	void operator()(char const* , double , double , double , double , double )					{ }$/;"	f	struct:LOG
operator ()	include/logging.h	/^	void operator()(char const* , double , double, char const* )						{ }$/;"	f	struct:LOG
operator ()	src/debug/debug_gui.cpp	/^void LOG::operator() (char const* format, ...){$/;"	f	class:LOG
operator ()	src/libs/gui_tk/gui_tk.h	/^	struct ltstr { bool operator()(const char* s1, const char* s2) const {$/;"	f	struct:GUI::Font::ltstr
operator ()	src/libs/gui_tk/gui_tk.h	/^	struct ltuint { bool operator()(Ticks i1, Ticks i2) const {$/;"	f	struct:GUI::Timer::ltuint
operator ()	src/libs/gui_tk/gui_tk.h	/^struct ltvoid { bool operator()(const void* s1, const void* s2) const { return s1 < s2; } };$/;"	f	struct:GUI::ltvoid
operator *	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*(FixedPoint b)$/;"	f	class:FixedPoint
operator *	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*(double b)$/;"	f	class:FixedPoint
operator *	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*(float b)$/;"	f	class:FixedPoint
operator *	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*(int b)$/;"	f	class:FixedPoint
operator *	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*(long b)$/;"	f	class:FixedPoint
operator *	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*(short b)$/;"	f	class:FixedPoint
operator *	src/misc/fixed.cpp	/^FixedPoint operator*(FixedPoint a, long b)$/;"	f
operator *=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*=(FixedPoint val)$/;"	f	class:FixedPoint
operator *=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*=(double val)$/;"	f	class:FixedPoint
operator *=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*=(float val)$/;"	f	class:FixedPoint
operator *=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*=(int val)$/;"	f	class:FixedPoint
operator *=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*=(long val)$/;"	f	class:FixedPoint
operator *=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator*=(short val)$/;"	f	class:FixedPoint
operator *=	src/misc/fixed.cpp	/^double operator*=(double& a, FixedPoint b)$/;"	f
operator *=	src/misc/fixed.cpp	/^float operator*=(float& a, FixedPoint b)$/;"	f
operator +	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+(FixedPoint b)$/;"	f	class:FixedPoint
operator +	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+(double b)$/;"	f	class:FixedPoint
operator +	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+(float b)$/;"	f	class:FixedPoint
operator +	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+(int b)$/;"	f	class:FixedPoint
operator +	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+(long b)$/;"	f	class:FixedPoint
operator +	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+(short b)$/;"	f	class:FixedPoint
operator ++	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator++(void)$/;"	f	class:FixedPoint
operator +=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+=(FixedPoint val)$/;"	f	class:FixedPoint
operator +=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+=(double val)$/;"	f	class:FixedPoint
operator +=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+=(float val)$/;"	f	class:FixedPoint
operator +=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+=(int val)$/;"	f	class:FixedPoint
operator +=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+=(long val)$/;"	f	class:FixedPoint
operator +=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator+=(short val)$/;"	f	class:FixedPoint
operator +=	src/misc/fixed.cpp	/^double operator+=(double& a, FixedPoint b)$/;"	f
operator +=	src/misc/fixed.cpp	/^float operator+=(float& a, FixedPoint b)$/;"	f
operator -	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-(FixedPoint b)$/;"	f	class:FixedPoint
operator -	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-(double b)$/;"	f	class:FixedPoint
operator -	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-(float b)$/;"	f	class:FixedPoint
operator -	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-(int b)$/;"	f	class:FixedPoint
operator -	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-(long b)$/;"	f	class:FixedPoint
operator -	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-(short b)$/;"	f	class:FixedPoint
operator -	src/misc/fixed.cpp	/^FixedPoint operator-(FixedPoint a)$/;"	f
operator -	src/misc/fixed.cpp	/^FixedPoint operator-(double a, FixedPoint b)$/;"	f
operator -	src/misc/fixed.cpp	/^FixedPoint operator-(float a, FixedPoint b)$/;"	f
operator -	src/misc/fixed.cpp	/^FixedPoint operator-(int a, FixedPoint b)$/;"	f
operator -	src/misc/fixed.cpp	/^FixedPoint operator-(long a, FixedPoint b)$/;"	f
operator -	src/misc/fixed.cpp	/^FixedPoint operator-(short a, FixedPoint b)$/;"	f
operator --	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator--(void)$/;"	f	class:FixedPoint
operator -=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-=(FixedPoint val)$/;"	f	class:FixedPoint
operator -=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-=(double val)$/;"	f	class:FixedPoint
operator -=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-=(float val)$/;"	f	class:FixedPoint
operator -=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-=(int val)$/;"	f	class:FixedPoint
operator -=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-=(long val)$/;"	f	class:FixedPoint
operator -=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator-=(short val)$/;"	f	class:FixedPoint
operator -=	src/misc/fixed.cpp	/^double operator-=(double& a, FixedPoint b)$/;"	f
operator -=	src/misc/fixed.cpp	/^float operator-=(float& a, FixedPoint b)$/;"	f
operator /	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/(FixedPoint b)$/;"	f	class:FixedPoint
operator /	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/(double b)$/;"	f	class:FixedPoint
operator /	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/(float b)$/;"	f	class:FixedPoint
operator /	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/(int b)$/;"	f	class:FixedPoint
operator /	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/(long b)$/;"	f	class:FixedPoint
operator /	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/(short b)$/;"	f	class:FixedPoint
operator /=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/=(FixedPoint val)$/;"	f	class:FixedPoint
operator /=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/=(double val)$/;"	f	class:FixedPoint
operator /=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/=(float val)$/;"	f	class:FixedPoint
operator /=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/=(int val)$/;"	f	class:FixedPoint
operator /=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/=(long val)$/;"	f	class:FixedPoint
operator /=	src/misc/fixed.cpp	/^FixedPoint FixedPoint::operator\/=(short val)$/;"	f	class:FixedPoint
operator /=	src/misc/fixed.cpp	/^double operator\/=(double& a, FixedPoint b)$/;"	f
operator /=	src/misc/fixed.cpp	/^float operator\/=(float& a, FixedPoint b)$/;"	f
operator <	src/misc/fixed.cpp	/^bool FixedPoint::operator<(FixedPoint fixedVal)$/;"	f	class:FixedPoint
operator <	src/misc/fixed.cpp	/^bool FixedPoint::operator<(double floatVal)$/;"	f	class:FixedPoint
operator <	src/misc/fixed.cpp	/^bool FixedPoint::operator<(float floatVal)$/;"	f	class:FixedPoint
operator <	src/misc/fixed.cpp	/^bool FixedPoint::operator<(int intVal)$/;"	f	class:FixedPoint
operator <	src/misc/fixed.cpp	/^bool FixedPoint::operator<(long intVal)$/;"	f	class:FixedPoint
operator <	src/misc/fixed.cpp	/^bool FixedPoint::operator<(short intVal)$/;"	f	class:FixedPoint
operator <	src/misc/fixed.cpp	/^bool operator<(double b, FixedPoint a)$/;"	f
operator <	src/misc/fixed.cpp	/^bool operator<(float b, FixedPoint a)$/;"	f
operator <	src/misc/fixed.cpp	/^bool operator<(int b, FixedPoint a)$/;"	f
operator <	src/misc/fixed.cpp	/^bool operator<(long b, FixedPoint a)$/;"	f
operator <	src/misc/fixed.cpp	/^bool operator<(short b, FixedPoint a)$/;"	f
operator <=	src/misc/fixed.cpp	/^bool FixedPoint::operator<=(FixedPoint fixedVal)$/;"	f	class:FixedPoint
operator <=	src/misc/fixed.cpp	/^bool FixedPoint::operator<=(double floatVal)$/;"	f	class:FixedPoint
operator <=	src/misc/fixed.cpp	/^bool FixedPoint::operator<=(float floatVal)$/;"	f	class:FixedPoint
operator <=	src/misc/fixed.cpp	/^bool FixedPoint::operator<=(int intVal)$/;"	f	class:FixedPoint
operator <=	src/misc/fixed.cpp	/^bool FixedPoint::operator<=(long intVal)$/;"	f	class:FixedPoint
operator <=	src/misc/fixed.cpp	/^bool FixedPoint::operator<=(short intVal)$/;"	f	class:FixedPoint
operator =	include/dos_system.h	/^	DOS_Device & operator= (const DOS_Device & orig) {$/;"	f	class:DOS_Device
operator =	include/setup.h	/^	Value& operator= (Hex in) throw(WrongType)                { return copy(Value(in));}$/;"	f	class:Value
operator =	include/setup.h	/^	Value& operator= (Value const& in) throw(WrongType)       { return copy(Value(in));}$/;"	f	class:Value
operator =	include/setup.h	/^	Value& operator= (bool in) throw(WrongType)               { return copy(Value(in));}$/;"	f	class:Value
operator =	include/setup.h	/^	Value& operator= (char const * const in) throw(WrongType) { return copy(Value(in));}$/;"	f	class:Value
operator =	include/setup.h	/^	Value& operator= (double in) throw(WrongType)             { return copy(Value(in));}$/;"	f	class:Value
operator =	include/setup.h	/^	Value& operator= (int in) throw(WrongType)                { return copy(Value(in));}$/;"	f	class:Value
operator =	include/setup.h	/^	Value& operator= (std::string const& in) throw(WrongType) { return copy(Value(in));}$/;"	f	class:Value
operator =	src/dos/dos_devices.cpp	/^DOS_File & DOS_File::operator= (const DOS_File & orig) {$/;"	f	class:DOS_File
operator =	src/hardware/adlib.cpp	/^	void* operator=(void* rhs) { return (m_ptr = rhs); }$/;"	f	struct:__MALLOCPTR
operator =	src/misc/fixed.cpp	/^FixedPoint& FixedPoint::operator=(FixedPoint fixedVal)$/;"	f	class:FixedPoint
operator =	src/misc/fixed.cpp	/^FixedPoint& FixedPoint::operator=(char charVal)$/;"	f	class:FixedPoint
operator =	src/misc/fixed.cpp	/^FixedPoint& FixedPoint::operator=(double floatVal)$/;"	f	class:FixedPoint
operator =	src/misc/fixed.cpp	/^FixedPoint& FixedPoint::operator=(float floatVal)$/;"	f	class:FixedPoint
operator =	src/misc/fixed.cpp	/^FixedPoint& FixedPoint::operator=(int intVal)$/;"	f	class:FixedPoint
operator =	src/misc/fixed.cpp	/^FixedPoint& FixedPoint::operator=(long longVal)$/;"	f	class:FixedPoint
operator =	src/misc/fixed.cpp	/^FixedPoint& FixedPoint::operator=(short shortVal)$/;"	f	class:FixedPoint
operator =	src/misc/fixed.cpp	/^FixedPoint& FixedPoint::operator=(unsigned char charVal)$/;"	f	class:FixedPoint
operator =	src/misc/fixed.cpp	/^FixedPoint& FixedPoint::operator=(unsigned int intVal)$/;"	f	class:FixedPoint
operator =	src/misc/fixed.cpp	/^FixedPoint& FixedPoint::operator=(unsigned long longVal)$/;"	f	class:FixedPoint
operator =	src/misc/fixed.cpp	/^FixedPoint& FixedPoint::operator=(unsigned short shortVal)$/;"	f	class:FixedPoint
operator ==	include/setup.h	/^	bool operator==(Hex const& other) {return _hex == other._hex;}$/;"	f	class:Hex
operator ==	src/libs/gui_tk/gui_tk.h	/^	bool operator==(const String &src) const { return *(std::vector<Char>*)this == src; }$/;"	f	class:GUI::String
operator ==	src/libs/gui_tk/gui_tk.h	/^	template <typename T> bool operator==(const T &src) const { return *this == String(src); }$/;"	f	class:GUI::String
operator ==	src/misc/fixed.cpp	/^bool FixedPoint::operator==(FixedPoint fixedVal)$/;"	f	class:FixedPoint
operator ==	src/misc/fixed.cpp	/^bool FixedPoint::operator==(double floatVal)$/;"	f	class:FixedPoint
operator ==	src/misc/fixed.cpp	/^bool FixedPoint::operator==(float floatVal)$/;"	f	class:FixedPoint
operator ==	src/misc/fixed.cpp	/^bool FixedPoint::operator==(int intVal)$/;"	f	class:FixedPoint
operator ==	src/misc/fixed.cpp	/^bool FixedPoint::operator==(long intVal)$/;"	f	class:FixedPoint
operator ==	src/misc/fixed.cpp	/^bool FixedPoint::operator==(short intVal)$/;"	f	class:FixedPoint
operator ==	src/misc/setup.cpp	/^bool Value::operator==(Value const& other) {$/;"	f	class:Value
operator >	src/misc/fixed.cpp	/^bool FixedPoint::operator>(FixedPoint fixedVal)$/;"	f	class:FixedPoint
operator >	src/misc/fixed.cpp	/^bool FixedPoint::operator>(double floatVal)$/;"	f	class:FixedPoint
operator >	src/misc/fixed.cpp	/^bool FixedPoint::operator>(float floatVal)$/;"	f	class:FixedPoint
operator >	src/misc/fixed.cpp	/^bool FixedPoint::operator>(int intVal)$/;"	f	class:FixedPoint
operator >	src/misc/fixed.cpp	/^bool FixedPoint::operator>(long intVal)$/;"	f	class:FixedPoint
operator >	src/misc/fixed.cpp	/^bool FixedPoint::operator>(short intVal)$/;"	f	class:FixedPoint
operator >=	src/misc/fixed.cpp	/^bool FixedPoint::operator>=(FixedPoint fixedVal)$/;"	f	class:FixedPoint
operator >=	src/misc/fixed.cpp	/^bool FixedPoint::operator>=(double floatVal)$/;"	f	class:FixedPoint
operator >=	src/misc/fixed.cpp	/^bool FixedPoint::operator>=(float floatVal)$/;"	f	class:FixedPoint
operator >=	src/misc/fixed.cpp	/^bool FixedPoint::operator>=(int intVal)$/;"	f	class:FixedPoint
operator >=	src/misc/fixed.cpp	/^bool FixedPoint::operator>=(long intVal)$/;"	f	class:FixedPoint
operator >=	src/misc/fixed.cpp	/^bool FixedPoint::operator>=(short intVal)$/;"	f	class:FixedPoint
operator Hex	src/misc/setup.cpp	/^Value::operator Hex () const throw(WrongType) {$/;"	f	class:Value
operator T	src/libs/gui_tk/gui_tk.h	/^	template <typename T> operator T() const { return NativeString<T>::getNative(*this); }$/;"	f	class:GUI::String
operator bool	src/misc/setup.cpp	/^Value::operator bool () const throw(WrongType) {$/;"	f	class:Value
operator char const*	src/misc/setup.cpp	/^Value::operator char const* () const throw(WrongType) {$/;"	f	class:Value
operator char*	src/hardware/adlib.cpp	/^	operator char*() const { return (char*)m_ptr; }$/;"	f	struct:__MALLOCPTR
operator double	src/misc/fixed.cpp	/^FixedPoint::operator double(void)$/;"	f	class:FixedPoint
operator double	src/misc/setup.cpp	/^Value::operator double () const throw(WrongType) {$/;"	f	class:Value
operator float	src/misc/fixed.cpp	/^FixedPoint::operator float(void)$/;"	f	class:FixedPoint
operator int	include/setup.h	/^	operator int () const { return _hex; }$/;"	f	class:Hex
operator int	src/misc/fixed.cpp	/^FixedPoint::operator int(void)$/;"	f	class:FixedPoint
operator int	src/misc/setup.cpp	/^Value::operator int () const throw(WrongType) {$/;"	f	class:Value
operator int*	src/hardware/adlib.cpp	/^	operator int*() const { return (int*)m_ptr; }$/;"	f	struct:__MALLOCPTR
operator int**	src/hardware/adlib.cpp	/^	operator int**() const { return (int**)m_ptr; }$/;"	f	struct:__MALLOCPTR
operator long	src/misc/fixed.cpp	/^FixedPoint::operator long(void)$/;"	f	class:FixedPoint
operator short	src/misc/fixed.cpp	/^FixedPoint::operator short(void)$/;"	f	class:FixedPoint
operator unsigned short	src/misc/fixed.cpp	/^FixedPoint::operator unsigned short(void)$/;"	f	class:FixedPoint
oplmode	src/hardware/adlib.cpp	/^	static OPL_Mode oplmode;$/;"	m	class:OPL	file:
oplmode	src/hardware/adlib.cpp	/^OPL_Mode OPL::oplmode=OPL_none;$/;"	m	class:OPL	file:
opmap1	src/debug/debug_disasm.cpp	/^static char const* (*opmap1)[256];$/;"	v	file:
opposite_axis	src/gui/sdl_mapper.cpp	/^	CJAxisEvent * opposite_axis;$/;"	m	class:CJAxisEvent	file:
opsize	src/debug/debug_disasm.cpp	/^static int opsize;            \/* just like it says ...       *\/$/;"	v	file:
orgname	include/dos_system.h	/^		char		orgname		[CROSS_LEN];$/;"	m	class:DOS_Drive_Cache::CFileInfo
originx	include/vga.h	/^	Bit16u originx, originy;$/;"	m	struct:__anon41
originy	include/vga.h	/^	Bit16u originx, originy;$/;"	m	struct:__anon41
other	include/vga.h	/^	VGA_OTHER other;$/;"	m	struct:__anon59
other_memsystems	src/ints/bios.cpp	/^static Bits other_memsystems=0;$/;"	v	file:
out	src/hardware/sblaster.cpp	/^		} in,out;$/;"	m	struct:SB_INFO::__anon173	typeref:struct:SB_INFO::__anon173::__anon174	file:
outLine	include/render.h	/^		Bitu inLine, outLine;$/;"	m	struct:__anon32::__anon35
outPitch	include/render.h	/^		Bitu outPitch;$/;"	m	struct:__anon32::__anon35
outWrite	include/render.h	/^		Bit8u *outWrite;$/;"	m	struct:__anon32::__anon35
outc	src/shell/shell_misc.cpp	/^static void outc(Bit8u c) {$/;"	f	file:
outhex	src/debug/debug_disasm.cpp	/^static void outhex(char subtype, int extend, int optional, int defsize, int sign)$/;"	f	file:
output	src/hardware/fmopl.cpp	/^static signed int output[1];$/;"	v	file:
output_deltat	src/hardware/fmopl.cpp	/^static INT32 output_deltat[4];		\/* for Y8950 DELTA-T, chip is mono, that 4 here is just for safety *\/$/;"	v	file:
overflow	include/vga.h	/^	Bit8u overflow;$/;"	m	struct:__anon50
overflow	src/hardware/adlib.h	/^	bool enabled, overflow, masked;$/;"	m	struct:Adlib::Timer
overlay	include/dos_inc.h	/^	sOverlay overlay;$/;"	m	class:DOS_ParamBlock
overlay	src/dos/dos_execute.cpp	/^	Bit16u overlay;$/;"	m	struct:EXE_Header	file:
overrunErrors	include/serialport.h	/^	Bitu overrunErrors;$/;"	m	class:CSerial
overrunIF0	include/serialport.h	/^	Bitu overrunIF0;$/;"	m	class:CSerial
overscan_color	include/vga.h	/^	Bit8u overscan_color;$/;"	m	struct:__anon49
owner	src/libs/gui_tk/gui_tk.h	/^	const bool owner;$/;"	m	class:GUI::BitmapFont
owner	src/libs/gui_tk/gui_tk.h	/^	const bool owner;$/;"	m	class:GUI::Drawable
p	include/cpu.h	/^	Bit32u p			:1;$/;"	m	struct:G_Descriptor
p	include/cpu.h	/^	Bit32u p			:1;$/;"	m	struct:S_Descriptor
p	include/paging.h	/^	Bit32u		p:1;$/;"	m	struct:X86_PageEntryBlock
p	src/debug/debug.cpp	/^	bool p;$/;"	m	struct:TLogInst	file:
p60changed	src/hardware/keyboard.cpp	/^	bool p60changed;$/;"	m	struct:__anon161	file:
p60data	src/hardware/keyboard.cpp	/^	Bit8u p60data;$/;"	m	struct:__anon161	file:
pDebugcom	src/debug/debug.cpp	/^DEBUG*	pDebugcom	= 0;$/;"	v
pGetASPI32SupportInfo	src/dos/cdrom.h	/^	DWORD		(*pGetASPI32SupportInfo)	(void);             \/\/ ptrs to aspi funcs$/;"	m	class:CDROM_Interface_Aspi
pSendASPI32Command	src/dos/cdrom.h	/^	DWORD		(*pSendASPI32Command)		(LPSRB);$/;"	m	class:CDROM_Interface_Aspi
pType	include/ipx.h	/^	Uint8 pType; \/\/ Packet type$/;"	m	struct:IPXHeader
p_addr	src/debug/disasm_tables.h	/^	b2,p_es,p_ss,p_cs,p_ds,p_fs,p_gs,p_size,p_addr,p_rep,$/;"	e	enum:__anon111
p_cs	src/debug/disasm_tables.h	/^	b2,p_es,p_ss,p_cs,p_ds,p_fs,p_gs,p_size,p_addr,p_rep,$/;"	e	enum:__anon111
p_ds	src/debug/disasm_tables.h	/^	b2,p_es,p_ss,p_cs,p_ds,p_fs,p_gs,p_size,p_addr,p_rep,$/;"	e	enum:__anon111
p_es	src/debug/disasm_tables.h	/^	b2,p_es,p_ss,p_cs,p_ds,p_fs,p_gs,p_size,p_addr,p_rep,$/;"	e	enum:__anon111
p_fs	src/debug/disasm_tables.h	/^	b2,p_es,p_ss,p_cs,p_ds,p_fs,p_gs,p_size,p_addr,p_rep,$/;"	e	enum:__anon111
p_gs	src/debug/disasm_tables.h	/^	b2,p_es,p_ss,p_cs,p_ds,p_fs,p_gs,p_size,p_addr,p_rep,$/;"	e	enum:__anon111
p_regs	include/fpu.h	/^	FPU_P_Reg	p_regs[9];$/;"	m	struct:__anon23
p_rep	src/debug/disasm_tables.h	/^	b2,p_es,p_ss,p_cs,p_ds,p_fs,p_gs,p_size,p_addr,p_rep,$/;"	e	enum:__anon111
p_size	src/debug/disasm_tables.h	/^	b2,p_es,p_ss,p_cs,p_ds,p_fs,p_gs,p_size,p_addr,p_rep,$/;"	e	enum:__anon111
p_ss	src/debug/disasm_tables.h	/^	b2,p_es,p_ss,p_cs,p_ds,p_fs,p_gs,p_size,p_addr,p_rep,$/;"	e	enum:__anon111
packetBuffer	include/ipxserver.h	/^struct packetBuffer {$/;"	s
packetCRC	src/hardware/ipxserver.cpp	/^Bit8u packetCRC(Bit8u *buffer, Bit16u bufSize) {$/;"	f
packetRead	include/ipxserver.h	/^	Bit16s packetRead;  \/\/ Bytes read of total packet$/;"	m	struct:packetBuffer
packetSize	include/ipxserver.h	/^	Bit16s packetSize;  \/\/ Packet size remaining in read$/;"	m	struct:packetBuffer
page	include/paging.h	/^		Bitu page;$/;"	m	struct:PagingBlock::__anon25
page	include/vga.h	/^	Bit32u page;$/;"	m	struct:__anon58
page	src/cpu/core_dyn_x86/cache.h	/^	} page;$/;"	m	class:CacheBlock	typeref:struct:CacheBlock::__anon83
page	src/cpu/core_dyn_x86/decoder.h	/^	} page;$/;"	m	struct:DynDecode	typeref:struct:DynDecode::__anon89
page	src/cpu/core_dynrec/cache.h	/^	} page;$/;"	m	class:CacheBlockDynRec	typeref:struct:CacheBlockDynRec::__anon62
page	src/cpu/core_dynrec/decoder_basic.h	/^	} page;$/;"	m	struct:DynDecode	typeref:struct:DynDecode::__anon68
page	src/cpu/core_dynrec/save/cache.h	/^	} page;$/;"	m	class:CacheBlockDynRec	typeref:struct:CacheBlockDynRec::__anon72
page	src/cpu/core_dynrec/save/decoder_basic.h	/^	} page;$/;"	m	struct:DynDecode	typeref:struct:DynDecode::__anon78
page	src/ints/ems.cpp	/^	Bit16u page;$/;"	m	struct:EMM_Mapping	file:
page	src/ints/mouse.cpp	/^	Bit8u  page;$/;"	m	struct:__anon199	file:
page_addr	src/cpu/paging.cpp	/^	Bitu page_addr;$/;"	m	struct:PF_Entry	file:
page_map	src/ints/ems.cpp	/^	EMM_Mapping page_map[EMM_MAX_PHYS];$/;"	m	struct:EMM_Handle	file:
pagebase	include/dma.h	/^	Bit32u pagebase;$/;"	m	class:DmaChannel
pagenum	include/dma.h	/^	Bit8u pagenum;$/;"	m	class:DmaChannel
pages	src/dos/dos_execute.cpp	/^	Bit16u pages;						\/* Pages in file *\/$/;"	m	struct:EXE_Header	file:
pages	src/hardware/memory.cpp	/^		Bitu		pages;$/;"	m	struct:MemoryBlock::__anon163	file:
pages	src/hardware/memory.cpp	/^	Bit32u pages[MAX_LINKS];$/;"	m	struct:LinkBlock	file:
pages	src/hardware/memory.cpp	/^	Bitu pages;$/;"	m	struct:MemoryBlock	file:
pages	src/ints/ems.cpp	/^	Bit16u pages;$/;"	m	struct:EMM_Handle	file:
paging	src/cpu/paging.cpp	/^PagingBlock paging;$/;"	v
paint	src/libs/gui_tk/gui_tk.h	/^	virtual void paint(Drawable &d) const { d.setColor(color); d.drawText(0, font->getAscent(), text, interpret, 0); }$/;"	f	class:GUI::Label
paint	src/libs/gui_tk/gui_tk.h	/^	virtual void paint(Drawable &d) const {};$/;"	f	class:GUI::Window
pal	include/render.h	/^	RenderPal_t pal;$/;"	m	struct:__anon32
palette	include/vga.h	/^	Bit8u palette[16];$/;"	m	struct:__anon49
palette	src/libs/zmbv/zmbv.h	/^	char palette[256*4];$/;"	m	class:VideoCodec
palette_mask	include/vga.h	/^	Bit8u palette_mask;$/;"	m	struct:__anon47
palsize	src/libs/zmbv/zmbv.h	/^	int palsize;$/;"	m	class:VideoCodec
pan	src/hardware/ymf262.cpp	/^	UINT32	pan[18*2];				\/* channels output multiplier; 2 per channel *\/$/;"	m	struct:__anon192	file:
panning	include/vga.h	/^	Bitu panning;$/;"	m	struct:__anon38
paramcount	include/cpu.h	/^	Bit32u paramcount	:5;$/;"	m	struct:G_Descriptor
parent	src/libs/gui_tk/gui_tk.h	/^	Window *const parent;$/;"	m	class:GUI::Window
parityErrors	include/serialport.h	/^	Bitu parityErrors;$/;"	m	class:CSerial
parity_lookup	src/cpu/flags.cpp	/^Bit16u parity_lookup[256] = {$/;"	v
parse_addr	src/gui/midi_alsa.h	/^	int parse_addr(const char *arg, int *client, int *port) {$/;"	f	class:MidiHandler_alsa
partSectOff	src/dos/drives.h	/^	Bit32u partSectOff;$/;"	m	class:fatDrive
partSize	src/dos/drives.h	/^		Bit32u partSize;$/;"	m	struct:partTable::__anon118
partTable	src/dos/drives.h	/^struct partTable {$/;"	s
parts	include/vga.h	/^		double parts;$/;"	m	struct:__anon38::__anon39
parts_left	include/vga.h	/^	Bitu parts_left;$/;"	m	struct:__anon38
parts_lines	include/vga.h	/^	Bitu parts_lines;$/;"	m	struct:__anon38
parts_total	include/vga.h	/^	Bitu parts_total;$/;"	m	struct:__anon38
parttype	src/dos/drives.h	/^		Bit8u parttype;$/;"	m	struct:partTable::__anon118
pasteSelection	src/libs/gui_tk/gui_tk.h	/^	void pasteSelection() {$/;"	f	class:GUI::Input
pat	include/paging.h	/^	Bit32u		pat:1;$/;"	m	struct:X86_PageEntryBlock
pathName	src/platform/visualc/dirent.h	/^    char            pathName[MAX_PATH];$/;"	m	struct:my_dir
pathTableSizeL	src/dos/drives.h	/^	Bit32u pathTableSizeL;$/;"	m	struct:isoPVD
pathTableSizeM	src/dos/drives.h	/^	Bit32u pathTableSizeM;$/;"	m	struct:isoPVD
path_string	src/shell/shell.cpp	/^static char const * const path_string="PATH=Z:\\\\";$/;"	v	file:
pathname	src/dos/cdrom.h	/^	char	pathname[32];$/;"	m	class:CDROM_Interface_Ioctl
pause	src/hardware/keyboard.cpp	/^		Bitu pause,rate;$/;"	m	struct:__anon161::__anon162	file:
pc	src/debug/debug_inc.h	/^	Bit32u pc;$/;"	m	struct:DASMLine
pcd	include/paging.h	/^	Bit32u		pcd:1;$/;"	m	struct:X86_PageEntryBlock
pcjr	src/hardware/vga_memory.cpp	/^	VGA_PCJR_Handler			pcjr;$/;"	m	struct:vg	file:
pcjr_flipflop	include/vga.h	/^	Bit8u pcjr_flipflop;$/;"	m	struct:__anon47
pel_index	include/vga.h	/^	Bit8u pel_index;	$/;"	m	struct:__anon53
pel_mask	include/vga.h	/^	Bit8u pel_mask;$/;"	m	struct:__anon53
pel_panning	include/vga.h	/^	Bit8u pel_panning;				\/* Amount of pixels to skip when starting horizontal line *\/$/;"	m	struct:__anon37
pending_16bit	src/hardware/sblaster.cpp	/^		bool pending_16bit;$/;"	m	struct:SB_INFO::__anon172	file:
pending_8bit	src/hardware/sblaster.cpp	/^		bool pending_8bit;$/;"	m	struct:SB_INFO::__anon172	file:
pentry	src/dos/drives.h	/^	} pentry[4];$/;"	m	struct:partTable	typeref:struct:partTable::__anon118
percent	src/debug/debug_disasm.cpp	/^static void percent(char type, char subtype)$/;"	f	file:
pf_queue	src/cpu/paging.cpp	/^} pf_queue;$/;"	v	typeref:struct:__anon109	file:
phandlers	src/hardware/memory.cpp	/^	PageHandler * * phandlers;$/;"	m	struct:MemoryBlock	file:
phase_modulation	src/hardware/fmopl.cpp	/^static signed int phase_modulation;	\/* phase modulation input (SLOT 2) *\/$/;"	v	file:
phase_modulation	src/hardware/ymf262.cpp	/^static signed int phase_modulation;		\/* phase modulation input (SLOT 2) *\/$/;"	v	file:
phase_modulation2	src/hardware/ymf262.cpp	/^static signed int phase_modulation2;	\/* phase modulation input (SLOT 3 in 4 operator channels) *\/$/;"	v	file:
phys	include/regs.h	/^	PhysPt phys;							\/* The phyiscal address start in emulated machine *\/$/;"	m	struct:Segment
phys	include/regs.h	/^	PhysPt phys[8];$/;"	m	struct:Segments
physDrive	src/dos/dos_mscdex.cpp	/^		Bit8u	physDrive;		\/\/ drive letter in system$/;"	m	struct:CMscdex::SDriveInfo	file:
phys_page	include/paging.h	/^		Bit32u	phys_page[TLB_SIZE];$/;"	m	struct:PagingBlock::__anon26
phys_page	include/paging.h	/^	Bit32u phys_page;$/;"	m	struct:__anon24
phys_page	src/cpu/core_dyn_x86/cache.h	/^	Bitu phys_page;$/;"	m	class:CodePageHandler
phys_page	src/cpu/core_dynrec/cache.h	/^	Bitu phys_page;$/;"	m	class:CodePageHandlerDynRec
phys_page	src/cpu/core_dynrec/save/cache.h	/^	Bitu phys_page;$/;"	m	class:CodePageHandlerDynRec
phys_readb	include/mem.h	/^INLINE Bit8u phys_readb(PhysPt addr) {$/;"	f
phys_readd	include/mem.h	/^INLINE Bit32u phys_readd(PhysPt addr){$/;"	f
phys_readw	include/mem.h	/^INLINE Bit16u phys_readw(PhysPt addr){$/;"	f
phys_writeb	include/mem.h	/^INLINE void phys_writeb(PhysPt addr,Bit8u val) {$/;"	f
phys_writed	include/mem.h	/^INLINE void phys_writed(PhysPt addr,Bit32u val){$/;"	f
phys_writew	include/mem.h	/^INLINE void phys_writew(PhysPt addr,Bit16u val){$/;"	f
pic1_remapping	src/ints/ems.cpp	/^	Bit8u pic1_remapping,pic2_remapping;$/;"	m	struct:__anon195	file:
pic2_remapping	src/ints/ems.cpp	/^	Bit8u pic1_remapping,pic2_remapping;$/;"	m	struct:__anon195	file:
pic_event	src/hardware/pic.cpp	/^	PIC_EventHandler pic_event;$/;"	m	struct:PICEntry	file:
pic_queue	src/hardware/pic.cpp	/^} pic_queue;$/;"	v	typeref:struct:__anon167	file:
pics	src/hardware/pic.cpp	/^static PIC_Controller pics[2];$/;"	v	file:
pingAck	src/hardware/ipx.cpp	/^static void pingAck(IPaddress retAddr) {$/;"	f	file:
pingCheck	src/hardware/ipx.cpp	/^static bool pingCheck(IPXHeader * outHeader) {$/;"	f	file:
pingSend	src/hardware/ipx.cpp	/^static void pingSend(void) {$/;"	f	file:
pit	src/hardware/timer.cpp	/^static PIT_Block pit[3];$/;"	v	file:
pit_half	src/hardware/pcspeaker.cpp	/^	float pit_max,pit_half;$/;"	m	struct:__anon166	file:
pit_index	src/hardware/pcspeaker.cpp	/^	float pit_index;$/;"	m	struct:__anon166	file:
pit_last	src/hardware/pcspeaker.cpp	/^	float pit_last;$/;"	m	struct:__anon166	file:
pit_max	src/hardware/pcspeaker.cpp	/^	float pit_max,pit_half;$/;"	m	struct:__anon166	file:
pit_mode	src/hardware/pcspeaker.cpp	/^	Bitu pit_mode;$/;"	m	struct:__anon166	file:
pit_new_half	src/hardware/pcspeaker.cpp	/^	float pit_new_max,pit_new_half;$/;"	m	struct:__anon166	file:
pit_new_max	src/hardware/pcspeaker.cpp	/^	float pit_new_max,pit_new_half;$/;"	m	struct:__anon166	file:
pitch	src/libs/zmbv/zmbv.h	/^	int height, width, pitch;$/;"	m	class:VideoCodec
pix_cntl	src/hardware/vga_xga.cpp	/^	Bit16u pix_cntl;$/;"	m	struct:XGAStatus	file:
pixelPerMickey_x	src/ints/mouse.cpp	/^	float	pixelPerMickey_x;$/;"	m	struct:__anon199	file:
pixelPerMickey_y	src/ints/mouse.cpp	/^	float	pixelPerMickey_y;$/;"	m	struct:__anon199	file:
pixelsize	src/libs/zmbv/zmbv.h	/^	int pixelsize;$/;"	m	class:VideoCodec
plaincopy	src/misc/setup.cpp	/^void Value::plaincopy(Value const& in) throw(){$/;"	f	class:Value
player	src/dos/cdrom.h	/^	} player;$/;"	m	class:CDROM_Interface_Image	typeref:struct:CDROM_Interface_Image::imagePlayer
player	src/dos/cdrom.h	/^	} player;$/;"	m	class:CDROM_Interface_Ioctl	typeref:struct:CDROM_Interface_Ioctl::dxPlayer
player	src/dos/cdrom_image.cpp	/^CDROM_Interface_Image::imagePlayer CDROM_Interface_Image::player = {$/;"	m	class:CDROM_Interface_Image	file:
player	src/dos/cdrom_ioctl_win32.cpp	/^CDROM_Interface_Ioctl::dxPlayer CDROM_Interface_Ioctl::player = {$/;"	m	class:CDROM_Interface_Ioctl	file:
playing	src/hardware/mixer.cpp	/^	bool playing;$/;"	m	struct:MIXER_Channel	file:
playing	src/hardware/tandy_sound.cpp	/^		bool playing;$/;"	m	struct:__anon183::__anon184	file:
plength	src/ints/int10.h	/^	Bitu	ptotal,pstart,plength;$/;"	m	struct:VideoModeBlock
pll	include/vga.h	/^	} pll;$/;"	m	struct:__anon42	typeref:struct:__anon42::__anon44
plusinc	src/hardware/serialport/softmodem.h	/^	Bitu plusinc;$/;"	m	class:CSerialModem
pmPalette	src/ints/int10_vesa.cpp	/^	Bitu pmPalette;$/;"	m	struct:__anon198	file:
pmStart	src/ints/int10_vesa.cpp	/^	Bitu pmStart;$/;"	m	struct:__anon198	file:
pmWindow	src/ints/int10_vesa.cpp	/^	Bitu pmWindow;$/;"	m	struct:__anon198	file:
pm_interface	src/ints/ems.cpp	/^	Bitu pm_interface;$/;"	m	struct:__anon195	file:
pmode	include/cpu.h	/^	bool pmode;							\/* Is Protected mode enabled *\/$/;"	m	struct:CPUBlock
pmode_interface	src/ints/int10.h	/^		RealPt pmode_interface;$/;"	m	struct:__anon196::__anon197
pmode_interface_palette	src/ints/int10.h	/^		Bit16u pmode_interface_palette;$/;"	m	struct:__anon196::__anon197
pmode_interface_size	src/ints/int10.h	/^		Bit16u pmode_interface_size;$/;"	m	struct:__anon196::__anon197
pmode_interface_start	src/ints/int10.h	/^		Bit16u pmode_interface_start;$/;"	m	struct:__anon196::__anon197
pmode_interface_window	src/ints/int10.h	/^		Bit16u pmode_interface_window;$/;"	m	struct:__anon196::__anon197
port	include/ipx.h	/^	Uint16 port;$/;"	m	struct:PackedIP
port	src/ints/bios.cpp	/^	Bit16u port;$/;"	m	struct:__anon193	file:
portDirection	src/hardware/fmopl.cpp	/^	UINT8	portDirection;$/;"	m	struct:fm_opl_f	file:
portLatch	src/hardware/fmopl.cpp	/^	UINT8	portLatch;$/;"	m	struct:fm_opl_f	file:
port_61_data	src/hardware/keyboard.cpp	/^static Bit8u port_61_data = 0;$/;"	v	file:
port_param	src/hardware/fmopl.cpp	/^	int		port_param;$/;"	m	struct:fm_opl_f	file:
porthandler_r	src/hardware/fmopl.cpp	/^	OPL_PORTHANDLER_R porthandler_r;$/;"	m	struct:fm_opl_f	file:
porthandler_w	src/hardware/fmopl.cpp	/^	OPL_PORTHANDLER_W porthandler_w;$/;"	m	struct:fm_opl_f	file:
pos	src/cpu/core_dyn_x86/cache.h	/^	Bit8u * pos;$/;"	m	struct:__anon87
pos	src/cpu/core_dynrec/cache.h	/^	Bit8u * pos;		\/\/ position in the cache block$/;"	m	struct:__anon66
pos	src/cpu/core_dynrec/decoder_basic.h	/^	Bit8u* pos;$/;"	m	struct:__anon71
pos	src/cpu/core_dynrec/save/cache.h	/^	Bit8u * pos;		\/\/ position in the cache block$/;"	m	struct:__anon76
pos	src/cpu/core_dynrec/save/decoder_basic.h	/^	Bit8u* pos;$/;"	m	struct:__anon81
pos	src/dos/drives.h	/^		Bit32u pos;$/;"	m	struct:isoDrive::DirIterator
pos	src/hardware/keyboard.cpp	/^	Bitu pos;$/;"	m	struct:__anon161	file:
pos	src/hardware/mixer.cpp	/^	Bitu pos,done;$/;"	m	struct:__anon165	file:
pos	src/hardware/sblaster.cpp	/^			Bitu pos,used;$/;"	m	struct:SB_INFO::__anon173::__anon174	file:
pos	src/hardware/serialport/softmodem.h	/^		Bitu len,pos;$/;"	m	struct:CSerialModem::__anon182
pos	src/hardware/serialport/softmodem.h	/^	Bitu size,pos,used;$/;"	m	class:CFifo
pos	src/libs/gui_tk/gui_tk.h	/^	Size pos;$/;"	m	class:GUI::Input
pos_axis_lists	src/gui/sdl_mapper.cpp	/^	CBindList * pos_axis_lists;$/;"	m	class:CStickBindGroup	file:
positive	src/gui/sdl_mapper.cpp	/^	bool positive;$/;"	m	class:CJAxisBind	file:
positive	src/gui/sdl_mapper.cpp	/^	bool positive;$/;"	m	class:CJAxisEvent	file:
posx	include/vga.h	/^	Bit8u posx, posy;$/;"	m	struct:__anon41
posx	src/libs/gui_tk/gui_tk.h	/^	int posx, posy;$/;"	m	class:GUI::Input
posy	include/vga.h	/^	Bit8u posx, posy;$/;"	m	struct:__anon41
posy	src/libs/gui_tk/gui_tk.h	/^	int posx, posy;$/;"	m	class:GUI::Input
pow	src/misc/fixed.cpp	/^FixedPoint FixedPoint::pow(FixedPoint fixedPower)$/;"	f	class:FixedPoint
powf	include/cross.h	/^static inline float powf (float x, float y) { return (float) pow (x,y); }$/;"	f
powf	src/cpu/core_dynrec/cross.h	/^static inline float powf (float x, float y) { return (float) pow (x,y); }$/;"	f
powf	src/cpu/core_dynrec/save/cross.h	/^static inline float powf (float x, float y) { return (float) pow (x,y); }$/;"	f
powx	src/misc/fixed.cpp	/^FixedPoint powx(FixedPoint fixedVal, FixedPoint fixedPower)$/;"	f
prefix	src/cpu/core_full/support.h	/^	Bitu prefix;$/;"	m	struct:FullData
prefix	src/debug/debug_disasm.cpp	/^static int prefix;            \/* segment override prefix byte *\/$/;"	v	file:
prefixes	src/cpu/core_simple.cpp	/^	Bitu prefixes;$/;"	m	struct:__anon105	file:
prefixes	src/cpu/core_verysimple.cpp	/^	Bitu prefixes;$/;"	m	struct:__anon106	file:
preset_row_scan	include/vga.h	/^	Bit8u preset_row_scan;$/;"	m	struct:__anon50
pressed	src/gui/sdlmain.h	/^		   Bit8u pressed [255];$/;"	m	struct:SDL_Block::__anon141
pressed	src/libs/gui_tk/gui_tk.h	/^	bool pressed;$/;"	m	class:GUI::Button
prev	include/shell.h	/^	BatchFile * prev;$/;"	m	class:BatchFile
prev	src/cpu/core_dyn_x86/cache.h	/^	CodePageHandler * next, * prev;$/;"	m	class:CodePageHandler
prev	src/cpu/core_dynrec/cache.h	/^	CodePageHandlerDynRec * next, * prev;	\/\/ page linking$/;"	m	class:CodePageHandlerDynRec
prev	src/cpu/core_dynrec/save/cache.h	/^	CodePageHandlerDynRec * next, * prev;	\/\/ page linking$/;"	m	class:CodePageHandlerDynRec
prev	src/gui/sdlmain.h	/^		   int prev;$/;"	m	struct:SDL_Block::__anon141
prevECB	include/ipx.h	/^   	ECBClass *prevECB;	\/\/ Linked List$/;"	m	class:ECBClass
prev_psp	include/dos_inc.h	/^		RealPt	prev_psp;			\/* Pointer to previous PSP *\/$/;"	m	struct:DOS_PSP::sPSP
prev_type	src/cpu/lazyflags.h	/^	Bitu prev_type;$/;"	m	struct:LazyFlags
pri_char_block	src/ints/int10_misc.cpp	/^	Bit8u pri_char_block;		\/* 2Bh   BYTE   primary character block *\/$/;"	m	struct:Dynamic_Functionality	file:
printError	src/dos/dos_programs.cpp	/^	void printError(void) {$/;"	f	class:BOOT	file:
private_area	src/ints/ems.cpp	/^	MemHandle private_area;$/;"	m	struct:__anon195	file:
properties	include/setup.h	/^	std::list<Property*> properties;$/;"	m	class:Section_prop
propname	include/setup.h	/^	const std::string propname;$/;"	m	class:Property
protFCBs	include/dos_inc.h	/^		Bit16u	protFCBs;		\/\/  0x1e protected fcbs$/;"	m	struct:DOS_InfoBlock::sDIB
protected_regs	src/cpu/core_dynrec.cpp	/^	Bit32u protected_regs[8];	\/\/ space to save\/restore register values$/;"	m	struct:__anon82	file:
ps2_callback	src/ints/mouse.cpp	/^static RealPt ps2_callback;$/;"	v	file:
ps2callbackinit	src/ints/mouse.cpp	/^static bool useps2callback,ps2callbackinit;$/;"	v	file:
ps2cbofs	src/ints/mouse.cpp	/^static Bit16u ps2cbseg,ps2cbofs;$/;"	v	file:
ps2cbseg	src/ints/mouse.cpp	/^static Bit16u ps2cbseg,ps2cbofs;$/;"	v	file:
psp	include/dos_inc.h	/^	Bit16u psp(){return DOS_SDA(DOS_SDA_SEG,DOS_SDA_OFS).GetPSP();};$/;"	f	struct:DOS_Block
psp	include/dos_inc.h	/^	void psp(Bit16u _seg){ DOS_SDA(DOS_SDA_SEG,DOS_SDA_OFS).SetPSP(_seg);};$/;"	f	struct:DOS_Block
psp	include/programs.h	/^	DOS_PSP * psp;$/;"	m	class:Program
pspLastIfHMA	include/dos_inc.h	/^		Bit16u  pspLastIfHMA;		\/\/  0x3d psp of last program (if dos in hma)$/;"	m	struct:DOS_InfoBlock::sDIB
psp_parent	include/dos_inc.h	/^		Bit16u	psp_parent;			\/* Parent PSP Segment *\/$/;"	m	struct:DOS_PSP::sPSP
psp_segment	include/dos_inc.h	/^		Bit16u psp_segment;$/;"	m	struct:DOS_MCB::sMCB
pstart	src/ints/int10.h	/^	Bitu	ptotal,pstart,plength;$/;"	m	struct:VideoModeBlock
pt	include/dos_inc.h	/^	PhysPt pt;$/;"	m	class:MemStruct
ptotal	src/ints/int10.h	/^	Bitu	ptotal,pstart,plength;$/;"	m	struct:VideoModeBlock
ptrCONinput	include/dos_inc.h	/^		Bit16u	ptrCONinput;		\/\/ -0x04 pointer to con input$/;"	m	struct:DOS_InfoBlock::sDIB
pvga1a	src/hardware/vga_paradise.cpp	/^static SVGA_PVGA1A_DATA pvga1a = { 0,0, 0,0,0,0,0, {0,0,0,0}, 0 };$/;"	v	file:
pwt	include/paging.h	/^	Bit32u		pwt:1;$/;"	m	struct:X86_PageEntryBlock
quit	src/libs/gui_tk/gui_tk.cpp	/^	struct quit : public GUI::ActionEventSource_Callback {$/;"	s	namespace:GUI	file:
r	include/cpu.h	/^	Bit32u r			:1;$/;"	m	struct:S_Descriptor
r	include/vga.h	/^		Bit8u r;$/;"	m	struct:__anon42::__anon43
r	include/video.h	/^	Bit8u r;$/;"	m	struct:GFX_PalEntry
raise	src/libs/gui_tk/gui_tk.h	/^	virtual bool raise() { return false; }$/;"	f	class:GUI::Label
raise	src/libs/gui_tk/gui_tk.h	/^	virtual bool raise() {$/;"	f	class:GUI::ToplevelWindow
raise	src/libs/gui_tk/gui_tk.h	/^	virtual bool raise() {$/;"	f	class:GUI::TransientWindow
raise	src/libs/gui_tk/gui_tk.h	/^	virtual bool raise() {$/;"	f	class:GUI::Window
raltstate	src/gui/sdlmain.h	/^	Bit8u raltstate;$/;"	m	struct:SDL_Block
ram_page_handler	src/hardware/memory.cpp	/^static RAMPageHandler ram_page_handler;$/;"	v	file:
raster_op	include/vga.h	/^	Bit8u raster_op;$/;"	m	struct:__anon37
rate	src/hardware/fmopl.cpp	/^	int rate;						\/* sampling rate (Hz)			*\/$/;"	m	struct:fm_opl_f	file:
rate	src/hardware/keyboard.cpp	/^		Bitu pause,rate;$/;"	m	struct:__anon161::__anon162	file:
rate	src/hardware/pcspeaker.cpp	/^	Bitu rate;$/;"	m	struct:__anon166	file:
rate	src/hardware/sblaster.cpp	/^		Bitu rate,mul;$/;"	m	struct:SB_INFO::__anon170	file:
rate	src/hardware/tandy_sound.cpp	/^		Bitu rate;$/;"	m	struct:__anon183::__anon184	file:
rate	src/hardware/ymf262.cpp	/^	int rate;						\/* sampling rate (Hz)			*\/$/;"	m	struct:__anon192	file:
rawdata	include/dos_inc.h	/^	Bit8u rawdata[512];$/;"	m	union:bootSector
read	include/paging.h	/^		HostPt read[TLB_SIZE];$/;"	m	struct:PagingBlock::__anon26
read	include/paging.h	/^	HostPt read;$/;"	m	struct:__anon24
read	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::AudioFile::read(Bit8u *buffer, int seek, int count)$/;"	f	class:CDROM_Interface_Image::AudioFile
read	src/dos/cdrom_image.cpp	/^bool CDROM_Interface_Image::BinaryFile::read(Bit8u *buffer, int seek, int count)$/;"	f	class:CDROM_Interface_Image::BinaryFile
readChar	src/hardware/serialport/nullmodem.cpp	/^Bits CNullModem::readChar() {$/;"	f	class:CNullModem
readDirEntry	src/dos/drive_iso.cpp	/^int isoDrive :: readDirEntry(isoDirEntry *de, Bit8u *data)$/;"	f	class:isoDrive
readHandler	src/hardware/vga_memory.cpp	/^	Bitu readHandler(PhysPt addr) {$/;"	f	class:VGA_ChainedEGA_Handler
readHandler	src/hardware/vga_memory.cpp	/^	Bitu readHandler(PhysPt start) {$/;"	f	class:VGA_UnchainedRead_Handler
readHandler	src/hardware/vga_memory.cpp	/^	static INLINE Bitu readHandler(PhysPt addr ) {$/;"	f	class:VGA_ChainedVGA_Handler
readSector	src/dos/drive_iso.cpp	/^inline bool isoDrive :: readSector(Bit8u *buffer, Bit32u sector)$/;"	f	class:isoDrive
readStart	include/vga.h	/^	Bitu	readStart, writeStart;$/;"	m	struct:__anon54
read_codepage_file	src/dos/dos_keyboard_layout.cpp	/^Bitu keyboard_layout::read_codepage_file(const char* codepage_file_name, Bit32s codepage_id) {$/;"	f	class:keyboard_layout
read_command	src/hardware/pic.cpp	/^static Bitu read_command(Bitu port,Bitu iolen) {$/;"	f	file:
read_crtc_data_other	src/hardware/vga_other.cpp	/^static Bitu read_crtc_data_other(Bitu port,Bitu iolen) {$/;"	f	file:
read_crtc_index_other	src/hardware/vga_other.cpp	/^static Bitu read_crtc_index_other(Bitu port,Bitu iolen) {$/;"	f	file:
read_data	src/hardware/pic.cpp	/^static Bitu read_data(Bitu port,Bitu iolen) {$/;"	f	file:
read_directory_first	src/misc/cross.cpp	/^bool read_directory_first(dir_information* dirp, char* entry_name, bool& is_directory) {$/;"	f
read_directory_next	src/misc/cross.cpp	/^bool read_directory_next(dir_information* dirp, char* entry_name, bool& is_directory) {$/;"	f
read_herc_status	src/hardware/vga_other.cpp	/^Bitu read_herc_status(Bitu port,Bitu iolen) {$/;"	f
read_index	include/vga.h	/^	Bit8u read_index;$/;"	m	struct:__anon53
read_kcl_data	src/dos/dos_keyboard_layout.cpp	/^static Bit32u read_kcl_data(Bit8u * kcl_data, Bit32u kcl_data_size, const char* layout_id, bool first_id_only) {$/;"	f	file:
read_kcl_file	src/dos/dos_keyboard_layout.cpp	/^static Bit32u read_kcl_file(const char* kcl_file_name, const char* layout_id, bool first_id_only) {$/;"	f	file:
read_keyboard_file	src/dos/dos_keyboard_layout.cpp	/^Bitu keyboard_layout::read_keyboard_file(const char* keyboard_file_name, Bit32s req_cp) {$/;"	f	class:keyboard_layout
read_keyboard_file	src/dos/dos_keyboard_layout.cpp	/^Bitu keyboard_layout::read_keyboard_file(const char* keyboard_file_name, Bit32s specific_layout, Bit32s requested_codepage) {$/;"	f	class:keyboard_layout
read_keyboard_file	src/dos/dos_keyboard_layout.cpp	/^void keyboard_layout::read_keyboard_file(Bit32s specific_layout) {$/;"	f	class:keyboard_layout
read_latch	src/hardware/timer.cpp	/^	Bit16u read_latch;$/;"	m	struct:PIT_Block	file:
read_latch	src/hardware/timer.cpp	/^static Bitu read_latch(Bitu port,Bitu \/*iolen*\/) {$/;"	f	file:
read_map_select	include/vga.h	/^	Bit8u read_map_select;$/;"	m	struct:__anon37
read_map_select	include/vga.h	/^	Bit8u read_map_select;$/;"	m	struct:__anon51
read_mode	include/vga.h	/^	Bit8u read_mode;$/;"	m	struct:__anon37
read_only	include/vga.h	/^	bool read_only;$/;"	m	struct:__anon50
read_only_medium	src/dos/drive_local.cpp	/^	bool read_only_medium;$/;"	m	class:localFile	file:
read_p201	src/hardware/joystick.cpp	/^static Bitu read_p201(Bitu port,Bitu iolen) {$/;"	f	file:
read_p201_timed	src/hardware/joystick.cpp	/^static Bitu read_p201_timed(Bitu port,Bitu iolen) {$/;"	f	file:
read_p3c0	src/hardware/vga_attr.cpp	/^Bitu read_p3c0(Bitu port,Bitu iolen) {$/;"	f
read_p3c1	include/vga.h	/^	tReadPort read_p3c1;$/;"	m	struct:SVGA_Driver
read_p3c1	src/hardware/vga_attr.cpp	/^Bitu read_p3c1(Bitu port,Bitu iolen) {$/;"	f
read_p3c1_et3k	src/hardware/vga_tseng.cpp	/^Bitu read_p3c1_et3k(Bitu reg,Bitu iolen) {$/;"	f
read_p3c1_et4k	src/hardware/vga_tseng.cpp	/^Bitu read_p3c1_et4k(Bitu reg,Bitu iolen) {$/;"	f
read_p3c2	src/hardware/vga_misc.cpp	/^static Bitu read_p3c2(Bitu port,Bitu iolen) {$/;"	f	file:
read_p3c4	src/hardware/vga_seq.cpp	/^Bitu read_p3c4(Bitu port,Bitu iolen) {$/;"	f
read_p3c5	include/vga.h	/^	tReadPort read_p3c5;$/;"	m	struct:SVGA_Driver
read_p3c5	src/hardware/vga_seq.cpp	/^Bitu read_p3c5(Bitu port,Bitu iolen) {$/;"	f
read_p3c5_et3k	src/hardware/vga_tseng.cpp	/^Bitu read_p3c5_et3k(Bitu reg,Bitu iolen) {$/;"	f
read_p3c5_et4k	src/hardware/vga_tseng.cpp	/^Bitu read_p3c5_et4k(Bitu reg,Bitu iolen) {$/;"	f
read_p3c6	src/hardware/vga_dac.cpp	/^static Bitu read_p3c6(Bitu port,Bitu iolen) {$/;"	f	file:
read_p3c7	src/hardware/vga_dac.cpp	/^static Bitu read_p3c7(Bitu port,Bitu iolen) {$/;"	f	file:
read_p3c8	src/hardware/vga_dac.cpp	/^static Bitu read_p3c8(Bitu port, Bitu iolen){$/;"	f	file:
read_p3c8	src/hardware/vga_misc.cpp	/^static Bitu read_p3c8(Bitu port,Bitu iolen) {$/;"	f	file:
read_p3c9	src/hardware/vga_dac.cpp	/^static Bitu read_p3c9(Bitu port,Bitu iolen) {$/;"	f	file:
read_p3ca	src/hardware/vga_misc.cpp	/^static Bitu read_p3ca(Bitu port,Bitu iolen) {$/;"	f	file:
read_p3cc	src/hardware/vga_misc.cpp	/^static Bitu read_p3cc(Bitu port,Bitu iolen) {$/;"	f	file:
read_p3cd_et3k	src/hardware/vga_tseng.cpp	/^Bitu read_p3cd_et3k(Bitu port,Bitu iolen) {$/;"	f
read_p3cd_et4k	src/hardware/vga_tseng.cpp	/^Bitu read_p3cd_et4k(Bitu port,Bitu iolen) {$/;"	f
read_p3ce	src/hardware/vga_gfx.cpp	/^static Bitu read_p3ce(Bitu port,Bitu iolen) {$/;"	f	file:
read_p3cf	include/vga.h	/^	tReadPort read_p3cf;$/;"	m	struct:SVGA_Driver
read_p3cf	src/hardware/vga_gfx.cpp	/^static Bitu read_p3cf(Bitu port,Bitu iolen) {$/;"	f	file:
read_p3cf_pvga1a	src/hardware/vga_paradise.cpp	/^Bitu read_p3cf_pvga1a(Bitu reg,Bitu iolen) {$/;"	f
read_p3d5	include/vga.h	/^	tReadPort read_p3d5;$/;"	m	struct:SVGA_Driver
read_p3d5_et3k	src/hardware/vga_tseng.cpp	/^Bitu read_p3d5_et3k(Bitu reg,Bitu iolen) {$/;"	f
read_p3d5_et4k	src/hardware/vga_tseng.cpp	/^Bitu read_p3d5_et4k(Bitu reg,Bitu iolen) {$/;"	f
read_p60	src/hardware/keyboard.cpp	/^static Bitu read_p60(Bitu port,Bitu iolen) {$/;"	f	file:
read_p61	src/hardware/keyboard.cpp	/^static Bitu read_p61(Bitu port,Bitu iolen) {$/;"	f	file:
read_p64	src/hardware/keyboard.cpp	/^static Bitu read_p64(Bitu port,Bitu iolen) {$/;"	f	file:
read_p92	src/hardware/memory.cpp	/^static Bitu read_p92(Bitu port,Bitu iolen) {$/;"	f	file:
read_sb	src/hardware/sblaster.cpp	/^static Bitu read_sb(Bitu port,Bitu iolen) {$/;"	f	file:
read_sel	src/hardware/vga_xga.cpp	/^	Bit16u read_sel;$/;"	m	struct:XGAStatus	file:
read_state	src/hardware/timer.cpp	/^	Bit8u read_state;$/;"	m	struct:PIT_Block	file:
readb	src/cpu/paging.cpp	/^	Bitu readb(PhysPt addr) {$/;"	f	class:InitPageHandler
readb	src/cpu/paging.cpp	/^Bitu PageHandler::readb(PhysPt addr) {$/;"	f	class:PageHandler
readb	src/debug/debug.cpp	/^	Bitu readb(PhysPt addr) {$/;"	f	class:DebugPageHandler
readb	src/hardware/memory.cpp	/^	Bitu readb(PhysPt addr) {$/;"	f	class:IllegalPageHandler
readb	src/hardware/vga_memory.cpp	/^	Bitu readb(PhysPt addr ) {$/;"	f	class:VGA_ChainedVGA_Handler
readb	src/hardware/vga_memory.cpp	/^	Bitu readb(PhysPt addr) {$/;"	f	class:VGA_ChainedEGA_Handler
readb	src/hardware/vga_memory.cpp	/^	Bitu readb(PhysPt addr) {$/;"	f	class:VGA_Changes_Handler
readb	src/hardware/vga_memory.cpp	/^	Bitu readb(PhysPt addr) {$/;"	f	class:VGA_Empty_Handler
readb	src/hardware/vga_memory.cpp	/^	Bitu readb(PhysPt addr) {$/;"	f	class:VGA_LFBChanges_Handler
readb	src/hardware/vga_memory.cpp	/^	Bitu readb(PhysPt addr) {$/;"	f	class:VGA_LIN4_Handler
readb	src/hardware/vga_memory.cpp	/^	Bitu readb(PhysPt addr) {$/;"	f	class:VGA_MMIO_Handler
readb	src/hardware/vga_memory.cpp	/^	Bitu readb(PhysPt addr) {$/;"	f	class:VGA_TEXT_PageHandler
readb	src/hardware/vga_memory.cpp	/^	Bitu readb(PhysPt addr) {$/;"	f	class:VGA_UnchainedRead_Handler
readb_checked	src/cpu/paging.cpp	/^	bool readb_checked(PhysPt addr, Bit8u * val) {$/;"	f	class:InitPageHandler
readb_checked	src/cpu/paging.cpp	/^bool PageHandler::readb_checked(PhysPt addr, Bit8u * val) {$/;"	f	class:PageHandler
readcache	src/dos/dev_con.h	/^	Bit8u readcache;$/;"	m	class:device_CON
readd	src/cpu/paging.cpp	/^	Bitu readd(PhysPt addr) {$/;"	f	class:InitPageHandler
readd	src/cpu/paging.cpp	/^Bitu PageHandler::readd(PhysPt addr) {$/;"	f	class:PageHandler
readd	src/debug/debug.cpp	/^	Bitu readd(PhysPt addr) {$/;"	f	class:DebugPageHandler
readd	src/hardware/vga_memory.cpp	/^	Bitu readd(PhysPt addr ) {$/;"	f	class:VGA_ChainedVGA_Handler
readd	src/hardware/vga_memory.cpp	/^	Bitu readd(PhysPt addr) {$/;"	f	class:VGA_ChainedEGA_Handler
readd	src/hardware/vga_memory.cpp	/^	Bitu readd(PhysPt addr) {$/;"	f	class:VGA_Changes_Handler
readd	src/hardware/vga_memory.cpp	/^	Bitu readd(PhysPt addr) {$/;"	f	class:VGA_LFBChanges_Handler
readd	src/hardware/vga_memory.cpp	/^	Bitu readd(PhysPt addr) {$/;"	f	class:VGA_LIN4_Handler
readd	src/hardware/vga_memory.cpp	/^	Bitu readd(PhysPt addr) {$/;"	f	class:VGA_MMIO_Handler
readd	src/hardware/vga_memory.cpp	/^	Bitu readd(PhysPt addr) {$/;"	f	class:VGA_UnchainedRead_Handler
readd_checked	src/cpu/paging.cpp	/^	bool readd_checked(PhysPt addr, Bit32u * val) {$/;"	f	class:InitPageHandler
readd_checked	src/cpu/paging.cpp	/^bool PageHandler::readd_checked(PhysPt addr, Bit32u * val) {$/;"	f	class:PageHandler
readdata	src/cpu/core_dyn_x86.cpp	/^	Bit32u readdata;$/;"	m	struct:__anon95	file:
readdata	src/cpu/core_dynrec.cpp	/^	Bitu readdata;				\/\/ spare space used when reading from memory$/;"	m	struct:__anon82	file:
readhandler	include/paging.h	/^		PageHandler * readhandler[TLB_SIZE];$/;"	m	struct:PagingBlock::__anon26
readhandler	include/paging.h	/^	PageHandler * readhandler;$/;"	m	struct:__anon24
readmask	src/hardware/vga_xga.cpp	/^	Bit32u readmask;$/;"	m	struct:XGAStatus	file:
readw	src/cpu/paging.cpp	/^	Bitu readw(PhysPt addr) {$/;"	f	class:InitPageHandler
readw	src/cpu/paging.cpp	/^Bitu PageHandler::readw(PhysPt addr) {$/;"	f	class:PageHandler
readw	src/debug/debug.cpp	/^	Bitu readw(PhysPt addr) {$/;"	f	class:DebugPageHandler
readw	src/hardware/vga_memory.cpp	/^	Bitu readw(PhysPt addr ) {$/;"	f	class:VGA_ChainedVGA_Handler
readw	src/hardware/vga_memory.cpp	/^	Bitu readw(PhysPt addr) {$/;"	f	class:VGA_ChainedEGA_Handler
readw	src/hardware/vga_memory.cpp	/^	Bitu readw(PhysPt addr) {$/;"	f	class:VGA_Changes_Handler
readw	src/hardware/vga_memory.cpp	/^	Bitu readw(PhysPt addr) {$/;"	f	class:VGA_LFBChanges_Handler
readw	src/hardware/vga_memory.cpp	/^	Bitu readw(PhysPt addr) {$/;"	f	class:VGA_LIN4_Handler
readw	src/hardware/vga_memory.cpp	/^	Bitu readw(PhysPt addr) {$/;"	f	class:VGA_MMIO_Handler
readw	src/hardware/vga_memory.cpp	/^	Bitu readw(PhysPt addr) {$/;"	f	class:VGA_UnchainedRead_Handler
readw_checked	src/cpu/paging.cpp	/^	bool readw_checked(PhysPt addr, Bit16u * val) {$/;"	f	class:InitPageHandler
readw_checked	src/cpu/paging.cpp	/^bool PageHandler::readw_checked(PhysPt addr, Bit16u * val) {$/;"	f	class:PageHandler
ready	src/hardware/serialport/misc_util.cpp	/^	int ready;$/;"	m	struct:_TCPsocketX	file:
real_pt	include/dos_inc.h	/^	PhysPt real_pt;$/;"	m	class:DOS_FCB
real_readb	include/mem.h	/^INLINE Bit8u real_readb(Bit16u seg,Bit16u off) {$/;"	f
real_readd	include/mem.h	/^INLINE Bit32u real_readd(Bit16u seg,Bit16u off) {$/;"	f
real_readw	include/mem.h	/^INLINE Bit16u real_readw(Bit16u seg,Bit16u off) {$/;"	f
real_start	include/vga.h	/^	Bitu real_start;$/;"	m	struct:__anon37
real_writeb	include/mem.h	/^INLINE void real_writeb(Bit16u seg,Bit16u off,Bit8u val) {$/;"	f
real_writed	include/mem.h	/^INLINE void real_writed(Bit16u seg,Bit16u off,Bit32u val) {$/;"	f
real_writew	include/mem.h	/^INLINE void real_writew(Bit16u seg,Bit16u off,Bit16u val) {$/;"	f
realparent	src/libs/gui_tk/gui_tk.h	/^	Window *realparent;$/;"	m	class:GUI::TransientWindow
realpath	include/setup.h	/^	std::string realpath;$/;"	m	class:Prop_path
realpt	src/ints/xms.cpp	/^		RealPt realpt;$/;"	m	union:XMS_MemMove::__anon200	file:
realpt	src/ints/xms.cpp	/^		RealPt realpt;$/;"	m	union:XMS_MemMove::__anon201	file:
recCommand	src/hardware/serialport/nullmodem.h	/^		bool recCommand;$/;"	m	struct:CNullModem::__anon180
recCommand	src/hardware/serialport/softmodem.h	/^		bool recCommand;$/;"	m	struct:CSerialModem::__anon181
rec_size	include/dos_inc.h	/^		Bit16u rec_size;		\/* Logical record size *\/$/;"	m	struct:DOS_FCB::sFCB
receiveByte	src/hardware/serialport/serialport.cpp	/^void CSerial::receiveByte (Bit8u data) {$/;"	f	class:CSerial
receiveError	src/hardware/serialport/serialport.cpp	/^void CSerial::receiveError (Bit8u errorword) {$/;"	f	class:CSerial
receivePacket	src/hardware/ipx.cpp	/^static void receivePacket(Bit8u *buffer, Bit16s bufSize) {$/;"	f	file:
receiveblock	src/hardware/serialport/directserial_os2.h	/^	bool receiveblock;$/;"	m	class:CDirectSerial
receiveblock	src/hardware/serialport/directserial_posix.h	/^	bool receiveblock;		\/\/ It's not a block of data it rather blocks$/;"	m	class:CDirectSerial
receiveblock	src/hardware/serialport/directserial_win32.h	/^	bool receiveblock;		\/\/ It's not a block of data it rather blocks$/;"	m	class:CDirectSerial
receiveblock	src/hardware/serialport/nullmodem.h	/^	bool receiveblock;		\/\/ It's not a block of data it rather blocks$/;"	m	class:CNullModem
recvBuffer	src/hardware/ipx.cpp	/^Bit8u recvBuffer[IPXBUFFERSIZE];	\/\/ Incoming packet buffer$/;"	v
red	include/render.h	/^		Bit8u red;$/;"	m	struct:__anon30::__anon31
red	include/vga.h	/^	Bit8u red;$/;"	m	struct:__anon52
redMask	src/gui/render_16.h	21;"	d
redMask	src/gui/render_16.h	246;"	d
redMask	src/gui/render_32.h	156;"	d
redMask	src/gui/render_32.h	21;"	d
redMask	src/gui/render_8.h	21;"	d
redMask	src/gui/render_8.h	242;"	d
redMask	src/gui/render_9.h	21;"	d
redMask	src/gui/render_9.h	242;"	d
redblueMask	src/gui/render_16.h	249;"	d
redblueMask	src/gui/render_16.h	25;"	d
redblueMask	src/gui/render_32.h	159;"	d
redblueMask	src/gui/render_32.h	25;"	d
redblueMask	src/gui/render_8.h	245;"	d
redblueMask	src/gui/render_8.h	25;"	d
redblueMask	src/gui/render_9.h	245;"	d
redblueMask	src/gui/render_9.h	25;"	d
redraw	src/gui/sdl_mapper.cpp	/^	bool redraw;$/;"	m	struct:CMapper	file:
refCount	src/dos/cdrom.h	/^static	int	refCount;$/;"	m	class:CDROM_Interface_Image
refCount	src/dos/cdrom_image.cpp	/^int CDROM_Interface_Image::refCount = 0;$/;"	m	class:CDROM_Interface_Image	file:
refCtr	include/dos_system.h	/^	Bits refCtr;$/;"	m	class:DOS_File
reference	src/hardware/sblaster.cpp	/^		Bit8u reference;$/;"	m	struct:SB_INFO::__anon177	file:
reg	src/cpu/core_dyn_x86/decoder.h	/^		Bitu reg;$/;"	m	struct:DynDecode::__anon90
reg	src/cpu/core_dynrec/decoder_basic.h	/^		Bitu reg;$/;"	m	struct:DynDecode::__anon69
reg	src/cpu/core_dynrec/save/decoder_basic.h	/^		Bitu reg;$/;"	m	struct:DynDecode::__anon79
reg	src/hardware/adlib.h	/^	} reg;$/;"	m	class:Adlib::Module	typeref:union:Adlib::Module::__anon148
reg	src/hardware/cmos.cpp	/^	Bit8u reg;$/;"	m	struct:__anon149	file:
reg	src/hardware/serialport/softmodem.h	/^	Bit8u reg[SREGS];$/;"	m	class:CSerialModem
regCXfrom5e	include/dos_inc.h	/^		Bit16u	regCXfrom5e;		\/\/ -0x18 CX from last int21\/ah=5e$/;"	m	struct:DOS_InfoBlock::sDIB
reg_16	include/regs.h	129;"	d
reg_31	include/vga.h	/^	Bit8u reg_31;$/;"	m	struct:__anon42
reg_32	include/regs.h	130;"	d
reg_35	include/vga.h	/^	Bit8u reg_35;$/;"	m	struct:__anon42
reg_36	include/vga.h	/^	Bit8u reg_36; \/\/ RAM size$/;"	m	struct:__anon42
reg_3a	include/vga.h	/^	Bit8u reg_3a; \/\/ 4\/8\/doublepixel bit in there$/;"	m	struct:__anon42
reg_3x8	src/ints/int10_misc.cpp	/^	Bit8u reg_3x8;				\/* 20h   BYTE   current setting of register (3?8) *\/$/;"	m	struct:Dynamic_Functionality	file:
reg_3x9	src/ints/int10_misc.cpp	/^	Bit8u reg_3x9;				\/* 21h   BYTE   current setting of register (3?9) *\/$/;"	m	struct:Dynamic_Functionality	file:
reg_40	include/vga.h	/^	Bit8u reg_40; \/\/ 8415\/A functionality register$/;"	m	struct:__anon42
reg_41	include/vga.h	/^	Bit8u reg_41; \/\/ BIOS flags $/;"	m	struct:__anon42
reg_43	include/vga.h	/^	Bit8u reg_43;$/;"	m	struct:__anon42
reg_45	include/vga.h	/^	Bit8u reg_45; \/\/ Hardware graphics cursor$/;"	m	struct:__anon42
reg_50	include/vga.h	/^	Bit8u reg_50;$/;"	m	struct:__anon42
reg_51	include/vga.h	/^	Bit8u reg_51;$/;"	m	struct:__anon42
reg_52	include/vga.h	/^	Bit8u reg_52;$/;"	m	struct:__anon42
reg_55	include/vga.h	/^	Bit8u reg_55;$/;"	m	struct:__anon42
reg_58	include/vga.h	/^	Bit8u reg_58;$/;"	m	struct:__anon42
reg_6b	include/vga.h	/^	Bit8u reg_6b; \/\/ LFB BIOS scratchpad$/;"	m	struct:__anon42
reg_8	include/regs.h	128;"	d
reg_8h	include/regs.h	127;"	d
reg_8l	include/regs.h	126;"	d
reg_ah	include/regs.h	133;"	d
reg_ah	src/cpu/core_normal/prefix_none.h	/^		SETFLAGSb(reg_ah);$/;"	v
reg_ah	src/cpu/core_normal/verysimple_prefix_none.h	/^		SETFLAGSb(reg_ah);$/;"	v
reg_al	include/regs.h	132;"	d
reg_ax	include/regs.h	134;"	d
reg_ax	src/cpu/core_normal/prefix_none.h	/^		Push_16(reg_ax);break;$/;"	v
reg_ax	src/cpu/core_normal/verysimple_prefix_none.h	/^		Push_16(reg_ax);break;$/;"	v
reg_bh	include/regs.h	138;"	d
reg_bl	include/regs.h	137;"	d
reg_bp	include/regs.h	161;"	d
reg_bp	src/cpu/core_normal/prefix_none.h	/^		Push_16(reg_bp);break;$/;"	v
reg_bp	src/cpu/core_normal/verysimple_prefix_none.h	/^		Push_16(reg_bp);break;$/;"	v
reg_bx	include/regs.h	139;"	d
reg_bx	src/cpu/core_normal/prefix_none.h	/^		Push_16(reg_bx);break;$/;"	v
reg_bx	src/cpu/core_normal/verysimple_prefix_none.h	/^		Push_16(reg_bx);break;$/;"	v
reg_ch	include/regs.h	143;"	d
reg_cl	include/regs.h	142;"	d
reg_cl	src/cpu/core_normal/prefix_66.h	/^		GRP2D(reg_cl);break;$/;"	v
reg_cl	src/cpu/core_normal/prefix_none.h	/^		GRP2B(reg_cl);break;$/;"	v
reg_cl	src/cpu/core_normal/prefix_none.h	/^		GRP2W(reg_cl);break;$/;"	v
reg_cl	src/cpu/core_normal/verysimple_prefix_none.h	/^		GRP2B(reg_cl);break;$/;"	v
reg_cl	src/cpu/core_normal/verysimple_prefix_none.h	/^		GRP2W(reg_cl);break;$/;"	v
reg_cx	include/regs.h	144;"	d
reg_cx	src/cpu/core_normal/prefix_none.h	/^		Push_16(reg_cx);break;$/;"	v
reg_cx	src/cpu/core_normal/verysimple_prefix_none.h	/^		Push_16(reg_cx);break;$/;"	v
reg_dh	include/regs.h	148;"	d
reg_di	include/regs.h	155;"	d
reg_di	src/cpu/core_normal/prefix_none.h	/^		Push_16(reg_di);break;$/;"	v
reg_di	src/cpu/core_normal/verysimple_prefix_none.h	/^		Push_16(reg_di);break;$/;"	v
reg_dl	include/regs.h	147;"	d
reg_dx	include/regs.h	149;"	d
reg_dx	src/cpu/core_normal/prefix_none.h	/^		Push_16(reg_dx);break;$/;"	v
reg_dx	src/cpu/core_normal/verysimple_prefix_none.h	/^		Push_16(reg_dx);break;$/;"	v
reg_eax	include/regs.h	135;"	d
reg_eax	src/cpu/core_normal/prefix_66.h	/^		Push_32(reg_eax);break;$/;"	v
reg_ebp	include/regs.h	162;"	d
reg_ebp	src/cpu/core_normal/prefix_66.h	/^		Push_32(reg_ebp);break;$/;"	v
reg_ebx	include/regs.h	140;"	d
reg_ebx	src/cpu/core_normal/prefix_66.h	/^		Push_32(reg_ebx);break;$/;"	v
reg_ecx	include/regs.h	145;"	d
reg_ecx	src/cpu/core_normal/prefix_66.h	/^		Push_32(reg_ecx);break;$/;"	v
reg_edi	include/regs.h	156;"	d
reg_edi	src/cpu/core_normal/prefix_66.h	/^		Push_32(reg_edi);break;$/;"	v
reg_edx	include/regs.h	150;"	d
reg_edx	src/cpu/core_normal/prefix_66.h	/^		Push_32(reg_edx);break;$/;"	v
reg_eip	include/regs.h	165;"	d
reg_esi	include/regs.h	153;"	d
reg_esi	src/cpu/core_normal/prefix_66.h	/^		Push_32(reg_esi);break;$/;"	v
reg_esp	include/regs.h	159;"	d
reg_esp	src/cpu/core_normal/prefix_66.h	/^		Push_32(reg_esp);break;$/;"	v
reg_flags	include/regs.h	167;"	d
reg_index	include/vga.h	/^	Bit8u reg_index;$/;"	m	struct:__anon47
reg_ip	include/regs.h	164;"	d
reg_lock1	include/vga.h	/^	Bit8u reg_lock1;$/;"	m	struct:__anon42
reg_lock2	include/vga.h	/^	Bit8u reg_lock2;$/;"	m	struct:__anon42
reg_name	src/debug/debug_disasm.cpp	/^static void reg_name(int regnum, char size)$/;"	f	file:
reg_si	include/regs.h	152;"	d
reg_si	src/cpu/core_normal/prefix_none.h	/^		Push_16(reg_si);break;$/;"	v
reg_si	src/cpu/core_normal/verysimple_prefix_none.h	/^		Push_16(reg_si);break;$/;"	v
reg_sp	include/regs.h	158;"	d
reg_sp	src/cpu/core_normal/prefix_none.h	/^		Push_16(reg_sp);break;$/;"	v
reg_sp	src/cpu/core_normal/verysimple_prefix_none.h	/^		Push_16(reg_sp);break;$/;"	v
regen_size	src/ints/int10_misc.cpp	/^	Bit16u regen_size;			\/* 07h   WORD   length of regen buffer in bytes *\/$/;"	m	struct:Dynamic_Functionality	file:
regen_start	src/ints/int10_misc.cpp	/^	Bit16u regen_start;			\/* 09h   WORD   starting address of regen buffer*\/$/;"	m	struct:Dynamic_Functionality	file:
registry	src/libs/gui_tk/gui_tk.h	/^	static std::map<const char *,Font *,ltstr> registry;$/;"	m	class:GUI::Font
regs	include/fpu.h	/^	FPU_Reg		regs[9];$/;"	m	struct:__anon23
regs	include/regs.h	/^	GenReg32 regs[8],ip;$/;"	m	struct:CPU_Regs
regs	src/cpu/core_dyn_x86.cpp	/^	DynReg regs[G_MAX];$/;"	m	struct:DynState	file:
regs	src/cpu/core_dyn_x86/risc_x86.h	/^	GenReg * regs[X86_REGS];$/;"	m	struct:__anon92
regs	src/hardware/cmos.cpp	/^	Bit8u regs[0x40];$/;"	m	struct:__anon149	file:
releasedelay	src/gui/sdlmain.h	/^		   Bit32u releasedelay;$/;"	m	struct:SDL_Block::__anon140
relocation	include/dos_inc.h	/^		Bit16u relocation;$/;"	m	struct:DOS_ParamBlock::sOverlay
relocations	src/dos/dos_execute.cpp	/^	Bit16u relocations;					\/* Relocations in file *\/$/;"	m	struct:EXE_Header	file:
reloctable	src/dos/dos_execute.cpp	/^	Bit16u reloctable;$/;"	m	struct:EXE_Header	file:
relx	src/libs/gui_tk/gui_tk.h	/^	int relx, rely;$/;"	m	class:GUI::TransientWindow
rely	src/libs/gui_tk/gui_tk.h	/^	int relx, rely;$/;"	m	class:GUI::TransientWindow
remain	src/hardware/mixer.cpp	/^	Bitu remain;$/;"	m	struct:MIXER_Channel	file:
remain_size	src/hardware/sblaster.cpp	/^		Bitu remain_size;$/;"	m	struct:SB_INFO::__anon170	file:
remoteAddress	src/hardware/serialport/misc_util.cpp	/^	IPaddress remoteAddress;$/;"	m	struct:_TCPsocketX	file:
removeActionHandler	src/libs/gui_tk/gui_tk.h	/^	void removeActionHandler(ActionEventSource_Callback *handler) { actionHandlers.remove(handler); }$/;"	f	class:GUI::ActionEventSource
removeCloseHandler	src/libs/gui_tk/gui_tk.h	/^	void removeCloseHandler(ToplevelWindow_Callback *handler) { closehandlers.remove(handler); }$/;"	f	class:GUI::ToplevelWindow
removeEvent	src/hardware/serialport/serialport.cpp	/^void CSerial::removeEvent(Bit16u type) {$/;"	f	class:CSerial
removeItem	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> void removeItem(int index, const STR name) { menus[index]->removeItem(name); }$/;"	f	class:GUI::Menubar
removeItem	src/libs/gui_tk/gui_tk.h	/^	template <typename T> void removeItem(const T item) {$/;"	f	class:GUI::Menu
removeLeadingSpaces	src/dos/drive_fat.cpp	/^char* removeLeadingSpaces(char* str) {$/;"	f
removeTrailingSpaces	src/dos/drive_fat.cpp	/^char* removeTrailingSpaces(char* str) {$/;"	f
removeWindowHandler	src/libs/gui_tk/gui_tk.h	/^	void removeWindowHandler(Window_Callback *handler) { movehandlers.remove(handler); }$/;"	f	class:GUI::Window
render	src/gui/render.cpp	/^Render_t render;$/;"	v
rep	src/cpu/core_dyn_x86/decoder.h	/^	REP_Type rep;$/;"	m	struct:DynDecode
rep	src/cpu/core_dynrec/decoder_basic.h	/^	REP_Type rep;			\/\/ current repeat prefix$/;"	m	struct:DynDecode
rep	src/cpu/core_dynrec/save/decoder_basic.h	/^	REP_Type rep;			\/\/ current repeat prefix$/;"	m	struct:DynDecode
rep_zero	src/cpu/core_simple.cpp	/^	bool rep_zero;$/;"	m	struct:__anon105	file:
rep_zero	src/cpu/core_verysimple.cpp	/^	bool rep_zero;$/;"	m	struct:__anon106	file:
repeat	src/hardware/keyboard.cpp	/^	} repeat;$/;"	m	struct:__anon161	typeref:struct:__anon161::__anon162	file:
repz	src/cpu/core_full/support.h	/^	bool repz;$/;"	m	struct:FullData
request	include/dma.h	/^	bool request;$/;"	m	class:DmaChannel
request_issr	src/hardware/pic.cpp	/^	bool request_issr;$/;"	m	struct:PIC_Controller	file:
required_flags	src/dos/dos_keyboard_layout.cpp	/^		Bit16u required_flags,forbidden_flags;$/;"	m	struct:keyboard_layout::__anon115	file:
required_userflags	src/dos/dos_keyboard_layout.cpp	/^		Bit16u required_userflags,forbidden_userflags;$/;"	m	struct:keyboard_layout::__anon115	file:
res	src/cpu/lazyflags.h	/^    GenReg32 var1,var2,res;$/;"	m	struct:LazyFlags
res	src/debug/debug.cpp	/^	char res[23];$/;"	m	struct:TLogInst	file:
rescanport	src/dos/cdrom_aspi_win32.cpp	/^	SRB_RescanPort      rescanport;$/;"	m	union:__anon114	file:
reserve_sect	include/dos_inc.h	/^		Bit16u reserve_sect;$/;"	m	struct:bootSector::entries
reserved	include/cpu.h	/^	Bit32u reserved		:3;$/;"	m	struct:G_Descriptor
reserved	include/dos_inc.h	/^		Bit8u reserved[4];$/;"	m	struct:DOS_FCB::sFCB
reserved	src/hardware/ymf262.cpp	/^unsigned char reserved[128-100];\/\/speedup: pump up the struct size to power of 2$/;"	m	struct:__anon190	file:
reserved	src/hardware/ymf262.cpp	/^unsigned char reserved[512-272];\/\/speedup:pump up the struct size to power of 2$/;"	m	struct:__anon191	file:
reserved1	src/dos/wnaspi32.h	/^ unsigned char  reserved1;$/;"	m	struct:__anon132
reserved1	src/ints/int10_misc.cpp	/^	Bit8u reserved1[3];			\/* 2Eh  3 BYTEs reserved (00h) *\/$/;"	m	struct:Dynamic_Functionality	file:
reserved2	src/dos/wnaspi32.h	/^ unsigned char  reserved2;$/;"	m	struct:__anon132
reserved2	src/ints/int10_misc.cpp	/^	Bit8u reserved2[13];		\/*  33h 13 BYTEs reserved (00h) *\/$/;"	m	struct:Dynamic_Functionality	file:
reservedsectors	src/dos/drives.h	/^	Bit16u reservedsectors;$/;"	m	struct:bootstrap
reset	include/vga.h	/^	Bit8u reset;$/;"	m	struct:__anon48
reset	src/dos/dos_keyboard_layout.cpp	/^void keyboard_layout::reset() {$/;"	f	class:keyboard_layout
resize	src/libs/gui_tk/gui_tk.h	/^	virtual void resize(int w = -1, int h = -1) {$/;"	f	class:GUI::Label
resizing	include/vga.h	/^	bool resizing;$/;"	m	struct:__anon38
retrace	include/vga.h	/^	bool retrace;					\/* A retrace is active *\/$/;"	m	struct:__anon37
return_code	include/dos_inc.h	/^		Bit16u return_code;		\/* 0x14 return code from last process termination (zerod after reading with AH=4Dh) *\/$/;"	m	struct:DOS_SDA::sSDA
return_code	include/dos_inc.h	/^	Bit8u return_code,return_mode;$/;"	m	struct:DOS_Block
return_mode	include/dos_inc.h	/^	Bit8u return_code,return_mode;$/;"	m	struct:DOS_Block
return_pos	src/cpu/core_dyn_x86/decoder.h	/^	Bit8u * return_pos;$/;"	m	struct:__anon91
reverse_it	include/control.h	/^	typedef std::list<Section*>::reverse_iterator reverse_it;$/;"	t	class:Config
revision	include/dos_inc.h	/^	Bit8u major,minor,revision;$/;"	m	struct:DOS_Version
rgb	include/render.h	/^	} rgb[256];$/;"	m	struct:__anon30	typeref:struct:__anon30::__anon31
rgb	include/vga.h	/^	RGBEntry rgb[0x100];$/;"	m	struct:__anon53
rgbToSurface	src/libs/gui_tk/gui_tk.h	/^	virtual void rgbToSurface(RGB color, void **pixel) { RGB **p = (RGB **)pixel; **p = color; (*p)++; };$/;"	f	class:GUI::ScreenRGB32le
rgbToSurface	src/libs/gui_tk/gui_tk.h	/^	virtual void rgbToSurface(RGB color, void **pixel) {};$/;"	f	class:GUI::ScreenSDL
rgba	src/libs/gui_tk/gui_tk.h	/^static inline RGB rgba(int r, int g, int b, int a=0) {$/;"	f	namespace:GUI::Color
rhythm	src/hardware/fmopl.cpp	/^	UINT8	rhythm;					\/* Rhythm mode					*\/$/;"	m	struct:fm_opl_f	file:
rhythm	src/hardware/ymf262.cpp	/^	UINT8	rhythm;					\/* Rhythm mode					*\/$/;"	m	struct:__anon192	file:
ri	include/serialport.h	/^	bool ri;			\/\/ bit6: RI$/;"	m	class:CSerial
right	src/gui/sdlmain.h	/^		   bool right;$/;"	m	struct:SDL_Block::__anon138
rightclickdelay	src/gui/sdlmain.h	/^		   Bit32u rightclickdelay;	$/;"	m	struct:SDL_Block::__anon140
ringcount	src/hardware/serialport/softmodem.h	/^	Bits ringcount;$/;"	m	class:CSerialModem
ringing	src/hardware/serialport/softmodem.h	/^	bool ringing;$/;"	m	class:CSerialModem
ringtimer	src/hardware/serialport/softmodem.h	/^	Bits ringtimer;$/;"	m	class:CSerialModem
rise	src/hardware/serialport/serialport.cpp	/^void CSerial::rise (Bit8u priority) {$/;"	f	class:CSerial
rm	src/cpu/core_dyn_x86/decoder.h	/^		Bitu rm;$/;"	m	struct:DynDecode::__anon90
rm	src/cpu/core_dynrec/decoder_basic.h	/^		Bitu rm;$/;"	m	struct:DynDecode::__anon69
rm	src/cpu/core_dynrec/save/decoder_basic.h	/^		Bitu rm;$/;"	m	struct:DynDecode::__anon79
rm	src/cpu/core_full/support.h	/^	Bitu rm;$/;"	m	struct:FullData
rm_eaa	src/cpu/core_full/support.h	/^	EAPoint rm_eaa;$/;"	m	struct:FullData
rm_eai	src/cpu/core_full/support.h	/^	Bitu rm_eai;$/;"	m	struct:FullData
rm_index	src/cpu/core_full/support.h	/^	Bitu rm_index;$/;"	m	struct:FullData
rm_mod	src/cpu/core_full/support.h	/^	Bitu rm_mod;$/;"	m	struct:FullData
rm_off	src/cpu/core_full/support.h	/^	Bitu rm_off;$/;"	m	struct:FullData
rndm	include/dos_inc.h	/^		Bit32u rndm;			\/* Current relative record number *\/$/;"	m	struct:DOS_FCB::sFCB
rom	src/ints/int10.h	/^	} rom;$/;"	m	struct:__anon196	typeref:struct:__anon196::__anon197
rom_page_handler	src/hardware/memory.cpp	/^static ROMPageHandler rom_page_handler;$/;"	v	file:
rootDriverHeaderSeg	src/dos/dos_mscdex.cpp	/^	Bit16u		rootDriverHeaderSeg;$/;"	m	class:CMscdex	file:
rootEntry	src/dos/drives.h	/^	Bit8u rootEntry[34];$/;"	m	struct:isoPVD
rootEntry	src/dos/drives.h	/^	isoDirEntry rootEntry;$/;"	m	class:isoDrive
rootdirentries	src/dos/drives.h	/^	Bit16u rootdirentries;$/;"	m	struct:bootstrap
rootpsp	include/dos_inc.h	/^	static	Bit16u rootpsp;$/;"	m	class:DOS_PSP
rootpsp	src/dos/dos_classes.cpp	/^Bit16u DOS_PSP::rootpsp = 0;$/;"	m	class:DOS_PSP	file:
rotate_on_auto_eoi	src/hardware/pic.cpp	/^	bool rotate_on_auto_eoi;$/;"	m	struct:PIC_Controller	file:
rotateright	src/gui/render_16.h	60;"	d
rotateright	src/gui/render_32.h	60;"	d
rotateright	src/gui/render_8.h	63;"	d
rotateright	src/gui/render_9.h	63;"	d
rotateright	src/gui/sdlmain.h	/^		bool rotateright;$/;"	m	struct:SDL_Block::__anon137
round	include/fpu.h	/^	FPU_Round	round;$/;"	m	struct:__anon23
row_step	src/libs/gui_tk/gui_tk.h	/^	const int row_step;$/;"	m	class:GUI::BitmapFont
rowlen	src/hardware/hardware.cpp	/^		Bitu rowlen;$/;"	m	struct:__anon155::__anon158	file:
rqueue	src/hardware/serialport/softmodem.h	/^	CFifo *rqueue;$/;"	m	class:CSerialModem
rr	src/hardware/fmopl.cpp	/^	UINT32	rr;			\/* release rate:RR<<2			*\/$/;"	m	struct:__anon153	file:
rr	src/hardware/ymf262.cpp	/^	UINT32	rr;			\/* release rate:RR<<2			*\/$/;"	m	struct:__anon190	file:
rtrim	src/misc/support.cxx	/^char *rtrim(char *str) {$/;"	f
rts	include/serialport.h	/^	bool rts;			\/\/ bit1: RTS$/;"	m	class:CSerial
runcode	src/cpu/core_dynrec.cpp	/^	BlockReturn (*runcode)(Bit8u*);		\/\/ points to code that can start a block$/;"	m	struct:__anon82	file:
running	src/cpu/core_dyn_x86/cache.h	/^		CacheBlock * running;$/;"	m	struct:__anon87::__anon88
running	src/cpu/core_dynrec/cache.h	/^		CacheBlockDynRec * running;		\/\/ the last block that was entered for execution$/;"	m	struct:__anon66::__anon67
running	src/cpu/core_dynrec/save/cache.h	/^		CacheBlockDynRec * running;		\/\/ the last block that was entered for execution$/;"	m	struct:__anon76::__anon77
rx_retry	src/hardware/serialport/directserial_os2.h	/^	Bitu rx_retry;$/;"	m	class:CDirectSerial
rx_retry	src/hardware/serialport/directserial_posix.h	/^	Bitu rx_retry;		\/\/ counter of retries$/;"	m	class:CDirectSerial
rx_retry	src/hardware/serialport/directserial_win32.h	/^	Bitu rx_retry;		\/\/ counter of retries$/;"	m	class:CDirectSerial
rx_retry	src/hardware/serialport/nullmodem.h	/^	Bitu rx_retry;		\/\/ counter of retries$/;"	m	class:CNullModem
rx_retry_max	src/hardware/serialport/directserial_os2.h	/^	Bitu rx_retry_max;$/;"	m	class:CDirectSerial
rx_retry_max	src/hardware/serialport/directserial_posix.h	/^	Bitu rx_retry_max;	\/\/ how many POLL_EVENTS to wait before causing$/;"	m	class:CDirectSerial
rx_retry_max	src/hardware/serialport/directserial_win32.h	/^	Bitu rx_retry_max;	\/\/ how many POLL_EVENTS to wait before causing$/;"	m	class:CDirectSerial
rx_retry_max	src/hardware/serialport/nullmodem.h	/^	Bitu rx_retry_max;	\/\/ how many POLL_EVENTS to wait before causing$/;"	m	class:CNullModem
s	src/debug/debug.cpp	/^	bool s;$/;"	m	struct:TLogInst	file:
s3	include/vga.h	/^	VGA_S3 s3;$/;"	m	struct:__anon59
sDIB	include/dos_inc.h	/^	struct sDIB {		$/;"	s	class:DOS_InfoBlock
sDTA	include/dos_inc.h	/^	struct sDTA {$/;"	s	class:DOS_DTA
sDeviceHeader	src/dos/dos_mscdex.cpp	/^	struct sDeviceHeader{$/;"	s	class:DOS_DeviceHeader	file:
sExec	include/dos_inc.h	/^	struct sExec {$/;"	s	class:DOS_ParamBlock
sFCB	include/dos_inc.h	/^	struct sFCB {$/;"	s	class:DOS_FCB
sGet	include/dos_inc.h	252;"	d
sMCB	include/dos_inc.h	/^	struct sMCB {$/;"	s	class:DOS_MCB
sOffset	include/dos_inc.h	251;"	d
sOverlay	include/dos_inc.h	/^	struct sOverlay {$/;"	s	class:DOS_ParamBlock
sPSP	include/dos_inc.h	/^	struct sPSP {$/;"	s	class:DOS_PSP
sSDA	include/dos_inc.h	/^	struct sSDA {$/;"	s	class:DOS_SDA
sSave	include/dos_inc.h	253;"	d
s_1	src/debug/disasm_tables.h	/^	s_1,$/;"	e	enum:__anon111
s_ah	src/debug/disasm_tables.h	/^	s_al,s_cl,s_dl,s_bl,s_ah,s_ch,s_dh,s_bh,$/;"	e	enum:__anon111
s_al	src/debug/disasm_tables.h	/^	s_al,s_cl,s_dl,s_bl,s_ah,s_ch,s_dh,s_bh,$/;"	e	enum:__anon111
s_ax	src/debug/disasm_tables.h	/^	s_ax,s_cx,s_dx,s_bx,s_sp,s_bp,s_si,s_di,$/;"	e	enum:__anon111
s_bh	src/debug/disasm_tables.h	/^	s_al,s_cl,s_dl,s_bl,s_ah,s_ch,s_dh,s_bh,$/;"	e	enum:__anon111
s_bl	src/debug/disasm_tables.h	/^	s_al,s_cl,s_dl,s_bl,s_ah,s_ch,s_dh,s_bh,$/;"	e	enum:__anon111
s_bp	src/debug/disasm_tables.h	/^	s_ax,s_cx,s_dx,s_bx,s_sp,s_bp,s_si,s_di,$/;"	e	enum:__anon111
s_bx	src/debug/disasm_tables.h	/^	s_ax,s_cx,s_dx,s_bx,s_sp,s_bp,s_si,s_di,$/;"	e	enum:__anon111
s_ch	src/debug/disasm_tables.h	/^	s_al,s_cl,s_dl,s_bl,s_ah,s_ch,s_dh,s_bh,$/;"	e	enum:__anon111
s_cl	src/debug/disasm_tables.h	/^	s_al,s_cl,s_dl,s_bl,s_ah,s_ch,s_dh,s_bh,$/;"	e	enum:__anon111
s_cs	src/debug/debug.cpp	/^	Bit16u s_cs;$/;"	m	struct:TLogInst	file:
s_cx	src/debug/disasm_tables.h	/^	s_ax,s_cx,s_dx,s_bx,s_sp,s_bp,s_si,s_di,$/;"	e	enum:__anon111
s_dh	src/debug/disasm_tables.h	/^	s_al,s_cl,s_dl,s_bl,s_ah,s_ch,s_dh,s_bh,$/;"	e	enum:__anon111
s_di	src/debug/disasm_tables.h	/^	s_ax,s_cx,s_dx,s_bx,s_sp,s_bp,s_si,s_di,$/;"	e	enum:__anon111
s_dl	src/debug/disasm_tables.h	/^	s_al,s_cl,s_dl,s_bl,s_ah,s_ch,s_dh,s_bh,$/;"	e	enum:__anon111
s_ds	src/debug/debug.cpp	/^	Bit16u s_ds;$/;"	m	struct:TLogInst	file:
s_dx	src/debug/disasm_tables.h	/^	s_ax,s_cx,s_dx,s_bx,s_sp,s_bp,s_si,s_di,$/;"	e	enum:__anon111
s_es	src/debug/debug.cpp	/^	Bit16u s_es;$/;"	m	struct:TLogInst	file:
s_fs	src/debug/debug.cpp	/^	Bit16u s_fs;$/;"	m	struct:TLogInst	file:
s_gs	src/debug/debug.cpp	/^	Bit16u s_gs;$/;"	m	struct:TLogInst	file:
s_jbe	src/debug/disasm_tables.h	/^	s_jo,	s_jno,	s_jc,	s_jnc,	s_je,	s_jne,	s_jbe,	s_jnbe,$/;"	e	enum:__anon112
s_jc	src/debug/disasm_tables.h	/^	s_jo,	s_jno,	s_jc,	s_jnc,	s_je,	s_jne,	s_jbe,	s_jnbe,$/;"	e	enum:__anon112
s_je	src/debug/disasm_tables.h	/^	s_jo,	s_jno,	s_jc,	s_jnc,	s_je,	s_jne,	s_jbe,	s_jnbe,$/;"	e	enum:__anon112
s_jl	src/debug/disasm_tables.h	/^	s_js,	s_jns,	s_jp,	s_jnp,	s_jl,	s_jnl,	s_jle,	s_jnle$/;"	e	enum:__anon112
s_jle	src/debug/disasm_tables.h	/^	s_js,	s_jns,	s_jp,	s_jnp,	s_jl,	s_jnl,	s_jle,	s_jnle$/;"	e	enum:__anon112
s_jnbe	src/debug/disasm_tables.h	/^	s_jo,	s_jno,	s_jc,	s_jnc,	s_je,	s_jne,	s_jbe,	s_jnbe,$/;"	e	enum:__anon112
s_jnc	src/debug/disasm_tables.h	/^	s_jo,	s_jno,	s_jc,	s_jnc,	s_je,	s_jne,	s_jbe,	s_jnbe,$/;"	e	enum:__anon112
s_jne	src/debug/disasm_tables.h	/^	s_jo,	s_jno,	s_jc,	s_jnc,	s_je,	s_jne,	s_jbe,	s_jnbe,$/;"	e	enum:__anon112
s_jnl	src/debug/disasm_tables.h	/^	s_js,	s_jns,	s_jp,	s_jnp,	s_jl,	s_jnl,	s_jle,	s_jnle$/;"	e	enum:__anon112
s_jnle	src/debug/disasm_tables.h	/^	s_js,	s_jns,	s_jp,	s_jnp,	s_jl,	s_jnl,	s_jle,	s_jnle$/;"	e	enum:__anon112
s_jno	src/debug/disasm_tables.h	/^	s_jo,	s_jno,	s_jc,	s_jnc,	s_je,	s_jne,	s_jbe,	s_jnbe,$/;"	e	enum:__anon112
s_jnp	src/debug/disasm_tables.h	/^	s_js,	s_jns,	s_jp,	s_jnp,	s_jl,	s_jnl,	s_jle,	s_jnle$/;"	e	enum:__anon112
s_jns	src/debug/disasm_tables.h	/^	s_js,	s_jns,	s_jp,	s_jnp,	s_jl,	s_jnl,	s_jle,	s_jnle$/;"	e	enum:__anon112
s_jo	src/debug/disasm_tables.h	/^	s_jo,	s_jno,	s_jc,	s_jnc,	s_je,	s_jne,	s_jbe,	s_jnbe,$/;"	e	enum:__anon112
s_jp	src/debug/disasm_tables.h	/^	s_js,	s_jns,	s_jp,	s_jnp,	s_jl,	s_jnl,	s_jle,	s_jnle$/;"	e	enum:__anon112
s_js	src/debug/disasm_tables.h	/^	s_js,	s_jns,	s_jp,	s_jnp,	s_jl,	s_jnl,	s_jle,	s_jnle$/;"	e	enum:__anon112
s_si	src/debug/disasm_tables.h	/^	s_ax,s_cx,s_dx,s_bx,s_sp,s_bp,s_si,s_di,$/;"	e	enum:__anon111
s_sp	src/debug/disasm_tables.h	/^	s_ax,s_cx,s_dx,s_bx,s_sp,s_bp,s_si,s_di,$/;"	e	enum:__anon111
s_ss	src/debug/debug.cpp	/^	Bit16u s_ss;$/;"	m	struct:TLogInst	file:
saa1099	src/hardware/gameblaster.cpp	/^static SAA1099 saa1099[2];$/;"	v	file:
saa1099_channel	src/hardware/gameblaster.cpp	/^struct saa1099_channel$/;"	s	file:
saa1099_envelope	src/hardware/gameblaster.cpp	/^static void saa1099_envelope(int chip, int ch)$/;"	f	file:
saa1099_noise	src/hardware/gameblaster.cpp	/^struct saa1099_noise$/;"	s	file:
saa1099_update	src/hardware/gameblaster.cpp	/^static void saa1099_update(int chip, INT16 **buffer, int length)$/;"	f	file:
saa1099_write_port_w	src/hardware/gameblaster.cpp	/^static void saa1099_write_port_w( int chip, int offset, int data )$/;"	f	file:
safe_strncpy	include/support.h	36;"	d
sample	src/dos/cdrom.h	/^		Sound_Sample *sample;$/;"	m	class:CDROM_Interface_Image::AudioFile
sample	src/hardware/fmopl.cpp	/^static FILE *sample[1];$/;"	v	file:
sample	src/hardware/ymf262.cpp	/^static FILE *sample[1];$/;"	v	file:
sample_add	src/hardware/mixer.cpp	/^	Bitu sample_add;$/;"	m	struct:MIXER_Channel	file:
sample_left	src/hardware/mixer.cpp	/^	Bitu sample_left;$/;"	m	struct:MIXER_Channel	file:
sample_rate	src/hardware/gameblaster.cpp	/^static double sample_rate;$/;"	v	file:
sattr	include/dos_inc.h	/^		Bit8u sattr;						\/* The Attributes that need to be found *\/$/;"	m	struct:DOS_DTA::sDTA
save	src/cpu/core_full/support.h	/^	Bit8u load,op,save,extra;$/;"	m	struct:OpCode
save	src/gui/sdl_mapper.cpp	/^	CBindButton * save;$/;"	m	struct:__anon145	file:
save_dir	include/dos_system.h	/^	CFileInfo*	save_dir;$/;"	m	class:DOS_Drive_Cache
save_expanded	include/dos_system.h	/^	char		save_expanded		[CROSS_LEN];$/;"	m	class:DOS_Drive_Cache
save_info	src/cpu/core_dyn_x86/decoder.h	/^} save_info[512];$/;"	v	typeref:struct:__anon91
save_info_dynrec	src/cpu/core_dynrec/decoder_basic.h	/^} save_info_dynrec[512];$/;"	v	typeref:struct:__anon70
save_info_dynrec	src/cpu/core_dynrec/save/decoder_basic.h	/^} save_info_dynrec[512];$/;"	v	typeref:struct:__anon80
save_info_type	src/cpu/core_dyn_x86/decoder.h	/^enum save_info_type {exception, cycle_check, normal, fpu_restore};$/;"	g
save_info_type	src/cpu/core_dynrec/decoder_basic.h	/^enum save_info_type {exception, cycle_check, string_break};$/;"	g
save_info_type	src/cpu/core_dynrec/save/decoder_basic.h	/^enum save_info_type {exception, cycle_check, string_break};$/;"	g
save_path	include/dos_system.h	/^	char		save_path			[CROSS_LEN];$/;"	m	class:DOS_Drive_Cache
savecol	src/dos/dev_con.h	/^		Bit8s savecol;$/;"	m	struct:device_CON::ansi
saved	include/cpu.h	/^	} saved;$/;"	m	class:Descriptor	typeref:union:Descriptor::__anon5
saved_page_map	src/ints/ems.cpp	/^	bool saved_page_map;$/;"	m	struct:EMM_Handle	file:
savep_state_flag	src/ints/int10_misc.cpp	/^	Bit8u savep_state_flag;		\/* 32h   BYTE   save pointer state flags $/;"	m	struct:Dynamic_Functionality	file:
saverow	src/dos/dev_con.h	/^		Bit8s saverow;$/;"	m	struct:device_CON::ansi
sb	src/hardware/sblaster.cpp	/^static SB_INFO sb;$/;"	v	file:
scale	include/render.h	/^	} scale;$/;"	m	struct:__anon32	typeref:struct:__anon32::__anon35
scalerLast	src/gui/render_scalers.h	/^	scalerLast$/;"	e	enum:scalerOperation
scalerMode15	src/gui/render_scalers.h	/^	scalerMode8, scalerMode9, scalerMode15, scalerMode16, scalerMode32$/;"	e	enum:__anon135
scalerMode16	src/gui/render_scalers.h	/^	scalerMode8, scalerMode9, scalerMode15, scalerMode16, scalerMode32$/;"	e	enum:__anon135
scalerMode32	src/gui/render_scalers.h	/^	scalerMode8, scalerMode9, scalerMode15, scalerMode16, scalerMode32$/;"	e	enum:__anon135
scalerMode8	src/gui/render_scalers.h	/^	scalerMode8, scalerMode9, scalerMode15, scalerMode16, scalerMode32$/;"	e	enum:__anon135
scalerMode9	src/gui/render_scalers.h	/^	scalerMode8, scalerMode9, scalerMode15, scalerMode16, scalerMode32$/;"	e	enum:__anon135
scalerMode_t	src/gui/render_scalers.h	/^} scalerMode_t;$/;"	t	typeref:enum:__anon135
scalerOpNormal	src/gui/render_scalers.h	/^	scalerOpNormal,$/;"	e	enum:scalerOperation
scalerOperation	src/gui/render_scalers.h	/^typedef enum scalerOperation {$/;"	g
scalerOperation_t	src/gui/render_scalers.h	/^} scalerOperation_t;$/;"	t	typeref:enum:scalerOperation
scan_len	include/vga.h	/^	Bitu scan_len;$/;"	m	struct:__anon37
scan_to_scanascii	src/ints/bios_keyboard.cpp	/^  } scan_to_scanascii[MAX_SCAN_CODE + 1] = {$/;"	v	typeref:struct:__anon194	file:
scancode_map	src/gui/sdl_mapper.cpp	/^static Bit8u scancode_map[MAX_SDLKEYS];$/;"	v	file:
scanning	src/hardware/keyboard.cpp	/^	bool scanning;$/;"	m	struct:__anon161	file:
scheduled	src/hardware/keyboard.cpp	/^	bool scheduled;$/;"	m	struct:__anon161	file:
sci	src/dos/dev_con.h	/^		bool sci;$/;"	m	struct:device_CON::ansi
scissorreg	src/hardware/vga_xga.cpp	/^	struct scissorreg {$/;"	s	struct:XGAStatus	file:
scissors	src/hardware/vga_xga.cpp	/^	} scissors;$/;"	m	struct:XGAStatus	typeref:struct:XGAStatus::scissorreg	file:
sclass	include/serialport.h	/^	CSerial* sclass;$/;"	m	class:device_COM
screen	src/libs/gui_tk/gui_tk.cpp	/^		GUI::Screen *screen;$/;"	m	struct:GUI::newwin	file:
screenMask	src/ints/mouse.cpp	/^	Bit16u*	screenMask;$/;"	m	struct:__anon199	file:
screenflip	include/vga.h	/^	Bits screenflip;$/;"	m	struct:__anon59
scrollactive	src/gui/sdlmain.h	/^		   bool scrollactive;		   $/;"	m	struct:SDL_Block::__anon141
scrollpos	src/gui/sdlmain.h	/^		   int scrollpos;$/;"	m	struct:SDL_Block::__anon141
sdl_joystick	src/gui/sdl_mapper.cpp	/^	SDL_Joystick * sdl_joystick;$/;"	m	class:CStickBindGroup	file:
sdlkey_map	src/gui/sdl_mapper.cpp	/^static SDLKey sdlkey_map[MAX_SCANCODES]={SDLK_UNKNOWN,SDLK_ESCAPE,$/;"	v	file:
sdlkey_map	src/gui/sdl_mapper.cpp	/^static SDLKey sdlkey_map[]={$/;"	v	file:
sdrive	include/dos_inc.h	/^		Bit8u sdrive;						\/* The Drive the search is taking place *\/$/;"	m	struct:DOS_DTA::sDTA
search_data	include/cross.h	/^	WIN32_FIND_DATA search_data;$/;"	m	struct:dir_struct
search_file	src/dos/drives.h	/^	VFILE_Block * search_file;$/;"	m	class:Virtual_Drive
sec	src/dos/cdrom.h	/^	unsigned char sec;$/;"	m	struct:SMSF
sec_char_block	src/ints/int10_misc.cpp	/^	Bit8u sec_char_block;		\/* 2Ch   BYTE   secondary character block *\/$/;"	m	struct:Dynamic_Functionality	file:
second	src/debug/debug_disasm.cpp	/^static char const *second[] = {$/;"	v	file:
sectclust	include/dos_inc.h	/^		Bit8u sectclust;$/;"	m	struct:bootSector::entries
section	include/setup.h	/^	Section_prop* section;$/;"	m	class:Prop_multival
sectionlist	include/control.h	/^	std::list<Section*> sectionlist;$/;"	m	class:Config
sectionname	include/setup.h	/^	std::string sectionname;$/;"	m	class:Section
sector	src/dos/drives.h	/^		Bit32u sector;$/;"	m	struct:isoDrive::SectorHashEntry
sectorBuffer	src/dos/drive_fat.cpp	/^	Bit8u sectorBuffer[512];$/;"	m	class:fatFile	file:
sectorHashEntries	src/dos/drives.h	/^	} sectorHashEntries[ISO_MAX_HASH_TABLE_SIZE];$/;"	m	class:isoDrive	typeref:struct:isoDrive::SectorHashEntry
sectorSize	src/dos/cdrom.h	/^		int sectorSize;$/;"	m	struct:CDROM_Interface_Image::Track
sector_size	include/bios_disk.h	/^	Bit32u sector_size;$/;"	m	class:imageDisk
sectors	include/bios_disk.h	/^	Bit32u heads,cylinders,sectors;$/;"	m	class:imageDisk
sectors_cluster	src/dos/drives.h	/^		Bit8u sectors_cluster;$/;"	m	struct:fatDrive::__anon120
sectors_cluster	src/dos/drives.h	/^		Bit8u sectors_cluster;$/;"	m	struct:localDrive::__anon117
sectorspercluster	src/dos/drives.h	/^	Bit8u  sectorspercluster;$/;"	m	struct:bootstrap
sectorsperfat	src/dos/drives.h	/^	Bit16u sectorsperfat;$/;"	m	struct:bootstrap
sectorspertrack	src/dos/drives.h	/^	Bit16u sectorspertrack;$/;"	m	struct:bootstrap
secttrack	include/bios_disk.h	/^	Bit16u secttrack; \/* Sectors per track *\/$/;"	m	struct:diskGeo
secure_mode	include/control.h	/^	bool secure_mode; \/\/Sandbox mode$/;"	m	class:Config
seekpos	src/dos/drive_fat.cpp	/^	Bit32u seekpos;$/;"	m	class:fatFile	file:
seg	include/cpu.h	/^		S_Descriptor seg;$/;"	m	union:Descriptor::__anon5
seg	include/dos_inc.h	/^	Bit16u	seg;$/;"	m	class:DOS_InfoBlock
seg	include/dos_inc.h	/^	Bit16u	seg;$/;"	m	class:DOS_PSP
seg	src/cpu/core_full/support.h	/^	} seg;$/;"	m	struct:FullData	typeref:struct:FullData::__anon104
seg_prefix	src/cpu/core_dynrec/decoder_basic.h	/^	Bit8u seg_prefix;		\/\/ segment prefix (if seg_prefix_used==true)$/;"	m	struct:DynDecode
seg_prefix	src/cpu/core_dynrec/save/decoder_basic.h	/^	Bit8u seg_prefix;		\/\/ segment prefix (if seg_prefix_used==true)$/;"	m	struct:DynDecode
seg_prefix_used	src/cpu/core_dynrec/decoder_basic.h	/^	bool seg_prefix_used;	\/\/ segment overridden$/;"	m	struct:DynDecode
seg_prefix_used	src/cpu/core_dynrec/save/decoder_basic.h	/^	bool seg_prefix_used;	\/\/ segment overridden$/;"	m	struct:DynDecode
segment	include/ipx.h	/^	Bit16u segment;$/;"	m	struct:fragmentDescriptor
segment	src/debug/debug.cpp	/^	Bit16u		segment;$/;"	m	class:CBreakpoint	file:
segprefix	src/cpu/core_dyn_x86/decoder.h	/^	DynReg * segprefix;$/;"	m	struct:DynDecode
selectItem	src/libs/gui_tk/gui_tk.h	/^	virtual void selectItem(int x, int y) {$/;"	f	class:GUI::Menu
selected	src/gui/sdl_mapper.cpp	/^	CCaptionButton *  selected;$/;"	m	struct:__anon145	file:
selected	src/libs/gui_tk/gui_tk.h	/^	int selected;$/;"	m	class:GUI::Frame
selected	src/libs/gui_tk/gui_tk.h	/^	int selected;$/;"	m	class:GUI::Menu
selected	src/libs/gui_tk/gui_tk.h	/^	int selected;$/;"	m	class:GUI::Menubar
selected_reg	src/hardware/gameblaster.cpp	/^	int selected_reg;				\/* selected register *\/$/;"	m	struct:SAA1099	file:
selector	include/cpu.h	/^	Bit32u selector:	16;$/;"	m	struct:G_Descriptor
selector	src/cpu/cpu.cpp	/^	Bitu selector;$/;"	m	class:TaskStateSegment	file:
sendIPXPacket	src/hardware/ipxserver.cpp	/^static void sendIPXPacket(Bit8u *buffer, Bit16s bufSize) {$/;"	f	file:
sendPacket	src/hardware/ipx.cpp	/^static void sendPacket(ECBClass* sendecb) {$/;"	f	file:
send_event	src/gui/midi_alsa.h	/^	void send_event(int do_flush) {$/;"	f	class:MidiHandler_alsa
sendbuffer	src/hardware/serialport/misc_util.h	/^	Bit8u* sendbuffer;$/;"	m	class:TCPClientSocket
sendbufferindex	src/hardware/serialport/misc_util.h	/^	Bitu sendbufferindex;$/;"	m	class:TCPClientSocket
sendbuffersize	src/hardware/serialport/misc_util.h	/^	Bitu sendbuffersize;$/;"	m	class:TCPClientSocket
sensitivity	src/gui/sdlmain.h	/^	       Bit32u sensitivity;$/;"	m	struct:SDL_Block::__anon138
senv_x	src/ints/mouse.cpp	/^	float	senv_x;$/;"	m	struct:__anon199	file:
senv_x_val	src/ints/mouse.cpp	/^	Bit16u	senv_x_val;$/;"	m	struct:__anon199	file:
senv_y	src/ints/mouse.cpp	/^	float	senv_y;$/;"	m	struct:__anon199	file:
senv_y_val	src/ints/mouse.cpp	/^	Bit16u	senv_y_val;$/;"	m	struct:__anon199	file:
seperator	include/setup.h	/^	std::string seperator;$/;"	m	class:Prop_multival
seq	include/vga.h	/^	VGA_Seq seq;$/;"	m	struct:__anon59
seq	src/hardware/vga_seq.cpp	25;"	d	file:
seq_client	src/gui/midi_alsa.h	/^	int seq_client, seq_port;$/;"	m	class:MidiHandler_alsa
seq_handle	src/gui/midi_alsa.h	/^	snd_seq_t *seq_handle;$/;"	m	class:MidiHandler_alsa
seq_port	src/gui/midi_alsa.h	/^	int seq_client, seq_port;$/;"	m	class:MidiHandler_alsa
serial_baseaddr	include/serialport.h	/^const Bit16u serial_baseaddr[4] = {0x3f8,0x2f8,0x3e8,0x2e8};$/;"	v
serial_comname	include/serialport.h	/^const char* const serial_comname[]={"COM1","COM2","COM3","COM4"};$/;"	v
serial_defaultirq	include/serialport.h	/^const Bit8u serial_defaultirq[4] = { 4, 3, 4, 3 };$/;"	v
serialports	src/hardware/serialport/serialport.cpp	/^CSerial* serialports[4] ={0,0,0,0};$/;"	v
serverSocketSet	src/hardware/ipxserver.cpp	/^SDLNet_SocketSet serverSocketSet;$/;"	v
serverTimer	src/hardware/ipxserver.cpp	/^TIMER_TickHandler* serverTimer;$/;"	v
serverport	src/hardware/serialport/nullmodem.h	/^	Bit16u serverport;		\/\/ we are a server if this is nonzero$/;"	m	class:CNullModem
serversocket	src/hardware/serialport/nullmodem.h	/^	TCPServerSocket* serversocket;$/;"	m	class:CNullModem
serversocket	src/hardware/serialport/softmodem.h	/^	TCPServerSocket* serversocket;$/;"	m	class:CSerialModem
service	include/dos_inc.h	/^		Bit8u	service[3];			\/* INT 0x21 Service call int 0x21;retf; *\/$/;"	m	struct:DOS_PSP::sPSP
setBreak	src/hardware/serialport/directserial_os2.cpp	/^void CDirectSerial::setBreak (bool value) {$/;"	f	class:CDirectSerial
setBreak	src/hardware/serialport/directserial_posix.cpp	/^void CDirectSerial::setBreak (bool value) {$/;"	f	class:CDirectSerial
setBreak	src/hardware/serialport/directserial_win32.cpp	/^void CDirectSerial::setBreak (bool value) {$/;"	f	class:CDirectSerial
setBreak	src/hardware/serialport/nullmodem.cpp	/^void CNullModem::setBreak (bool \/*value*\/) {$/;"	f	class:CNullModem
setBreak	src/hardware/serialport/serialdummy.cpp	/^void CSerialDummy::setBreak(bool value) {$/;"	f	class:CSerialDummy
setBreak	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::setBreak(bool) {$/;"	f	class:CSerialModem
setCD	src/hardware/serialport/serialport.cpp	/^void CSerial::setCD (bool value) {$/;"	f	class:CSerial
setCTS	src/hardware/serialport/serialport.cpp	/^void CSerial::setCTS (bool value) {$/;"	f	class:CSerial
setChecked	src/libs/gui_tk/gui_tk.h	/^	virtual void setChecked(bool checked) { this->checked = checked; }$/;"	f	class:GUI::Checkbox
setChecked	src/libs/gui_tk/gui_tk.h	/^	virtual void setChecked(bool checked) { this->checked = checked; }$/;"	f	class:GUI::Radiobox
setClipboard	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> void setClipboard(const STR s) { this->setClipboard(String(s)); }$/;"	f	class:GUI::Screen
setClipboard	src/libs/gui_tk/gui_tk.h	/^	virtual void setClipboard(const String &s) { clipboard = s; }$/;"	f	class:GUI::Screen
setClipboard	src/libs/gui_tk/gui_tk.h	/^	virtual void setClipboard(const String &s) { parent->setClipboard(s); };$/;"	f	class:GUI::Window
setClusterValue	src/dos/drive_fat.cpp	/^void fatDrive::setClusterValue(Bit32u clustNum, Bit32u clustValue) {$/;"	f	class:fatDrive
setColor	src/libs/gui_tk/gui_tk.h	/^	void setColor(RGB c) { color = c; };$/;"	f	class:GUI::Drawable
setColor	src/libs/gui_tk/gui_tk.h	/^	void setColor(const RGB color) { this->color = color; resize(); }$/;"	f	class:GUI::Label
setCompletionFlag	src/hardware/ipx.cpp	/^void ECBClass::setCompletionFlag(Bit8u flagval) {$/;"	f	class:ECBClass
setDSR	src/hardware/serialport/serialport.cpp	/^void CSerial::setDSR (bool value) {$/;"	f	class:CSerial
setDTR	src/hardware/serialport/directserial_os2.cpp	/^void CDirectSerial::setDTR(bool val)$/;"	f	class:CDirectSerial
setDTR	src/hardware/serialport/directserial_posix.cpp	/^void CDirectSerial::setDTR(bool val) {$/;"	f	class:CDirectSerial
setDTR	src/hardware/serialport/directserial_win32.cpp	/^void CDirectSerial::setDTR(bool val) {$/;"	f	class:CDirectSerial
setDTR	src/hardware/serialport/nullmodem.cpp	/^void CNullModem::setDTR(bool val) {$/;"	f	class:CNullModem
setDTR	src/hardware/serialport/serialdummy.cpp	/^void CSerialDummy::setDTR(bool val) {$/;"	f	class:CSerialDummy
setDTR	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::setDTR(bool val) {$/;"	f	class:CSerialModem
setDirty	src/libs/gui_tk/gui_tk.h	/^	void setDirty() { if (dirty) return; dirty = true; if (parent != NULL) parent->setDirty(); };$/;"	f	class:GUI::Window
setEvent	src/hardware/serialport/serialport.cpp	/^void CSerial::setEvent(Bit16u type, float duration) {$/;"	f	class:CSerial
setFont	src/libs/gui_tk/gui_tk.h	/^	void setFont(const Font *f) { font = f; };$/;"	f	class:GUI::Drawable
setFont	src/libs/gui_tk/gui_tk.h	/^	void setFont(const Font *font) { this->font = font; resize(); }$/;"	f	class:GUI::Label
setImmAddress	src/hardware/ipx.cpp	/^void ECBClass::setImmAddress(Bit8u *immAddr) {$/;"	f	class:ECBClass
setInUseFlag	src/hardware/ipx.cpp	/^void ECBClass::setInUseFlag(Bit8u flagval) {$/;"	f	class:ECBClass
setLineWidth	src/libs/gui_tk/gui_tk.h	/^	void setLineWidth(int w) { lineWidth = w; };$/;"	f	class:GUI::Drawable
setName	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> void setName(const STR name) { this->name = String(name); }$/;"	f	class:GUI::ActionEventSource
setRI	src/hardware/serialport/serialport.cpp	/^void CSerial::setRI (bool value) {$/;"	f	class:CSerial
setRTS	src/hardware/serialport/directserial_os2.cpp	/^void CDirectSerial::setRTS(bool val)$/;"	f	class:CDirectSerial
setRTS	src/hardware/serialport/directserial_posix.cpp	/^void CDirectSerial::setRTS(bool val) {$/;"	f	class:CDirectSerial
setRTS	src/hardware/serialport/directserial_win32.cpp	/^void CDirectSerial::setRTS(bool val) {$/;"	f	class:CDirectSerial
setRTS	src/hardware/serialport/nullmodem.cpp	/^void CNullModem::setRTS(bool val) {$/;"	f	class:CNullModem
setRTS	src/hardware/serialport/serialdummy.cpp	/^void CSerialDummy::setRTS(bool val) {$/;"	f	class:CSerialDummy
setRTS	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::setRTS(bool val) {$/;"	f	class:CSerialModem
setRTSDTR	src/hardware/serialport/directserial_os2.cpp	/^void CDirectSerial::setRTSDTR(bool rts, bool dtr)$/;"	f	class:CDirectSerial
setRTSDTR	src/hardware/serialport/directserial_posix.cpp	/^void CDirectSerial::setRTSDTR(bool rts, bool dtr) {$/;"	f	class:CDirectSerial
setRTSDTR	src/hardware/serialport/directserial_win32.cpp	/^void CDirectSerial::setRTSDTR(bool rts, bool dtr) {$/;"	f	class:CDirectSerial
setRTSDTR	src/hardware/serialport/nullmodem.cpp	/^void CNullModem::setRTSDTR(bool xrts, bool xdtr) {$/;"	f	class:CNullModem
setRTSDTR	src/hardware/serialport/serialdummy.cpp	/^void CSerialDummy::setRTSDTR(bool rts, bool dtr) {$/;"	f	class:CSerialDummy
setRTSDTR	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::setRTSDTR(bool rts, bool dtr) {$/;"	f	class:CSerialModem
setSurface	src/libs/gui_tk/gui_tk.h	/^	void setSurface(SDL_Surface *surface) { this->surface = surface; }$/;"	f	class:GUI::ScreenSDL
setText	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> void setText(const STR text) { this->text = text; resize(); }$/;"	f	class:GUI::Label
setText	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> void setText(const STR text) { this->text = text; setDirty(); };$/;"	f	class:GUI::Input
setText	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> void setText(const STR text) {$/;"	f	class:GUI::MessageBox
setTitle	src/libs/gui_tk/gui_tk.h	/^	template <typename STR> void setTitle(const STR title) { this->title = title; setDirty(); }$/;"	f	class:GUI::ToplevelWindow
setVisible	src/libs/gui_tk/gui_tk.h	/^	virtual void setVisible(bool v) { if (v) raise(); Window::setVisible(v); }$/;"	f	class:GUI::TransientWindow
setVisible	src/libs/gui_tk/gui_tk.h	/^	virtual void setVisible(bool v) { visible = !!v; parent->setDirty(); }$/;"	f	class:GUI::Window
setVisible	src/libs/gui_tk/gui_tk.h	/^	virtual void setVisible(bool v) {$/;"	f	class:GUI::Menu
set_ar_dr	src/hardware/fmopl.cpp	/^INLINE void set_ar_dr(FM_OPL *OPL,int slot,int v)$/;"	f
set_ar_dr	src/hardware/ymf262.cpp	/^INLINE void set_ar_dr(OPL3 *chip,int slot,int v)$/;"	f
set_bool	src/misc/setup.cpp	/^void Value::set_bool(string const &in) {$/;"	f	class:Value
set_clock	include/vga.h	/^	tSetClock set_clock;$/;"	m	struct:SVGA_Driver
set_clock_index_et3k	src/hardware/vga_tseng.cpp	/^static void set_clock_index_et3k(Bitu index) {$/;"	f	file:
set_clock_index_et4k	src/hardware/vga_tseng.cpp	/^static void set_clock_index_et4k(Bitu index) {$/;"	f	file:
set_double	src/misc/setup.cpp	/^void Value::set_double(string const &in) {$/;"	f	class:Value
set_hex	src/misc/setup.cpp	/^void Value::set_hex(std::string const& in) {$/;"	f	class:Value
set_int	src/misc/setup.cpp	/^void Value::set_int(string const &in) {$/;"	f	class:Value
set_ksl_tl	src/hardware/fmopl.cpp	/^INLINE void set_ksl_tl(FM_OPL *OPL,int slot,int v)$/;"	f
set_ksl_tl	src/hardware/ymf262.cpp	/^INLINE void set_ksl_tl(OPL3 *chip,int slot,int v)$/;"	f
set_mul	src/hardware/fmopl.cpp	/^INLINE void set_mul(FM_OPL *OPL,int slot,int v)$/;"	f
set_mul	src/hardware/ymf262.cpp	/^INLINE void set_mul(OPL3 *chip,int slot,int v)$/;"	f
set_reset	include/vga.h	/^	Bit8u set_reset;$/;"	m	struct:__anon51
set_skipflags	src/cpu/core_dyn_x86/risc_x86.h	/^static void set_skipflags(bool state) {$/;"	f
set_sl_rr	src/hardware/fmopl.cpp	/^INLINE void set_sl_rr(FM_OPL *OPL,int slot,int v)$/;"	f
set_sl_rr	src/hardware/ymf262.cpp	/^INLINE void set_sl_rr(OPL3 *chip,int slot,int v)$/;"	f
set_string	src/misc/setup.cpp	/^void Value::set_string(string const & in) {$/;"	f	class:Value
set_video_mode	include/vga.h	/^	tFinishSetMode set_video_mode;$/;"	m	struct:SVGA_Driver
setverPtr	include/dos_inc.h	/^		RealPt  setverPtr;		\/\/  0x37 pointer to setver$/;"	m	struct:DOS_InfoBlock::sDIB
setwindow	src/ints/int10_vesa.cpp	/^	Bitu setwindow;$/;"	m	struct:__anon198	file:
sext	include/dos_inc.h	/^		Bit8u sext[3];						\/* The Search pattern for the extenstion *\/$/;"	m	struct:DOS_DTA::sDTA
sflag	src/hardware/serialport/misc_util.cpp	/^	int sflag;$/;"	m	struct:_TCPsocketX	file:
sft_entries	include/dos_inc.h	/^		Bit8u sft_entries;$/;"	m	struct:DOS_FCB::sFCB
share_attributes	include/dos_inc.h	/^		Bit8u share_attributes;$/;"	m	struct:DOS_FCB::sFCB
sharingCount	include/dos_inc.h	/^		Bit16u	sharingCount;		\/\/ -0x0c sharing retry count$/;"	m	struct:DOS_InfoBlock::sDIB
sharingDelay	include/dos_inc.h	/^		Bit16u	sharingDelay;		\/\/ -0x0a sharing retry delay$/;"	m	struct:DOS_InfoBlock::sDIB
sheight	src/ints/int10.h	/^	Bitu	swidth, sheight;$/;"	m	struct:VideoModeBlock
shell	include/shell.h	/^	DOS_Shell * shell;$/;"	m	class:BatchFile
shellstop_handler	src/shell/shell.cpp	/^static Bitu shellstop_handler(void) {$/;"	f	file:
shift	src/cpu/core_dyn_x86.cpp	/^	Bitu ea,tmpb,tmpd,stack,shift,newesp;$/;"	m	struct:__anon94	file:
shift	src/ints/bios_keyboard.cpp	/^  Bit16u shift;$/;"	m	struct:__anon194	file:
shift	src/libs/gui_tk/gui_tk.h	/^	bool shift;$/;"	m	class:GUI::Key
shortNr	include/dos_system.h	/^		Bitu		shortNr;$/;"	m	class:DOS_Drive_Cache::CFileInfo
shortname	include/dos_system.h	/^		char		shortname	[DOS_NAMELENGTH_ASCII];$/;"	m	class:DOS_Drive_Cache::CFileInfo
showExtend	src/debug/debug.cpp	/^static bool		showExtend = true;$/;"	v	file:
showcounter	src/dosbox.cpp	/^Bitu showcounter;$/;"	v
si	include/cpu.h	/^    Bit16u sp, bp, si, di;       \/* The special purpose registers *\/$/;"	m	struct:TSS_16
sib	src/debug/debug_disasm.cpp	/^static int sib(void)$/;"	f	file:
sibv	src/debug/debug_disasm.cpp	/^static int sibv;              \/* flag for getting sib byte   *\/$/;"	v	file:
sign	src/hardware/sblaster.cpp	/^		bool stereo,sign,autoinit;$/;"	m	struct:SB_INFO::__anon170	file:
signature	src/dos/dos_execute.cpp	/^	Bit16u signature;					\/* EXE Signature MZ or ZM *\/$/;"	m	struct:EXE_Header	file:
sin	src/misc/fixed.cpp	/^FixedPoint FixedPoint::sin(void)$/;"	f	class:FixedPoint
sin_tab	src/hardware/fmopl.cpp	/^static unsigned int sin_tab[SIN_LEN * 4];$/;"	v	file:
sin_tab	src/hardware/ymf262.cpp	/^static unsigned int sin_tab[SIN_LEN * 8];$/;"	v	file:
single	src/hardware/pic.cpp	/^	bool single;$/;"	m	struct:PIC_Controller	file:
sinx	src/misc/fixed.cpp	/^FixedPoint sinx(FixedPoint x)$/;"	f
size	include/dos_inc.h	/^		Bit16u size;	$/;"	m	struct:DOS_MCB::sMCB
size	include/dos_inc.h	/^		Bit32u size;$/;"	m	struct:DOS_DTA::sDTA
size	include/dos_system.h	/^	Bit32u size;$/;"	m	struct:FileStat_Block
size	include/ipx.h	/^	Bit16u size;$/;"	m	struct:fragmentDescriptor
size	src/cpu/core_dyn_x86/cache.h	/^		Bitu size;$/;"	m	struct:CacheBlock::__anon84
size	src/cpu/core_dynrec/cache.h	/^		Bitu size;$/;"	m	struct:CacheBlockDynRec::__anon63
size	src/cpu/core_dynrec/save/cache.h	/^		Bitu size;$/;"	m	struct:CacheBlockDynRec::__anon73
size	src/dos/dos_tables.cpp	/^	Bit16u size;$/;"	m	struct:DOS_TableCase	file:
size	src/dos/drive_virtual.cpp	/^	Bit32u size;$/;"	m	struct:VFILE_Block	file:
size	src/hardware/serialport/softmodem.h	/^	Bitu size,pos,used;$/;"	m	class:CFifo
size	src/ints/xms.cpp	/^	Bitu	size;$/;"	m	struct:XMS_Block	file:
size_extended	src/ints/bios.cpp	/^static Bit16u size_extended;$/;"	v	file:
sizex	src/hardware/vga_xga.cpp	/^		Bit16u x1, y1, x2, y2, sizex, sizey;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
sizey	src/hardware/vga_xga.cpp	/^		Bit16u x1, y1, x2, y2, sizex, sizey;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
skip	src/cpu/core_verysimple.cpp	/^		bool skip;$/;"	m	struct:__anon106::__anon107	file:
skip	src/dos/cdrom.h	/^		int skip;$/;"	m	struct:CDROM_Interface_Image::Track
skipFirstInstruction	src/debug/debug.cpp	/^bool skipFirstInstruction = false;$/;"	v
skip_flags	src/cpu/core_dyn_x86/risc_x86.h	/^static bool skip_flags=false;$/;"	v
sl	src/hardware/fmopl.cpp	/^	UINT32	sl;			\/* sustain level: sl_tab[SL]	*\/$/;"	m	struct:__anon153	file:
sl	src/hardware/ymf262.cpp	/^	UINT32	sl;			\/* sustain level: sl_tab[SL]	*\/$/;"	m	struct:__anon190	file:
sl_tab	src/hardware/fmopl.cpp	/^static const UINT32 sl_tab[16]={$/;"	v	file:
sl_tab	src/hardware/ymf262.cpp	/^static const UINT32 sl_tab[16]={$/;"	v	file:
sline	include/vga.h	/^		Bit8u sline,eline;$/;"	m	struct:__anon38::__anon40
slot	src/libs/zmbv/zmbv.h	/^		int slot;$/;"	m	struct:VideoCodec::CodecVector
slot_array	src/hardware/fmopl.cpp	/^static const int slot_array[32]=$/;"	v	file:
slot_array	src/hardware/ymf262.cpp	/^static const int slot_array[32]=$/;"	v	file:
sn	src/hardware/tandy_sound.cpp	/^static struct SN76496 sn;$/;"	v	typeref:struct:SN76496	file:
sname	include/dos_inc.h	/^		Bit8u sname[8];						\/* The Search pattern for the filename *\/		$/;"	m	struct:DOS_DTA::sDTA
snd_seq_flush_output	src/gui/midi_alsa.h	29;"	d
snd_seq_set_client_group	src/gui/midi_alsa.h	30;"	d
snprintf	include/cross.h	37;"	d
snprintf	src/cpu/core_dynrec/cross.h	32;"	d
snprintf	src/cpu/core_dynrec/save/cross.h	32;"	d
sockInUse	src/hardware/ipx.cpp	/^static bool sockInUse(Bit16u sockNum) {$/;"	f	file:
socket	include/ipx.h	/^		Uint8 socket[2];$/;"	m	struct:IPXHeader::transport
socketCount	src/hardware/ipx.cpp	/^static Bit16u socketCount;$/;"	v	file:
sortDirType	include/dos_system.h	/^	TDirSort	sortDirType;$/;"	m	class:DOS_Drive_Cache
sp	include/cpu.h	/^    Bit16u sp, bp, si, di;       \/* The special purpose registers *\/$/;"	m	struct:TSS_16
sp0	include/cpu.h	/^    Bit16u sp0;				     \/* The CK stack pointer *\/$/;"	m	struct:TSS_16
sp1	include/cpu.h	/^	Bit16u sp1;                  \/* The parent KL stack pointer *\/$/;"	m	struct:TSS_16
sp2	include/cpu.h	/^	Bit16u sp2;                  \/* Unused *\/$/;"	m	struct:TSS_16
sp_int_23	include/dos_inc.h	/^		Bit16u sp_int_23;		\/* 0x12 stores SP across an INT 23 *\/$/;"	m	struct:DOS_SDA::sSDA
speaker	src/hardware/sblaster.cpp	/^	bool speaker;$/;"	m	struct:SB_INFO	file:
special	src/hardware/pic.cpp	/^	bool special;$/;"	m	struct:PIC_Controller	file:
special	src/ints/int10.h	/^	Bitu	special;$/;"	m	struct:VideoModeBlock
special	src/libs/gui_tk/gui_tk.h	/^	const SpecialChar *const special;$/;"	m	class:GUI::BitmapFont
special	src/libs/gui_tk/gui_tk.h	/^	} special;$/;"	m	class:GUI::Key	typeref:enum:GUI::Key::Special
specialCodeSeg	include/dos_inc.h	/^		Bit16u	specialCodeSeg;		\/\/  0x35 special code segment$/;"	m	struct:DOS_InfoBlock::sDIB
speedcheck_failed	src/hardware/disney.cpp	/^	bool speedcheck_failed;$/;"	m	struct:_dac_channel	file:
speedcheck_init	src/hardware/disney.cpp	/^	bool speedcheck_init;$/;"	m	struct:_dac_channel	file:
speedcheck_last	src/hardware/disney.cpp	/^	double speedcheck_last;$/;"	m	struct:_dac_channel	file:
speedcheck_sum	src/hardware/disney.cpp	/^	double speedcheck_sum;$/;"	m	struct:_dac_channel	file:
spkr	src/hardware/pcspeaker.cpp	/^} spkr;$/;"	v	typeref:struct:__anon166	file:
split_line	include/vga.h	/^	Bitu split_line;$/;"	m	struct:__anon38
sqrt	src/misc/fixed.cpp	/^FixedPoint FixedPoint::sqrt(void)$/;"	f	class:FixedPoint
sqrt_error	src/misc/fixed.cpp	43;"	d	file:
sqrtx	src/misc/fixed.cpp	/^FixedPoint sqrtx(FixedPoint fixedVal)$/;"	f
src	include/ipx.h	/^	} dest, src;$/;"	m	struct:IPXHeader	typeref:struct:IPXHeader::transport
src	include/render.h	/^	} src;$/;"	m	struct:__anon32	typeref:struct:__anon32::__anon33
src	src/ints/xms.cpp	/^	} src;$/;"	m	struct:XMS_MemMove	typeref:union:XMS_MemMove::__anon200	file:
src_handle	src/ints/ems.cpp	/^	Bit16u src_handle;$/;"	m	struct:MoveRegion	file:
src_handle	src/ints/xms.cpp	/^	Bit16u src_handle;$/;"	m	struct:XMS_MemMove	file:
src_offset	src/ints/ems.cpp	/^	Bit16u src_offset;$/;"	m	struct:MoveRegion	file:
src_page_seg	src/ints/ems.cpp	/^	Bit16u src_page_seg;$/;"	m	struct:MoveRegion	file:
src_type	src/ints/ems.cpp	/^	Bit8u src_type;$/;"	m	struct:MoveRegion	file:
srchInfo	src/dos/drives.h	/^	} srchInfo[MAX_OPENDIRS];$/;"	m	class:fatDrive	typeref:struct:fatDrive::__anon119
srchInfo	src/dos/drives.h	/^	} srchInfo[MAX_OPENDIRS];$/;"	m	class:localDrive	typeref:struct:localDrive::__anon116
srchNr	include/dos_system.h	/^	Bit16u		srchNr;$/;"	m	class:DOS_Drive_Cache
srch_dir	src/dos/drives.h	/^		char srch_dir[CROSS_LEN];$/;"	m	struct:fatDrive::__anon119
srch_dir	src/dos/drives.h	/^		char srch_dir[CROSS_LEN];$/;"	m	struct:localDrive::__anon116
ss	include/cpu.h	/^    Bit16u ss;                   \/* The application stack selector *\/$/;"	m	struct:TSS_16
ss	include/cpu.h	/^    Bit32u ss;                   \/* The application stack selector *\/$/;"	m	struct:TSS_32
ss	include/regs.h	/^enum SegNames { es=0,cs,ss,ds,fs,gs};$/;"	e	enum:SegNames
ss	src/cpu/core_normal/prefix_none.h	/^		DO_PREFIX_SEG(ss);break;$/;"	v
ss	src/cpu/core_normal/verysimple_prefix_none.h	/^		DO_PREFIX_SEG(ss);break;$/;"	v
ss0	include/cpu.h	/^    Bit16u ss0;					 \/* The CK stack selector *\/$/;"	m	struct:TSS_16
ss0	include/cpu.h	/^    Bit32u ss0;					 \/* The CK stack selector *\/$/;"	m	struct:TSS_32
ss1	include/cpu.h	/^    Bit16u ss1;                  \/* The parent KL stack selector *\/$/;"	m	struct:TSS_16
ss1	include/cpu.h	/^    Bit32u ss1;                  \/* The parent KL stack selector *\/$/;"	m	struct:TSS_32
ss2	include/cpu.h	/^    Bit16u ss2;                  \/* Unused *\/$/;"	m	struct:TSS_16
ss2	include/cpu.h	/^    Bit32u ss2;                  \/* Unused *\/$/;"	m	struct:TSS_32
st	src/hardware/fmopl.cpp	/^	UINT8	st[2];					\/* timer enable					*\/$/;"	m	struct:fm_opl_f	file:
st	src/hardware/ymf262.cpp	/^	UINT8	st[2];					\/* timer enable					*\/$/;"	m	struct:__anon192	file:
stack	include/cpu.h	/^	} stack;$/;"	m	struct:CPUBlock	typeref:struct:CPUBlock::__anon6
stack	include/dos_inc.h	/^		RealPt	stack;				\/* SS:SP Save point for int 0x21 calls *\/$/;"	m	struct:DOS_PSP::sPSP
stack	src/cpu/core_dyn_x86.cpp	/^	Bitu ea,tmpb,tmpd,stack,shift,newesp;$/;"	m	struct:__anon94	file:
standardIdent	src/dos/drives.h	/^	Bit8u standardIdent[5];$/;"	m	struct:isoPVD
start	include/render.h	/^		Bitu width, start;$/;"	m	struct:__anon32::__anon33
start	include/vga.h	/^	Bit32u	start, last;$/;"	m	struct:__anon57
start	src/cpu/core_dyn_x86/cache.h	/^		Bit16u start,end;				\/\/Where the page is the original code$/;"	m	struct:CacheBlock::__anon83
start	src/cpu/core_dyn_x86/cache.h	/^		Bit8u * start;					\/\/Where in the cache are we$/;"	m	struct:CacheBlock::__anon84
start	src/cpu/core_dynrec/cache.h	/^		Bit16u start,end;		\/\/ where in the page is the original code$/;"	m	struct:CacheBlockDynRec::__anon62
start	src/cpu/core_dynrec/cache.h	/^		Bit8u * start;			\/\/ where in the cache are we$/;"	m	struct:CacheBlockDynRec::__anon63
start	src/cpu/core_dynrec/save/cache.h	/^		Bit16u start,end;		\/\/ where in the page is the original code$/;"	m	struct:CacheBlockDynRec::__anon72
start	src/cpu/core_dynrec/save/cache.h	/^		Bit8u * start;			\/\/ where in the cache are we$/;"	m	struct:CacheBlockDynRec::__anon73
start	src/debug/disasm_tables.h	/^	char * start;$/;"	m	struct:Dentry
start	src/dos/cdrom.h	/^		int start;$/;"	m	struct:CDROM_Interface_Image::Track
start	src/hardware/adlib.h	/^	double start;$/;"	m	struct:Adlib::Timer
start	src/hardware/sblaster.cpp	/^		Bit64u start;$/;"	m	struct:SB_INFO::__anon170	file:
start	src/hardware/timer.cpp	/^	double start;$/;"	m	struct:PIT_Block	file:
start	src/libs/zmbv/zmbv.h	/^		int start;$/;"	m	struct:VideoCodec::FrameBlock
startOfUMBChain	include/dos_inc.h	/^		Bit16u	startOfUMBChain;		\/\/  0x66 segment of first UMB-MCB$/;"	m	struct:DOS_InfoBlock::sDIB
startPtr	src/debug/debug_disasm.cpp	/^static PhysPt startPtr;$/;"	v	file:
start_address_high	include/vga.h	/^	Bit8u start_address_high;$/;"	m	struct:__anon50
start_address_low	include/vga.h	/^	Bit8u start_address_low;$/;"	m	struct:__anon50
start_horizontal_blanking	include/vga.h	/^	Bit8u start_horizontal_blanking;$/;"	m	struct:__anon50
start_horizontal_retrace	include/vga.h	/^	Bit8u start_horizontal_retrace;$/;"	m	struct:__anon50
start_page	src/hardware/memory.cpp	/^		Bitu		start_page;$/;"	m	struct:MemoryBlock::__anon163	file:
start_sel	src/libs/gui_tk/gui_tk.h	/^	Size start_sel, end_sel;$/;"	m	class:GUI::Input
start_vertical_blanking	include/vga.h	/^	Bit8u start_vertical_blanking;$/;"	m	struct:__anon50
startaddr	include/vga.h	/^	Bit16u startaddr;$/;"	m	struct:__anon41
state	include/vga.h	/^	Bit8u state;$/;"	m	struct:__anon53
state	src/cpu/core_dyn_x86.cpp	/^	Bit32u		state[32];$/;"	m	struct:__anon96	file:
state	src/cpu/core_dyn_x86/decoder.h	/^	DynState state;$/;"	m	struct:__anon91
state	src/hardware/disney.cpp	/^	Bitu state;$/;"	m	struct:__anon152	file:
state	src/hardware/fmopl.cpp	/^	UINT8	state;		\/* phase type					*\/$/;"	m	struct:__anon153	file:
state	src/hardware/sblaster.cpp	/^		Bit8u state;$/;"	m	struct:SB_INFO::__anon173	file:
state	src/hardware/ymf262.cpp	/^	UINT8	state;		\/* phase type					*\/$/;"	m	struct:__anon190	file:
state_used	src/cpu/core_dyn_x86.cpp	/^	Bit32u		state_used;$/;"	m	struct:__anon96	file:
static_functionality	src/ints/int10_memory.cpp	/^static Bit8u static_functionality[0x10]=$/;"	v	file:
static_state	src/ints/int10.h	/^		RealPt static_state;$/;"	m	struct:__anon196::__anon197
static_table	src/ints/int10_misc.cpp	/^	RealPt static_table;		\/* 00h   DWORD  address of static functionality table *\/$/;"	m	struct:Dynamic_Functionality	file:
status	src/hardware/disney.cpp	/^	Bit8u status;$/;"	m	struct:__anon152	file:
status	src/hardware/fmopl.cpp	/^	UINT8 status;					\/* status flag					*\/$/;"	m	struct:fm_opl_f	file:
status	src/hardware/ymf262.cpp	/^	UINT8	status;					\/* status flag					*\/$/;"	m	struct:__anon192	file:
status_latch	src/hardware/timer.cpp	/^static void status_latch(Bitu counter) {$/;"	f	file:
statusmask	src/hardware/fmopl.cpp	/^	UINT8 statusmask;				\/* status mask					*\/$/;"	m	struct:fm_opl_f	file:
statusmask	src/hardware/ymf262.cpp	/^	UINT8	statusmask;				\/* status mask					*\/$/;"	m	struct:__anon192	file:
stepsize	src/hardware/sblaster.cpp	/^		Bits stepsize;$/;"	m	struct:SB_INFO::__anon177	file:
stereo	src/hardware/disney.cpp	/^	bool stereo;$/;"	m	struct:__anon152	file:
stereo	src/hardware/sblaster.cpp	/^		bool stereo,sign,autoinit;$/;"	m	struct:SB_INFO::__anon170	file:
stereo	src/hardware/sblaster.cpp	/^		bool stereo;$/;"	m	struct:SB_INFO::__anon176	file:
stick	src/gui/sdl_mapper.cpp	/^		CStickBindGroup * stick[MAXSTICKS];$/;"	m	struct:CMapper::__anon144	file:
stick	src/gui/sdl_mapper.cpp	/^	Bitu stick,axis;$/;"	m	class:CJAxisEvent	file:
stick	src/gui/sdl_mapper.cpp	/^	Bitu stick,button;$/;"	m	class:CJButtonEvent	file:
stick	src/gui/sdl_mapper.cpp	/^	Bitu stick,emustick,axes,buttons,hats,emulated_axes,emulated_buttons,emulated_hats;$/;"	m	class:CStickBindGroup	file:
stick	src/gui/sdl_mapper.cpp	/^	Bitu stick,hat,dir;$/;"	m	class:CJHatEvent	file:
stick	src/hardware/joystick.cpp	/^static JoyStick stick[2];$/;"	v	file:
sticks	src/gui/sdl_mapper.cpp	/^	} sticks;$/;"	m	struct:CMapper	typeref:struct:CMapper::__anon144	file:
stop_handler	src/cpu/callback.cpp	/^static Bitu stop_handler(void) {$/;"	f	file:
store_3c0_16	src/hardware/vga_tseng.cpp	/^	Bitu store_3c0_16;$/;"	m	struct:__anon188	file:
store_3c0_16	src/hardware/vga_tseng.cpp	/^	Bitu store_3c0_16;$/;"	m	struct:__anon189	file:
store_3c0_17	src/hardware/vga_tseng.cpp	/^	Bitu store_3c0_17;$/;"	m	struct:__anon188	file:
store_3c0_17	src/hardware/vga_tseng.cpp	/^	Bitu store_3c0_17;$/;"	m	struct:__anon189	file:
store_3c4_06	src/hardware/vga_tseng.cpp	/^	Bitu store_3c4_06;$/;"	m	struct:__anon188	file:
store_3c4_06	src/hardware/vga_tseng.cpp	/^	Bitu store_3c4_06;$/;"	m	struct:__anon189	file:
store_3c4_07	src/hardware/vga_tseng.cpp	/^	Bitu store_3c4_07;$/;"	m	struct:__anon188	file:
store_3c4_07	src/hardware/vga_tseng.cpp	/^	Bitu store_3c4_07;$/;"	m	struct:__anon189	file:
store_3d4_1b	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_1b;$/;"	m	struct:__anon189	file:
store_3d4_1c	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_1c;$/;"	m	struct:__anon189	file:
store_3d4_1d	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_1d;$/;"	m	struct:__anon189	file:
store_3d4_1e	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_1e;$/;"	m	struct:__anon189	file:
store_3d4_1f	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_1f;$/;"	m	struct:__anon189	file:
store_3d4_20	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_20;$/;"	m	struct:__anon189	file:
store_3d4_21	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_21;$/;"	m	struct:__anon189	file:
store_3d4_23	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_23; \/\/ note that 22 is missing$/;"	m	struct:__anon189	file:
store_3d4_24	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_24;$/;"	m	struct:__anon189	file:
store_3d4_25	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_25;$/;"	m	struct:__anon189	file:
store_3d4_31	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_31;$/;"	m	struct:__anon188	file:
store_3d4_32	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_32;$/;"	m	struct:__anon188	file:
store_3d4_33	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_33;$/;"	m	struct:__anon188	file:
store_3d4_34	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_34;$/;"	m	struct:__anon188	file:
store_3d4_35	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_35;$/;"	m	struct:__anon188	file:
store_3d4_36	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_36;$/;"	m	struct:__anon188	file:
store_3d4_37	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_37;$/;"	m	struct:__anon188	file:
store_3d4_3f	src/hardware/vga_tseng.cpp	/^	Bitu store_3d4_3f;$/;"	m	struct:__anon188	file:
str	src/hardware/serialport/softmodem.h	/^		char str[256];$/;"	m	struct:CSerialModem::__anon182
strategy	src/dos/dos_mscdex.cpp	/^		Bit16u	strategy;$/;"	m	struct:DOS_DeviceHeader::sDeviceHeader	file:
strcasecmp	include/support.h	32;"	d
stream	src/hardware/gameblaster.cpp	/^	int stream;						\/* our stream *\/$/;"	m	struct:SAA1099	file:
string_break	src/cpu/core_dynrec/decoder_basic.h	/^enum save_info_type {exception, cycle_check, string_break};$/;"	e	enum:save_info_type
string_break	src/cpu/core_dynrec/save/decoder_basic.h	/^enum save_info_type {exception, cycle_check, string_break};$/;"	e	enum:save_info_type
string_oem	src/ints/int10_vesa.cpp	/^static char string_oem[]="S3 Incorporated. Trio64";$/;"	v	file:
string_productname	src/ints/int10_vesa.cpp	/^static char string_productname[]="DOSBox - The DOS Emulator";$/;"	v	file:
string_productrev	src/ints/int10_vesa.cpp	/^static char string_productrev[]="DOSBox "VERSION;$/;"	v	file:
string_vendorname	src/ints/int10_vesa.cpp	/^static char string_vendorname[]="DOSBox Development Team";$/;"	v	file:
strings	src/libs/gui_tk/gui_tk.h	/^	mutable std::map<const class std::type_info *, Native *, ltvoid> strings;$/;"	m	class:GUI::String
strncasecmp	include/support.h	33;"	d
strreplace	src/misc/support.cxx	/^void strreplace(char * str,char o,char n) {$/;"	f
stuff	include/dos_inc.h	/^		Bit8u	stuff[6];		\/\/ -0x12 some stuff, hopefully never used....$/;"	m	struct:DOS_InfoBlock::sDIB
subUnit	src/dos/cdrom.h	/^	Bit8u	subUnit;$/;"	m	class:CDROM_Interface_Image
subUnit	src/dos/drives.h	/^	Bit8u subUnit;$/;"	m	class:cdromDrive
subUnit	src/dos/drives.h	/^	Bit8u subUnit;$/;"	m	class:isoDrive
sub_mask	src/ints/mouse.cpp	/^	Bit16u sub_mask;$/;"	m	struct:__anon199	file:
sub_ofs	src/ints/mouse.cpp	/^	Bit16u sub_seg,sub_ofs;$/;"	m	struct:__anon199	file:
sub_seg	src/ints/mouse.cpp	/^	Bit16u sub_seg,sub_ofs;$/;"	m	struct:__anon199	file:
subtract	src/misc/fixed.cpp	/^FixedPoint FixedPoint::subtract(FixedPoint b)$/;"	f	class:FixedPoint
subtract	src/misc/fixed.cpp	/^FixedPoint FixedPoint::subtract(double b)$/;"	f	class:FixedPoint
subtract	src/misc/fixed.cpp	/^FixedPoint FixedPoint::subtract(float b)$/;"	f	class:FixedPoint
subtract	src/misc/fixed.cpp	/^FixedPoint FixedPoint::subtract(int b)$/;"	f	class:FixedPoint
subtract	src/misc/fixed.cpp	/^FixedPoint FixedPoint::subtract(long b)$/;"	f	class:FixedPoint
subtract	src/misc/fixed.cpp	/^FixedPoint FixedPoint::subtract(short b)$/;"	f	class:FixedPoint
suggested_action	include/dos_inc.h	/^		Bit8u suggested_action;		\/* 0x06 suggested action for last error *\/$/;"	m	struct:DOS_SDA::sSDA
suggested_values	include/setup.h	/^	std::vector<Value> suggested_values;$/;"	m	class:Property
supressGA	src/hardware/serialport/nullmodem.h	/^		bool supressGA[2];$/;"	m	struct:CNullModem::__anon180
supressGA	src/hardware/serialport/softmodem.h	/^		bool supressGA[2];$/;"	m	struct:CSerialModem::__anon181
surface	src/gui/sdl_mapper.cpp	/^	SDL_Surface * surface;$/;"	m	struct:CMapper	file:
surface	src/gui/sdlmain.h	/^	SDL_Surface * surface;$/;"	m	struct:SDL_Block
surface	src/libs/gui_tk/gui_tk.h	/^	SDL_Surface *surface;$/;"	m	class:GUI::ScreenSDL
surfaceToRGB	src/libs/gui_tk/gui_tk.h	/^	virtual RGB surfaceToRGB(void *pixel) { return *(RGB*)pixel; };$/;"	f	class:GUI::ScreenRGB32le
surfaceToRGB	src/libs/gui_tk/gui_tk.h	/^	virtual RGB surfaceToRGB(void *pixel) { return 0; };$/;"	f	class:GUI::ScreenSDL
svga	include/vga.h	/^	VGA_SVGA svga;$/;"	m	struct:__anon59
svga	src/hardware/vga.cpp	/^SVGA_Driver svga;$/;"	v
svgaCard	src/dosbox.cpp	/^SVGACards svgaCard;$/;"	v
sw	include/fpu.h	/^	Bit16u		sw;$/;"	m	struct:__anon23
swap34	src/hardware/joystick.cpp	/^static bool swap34 = false;$/;"	v	file:
swapByte	src/hardware/ipx.cpp	/^static Bit16u swapByte(Bit16u sockNum) {$/;"	f	file:
swapInDisks	src/ints/bios_disk.cpp	/^void swapInDisks(void) {$/;"	f
swapInNextDisk	src/ints/bios_disk.cpp	/^void swapInNextDisk(bool pressed) {$/;"	f
swapPosition	src/ints/bios_disk.cpp	/^Bits swapPosition;$/;"	v
swapping_requested	src/ints/bios_disk.cpp	/^static bool swapping_requested;$/;"	v	file:
swidth	src/ints/int10.h	/^	Bitu	swidth, sheight;$/;"	m	struct:VideoModeBlock
switch_foreign_layout	src/dos/dos_keyboard_layout.cpp	/^void keyboard_layout::switch_foreign_layout() {$/;"	f	class:keyboard_layout
switch_keyboard_layout	src/dos/dos_keyboard_layout.cpp	/^Bitu keyboard_layout::switch_keyboard_layout(const char* new_layout, keyboard_layout*& created_layout) {$/;"	f	class:keyboard_layout
sync_state	src/hardware/gameblaster.cpp	/^	int sync_state;					\/* sync all channels *\/$/;"	m	struct:SAA1099	file:
syncw	include/vga.h	/^	Bit8u syncw;$/;"	m	struct:__anon46
systemIdent	src/dos/drives.h	/^	Bit8u systemIdent[32];$/;"	m	struct:isoPVD
systemMenu	src/libs/gui_tk/gui_tk.h	/^	Menu *systemMenu;$/;"	m	class:GUI::ToplevelWindow
szDescription	src/libs/zmbv/zmbv_vfw.cpp	/^TCHAR szDescription[] = TEXT("Zipped Motion Block Video v0.1");$/;"	v
szName	src/libs/zmbv/zmbv_vfw.cpp	/^TCHAR szName[]        = TEXT(CODEC_4CC);$/;"	v
tAcceptsMode	include/vga.h	/^typedef bool (*tAcceptsMode)(Bitu modeNo);$/;"	t
tDetermineMode	include/vga.h	/^typedef void (*tDetermineMode)();$/;"	t
tFinishSetMode	include/vga.h	/^typedef void (*tFinishSetMode)(Bitu crtc_base, VGA_ModeExtraData* modeData);$/;"	t
tGetClock	include/vga.h	/^typedef Bitu (*tGetClock)();$/;"	t
tHWCursorActive	include/vga.h	/^typedef bool (*tHWCursorActive)();$/;"	t
tReadPort	include/vga.h	/^typedef Bitu (*tReadPort)(Bitu reg,Bitu iolen);$/;"	t
tSetClock	include/vga.h	/^typedef void (*tSetClock)(Bitu which,Bitu target);$/;"	t
tWritePort	include/vga.h	/^typedef void (*tWritePort)(Bitu reg,Bitu val,Bitu iolen);$/;"	t
t_ADCb	src/cpu/lazyflags.h	/^	t_ADCb,t_ADCw,t_ADCd,$/;"	e	enum:__anon108
t_ADCd	src/cpu/lazyflags.h	/^	t_ADCb,t_ADCw,t_ADCd,$/;"	e	enum:__anon108
t_ADCw	src/cpu/lazyflags.h	/^	t_ADCb,t_ADCw,t_ADCd,$/;"	e	enum:__anon108
t_ADDb	src/cpu/lazyflags.h	/^	t_ADDb,t_ADDw,t_ADDd, $/;"	e	enum:__anon108
t_ADDd	src/cpu/lazyflags.h	/^	t_ADDb,t_ADDw,t_ADDd, $/;"	e	enum:__anon108
t_ADDw	src/cpu/lazyflags.h	/^	t_ADDb,t_ADDw,t_ADDd, $/;"	e	enum:__anon108
t_ANDb	src/cpu/lazyflags.h	/^	t_ANDb,t_ANDw,t_ANDd,$/;"	e	enum:__anon108
t_ANDd	src/cpu/lazyflags.h	/^	t_ANDb,t_ANDw,t_ANDd,$/;"	e	enum:__anon108
t_ANDw	src/cpu/lazyflags.h	/^	t_ANDb,t_ANDw,t_ANDd,$/;"	e	enum:__anon108
t_CMPb	src/cpu/lazyflags.h	/^	t_CMPb,t_CMPw,t_CMPd,$/;"	e	enum:__anon108
t_CMPd	src/cpu/lazyflags.h	/^	t_CMPb,t_CMPw,t_CMPd,$/;"	e	enum:__anon108
t_CMPw	src/cpu/lazyflags.h	/^	t_CMPb,t_CMPw,t_CMPd,$/;"	e	enum:__anon108
t_DECb	src/cpu/lazyflags.h	/^	t_DECb,t_DECw,t_DECd,$/;"	e	enum:__anon108
t_DECd	src/cpu/lazyflags.h	/^	t_DECb,t_DECw,t_DECd,$/;"	e	enum:__anon108
t_DECw	src/cpu/lazyflags.h	/^	t_DECb,t_DECw,t_DECd,$/;"	e	enum:__anon108
t_DIV	src/cpu/lazyflags.h	/^	t_MUL,t_DIV,$/;"	e	enum:__anon108
t_DSHLd	src/cpu/lazyflags.h	/^	t_DSHLw,t_DSHLd,$/;"	e	enum:__anon108
t_DSHLw	src/cpu/lazyflags.h	/^	t_DSHLw,t_DSHLd,$/;"	e	enum:__anon108
t_DSHRd	src/cpu/lazyflags.h	/^	t_DSHRw,t_DSHRd,$/;"	e	enum:__anon108
t_DSHRw	src/cpu/lazyflags.h	/^	t_DSHRw,t_DSHRd,$/;"	e	enum:__anon108
t_INCb	src/cpu/lazyflags.h	/^	t_INCb,t_INCw,t_INCd,$/;"	e	enum:__anon108
t_INCd	src/cpu/lazyflags.h	/^	t_INCb,t_INCw,t_INCd,$/;"	e	enum:__anon108
t_INCw	src/cpu/lazyflags.h	/^	t_INCb,t_INCw,t_INCd,$/;"	e	enum:__anon108
t_LASTFLAG	src/cpu/lazyflags.h	/^	t_LASTFLAG$/;"	e	enum:__anon108
t_MUL	src/cpu/lazyflags.h	/^	t_MUL,t_DIV,$/;"	e	enum:__anon108
t_NEGb	src/cpu/lazyflags.h	/^	t_NEGb,t_NEGw,t_NEGd,$/;"	e	enum:__anon108
t_NEGd	src/cpu/lazyflags.h	/^	t_NEGb,t_NEGw,t_NEGd,$/;"	e	enum:__anon108
t_NEGw	src/cpu/lazyflags.h	/^	t_NEGb,t_NEGw,t_NEGd,$/;"	e	enum:__anon108
t_NOTDONE	src/cpu/lazyflags.h	/^	t_NOTDONE,$/;"	e	enum:__anon108
t_ORb	src/cpu/lazyflags.h	/^	t_ORb,t_ORw,t_ORd, $/;"	e	enum:__anon108
t_ORd	src/cpu/lazyflags.h	/^	t_ORb,t_ORw,t_ORd, $/;"	e	enum:__anon108
t_ORw	src/cpu/lazyflags.h	/^	t_ORb,t_ORw,t_ORd, $/;"	e	enum:__anon108
t_RCLb	src/cpu/lazyflags.h	/^	t_RCLb,t_RCLw,t_RCLd,$/;"	e	enum:__anon108
t_RCLd	src/cpu/lazyflags.h	/^	t_RCLb,t_RCLw,t_RCLd,$/;"	e	enum:__anon108
t_RCLw	src/cpu/lazyflags.h	/^	t_RCLb,t_RCLw,t_RCLd,$/;"	e	enum:__anon108
t_RCRb	src/cpu/lazyflags.h	/^	t_RCRb,t_RCRw,t_RCRd,$/;"	e	enum:__anon108
t_RCRd	src/cpu/lazyflags.h	/^	t_RCRb,t_RCRw,t_RCRd,$/;"	e	enum:__anon108
t_RCRw	src/cpu/lazyflags.h	/^	t_RCRb,t_RCRw,t_RCRd,$/;"	e	enum:__anon108
t_ROLb	src/cpu/lazyflags.h	/^	t_ROLb,t_ROLw,t_ROLd,$/;"	e	enum:__anon108
t_ROLd	src/cpu/lazyflags.h	/^	t_ROLb,t_ROLw,t_ROLd,$/;"	e	enum:__anon108
t_ROLw	src/cpu/lazyflags.h	/^	t_ROLb,t_ROLw,t_ROLd,$/;"	e	enum:__anon108
t_RORb	src/cpu/lazyflags.h	/^	t_RORb,t_RORw,t_RORd,$/;"	e	enum:__anon108
t_RORd	src/cpu/lazyflags.h	/^	t_RORb,t_RORw,t_RORd,$/;"	e	enum:__anon108
t_RORw	src/cpu/lazyflags.h	/^	t_RORb,t_RORw,t_RORd,$/;"	e	enum:__anon108
t_SARb	src/cpu/lazyflags.h	/^	t_SARb,t_SARw,t_SARd,$/;"	e	enum:__anon108
t_SARd	src/cpu/lazyflags.h	/^	t_SARb,t_SARw,t_SARd,$/;"	e	enum:__anon108
t_SARw	src/cpu/lazyflags.h	/^	t_SARb,t_SARw,t_SARd,$/;"	e	enum:__anon108
t_SBBb	src/cpu/lazyflags.h	/^	t_SBBb,t_SBBw,t_SBBd,$/;"	e	enum:__anon108
t_SBBd	src/cpu/lazyflags.h	/^	t_SBBb,t_SBBw,t_SBBd,$/;"	e	enum:__anon108
t_SBBw	src/cpu/lazyflags.h	/^	t_SBBb,t_SBBw,t_SBBd,$/;"	e	enum:__anon108
t_SHLb	src/cpu/lazyflags.h	/^	t_SHLb,t_SHLw,t_SHLd,$/;"	e	enum:__anon108
t_SHLd	src/cpu/lazyflags.h	/^	t_SHLb,t_SHLw,t_SHLd,$/;"	e	enum:__anon108
t_SHLw	src/cpu/lazyflags.h	/^	t_SHLb,t_SHLw,t_SHLd,$/;"	e	enum:__anon108
t_SHRb	src/cpu/lazyflags.h	/^	t_SHRb,t_SHRw,t_SHRd,$/;"	e	enum:__anon108
t_SHRd	src/cpu/lazyflags.h	/^	t_SHRb,t_SHRw,t_SHRd,$/;"	e	enum:__anon108
t_SHRw	src/cpu/lazyflags.h	/^	t_SHRb,t_SHRw,t_SHRd,$/;"	e	enum:__anon108
t_SUBb	src/cpu/lazyflags.h	/^	t_SUBb,t_SUBw,t_SUBd,$/;"	e	enum:__anon108
t_SUBd	src/cpu/lazyflags.h	/^	t_SUBb,t_SUBw,t_SUBd,$/;"	e	enum:__anon108
t_SUBw	src/cpu/lazyflags.h	/^	t_SUBb,t_SUBw,t_SUBd,$/;"	e	enum:__anon108
t_TESTb	src/cpu/lazyflags.h	/^	t_TESTb,t_TESTw,t_TESTd,$/;"	e	enum:__anon108
t_TESTd	src/cpu/lazyflags.h	/^	t_TESTb,t_TESTw,t_TESTd,$/;"	e	enum:__anon108
t_TESTw	src/cpu/lazyflags.h	/^	t_TESTb,t_TESTw,t_TESTd,$/;"	e	enum:__anon108
t_UNKNOWN	src/cpu/lazyflags.h	/^	t_UNKNOWN=0,$/;"	e	enum:__anon108
t_XORb	src/cpu/lazyflags.h	/^	t_XORb,t_XORw,t_XORd,$/;"	e	enum:__anon108
t_XORd	src/cpu/lazyflags.h	/^	t_XORb,t_XORw,t_XORd,$/;"	e	enum:__anon108
t_XORw	src/cpu/lazyflags.h	/^	t_XORb,t_XORw,t_XORd,$/;"	e	enum:__anon108
table_base	include/cpu.h	/^	PhysPt table_base;$/;"	m	class:DescriptorTable
table_limit	include/cpu.h	/^	Bitu table_limit;$/;"	m	class:DescriptorTable
tables	include/dos_inc.h	/^	} tables;$/;"	m	struct:DOS_Block	typeref:struct:DOS_Block::__anon15
tag_ASPI32BUFF	src/dos/wnaspi32.h	/^typedef struct tag_ASPI32BUFF                   \/\/ Offset$/;"	s
tags	include/fpu.h	/^	FPU_Tag		tags[9];$/;"	m	struct:__anon23
tan	src/misc/fixed.cpp	/^FixedPoint FixedPoint::tan(void)$/;"	f	class:FixedPoint
tandy	include/vga.h	/^	VGA_TANDY tandy;$/;"	m	struct:__anon59
tandy	src/hardware/tandy_sound.cpp	/^} tandy;$/;"	v	typeref:struct:__anon183	file:
tandy	src/hardware/vga_memory.cpp	/^	VGA_TANDY_PageHandler		tandy;$/;"	m	struct:vg	file:
tandy_DAC_callback	src/ints/bios.cpp	/^CALLBACK_HandlerObject* tandy_DAC_callback[2];$/;"	v
tandy_sb	src/ints/bios.cpp	/^} tandy_sb;$/;"	v	typeref:struct:__anon193	file:
tanx	src/misc/fixed.cpp	/^FixedPoint tanx(FixedPoint x)$/;"	f
target	src/dos/cdrom.h	/^	BYTE	target;$/;"	m	class:CDROM_Interface_Aspi
targetFrame	src/dos/cdrom.h	/^		int     targetFrame;$/;"	m	struct:CDROM_Interface_Image::imagePlayer
targetFrame	src/dos/cdrom.h	/^		int     targetFrame;$/;"	m	struct:CDROM_Interface_Ioctl::dxPlayer
tbscrollpos	src/gui/render_16.h	59;"	d
tbscrollpos	src/gui/render_32.h	59;"	d
tbscrollpos	src/gui/render_8.h	62;"	d
tbscrollpos	src/gui/render_9.h	62;"	d
tcount	include/dma.h	/^	bool tcount;$/;"	m	class:DmaChannel
tcpconn	src/hardware/ipxserver.cpp	/^UDPsocket tcpconn[SOCKETTABLESIZE];  \/\/ Active TCP\/IP connections$/;"	v
telClient	src/hardware/serialport/nullmodem.h	/^	} telClient;$/;"	m	class:CNullModem	typeref:struct:CNullModem::__anon180
telClient	src/hardware/serialport/softmodem.h	/^	} telClient;$/;"	m	class:CSerialModem	typeref:struct:CSerialModem::__anon181
telnet	src/hardware/serialport/nullmodem.h	/^	bool telnet;		\/\/ Do Telnet parsing.$/;"	m	class:CNullModem
telnetmode	src/hardware/serialport/softmodem.h	/^	bool telnetmode;		\/\/ true: process IAC commands.$/;"	m	class:CSerialModem
temp	src/cpu/core_dyn_x86.cpp	/^	FPU_P_Reg	temp,temp2;$/;"	m	struct:__anon96	file:
temp	src/cpu/paging.cpp	/^Bit8u *temp;$/;"	v
temp	src/hardware/vga_draw.cpp	/^static Bitu temp[643]={0};$/;"	v	file:
temp1	src/cpu/core_dynrec/risc_armv4le-o3.h	26;"	d
temp1	src/cpu/core_dynrec/risc_armv4le-s3.h	26;"	d
temp1	src/cpu/core_dynrec/risc_mipsel32.h	62;"	d
temp1	src/cpu/core_dynrec/save/risc_armv4le-o3.h	26;"	d
temp1	src/cpu/core_dynrec/save/risc_armv4le-s3.h	26;"	d
temp1	src/cpu/core_dynrec/save/risc_mipsel32.h	62;"	d
temp1_valid	src/cpu/core_dynrec/risc_mipsel32.h	/^static bool temp1_valid = false;$/;"	v
temp1_valid	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static bool temp1_valid = false;$/;"	v
temp1_value	src/cpu/core_dynrec/risc_mipsel32.h	/^static Bit32u temp1_value;$/;"	v
temp1_value	src/cpu/core_dynrec/save/risc_mipsel32.h	/^static Bit32u temp1_value;$/;"	v
temp2	src/cpu/core_dyn_x86.cpp	/^	FPU_P_Reg	temp,temp2;$/;"	m	struct:__anon96	file:
temp2	src/cpu/core_dynrec/risc_armv4le-o3.h	27;"	d
temp2	src/cpu/core_dynrec/risc_armv4le-s3.h	27;"	d
temp2	src/cpu/core_dynrec/risc_mipsel32.h	63;"	d
temp2	src/cpu/core_dynrec/save/risc_armv4le-o3.h	27;"	d
temp2	src/cpu/core_dynrec/save/risc_armv4le-s3.h	27;"	d
temp2	src/cpu/core_dynrec/save/risc_mipsel32.h	63;"	d
temp3	src/cpu/core_dynrec/risc_armv4le-o3.h	28;"	d
temp3	src/cpu/core_dynrec/risc_armv4le-s3.h	28;"	d
temp3	src/cpu/core_dynrec/save/risc_armv4le-o3.h	28;"	d
temp3	src/cpu/core_dynrec/save/risc_armv4le-s3.h	28;"	d
temp_line	include/programs.h	/^	std::string temp_line;$/;"	m	class:Program
temp_state	src/cpu/core_dyn_x86.cpp	/^	Bit8u		temp_state[128];$/;"	m	struct:__anon96	file:
tempdta	include/dos_inc.h	/^		RealPt tempdta;$/;"	m	struct:DOS_Block::__anon15
tempdta_fcbdelete	include/dos_inc.h	/^		RealPt tempdta_fcbdelete;$/;"	m	struct:DOS_Block::__anon15
temphi1	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	33;"	d
temphi1	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	33;"	d
temphi1	src/cpu/core_dynrec/risc_armv4le-thumb.h	33;"	d
temphi1	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	33;"	d
temphi1	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	33;"	d
temphi1	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	33;"	d
templo1	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	26;"	d
templo1	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	26;"	d
templo1	src/cpu/core_dynrec/risc_armv4le-thumb.h	26;"	d
templo1	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	26;"	d
templo1	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	26;"	d
templo1	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	26;"	d
templo2	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	27;"	d
templo2	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	27;"	d
templo2	src/cpu/core_dynrec/risc_armv4le-thumb.h	27;"	d
templo2	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	27;"	d
templo2	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	27;"	d
templo2	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	27;"	d
templosav	src/cpu/core_dynrec/risc_armv4le-thumb-iw.h	30;"	d
templosav	src/cpu/core_dynrec/risc_armv4le-thumb-niw.h	30;"	d
templosav	src/cpu/core_dynrec/risc_armv4le-thumb.h	30;"	d
templosav	src/cpu/core_dynrec/save/risc_armv4le-thumb-iw.h	30;"	d
templosav	src/cpu/core_dynrec/save/risc_armv4le-thumb-niw.h	30;"	d
templosav	src/cpu/core_dynrec/save/risc_armv4le-thumb.h	30;"	d
termInfo	src/hardware/serialport/directserial_posix.h	/^	termios termInfo;$/;"	m	class:CDirectSerial
test	src/cpu/cpu.cpp	/^static CPU * test;$/;"	v	file:
test	src/cpu/paging.cpp	/^static PAGING* test;$/;"	v	file:
test	src/dos/dos.cpp	/^static DOS* test;$/;"	v	file:
test	src/dos/dos_keyboard_layout.cpp	/^static DOS_KeyboardLayout* test;$/;"	v	file:
test	src/hardware/adlib.cpp	/^static OPL* test;$/;"	v	file:
test	src/hardware/cmos.cpp	/^static CMOS* test;$/;"	v	file:
test	src/hardware/disney.cpp	/^static DISNEY* test;$/;"	v	file:
test	src/hardware/dma.cpp	/^static DMA* test;$/;"	v	file:
test	src/hardware/gameblaster.cpp	/^static CMS* test;$/;"	v	file:
test	src/hardware/hardware.cpp	/^static HARDWARE* test;$/;"	v	file:
test	src/hardware/iohandler.cpp	/^static IO* test;$/;"	v	file:
test	src/hardware/ipx.cpp	/^static IPX* test;$/;"	v	file:
test	src/hardware/joystick.cpp	/^static JOYSTICK* test;$/;"	v	file:
test	src/hardware/memory.cpp	/^static MEMORY* test;	$/;"	v	file:
test	src/hardware/pcspeaker.cpp	/^static PCSPEAKER* test;$/;"	v	file:
test	src/hardware/pic.cpp	/^static PIC* test;$/;"	v	file:
test	src/hardware/sblaster.cpp	/^static SBLASTER* test;$/;"	v	file:
test	src/hardware/tandy_sound.cpp	/^static TANDYSOUND* test;$/;"	v	file:
test	src/hardware/timer.cpp	/^static TIMER* test;$/;"	v	file:
test	src/ints/bios.cpp	/^static BIOS* test;$/;"	v	file:
test	src/ints/ems.cpp	/^static EMS* test;$/;"	v	file:
test	src/ints/xms.cpp	/^static XMS* test;$/;"	v	file:
test	src/shell/shell.cpp	/^static AUTOEXEC* test;$/;"	v	file:
testSerialPortsBaseclass	src/hardware/serialport/serialport.cpp	/^static SERIALPORTS *testSerialPortsBaseclass;$/;"	m	class:SERIALPORTS	file:
test_register	src/hardware/sblaster.cpp	/^		Bit8u test_register;$/;"	m	struct:SB_INFO::__anon173	file:
testmem	src/cpu/test.cpp	/^__volatile__ void testmem()$/;"	f
text	src/gui/sdl_mapper.cpp	/^	const char * text;$/;"	m	class:CTextButton	file:
text	src/hardware/vga_memory.cpp	/^	VGA_TEXT_PageHandler		text;$/;"	m	struct:vg	file:
text	src/libs/gui_tk/gui_tk.h	/^	String text;$/;"	m	class:GUI::Input
text	src/libs/gui_tk/gui_tk.h	/^	String text;$/;"	m	class:GUI::Label
textAndMask	src/ints/mouse.cpp	/^	Bit16u  textAndMask, textXorMask;$/;"	m	struct:__anon199	file:
textXorMask	src/ints/mouse.cpp	/^	Bit16u  textAndMask, textXorMask;$/;"	m	struct:__anon199	file:
text_palette	src/ints/int10_modes.cpp	/^static Bit8u text_palette[64][3]=$/;"	v	file:
the_Fetchb	src/cpu/core_full/loadwrite.h	/^static INLINE Bit8u the_Fetchb(EAPoint & loc) {$/;"	f
the_Fetchd	src/cpu/core_full/loadwrite.h	/^static INLINE Bit32u the_Fetchd(EAPoint & loc) {$/;"	f
the_Fetchw	src/cpu/core_full/loadwrite.h	/^static INLINE Bit16u the_Fetchw(EAPoint & loc) {$/;"	f
theight	src/ints/int10.h	/^	Bitu	twidth, theight;$/;"	m	struct:VideoModeBlock
tick_add	src/hardware/mixer.cpp	/^	Bit32u tick_add,tick_remain;$/;"	m	struct:__anon165	file:
tick_remain	src/hardware/mixer.cpp	/^	Bit32u tick_add,tick_remain;$/;"	m	struct:__anon165	file:
ticks	src/libs/gui_tk/gui_tk.h	/^	static Ticks ticks;$/;"	m	class:GUI::Timer
ticksAdded	src/dosbox.cpp	/^static Bit32u ticksAdded;$/;"	v	file:
ticksDone	src/dosbox.cpp	/^Bit32s ticksDone;$/;"	v
ticksLast	src/dosbox.cpp	/^static Bit32u ticksLast;$/;"	v	file:
ticksLocked	src/dosbox.cpp	/^bool ticksLocked;$/;"	v
ticksRemain	src/dosbox.cpp	/^static Bit32u ticksRemain;$/;"	v	file:
ticksScheduled	src/dosbox.cpp	/^Bit32u ticksScheduled;$/;"	v
time	include/dos_inc.h	/^		Bit16u time;$/;"	m	struct:DOS_DTA::sDTA
time	include/dos_inc.h	/^		Bit16u time;$/;"	m	struct:DOS_FCB::sFCB
time	include/dos_system.h	/^	Bit16u time;$/;"	m	class:DOS_File
time	include/dos_system.h	/^	Bit16u time;$/;"	m	struct:FileStat_Block
time	src/dos/drive_virtual.cpp	/^	Bit16u time;$/;"	m	struct:VFILE_Block	file:
timeHour	src/dos/drives.h	/^	Bit8u timeHour;$/;"	m	struct:isoDirEntry
timeMin	src/dos/drives.h	/^	Bit8u timeMin;$/;"	m	struct:isoDirEntry
timeSec	src/dos/drives.h	/^	Bit8u timeSec;$/;"	m	struct:isoDirEntry
timeZone	src/dos/drives.h	/^	Bit8u timeZone;$/;"	m	struct:isoDirEntry
time_constant	src/hardware/sblaster.cpp	/^	Bit8u time_constant;$/;"	m	struct:SB_INFO	file:
timer	src/hardware/adlib.h	/^	Timer timer[2];$/;"	m	struct:Adlib::Chip
timer	src/hardware/cmos.cpp	/^		double timer;$/;"	m	struct:__anon149::__anon151	file:
timer	src/hardware/cmos.cpp	/^	} timer;$/;"	m	struct:__anon149	typeref:struct:__anon149::__anon150	file:
timerExpired	src/libs/gui_tk/gui_tk.cpp	/^		virtual unsigned int timerExpired(unsigned int t) {$/;"	f	struct:GUI::movewin
timerExpired	src/libs/gui_tk/gui_tk.h	/^	virtual Ticks timerExpired(Ticks time)$/;"	f	class:GUI::Input
timers	src/libs/gui_tk/gui_tk.h	/^	static std::multimap<Ticks,Timer_Callback*,ltuint> timers;$/;"	m	class:GUI::Timer
times_pressed	src/ints/mouse.cpp	/^	Bit16u times_pressed[MOUSE_BUTTONS];$/;"	m	struct:__anon199	file:
times_released	src/ints/mouse.cpp	/^	Bit16u times_released[MOUSE_BUTTONS];$/;"	m	struct:__anon199	file:
timingMark	src/hardware/serialport/nullmodem.h	/^		bool timingMark[2];$/;"	m	struct:CNullModem::__anon180
timingMark	src/hardware/serialport/softmodem.h	/^		bool timingMark[2];$/;"	m	struct:CSerialModem::__anon181
title	src/gui/sdl_mapper.cpp	/^	const char * title;$/;"	m	struct:KeyBlock	file:
title	src/libs/gui_tk/gui_tk.h	/^	String title;$/;"	m	class:GUI::ToplevelWindow
tl_tab	src/hardware/fmopl.cpp	/^static signed int tl_tab[TL_TAB_LEN];$/;"	v	file:
tl_tab	src/hardware/ymf262.cpp	/^static signed int tl_tab[TL_TAB_LEN];$/;"	v	file:
tlb	include/paging.h	/^	} tlb;$/;"	m	struct:PagingBlock	typeref:struct:PagingBlock::__anon26
tlb_entry	include/paging.h	/^} tlb_entry;$/;"	t	typeref:struct:__anon24
tlbh	include/paging.h	/^	tlb_entry tlbh[TLB_SIZE];$/;"	m	struct:PagingBlock
tlbh_banks	include/paging.h	/^	tlb_entry *tlbh_banks[TLB_BANKS];$/;"	m	struct:PagingBlock
tmpb	src/cpu/core_dyn_x86.cpp	/^	Bitu ea,tmpb,tmpd,stack,shift,newesp;$/;"	m	struct:__anon94	file:
tmpbuf	src/hardware/serialport/softmodem.h	/^	Bit8u tmpbuf[MODEM_BUFFER_QUEUE_SIZE];$/;"	m	class:CSerialModem
tmpd	src/cpu/core_dyn_x86.cpp	/^	Bitu ea,tmpb,tmpd,stack,shift,newesp;$/;"	m	struct:__anon94	file:
to	src/cpu/core_dyn_x86/cache.h	/^		CacheBlock * to;$/;"	m	struct:CacheBlock::__anon86
to	src/cpu/core_dynrec/cache.h	/^		CacheBlockDynRec * to;		\/\/ this block can transfer control to the to-block$/;"	m	struct:CacheBlockDynRec::__anon65
to	src/cpu/core_dynrec/save/cache.h	/^		CacheBlockDynRec * to;		\/\/ this block can transfer control to the to-block$/;"	m	struct:CacheBlockDynRec::__anon75
toSpecial	src/libs/gui_tk/gui_tk.h	/^	virtual SpecialChar toSpecial(Char c) const { return (SpecialChar)(c<255?c:255); }$/;"	f	class:GUI::Font
toSpecial	src/libs/gui_tk/gui_tk.h	/^	virtual SpecialChar toSpecial(Char c) const { return (special != NULL?special[c]:Font::toSpecial(c)); }$/;"	f	class:GUI::BitmapFont
toolb	src/gui/render_16.h	62;"	d
toolb	src/gui/render_32.h	62;"	d
toolb	src/gui/render_8.h	65;"	d
toolb	src/gui/render_9.h	65;"	d
toolbar	src/gui/sdlmain.h	/^	} toolbar;$/;"	m	struct:SDL_Block	typeref:struct:SDL_Block::__anon141
toolbarstart	src/gui/sdlmain.h	/^		Bit32u toolbarstart;$/;"	m	struct:SDL_Block::__anon137
top	include/fpu.h	/^	Bitu		top;$/;"	m	struct:__anon23
total	src/hardware/sblaster.cpp	/^		Bitu total,left,min;$/;"	m	struct:SB_INFO::__anon170	file:
total_clusters	src/dos/drives.h	/^		Bit16u total_clusters;$/;"	m	struct:fatDrive::__anon120
total_clusters	src/dos/drives.h	/^		Bit16u total_clusters;$/;"	m	struct:localDrive::__anon117
totalsecdword	src/dos/drives.h	/^	Bit32u totalsecdword;$/;"	m	struct:bootstrap
totalsectorcount	src/dos/drives.h	/^	Bit16u totalsectorcount;$/;"	m	struct:bootstrap
tpad	src/gui/sdlmain.h	/^	} tpad;$/;"	m	struct:SDL_Block	typeref:struct:SDL_Block::__anon140
tqueue	src/hardware/serialport/softmodem.h	/^	CFifo *tqueue;$/;"	m	class:CSerialModem
track_it	src/dos/cdrom.h	/^typedef	std::vector<Track>::iterator	track_it;$/;"	t	class:CDROM_Interface_Image
track_start	src/dos/cdrom.h	/^	int		track_start[128];$/;"	m	class:CDROM_Interface_Ioctl
track_start_first	src/dos/cdrom.h	/^	int		track_start_first,track_start_last;$/;"	m	class:CDROM_Interface_Ioctl
track_start_last	src/dos/cdrom.h	/^	int		track_start_first,track_start_last;$/;"	m	class:CDROM_Interface_Ioctl
track_start_valid	src/dos/cdrom.h	/^	bool	track_start_valid;$/;"	m	class:CDROM_Interface_Ioctl
tracks	src/dos/cdrom.h	/^	std::vector<Track>	tracks;$/;"	m	class:CDROM_Interface_Image
tracks	src/dos/wnaspi32.h	/^ TOC_TRACK      tracks[100];$/;"	m	struct:__anon133
transControl	include/ipx.h	/^	Uint8 transControl; \/\/ Transport control$/;"	m	struct:IPXHeader
transmitByte	src/hardware/serialport/directserial_os2.cpp	/^void CDirectSerial::transmitByte (Bit8u val, bool first) {$/;"	f	class:CDirectSerial
transmitByte	src/hardware/serialport/directserial_posix.cpp	/^void CDirectSerial::transmitByte (Bit8u val, bool first) {$/;"	f	class:CDirectSerial
transmitByte	src/hardware/serialport/directserial_win32.cpp	/^void CDirectSerial::transmitByte (Bit8u val, bool first) {$/;"	f	class:CDirectSerial
transmitByte	src/hardware/serialport/nullmodem.cpp	/^void CNullModem::transmitByte (Bit8u val, bool first) {$/;"	f	class:CNullModem
transmitByte	src/hardware/serialport/serialdummy.cpp	/^void CSerialDummy::transmitByte(Bit8u val, bool first) {$/;"	f	class:CSerialDummy
transmitByte	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::transmitByte(Bit8u val, bool first) {$/;"	f	class:CSerialModem
transparent	src/gui/sdlmain.h	/^		   bool transparent;$/;"	m	struct:SDL_Block::__anon141
transparent	src/hardware/serialport/nullmodem.h	/^	bool transparent;	\/\/ if true, don't send 0xff 0xXX to toggle$/;"	m	class:CNullModem
transport	include/ipx.h	/^	struct transport {$/;"	s	struct:IPXHeader
trantype	include/dma.h	/^	Bit8u trantype;$/;"	m	class:DmaChannel
trap	src/cpu/core_verysimple.cpp	/^	} trap;$/;"	m	struct:__anon106	typeref:struct:__anon106::__anon107	file:
trap_skip	include/cpu.h	/^	bool trap_skip;$/;"	m	struct:CPUBlock
trim	src/misc/setup.cpp	/^void trim(string& in) {$/;"	f
trim	src/misc/support.cxx	/^char *trim(char *str) {$/;"	f
trimString	src/dos/drive_fat.cpp	/^char* trimString(char* str) {$/;"	f
true	src/cpu/core_normal/prefix_none.h	/^		DO_PREFIX_REP(true);	$/;"	v
true	src/cpu/core_normal/verysimple_prefix_none.h	/^		DO_PREFIX_REP(true);	$/;"	v
truename_flag	include/dos_inc.h	/^		Bit8u truename_flag;$/;"	m	struct:DOS_PSP::sPSP
trx	include/cpu.h	/^	Bit32u trx[8];$/;"	m	struct:CPUBlock
twidth	src/ints/int10.h	/^	Bitu	twidth, theight;$/;"	m	struct:VideoModeBlock
tx	src/libs/gui_tk/gui_tk.h	/^	const int tx;$/;"	m	class:GUI::Drawable
tx_block	src/hardware/serialport/nullmodem.h	/^	bool tx_block;		\/\/ true while the SERIAL_TX_REDUCTION event$/;"	m	class:CNullModem
tx_gather	src/hardware/serialport/nullmodem.h	/^	Bitu tx_gather;		\/\/ how long to gather tx data before$/;"	m	class:CNullModem
ty	src/libs/gui_tk/gui_tk.h	/^	const int ty;$/;"	m	class:GUI::Drawable
type	include/cpu.h	/^	Bit32u type			:5;$/;"	m	struct:G_Descriptor
type	include/cpu.h	/^	Bit32u type			:5;$/;"	m	struct:S_Descriptor
type	include/dos_inc.h	/^		Bit8u type;$/;"	m	struct:DOS_MCB::sMCB
type	include/setup.h	/^	enum Etype { V_NONE, V_HEX, V_BOOL, V_INT, V_STRING, V_DOUBLE,V_CURRENT} type;$/;"	m	class:Value	typeref:enum:Value::Etype
type	src/cpu/core_dyn_x86/decoder.h	/^	save_info_type type;$/;"	m	struct:__anon91
type	src/cpu/core_dynrec/decoder_basic.h	/^	save_info_type type;$/;"	m	struct:__anon70
type	src/cpu/core_dynrec/save/decoder_basic.h	/^	save_info_type type;$/;"	m	struct:__anon80
type	src/cpu/lazyflags.h	/^	Bitu type;$/;"	m	struct:LazyFlags
type	src/debug/debug.cpp	/^	EBreakpoint	type;$/;"	m	class:CBreakpoint	file:
type	src/dos/drives.h	/^	Bit8u type;$/;"	m	struct:isoPVD
type	src/gui/sdl_mapper.cpp	/^	BB_Types type;$/;"	m	class:CBindButton	file:
type	src/gui/sdl_mapper.cpp	/^	BC_Types type;$/;"	m	class:CCheckButton	file:
type	src/hardware/fmopl.cpp	/^	UINT8 type;						\/* chip type					*\/$/;"	m	struct:fm_opl_f	file:
type	src/hardware/sblaster.cpp	/^	SB_TYPES type;$/;"	m	struct:SB_INFO	file:
type	src/hardware/ymf262.cpp	/^	UINT8 type;						\/* chip type					*\/$/;"	m	struct:__anon192	file:
type	src/ints/int10.h	/^	VGAModes	type;$/;"	m	struct:VideoModeBlock
type	src/ints/mouse.cpp	/^	Bit8u type;$/;"	m	struct:button_event	file:
tzx1	src/gui/sdlmain.h	/^		Bit32u tzx1;$/;"	m	struct:SDL_Block::__anon137
tzx2	src/gui/sdlmain.h	/^		Bit32u tzx2;$/;"	m	struct:SDL_Block::__anon137
tzy1	src/gui/sdlmain.h	/^		Bit32u tzy1;$/;"	m	struct:SDL_Block::__anon137
tzy2	src/gui/sdlmain.h	/^		Bit32u tzy2;$/;"	m	struct:SDL_Block::__anon137
ua_str	src/debug/debug_disasm.cpp	/^static void ua_str(char const *str)$/;"	f	file:
ubufp	src/debug/debug_disasm.cpp	/^static char* ubufp;           \/* last position of buffer *\/$/;"	v	file:
ubufs	src/debug/debug_disasm.cpp	/^static char* ubufs;           \/* start of buffer *\/$/;"	v	file:
udpPort	src/hardware/ipx.cpp	/^Bit32u udpPort;$/;"	v
uega	src/hardware/vga_memory.cpp	/^	VGA_UnchainedEGA_Handler	uega;$/;"	m	struct:vg	file:
uint16_t	src/libs/gui_tk/gui_tk.h	/^typedef unsigned __int16 uint16_t;$/;"	t
uint32_t	src/libs/gui_tk/gui_tk.h	/^typedef unsigned __int32 uint32_t;$/;"	t
uint8_t	src/libs/gui_tk/gui_tk.h	/^typedef unsigned __int8  uint8_t;$/;"	t
umb_available	src/ints/xms.cpp	/^static bool umb_available;$/;"	v	file:
underline_location	include/vga.h	/^	Bit8u underline_location;$/;"	m	struct:__anon50
unhandled	src/hardware/sblaster.cpp	/^		Bit8u unhandled[0x48];$/;"	m	struct:SB_INFO::__anon176	file:
unknown1	include/dos_inc.h	/^		Bit8u	unknown1[4];$/;"	m	struct:DOS_InfoBlock::sDIB
unknown2	include/dos_inc.h	/^		Bit8u	unknown2[8];$/;"	m	struct:DOS_InfoBlock::sDIB
unknown3	include/dos_inc.h	/^		Bit8u	unknown3[11];			\/\/  0x58$/;"	m	struct:DOS_InfoBlock::sDIB
unused	include/dos_inc.h	/^		Bit8u unused[3];$/;"	m	struct:DOS_MCB::sMCB
unused	include/render.h	/^		Bit8u unused;$/;"	m	struct:__anon30::__anon31
unused	include/video.h	/^	Bit8u unused;$/;"	m	struct:GFX_PalEntry
unused1	src/dos/drives.h	/^	Bit8u unused1;$/;"	m	struct:isoPVD
unused2	src/dos/drives.h	/^	Bit8u unused2[8];$/;"	m	struct:isoPVD
unused3	src/dos/drives.h	/^	Bit8u unused3[32];$/;"	m	struct:isoPVD
unused4	src/dos/drives.h	/^	Bit32u unused4[1858];$/;"	m	struct:isoPVD
upcase	include/support.h	/^INLINE char * upcase(char * str) {$/;"	f
upcase	src/misc/support.cxx	/^char * upcase(char * str) {$/;"	f
upcase	src/misc/support.cxx	/^void upcase(std::string &str) {$/;"	f
updateDPT	src/ints/bios_disk.cpp	/^void updateDPT(void) {$/;"	f
updateMSR	src/hardware/serialport/directserial_os2.cpp	/^void CDirectSerial::updateMSR () {$/;"	f	class:CDirectSerial
updateMSR	src/hardware/serialport/directserial_posix.cpp	/^void CDirectSerial::updateMSR () {$/;"	f	class:CDirectSerial
updateMSR	src/hardware/serialport/directserial_win32.cpp	/^void CDirectSerial::updateMSR () {$/;"	f	class:CDirectSerial
updateMSR	src/hardware/serialport/nullmodem.cpp	/^void CNullModem::updateMSR () {$/;"	f	class:CNullModem
updateMSR	src/hardware/serialport/serialdummy.cpp	/^void CSerialDummy::updateMSR() {$/;"	f	class:CSerialDummy
updateMSR	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::updateMSR() {$/;"	f	class:CSerialModem
updatePortConfig	src/hardware/serialport/directserial_os2.cpp	/^void CDirectSerial::updatePortConfig (Bit16u divider, Bit8u lcr) {$/;"	f	class:CDirectSerial
updatePortConfig	src/hardware/serialport/directserial_posix.cpp	/^void CDirectSerial::updatePortConfig (Bit16u divider, Bit8u lcr) {$/;"	f	class:CDirectSerial
updatePortConfig	src/hardware/serialport/directserial_win32.cpp	/^void CDirectSerial::updatePortConfig (Bit16u divider, Bit8u lcr) {$/;"	f	class:CDirectSerial
updatePortConfig	src/hardware/serialport/nullmodem.cpp	/^void CNullModem::updatePortConfig (Bit16u \/*divider*\/, Bit8u \/*lcr*\/) {$/;"	f	class:CNullModem
updatePortConfig	src/hardware/serialport/serialdummy.cpp	/^void CSerialDummy::updatePortConfig(Bit16u divider, Bit8u lcr) {$/;"	f	class:CSerialDummy
updatePortConfig	src/hardware/serialport/softmodem.cpp	/^void CSerialModem::updatePortConfig(Bit16u, Bit8u lcr) { $/;"	f	class:CSerialModem
updateRegion_x	src/ints/mouse.cpp	/^	Bit16u  updateRegion_x[2];$/;"	m	struct:__anon199	file:
updateRegion_y	src/ints/mouse.cpp	/^	Bit16u  updateRegion_y[2];$/;"	m	struct:__anon199	file:
update_cga16_color	src/hardware/vga_other.cpp	/^static void update_cga16_color(void) {$/;"	f	file:
update_channels	src/hardware/ymf262.cpp	/^static void update_channels(OPL3 *chip, OPL3_CH *CH)$/;"	f	file:
update_ended	src/hardware/cmos.cpp	/^	bool update_ended;$/;"	m	struct:__anon149	file:
updatelabel	include/dos_system.h	/^	bool		updatelabel;$/;"	m	class:DOS_Drive_Cache
updating	include/render.h	/^	bool updating;$/;"	m	struct:__anon32
updating	src/gui/sdlmain.h	/^	bool updating;$/;"	m	struct:SDL_Block
upper	include/fpu.h	/^        Bit32s upper;$/;"	m	struct:__anon19::__anon20
upper	include/fpu.h	/^        Bit32s upper;$/;"	m	struct:__anon19::__anon21
uprintf	src/debug/debug_disasm.cpp	/^static void uprintf(char const *s, ...)$/;"	f	file:
uputchar	src/debug/debug_disasm.cpp	/^static void uputchar(char c)$/;"	f	file:
us	include/paging.h	/^	Bit32u		us:1;$/;"	m	struct:X86_PageEntryBlock
usTocDataLen	src/dos/wnaspi32.h	/^ unsigned short usTocDataLen;$/;"	m	struct:__anon133
useCS	src/debug/debug.cpp	/^	Bit16u	useCS;$/;"	m	struct:SCodeViewData	file:
useCdromInterface	src/dos/dos_mscdex.cpp	/^int useCdromInterface	= CDROM_USE_SDL;$/;"	v
useDwordMov	include/dos_inc.h	/^		Bit8u	useDwordMov;		\/\/  0x44 use dword moves$/;"	m	struct:DOS_InfoBlock::sDIB
useEIP	src/debug/debug.cpp	/^	Bit32u	useEIP;$/;"	m	struct:SCodeViewData	file:
useEIPlast	src/debug/debug.cpp	/^	Bit32u	useEIPlast, useEIPmid;$/;"	m	struct:SCodeViewData	file:
useEIPmid	src/debug/debug.cpp	/^	Bit32u	useEIPlast, useEIPmid;$/;"	m	struct:SCodeViewData	file:
use_dxplay	src/dos/cdrom.h	/^	bool	use_dxplay;$/;"	m	class:CDROM_Interface_Ioctl
use_foreign_layout	src/dos/dos_keyboard_layout.cpp	/^	bool use_foreign_layout;$/;"	m	class:keyboard_layout	file:
use_mciplay	src/dos/cdrom.h	/^	bool	use_mciplay;$/;"	m	class:CDROM_Interface_Ioctl
used	include/paging.h	/^		Bitu used;$/;"	m	struct:PagingBlock::__anon27
used	src/cpu/paging.cpp	/^	Bitu used;$/;"	m	struct:__anon109	file:
used	src/hardware/disney.cpp	/^	Bitu used;					\/\/ current data buffer level$/;"	m	struct:_dac_channel	file:
used	src/hardware/hardware.cpp	/^		Bitu used,done;$/;"	m	struct:__anon155::__anon157	file:
used	src/hardware/hardware.cpp	/^		Bitu used;$/;"	m	struct:__anon155::__anon156	file:
used	src/hardware/iohandler.cpp	/^	Bitu used;$/;"	m	struct:__anon160	file:
used	src/hardware/keyboard.cpp	/^	Bitu used;$/;"	m	struct:__anon161	file:
used	src/hardware/memory.cpp	/^	Bitu used;$/;"	m	struct:LinkBlock	file:
used	src/hardware/pcspeaker.cpp	/^	Bitu used;$/;"	m	struct:__anon166	file:
used	src/hardware/sblaster.cpp	/^			Bitu pos,used;$/;"	m	struct:SB_INFO::__anon173::__anon174	file:
used	src/hardware/sblaster.cpp	/^		Bitu used;$/;"	m	struct:SB_INFO::__anon175	file:
used	src/hardware/serialport/softmodem.h	/^	Bitu size,pos,used;$/;"	m	class:CFifo
used	src/ints/int10.h	/^		Bitu used;$/;"	m	struct:__anon196::__anon197
used_lock_modifiers	src/dos/dos_keyboard_layout.cpp	/^	Bit8u additional_planes,used_lock_modifiers;$/;"	m	class:keyboard_layout	file:
used_pages	src/cpu/core_dyn_x86/cache.h	/^	CodePageHandler * used_pages;$/;"	m	struct:__anon87
used_pages	src/cpu/core_dynrec/cache.h	/^	CodePageHandlerDynRec * used_pages;		\/\/ pointer to the list of used pages$/;"	m	struct:__anon66
used_pages	src/cpu/core_dynrec/save/cache.h	/^	CodePageHandlerDynRec * used_pages;		\/\/ pointer to the list of used pages$/;"	m	struct:__anon76
used_save_info	src/cpu/core_dyn_x86/decoder.h	/^Bitu used_save_info=0;$/;"	v
used_save_info_dynrec	src/cpu/core_dynrec/decoder_basic.h	/^Bitu used_save_info_dynrec=0;$/;"	v
used_save_info_dynrec	src/cpu/core_dynrec/save/decoder_basic.h	/^Bitu used_save_info_dynrec=0;$/;"	v
useps2callback	src/ints/mouse.cpp	/^static bool useps2callback,ps2callbackinit;$/;"	v	file:
user_keys	src/dos/dos_keyboard_layout.cpp	/^	Bit16u user_keys;$/;"	m	class:keyboard_layout	file:
userdefCursorMask	src/ints/mouse.cpp	/^static Bit16u userdefCursorMask[CURSORY];$/;"	v	file:
userdefScreenMask	src/ints/mouse.cpp	/^static Bit16u userdefScreenMask[CURSORY];$/;"	v	file:
usescancodes	src/gui/sdl_mapper.cpp	/^static bool usescancodes;$/;"	v	file:
usesmotion	src/ints/mouse.cpp	/^static bool usesmotion=0;$/;"	v	file:
using_windib	src/gui/sdlmain.h	/^	bool using_windib;$/;"	m	struct:SDL_Block
uvga	src/hardware/vga_memory.cpp	/^	VGA_UnchainedVGA_Handler	uvga;$/;"	m	struct:vg	file:
vadjust	include/vga.h	/^	Bit8u vadjust;$/;"	m	struct:__anon46
val	include/regs.h	/^	Bit16u val;$/;"	m	struct:Segment
val	include/regs.h	/^	Bitu val[8];$/;"	m	struct:Segments
val	src/cpu/core_dyn_x86/decoder.h	/^		Bitu val;$/;"	m	struct:DynDecode::__anon90
val	src/cpu/core_dynrec/decoder_basic.h	/^		Bitu val;$/;"	m	struct:DynDecode::__anon69
val	src/cpu/core_dynrec/save/decoder_basic.h	/^		Bitu val;$/;"	m	struct:DynDecode::__anon79
val	src/misc/messages.cpp	/^	string val;$/;"	m	struct:MessageBlock	file:
valid	src/cpu/cpu.cpp	/^	bool valid;$/;"	m	class:TaskStateSegment	file:
valid	src/dos/drives.h	/^		bool valid;$/;"	m	struct:isoDrive::DirIterator
valid	src/dos/drives.h	/^		bool valid;$/;"	m	struct:isoDrive::SectorHashEntry
value	include/setup.h	/^	Value value;$/;"	m	class:Property
value	src/gui/sdl_mapper.cpp	/^	Bit16s value;$/;"	m	class:CBind	file:
value	src/hardware/pic.cpp	/^	Bitu value;$/;"	m	struct:PICEntry	file:
value	src/hardware/sblaster.cpp	/^		Bits value;$/;"	m	struct:SB_INFO::__anon179	file:
var1	src/cpu/lazyflags.h	/^    GenReg32 var1,var2,res;$/;"	m	struct:LazyFlags
var2	src/cpu/lazyflags.h	/^    GenReg32 var1,var2,res;$/;"	m	struct:LazyFlags
varList	src/debug/debug.cpp	/^	static std::list<CDebugVar*>	varList;$/;"	m	class:CDebugVar	file:
varList	src/debug/debug.cpp	/^std::list<CDebugVar*> CDebugVar::varList;$/;"	m	class:CDebugVar	file:
var_write	include/mem.h	/^INLINE void var_write(Bit16u * var, Bit16u val) {$/;"	f
var_write	include/mem.h	/^INLINE void var_write(Bit32u * var, Bit32u val) {$/;"	f
var_write	include/mem.h	/^INLINE void var_write(Bit8u * var, Bit8u val) {$/;"	f
vblkend	include/vga.h	/^		double vblkstart, vblkend;	\/\/ V-Blanking$/;"	m	struct:__anon38::__anon39
vblkstart	include/vga.h	/^		double vblkstart, vblkend;	\/\/ V-Blanking$/;"	m	struct:__anon38::__anon39
vcpi	src/ints/ems.cpp	/^} vcpi ;$/;"	v	typeref:struct:__anon195	file:
vdend	include/vga.h	/^		double vdend, vtotal;$/;"	m	struct:__anon38::__anon39
vdend	include/vga.h	/^	Bit8u vdend;$/;"	m	struct:__anon46
vdispend	src/ints/int10.h	/^	Bitu	hdispend,vdispend;$/;"	m	struct:VideoModeBlock
vector	src/hardware/pic.cpp	/^	Bitu vector;$/;"	m	struct:IRQ_Block	file:
vector_base	src/hardware/pic.cpp	/^	Bit8u vector_base;$/;"	m	struct:PIC_Controller	file:
vectorhandler	include/callback.h	/^	} vectorhandler;$/;"	m	class:CALLBACK_HandlerObject	typeref:struct:CALLBACK_HandlerObject::__anon4
ver_overflow	include/vga.h	/^	Bit8u ver_overflow;$/;"	m	struct:__anon60
verify	include/dos_inc.h	/^	bool verify;$/;"	m	struct:DOS_Block
version	include/dos_inc.h	/^	DOS_Version version;$/;"	m	struct:DOS_Block
version	src/dos/drives.h	/^	Bit8u version;$/;"	m	struct:isoPVD
vertical_display_end	include/vga.h	/^	Bit8u vertical_display_end;$/;"	m	struct:__anon50
vertical_retrace_end	include/vga.h	/^	Bit8u vertical_retrace_end;$/;"	m	struct:__anon50
vertical_retrace_start	include/vga.h	/^	Bit8u vertical_retrace_start;$/;"	m	struct:__anon50
vertical_total	include/vga.h	/^	Bit8u vertical_total;$/;"	m	struct:__anon50
vesa_modes	src/ints/int10.h	/^		RealPt vesa_modes;$/;"	m	struct:__anon196::__anon197
vesa_nolfb	src/ints/int10.h	/^	bool vesa_nolfb;$/;"	m	struct:__anon196
vesa_oldvbe	src/ints/int10.h	/^	bool vesa_oldvbe;$/;"	m	struct:__anon196
vesa_setmode	src/ints/int10.h	/^	Bitu vesa_setmode;$/;"	m	struct:__anon196
vg	src/hardware/vga_memory.cpp	/^static struct vg {$/;"	s	file:
vga	src/hardware/vga.cpp	/^VGA_Type vga;$/;"	v
vga_palette	src/ints/int10_modes.cpp	/^static Bit8u vga_palette[256][3]=$/;"	v	file:
vga_read_p3d4	src/hardware/vga_crtc.cpp	/^Bitu vga_read_p3d4(Bitu port,Bitu iolen) {$/;"	f
vga_read_p3d5	src/hardware/vga_crtc.cpp	/^Bitu vga_read_p3d5(Bitu port,Bitu iolen) {$/;"	f
vga_read_p3da	src/hardware/vga_misc.cpp	/^Bitu vga_read_p3da(Bitu port,Bitu iolen) {$/;"	f
vga_write_p3d4	src/hardware/vga_crtc.cpp	/^void vga_write_p3d4(Bitu port,Bitu val,Bitu iolen) {$/;"	f
vga_write_p3d5	src/hardware/vga_crtc.cpp	/^void vga_write_p3d5(Bitu port,Bitu val,Bitu iolen) {$/;"	f
vgapages	src/hardware/vga_memory.cpp	/^} vgapages;$/;"	v	typeref:struct:__anon186	file:
vgaph	src/hardware/vga_memory.cpp	/^} vgaph;$/;"	v	typeref:struct:vg	file:
vib	src/hardware/fmopl.cpp	/^	UINT8	vib;		\/* LFO Phase Modulation enable flag (active high)*\/$/;"	m	struct:__anon153	file:
vib	src/hardware/ymf262.cpp	/^	UINT8	vib;		\/* LFO Phase Modulation enable flag (active high)*\/$/;"	m	struct:__anon190	file:
vid_mem	src/ints/int10_misc.cpp	/^	Bit8u vid_mem;				\/* 31h   BYTE   video memory available 00h = 64K, 01h = 128K, 02h = 192K, 03h = 256K *\/$/;"	m	struct:Dynamic_Functionality	file:
video	src/hardware/hardware.cpp	/^	} video;$/;"	m	struct:__anon155	typeref:struct:__anon155::__anon159	file:
video_dcc_table	src/ints/int10.h	/^		RealPt video_dcc_table;$/;"	m	struct:__anon196::__anon197
video_parameter_table	src/ints/int10.h	/^		RealPt video_parameter_table;$/;"	m	struct:__anon196::__anon197
video_parameter_table_ega	src/ints/int10_vptable.cpp	/^static Bit8u video_parameter_table_ega[0x40*0x17]={$/;"	v	file:
video_parameter_table_vga	src/ints/int10_vptable.cpp	/^static Bit8u video_parameter_table_vga[0x40*0x1d]={$/;"	v	file:
video_save_pointer_table	src/ints/int10.h	/^		RealPt video_save_pointer_table;$/;"	m	struct:__anon196::__anon197
video_save_pointers	src/ints/int10.h	/^		RealPt video_save_pointers;$/;"	m	struct:__anon196::__anon197
virtual_joysticks	src/gui/sdl_mapper.cpp	/^} virtual_joysticks[2];$/;"	v	typeref:struct:__anon143	file:
visible	src/libs/gui_tk/gui_tk.h	/^	bool visible;$/;"	m	class:GUI::Window
vislines	src/gui/sdlmain.h	/^		   int vislines;$/;"	m	struct:SDL_Block::__anon141
vmemsize	include/vga.h	/^	Bit32u vmemsize;$/;"	m	struct:__anon59
vmemwrap	include/vga.h	/^	Bit32u vmemwrap; \/* this is assumed to be power of 2 *\/$/;"	m	struct:__anon59
vol	src/hardware/pcspeaker.cpp	/^	float vol;$/;"	m	struct:DelayEntry	file:
vol_main	src/hardware/mixer.cpp	/^	double vol_main[2];$/;"	m	struct:MIXER_Channel	file:
vol_mul	src/hardware/mixer.cpp	/^	Bits vol_mul[2];$/;"	m	struct:MIXER_Channel	file:
volcur	src/hardware/pcspeaker.cpp	/^	float volwant,volcur;$/;"	m	struct:__anon166	file:
volmain	include/mixer.h	/^	float volmain[2];$/;"	m	class:MixerChannel
volmul	include/mixer.h	/^	Bit32s volmul[2];$/;"	m	class:MixerChannel
volume	src/hardware/fmopl.cpp	/^	INT32	volume;		\/* envelope counter				*\/$/;"	m	struct:__anon153	file:
volume	src/hardware/ymf262.cpp	/^	INT32	volume;		\/* envelope counter				*\/$/;"	m	struct:__anon190	file:
volumeIdent	src/dos/drives.h	/^	Bit8u volumeIdent[32];$/;"	m	struct:isoPVD
volumeSeqNumberL	src/dos/drives.h	/^	Bit16u volumeSeqNumberL;$/;"	m	struct:isoPVD
volumeSeqNumberM	src/dos/drives.h	/^	Bit16u volumeSeqNumberM;$/;"	m	struct:isoPVD
volumeSetSizeL	src/dos/drives.h	/^	Bit16u volumeSetSizeL;$/;"	m	struct:isoPVD
volumeSetSizeM	src/dos/drives.h	/^	Bit16u volumeSetSizeM;$/;"	m	struct:isoPVD
volumeSize	src/dos/dos_mscdex.cpp	/^		Bit32u	volumeSize;		\/\/ for media change$/;"	m	struct:CMscdex::SDriveInfo	file:
volumeSpaceSizeL	src/dos/drives.h	/^	Bit32u volumeSpaceSizeL;$/;"	m	struct:isoPVD
volumeSpaceSizeM	src/dos/drives.h	/^	Bit32u volumeSpaceSizeM;$/;"	m	struct:isoPVD
volume_calc	src/hardware/fmopl.cpp	911;"	d	file:
volume_calc	src/hardware/ymf262.cpp	872;"	d	file:
volwant	src/hardware/pcspeaker.cpp	/^	float volwant,volcur;$/;"	m	struct:__anon166	file:
vrend	include/vga.h	/^		double vrstart, vrend;		\/\/ V-retrace$/;"	m	struct:__anon38::__anon39
vret_triggered	include/vga.h	/^	bool vret_triggered;$/;"	m	struct:__anon38
vrstart	include/vga.h	/^		double vrstart, vrend;		\/\/ V-retrace$/;"	m	struct:__anon38::__anon39
vsnprintf	include/cross.h	38;"	d
vsnprintf	src/cpu/core_dynrec/cross.h	33;"	d
vsnprintf	src/cpu/core_dynrec/save/cross.h	33;"	d
vsyncp	include/vga.h	/^	Bit8u vsyncp;$/;"	m	struct:__anon46
vsyncw	include/vga.h	/^	Bit8u vsyncw;$/;"	m	struct:__anon46
vtotal	include/vga.h	/^		double vdend, vtotal;$/;"	m	struct:__anon38::__anon39
vtotal	include/vga.h	/^	Bit8u vtotal;$/;"	m	struct:__anon46
vtotal	include/vga.h	/^	Bitu vtotal;$/;"	m	struct:__anon60
vtotal	src/ints/int10.h	/^	Bitu	htotal,vtotal;$/;"	m	struct:VideoModeBlock
w	src/cpu/core_full/support.h	/^		Bit16u w;Bit16s ws;$/;"	m	union:FullData::__anon103
wReserved	src/dos/dos_mscdex.cpp	/^		Bit16u  wReserved;$/;"	m	struct:DOS_DeviceHeader::sDeviceHeader	file:
wait	src/hardware/keyboard.cpp	/^		Bitu wait;$/;"	m	struct:__anon161::__anon162	file:
wait	src/hardware/vga_xga.cpp	/^		bool wait;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
waitcmd	src/hardware/vga_xga.cpp	/^	} waitcmd;$/;"	m	struct:XGAStatus	typeref:struct:XGAStatus::XGA_WaitCmd	file:
waiting_interrupts	include/serialport.h	/^	Bit8u waiting_interrupts;	\/\/ these are on, but maybe not enabled$/;"	m	class:CSerial
waiting_tx_character	src/hardware/serialport/softmodem.h	/^	Bit8u waiting_tx_character;$/;"	m	class:CSerialModem
waitingclientsocket	src/hardware/serialport/softmodem.h	/^	TCPClientSocket* waitingclientsocket;$/;"	m	class:CSerialModem
waitsize	include/ipxserver.h	/^	bool waitsize;$/;"	m	struct:packetBuffer
warned	src/dos/dev_con.h	/^		bool warned;$/;"	m	struct:device_CON::ansi
warned_ff	src/ints/int10.cpp	/^static bool warned_ff=false;$/;"	v	file:
wave	src/hardware/hardware.cpp	/^	} wave; $/;"	m	struct:__anon155	typeref:struct:__anon155::__anon156	file:
waveform_number	src/hardware/ymf262.cpp	/^	UINT8	waveform_number;$/;"	m	struct:__anon190	file:
wavesel	src/hardware/fmopl.cpp	/^	UINT8	wavesel;				\/* waveform select enable flag	*\/$/;"	m	struct:fm_opl_f	file:
wavetable	src/hardware/fmopl.cpp	/^	unsigned int wavetable;$/;"	m	struct:__anon153	file:
wavetable	src/hardware/ymf262.cpp	/^	unsigned int wavetable;$/;"	m	struct:__anon190	file:
wavheader	src/hardware/hardware.cpp	/^static Bit8u wavheader[]={$/;"	v	file:
which	include/cpu.h	/^		Bitu which,error;$/;"	m	struct:CPUBlock::__anon9
which_ret	src/shell/shell_misc.cpp	/^static char which_ret[DOS_PATHLENGTH+4];$/;"	v	file:
width	include/render.h	/^		Bitu width, height;$/;"	m	struct:__anon32::__anon35
width	include/render.h	/^		Bitu width, start;$/;"	m	struct:__anon32::__anon33
width	include/vga.h	/^	Bitu width;$/;"	m	struct:__anon38
width	src/gui/sdlmain.h	/^		Bit32u width;$/;"	m	struct:SDL_Block::__anon137
width	src/hardware/hardware.cpp	/^		Bitu		width, height, bpp;$/;"	m	struct:__anon155::__anon159	file:
width	src/libs/gui_tk/gui_tk.h	/^	const int width;$/;"	m	class:GUI::BitmapFont
width	src/libs/gui_tk/gui_tk.h	/^	const int width;$/;"	m	class:GUI::Drawable
width	src/libs/gui_tk/gui_tk.h	/^	int width;$/;"	m	class:GUI::Window
width	src/libs/zmbv/zmbv.h	/^	int height, width, pitch;$/;"	m	class:VideoCodec
widths	src/libs/gui_tk/gui_tk.h	/^	const int *const widths;$/;"	m	class:GUI::BitmapFont
win_code	src/debug/debug_inc.h	/^	WINDOW * win_code;					\/* Disassembly\/Debug point Window *\/$/;"	m	struct:DBGBlock
win_data	src/debug/debug_inc.h	/^	WINDOW * win_data;					\/* Data Output window *\/$/;"	m	struct:DBGBlock
win_main	src/debug/debug_inc.h	/^	WINDOW * win_main;					\/* The Main Window *\/$/;"	m	struct:DBGBlock
win_out	src/debug/debug_inc.h	/^	WINDOW * win_out;					\/* Text Output Window *\/$/;"	m	struct:DBGBlock
win_reg	src/debug/debug_inc.h	/^	WINDOW * win_reg;					\/* Register Window *\/$/;"	m	struct:DBGBlock
win_var	src/debug/debug_inc.h	/^	WINDOW * win_var;					\/* Variable Window *\/$/;"	m	struct:DBGBlock
window	src/gui/sdlmain.h	/^	} window;$/;"	m	struct:SDL_Block	typeref:struct:SDL_Block::__anon137
windowClosed	src/libs/gui_tk/gui_tk.cpp	/^		virtual void windowClosed(GUI::ToplevelWindow *win) {$/;"	f	struct:GUI::movewin
windowClosed	src/libs/gui_tk/gui_tk.h	/^	void windowClosed(ToplevelWindow *win) {$/;"	f	class:GUI::TransientWindow
windowClosing	src/libs/gui_tk/gui_tk.cpp	/^		virtual bool windowClosing(GUI::ToplevelWindow *win) {$/;"	f	struct:GUI::movewin
windowClosing	src/libs/gui_tk/gui_tk.h	/^	bool windowClosing(ToplevelWindow *win) { return true; }$/;"	f	class:GUI::TransientWindow
windowMoved	src/libs/gui_tk/gui_tk.h	/^	virtual void windowMoved(Window *src, int x, int y) { move(relx,rely); }$/;"	f	class:GUI::TransientWindow
windows	src/libs/gui_tk/gui_tk.h	/^	bool windows;$/;"	m	class:GUI::Key
wm_free	src/cpu/core_dynrec/cache.h	/^void wm_free(void* addr)$/;"	f
wm_malloc	src/cpu/core_dynrec/cache.h	/^void * wm_malloc(long unsigned int size)$/;"	f
wmap	src/cpu/core_dyn_x86/decoder.h	/^		Bit8u * wmap;$/;"	m	struct:DynDecode::__anon89
wmap	src/cpu/core_dynrec/decoder_basic.h	/^		Bit8u * wmap;	\/\/ write map that indicates code presence for every byte of this page$/;"	m	struct:DynDecode::__anon68
wmap	src/cpu/core_dynrec/save/decoder_basic.h	/^		Bit8u * wmap;	\/\/ write map that indicates code presence for every byte of this page$/;"	m	struct:DynDecode::__anon78
wmapmask	src/cpu/core_dyn_x86/cache.h	/^		Bit8u * wmapmask;$/;"	m	struct:CacheBlock::__anon84
wmapmask	src/cpu/core_dynrec/cache.h	/^		Bit8u * wmapmask;$/;"	m	struct:CacheBlockDynRec::__anon63
wmapmask	src/cpu/core_dynrec/save/cache.h	/^		Bit8u * wmapmask;$/;"	m	struct:CacheBlockDynRec::__anon73
wmod	src/gui/sdl_mapper.cpp	/^	Bitu wmod;$/;"	m	class:CModEvent	file:
word	include/regs.h	/^	Bit16u word[2];$/;"	m	union:GenReg32
word	src/cpu/core_full/support.h	/^		Bit16u word[2];$/;"	m	union:FullData::__anon102
wordop	src/debug/debug_disasm.cpp	/^static int wordop;           \/* dealing with word or byte operand *\/$/;"	v	file:
words	src/cpu/core_full/support.h	/^		Bit16s words[2];$/;"	m	union:FullData::__anon102
work	src/hardware/mixer.cpp	/^	Bit32s work[MIXER_BUFSIZE][2];$/;"	m	struct:__anon165	file:
work	src/libs/zmbv/zmbv.h	/^	unsigned char *buf1, *buf2, *work;$/;"	m	class:VideoCodec
workPos	src/libs/zmbv/zmbv.h	/^	int workUsed, workPos;$/;"	m	class:VideoCodec
workUsed	src/libs/zmbv/zmbv.h	/^	int workUsed, workPos;$/;"	m	class:VideoCodec
workspaceBuffer	include/dos_inc.h	/^		Bit32u	workspaceBuffer;		\/\/  0x54 pointer to workspace buffer$/;"	m	struct:DOS_InfoBlock::sDIB
wr	include/paging.h	/^	Bit32u		wr:1;$/;"	m	struct:X86_PageEntryBlock
write	include/paging.h	/^		HostPt write[TLB_SIZE];$/;"	m	struct:PagingBlock::__anon26
write	include/paging.h	/^	HostPt write;$/;"	m	struct:__anon24
writeBuf	src/libs/zmbv/zmbv.h	/^		unsigned char	*writeBuf;$/;"	m	struct:VideoCodec::__anon203
writeCache	src/hardware/vga_memory.cpp	/^	static INLINE void writeCache(PhysPt addr, Bitu val) {$/;"	f	class:VGA_ChainedVGA_Handler
writeData	src/hardware/ipx.cpp	/^bool ECBClass::writeData() {$/;"	f	class:ECBClass
writeDataBuffer	src/hardware/ipx.cpp	/^void ECBClass::writeDataBuffer(Bit8u* buffer, Bit16u length) {$/;"	f	class:ECBClass
writeDone	src/libs/zmbv/zmbv.h	/^		int		writeDone;$/;"	m	struct:VideoCodec::__anon203
writeHandler	src/hardware/vga_memory.cpp	/^	static INLINE void writeHandler(PhysPt addr, Bitu val) {$/;"	f	class:VGA_ChainedVGA_Handler
writeHandler	src/hardware/vga_memory.cpp	/^	void writeHandler( PhysPt addr, Bit8u val ) {$/;"	f	class:VGA_UnchainedVGA_Handler
writeHandler	src/hardware/vga_memory.cpp	/^	void writeHandler(PhysPt start, Bit8u val) {$/;"	f	class:VGA_ChainedEGA_Handler
writeHandler	src/hardware/vga_memory.cpp	/^	void writeHandler(PhysPt start, Bit8u val) {$/;"	f	class:VGA_UnchainedEGA_Handler
writeMask	include/vga.h	/^	Bit8u	checkMask, frame, writeMask;$/;"	m	struct:__anon57
writeSize	src/libs/zmbv/zmbv.h	/^		int		writeSize;$/;"	m	struct:VideoCodec::__anon203
writeStart	include/vga.h	/^	Bitu	readStart, writeStart;$/;"	m	struct:__anon54
write_active	src/hardware/joystick.cpp	/^static bool write_active = false;$/;"	v	file:
write_busy	src/hardware/sblaster.cpp	/^		Bitu write_busy;$/;"	m	struct:SB_INFO::__anon173	file:
write_cga	src/hardware/vga_other.cpp	/^static void write_cga(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_cms	src/hardware/gameblaster.cpp	/^static void write_cms(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_color_select	src/hardware/vga_other.cpp	/^static void write_color_select(Bit8u val) {$/;"	f	file:
write_command	src/hardware/pic.cpp	/^static void write_command(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_crtc_data_other	src/hardware/vga_other.cpp	/^static void write_crtc_data_other(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_crtc_index_other	src/hardware/vga_other.cpp	/^static void write_crtc_index_other(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_data	src/hardware/pic.cpp	/^static void write_data(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_hercules	src/hardware/vga_other.cpp	/^static void write_hercules(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_index	include/vga.h	/^	Bit8u write_index;$/;"	m	struct:__anon53
write_latch	src/hardware/timer.cpp	/^	Bit16u write_latch;$/;"	m	struct:PIT_Block	file:
write_latch	src/hardware/timer.cpp	/^static void write_latch(Bitu port,Bitu val,Bitu \/*iolen*\/) {$/;"	f	file:
write_map	src/cpu/core_dyn_x86/cache.h	/^	Bit8u write_map[4096];$/;"	m	class:CodePageHandler
write_map	src/cpu/core_dynrec/cache.h	/^	Bit8u write_map[4096];$/;"	m	class:CodePageHandlerDynRec
write_map	src/cpu/core_dynrec/save/cache.h	/^	Bit8u write_map[4096];$/;"	m	class:CodePageHandlerDynRec
write_mode	include/vga.h	/^	Bit8u write_mode;$/;"	m	struct:__anon37
write_p201	src/hardware/joystick.cpp	/^static void write_p201(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p201_timed	src/hardware/joystick.cpp	/^static void write_p201_timed(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p3c0	include/vga.h	/^	tWritePort write_p3c0;$/;"	m	struct:SVGA_Driver
write_p3c0	src/hardware/vga_attr.cpp	/^void write_p3c0(Bitu port,Bitu val,Bitu iolen) {$/;"	f
write_p3c0_et3k	src/hardware/vga_tseng.cpp	/^void write_p3c0_et3k(Bitu reg,Bitu val,Bitu iolen) {$/;"	f
write_p3c0_et4k	src/hardware/vga_tseng.cpp	/^void write_p3c0_et4k(Bitu reg,Bitu val,Bitu iolen) {$/;"	f
write_p3c2	src/hardware/vga_misc.cpp	/^static void write_p3c2(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p3c4	src/hardware/vga_seq.cpp	/^void write_p3c4(Bitu port,Bitu val,Bitu iolen) {$/;"	f
write_p3c5	include/vga.h	/^	tWritePort write_p3c5;$/;"	m	struct:SVGA_Driver
write_p3c5	src/hardware/vga_seq.cpp	/^void write_p3c5(Bitu port,Bitu val,Bitu iolen) {$/;"	f
write_p3c5_et3k	src/hardware/vga_tseng.cpp	/^void write_p3c5_et3k(Bitu reg,Bitu val,Bitu iolen) {$/;"	f
write_p3c5_et4k	src/hardware/vga_tseng.cpp	/^void write_p3c5_et4k(Bitu reg,Bitu val,Bitu iolen) {$/;"	f
write_p3c6	src/hardware/vga_dac.cpp	/^static void write_p3c6(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p3c7	src/hardware/vga_dac.cpp	/^static void write_p3c7(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p3c8	src/hardware/vga_dac.cpp	/^static void write_p3c8(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p3c9	src/hardware/vga_dac.cpp	/^static void write_p3c9(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p3cd_et3k	src/hardware/vga_tseng.cpp	/^void write_p3cd_et3k(Bitu port,Bitu val,Bitu iolen) {$/;"	f
write_p3cd_et4k	src/hardware/vga_tseng.cpp	/^void write_p3cd_et4k(Bitu port,Bitu val,Bitu iolen) {$/;"	f
write_p3ce	src/hardware/vga_gfx.cpp	/^static void write_p3ce(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p3cf	include/vga.h	/^	tWritePort write_p3cf;$/;"	m	struct:SVGA_Driver
write_p3cf	src/hardware/vga_gfx.cpp	/^static void write_p3cf(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p3cf_pvga1a	src/hardware/vga_paradise.cpp	/^void write_p3cf_pvga1a(Bitu reg,Bitu val,Bitu iolen) {$/;"	f
write_p3d5	include/vga.h	/^	tWritePort write_p3d5;$/;"	m	struct:SVGA_Driver
write_p3d5_et3k	src/hardware/vga_tseng.cpp	/^void write_p3d5_et3k(Bitu reg,Bitu val,Bitu iolen) {$/;"	f
write_p3d5_et4k	src/hardware/vga_tseng.cpp	/^void write_p3d5_et4k(Bitu reg,Bitu val,Bitu iolen) {$/;"	f
write_p43	src/hardware/timer.cpp	/^static void write_p43(Bitu \/*port*\/,Bitu val,Bitu \/*iolen*\/) {$/;"	f	file:
write_p60	src/hardware/keyboard.cpp	/^static void write_p60(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p61	src/hardware/keyboard.cpp	/^static void write_p61(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p64	src/hardware/keyboard.cpp	/^static void write_p64(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_p92	src/hardware/memory.cpp	/^static void write_p92(Bitu port,Bitu val,Bitu iolen) {	$/;"	f	file:
write_pcjr	src/hardware/vga_other.cpp	/^static void write_pcjr(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_sb	src/hardware/sblaster.cpp	/^static void write_sb(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_state	src/hardware/timer.cpp	/^	Bit8u write_state;$/;"	m	struct:PIT_Block	file:
write_tandy	src/hardware/vga_other.cpp	/^static void write_tandy(Bitu port,Bitu val,Bitu iolen) {$/;"	f	file:
write_tandy_reg	src/hardware/vga_other.cpp	/^static void write_tandy_reg(Bit8u val) {$/;"	f	file:
writeb	src/cpu/core_dyn_x86/cache.h	/^	void writeb(PhysPt addr,Bitu val){$/;"	f	class:CodePageHandler
writeb	src/cpu/core_dynrec/cache.h	/^	void writeb(PhysPt addr,Bitu val){$/;"	f	class:CodePageHandlerDynRec
writeb	src/cpu/core_dynrec/save/cache.h	/^	void writeb(PhysPt addr,Bitu val){$/;"	f	class:CodePageHandlerDynRec
writeb	src/cpu/paging.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:InitPageHandler
writeb	src/cpu/paging.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:InitPageUserROHandler
writeb	src/cpu/paging.cpp	/^void PageHandler::writeb(PhysPt addr,Bitu \/*val*\/) {$/;"	f	class:PageHandler
writeb	src/debug/debug.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:DebugPageHandler
writeb	src/hardware/memory.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:IllegalPageHandler
writeb	src/hardware/memory.cpp	/^	void writeb(PhysPt addr,Bitu val){$/;"	f	class:ROMPageHandler
writeb	src/hardware/vga_memory.cpp	/^	void writeb(PhysPt addr, Bitu val ) {$/;"	f	class:VGA_ChainedVGA_Handler
writeb	src/hardware/vga_memory.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:VGA_ChainedEGA_Handler
writeb	src/hardware/vga_memory.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:VGA_Changes_Handler
writeb	src/hardware/vga_memory.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:VGA_Empty_Handler
writeb	src/hardware/vga_memory.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:VGA_LFBChanges_Handler
writeb	src/hardware/vga_memory.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:VGA_LIN4_Handler
writeb	src/hardware/vga_memory.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:VGA_MMIO_Handler
writeb	src/hardware/vga_memory.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:VGA_UnchainedEGA_Handler
writeb	src/hardware/vga_memory.cpp	/^	void writeb(PhysPt addr,Bitu val) {$/;"	f	class:VGA_UnchainedVGA_Handler
writeb	src/hardware/vga_memory.cpp	/^	void writeb(PhysPt addr,Bitu val){$/;"	f	class:VGA_TEXT_PageHandler
writeb_checked	src/cpu/core_dyn_x86/cache.h	/^	bool writeb_checked(PhysPt addr,Bitu val) {$/;"	f	class:CodePageHandler
writeb_checked	src/cpu/core_dynrec/cache.h	/^	bool writeb_checked(PhysPt addr,Bitu val) {$/;"	f	class:CodePageHandlerDynRec
writeb_checked	src/cpu/core_dynrec/save/cache.h	/^	bool writeb_checked(PhysPt addr,Bitu val) {$/;"	f	class:CodePageHandlerDynRec
writeb_checked	src/cpu/paging.cpp	/^	bool writeb_checked(PhysPt addr,Bitu val) {$/;"	f	class:InitPageHandler
writeb_checked	src/cpu/paging.cpp	/^	bool writeb_checked(PhysPt addr,Bitu val) {$/;"	f	class:InitPageUserROHandler
writeb_checked	src/cpu/paging.cpp	/^bool PageHandler::writeb_checked(PhysPt addr,Bitu val) {$/;"	f	class:PageHandler
writed	src/cpu/core_dyn_x86/cache.h	/^	void writed(PhysPt addr,Bitu val){$/;"	f	class:CodePageHandler
writed	src/cpu/core_dynrec/cache.h	/^	void writed(PhysPt addr,Bitu val){$/;"	f	class:CodePageHandlerDynRec
writed	src/cpu/core_dynrec/save/cache.h	/^	void writed(PhysPt addr,Bitu val){$/;"	f	class:CodePageHandlerDynRec
writed	src/cpu/paging.cpp	/^	void writed(PhysPt addr,Bitu val) {$/;"	f	class:InitPageHandler
writed	src/cpu/paging.cpp	/^	void writed(PhysPt addr,Bitu val) {$/;"	f	class:InitPageUserROHandler
writed	src/cpu/paging.cpp	/^void PageHandler::writed(PhysPt addr,Bitu val) {$/;"	f	class:PageHandler
writed	src/debug/debug.cpp	/^	void writed(PhysPt addr,Bitu val) {$/;"	f	class:DebugPageHandler
writed	src/hardware/memory.cpp	/^	void writed(PhysPt addr,Bitu val){$/;"	f	class:ROMPageHandler
writed	src/hardware/vga_memory.cpp	/^	void writed(PhysPt addr,Bitu val) {$/;"	f	class:VGA_ChainedEGA_Handler
writed	src/hardware/vga_memory.cpp	/^	void writed(PhysPt addr,Bitu val) {$/;"	f	class:VGA_ChainedVGA_Handler
writed	src/hardware/vga_memory.cpp	/^	void writed(PhysPt addr,Bitu val) {$/;"	f	class:VGA_Changes_Handler
writed	src/hardware/vga_memory.cpp	/^	void writed(PhysPt addr,Bitu val) {$/;"	f	class:VGA_LFBChanges_Handler
writed	src/hardware/vga_memory.cpp	/^	void writed(PhysPt addr,Bitu val) {$/;"	f	class:VGA_LIN4_Handler
writed	src/hardware/vga_memory.cpp	/^	void writed(PhysPt addr,Bitu val) {$/;"	f	class:VGA_MMIO_Handler
writed	src/hardware/vga_memory.cpp	/^	void writed(PhysPt addr,Bitu val) {$/;"	f	class:VGA_UnchainedEGA_Handler
writed	src/hardware/vga_memory.cpp	/^	void writed(PhysPt addr,Bitu val) {$/;"	f	class:VGA_UnchainedVGA_Handler
writed_checked	src/cpu/core_dyn_x86/cache.h	/^	bool writed_checked(PhysPt addr,Bitu val) {$/;"	f	class:CodePageHandler
writed_checked	src/cpu/core_dynrec/cache.h	/^	bool writed_checked(PhysPt addr,Bitu val) {$/;"	f	class:CodePageHandlerDynRec
writed_checked	src/cpu/core_dynrec/save/cache.h	/^	bool writed_checked(PhysPt addr,Bitu val) {$/;"	f	class:CodePageHandlerDynRec
writed_checked	src/cpu/paging.cpp	/^	bool writed_checked(PhysPt addr,Bitu val) {$/;"	f	class:InitPageHandler
writed_checked	src/cpu/paging.cpp	/^	bool writed_checked(PhysPt addr,Bitu val) {$/;"	f	class:InitPageUserROHandler
writed_checked	src/cpu/paging.cpp	/^bool PageHandler::writed_checked(PhysPt addr,Bitu val) {$/;"	f	class:PageHandler
writehandler	include/paging.h	/^		PageHandler * writehandler[TLB_SIZE];$/;"	m	struct:PagingBlock::__anon26
writehandler	include/paging.h	/^	PageHandler * writehandler;$/;"	m	struct:__anon24
writemask	src/hardware/vga_xga.cpp	/^	Bit32u writemask;$/;"	m	struct:XGAStatus	file:
writew	src/cpu/core_dyn_x86/cache.h	/^	void writew(PhysPt addr,Bitu val){$/;"	f	class:CodePageHandler
writew	src/cpu/core_dynrec/cache.h	/^	void writew(PhysPt addr,Bitu val){$/;"	f	class:CodePageHandlerDynRec
writew	src/cpu/core_dynrec/save/cache.h	/^	void writew(PhysPt addr,Bitu val){$/;"	f	class:CodePageHandlerDynRec
writew	src/cpu/paging.cpp	/^	void writew(PhysPt addr,Bitu val) {$/;"	f	class:InitPageHandler
writew	src/cpu/paging.cpp	/^	void writew(PhysPt addr,Bitu val) {$/;"	f	class:InitPageUserROHandler
writew	src/cpu/paging.cpp	/^void PageHandler::writew(PhysPt addr,Bitu val) {$/;"	f	class:PageHandler
writew	src/debug/debug.cpp	/^	void writew(PhysPt addr,Bitu val) {$/;"	f	class:DebugPageHandler
writew	src/hardware/memory.cpp	/^	void writew(PhysPt addr,Bitu val){$/;"	f	class:ROMPageHandler
writew	src/hardware/vga_memory.cpp	/^	void writew(PhysPt addr,Bitu val) {$/;"	f	class:VGA_ChainedEGA_Handler
writew	src/hardware/vga_memory.cpp	/^	void writew(PhysPt addr,Bitu val) {$/;"	f	class:VGA_ChainedVGA_Handler
writew	src/hardware/vga_memory.cpp	/^	void writew(PhysPt addr,Bitu val) {$/;"	f	class:VGA_Changes_Handler
writew	src/hardware/vga_memory.cpp	/^	void writew(PhysPt addr,Bitu val) {$/;"	f	class:VGA_LFBChanges_Handler
writew	src/hardware/vga_memory.cpp	/^	void writew(PhysPt addr,Bitu val) {$/;"	f	class:VGA_LIN4_Handler
writew	src/hardware/vga_memory.cpp	/^	void writew(PhysPt addr,Bitu val) {$/;"	f	class:VGA_MMIO_Handler
writew	src/hardware/vga_memory.cpp	/^	void writew(PhysPt addr,Bitu val) {$/;"	f	class:VGA_UnchainedEGA_Handler
writew	src/hardware/vga_memory.cpp	/^	void writew(PhysPt addr,Bitu val) {$/;"	f	class:VGA_UnchainedVGA_Handler
writew_checked	src/cpu/core_dyn_x86/cache.h	/^	bool writew_checked(PhysPt addr,Bitu val) {$/;"	f	class:CodePageHandler
writew_checked	src/cpu/core_dynrec/cache.h	/^	bool writew_checked(PhysPt addr,Bitu val) {$/;"	f	class:CodePageHandlerDynRec
writew_checked	src/cpu/core_dynrec/save/cache.h	/^	bool writew_checked(PhysPt addr,Bitu val) {$/;"	f	class:CodePageHandlerDynRec
writew_checked	src/cpu/paging.cpp	/^	bool writew_checked(PhysPt addr,Bitu val) {$/;"	f	class:InitPageHandler
writew_checked	src/cpu/paging.cpp	/^	bool writew_checked(PhysPt addr,Bitu val) {$/;"	f	class:InitPageUserROHandler
writew_checked	src/cpu/paging.cpp	/^bool PageHandler::writew_checked(PhysPt addr,Bitu val) {$/;"	f	class:PageHandler
written	src/hardware/hardware.cpp	/^		Bitu		written;$/;"	m	struct:__anon155::__anon159	file:
ws	src/cpu/core_full/support.h	/^		Bit16u w;Bit16s ws;$/;"	m	union:FullData::__anon103
x	src/gui/sdl_mapper.cpp	/^	Bitu x,y,dx,dy;$/;"	m	class:CButton	file:
x	src/gui/sdlmain.h	/^		   float x;$/;"	m	struct:SDL_Block::__anon139
x	src/gui/sdlmain.h	/^		   int x;$/;"	m	struct:SDL_Block::__anon140
x	src/ints/mouse.cpp	/^	float x,y;$/;"	m	struct:__anon199	file:
x	src/libs/gui_tk/gui_tk.cpp	/^		int x, y;$/;"	m	struct:GUI::movewin	file:
x	src/libs/gui_tk/gui_tk.h	/^	int x;$/;"	m	class:GUI::Drawable
x	src/libs/gui_tk/gui_tk.h	/^	int x;$/;"	m	class:GUI::Window
x	src/libs/zmbv/zmbv.h	/^		int x,y;$/;"	m	struct:VideoCodec::CodecVector
x1	src/hardware/vga_xga.cpp	/^		Bit16u x1, y1, x2, y2, sizex, sizey;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
x1	src/hardware/vga_xga.cpp	/^		Bit16u x1, y1, x2, y2;$/;"	m	struct:XGAStatus::scissorreg	file:
x2	src/hardware/vga_xga.cpp	/^		Bit16u x1, y1, x2, y2, sizex, sizey;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
x2	src/hardware/vga_xga.cpp	/^		Bit16u x1, y1, x2, y2;$/;"	m	struct:XGAStatus::scissorreg	file:
x86gen	src/cpu/core_dyn_x86/risc_x86.h	/^} x86gen;$/;"	v	typeref:struct:__anon92
xcount	src/hardware/joystick.cpp	/^	Bitu xcount,ycount;$/;"	m	struct:JoyStick	file:
xga	src/hardware/vga_xga.cpp	/^} xga;$/;"	v	typeref:struct:XGAStatus
xga_color_mode	include/vga.h	/^	VGAModes xga_color_mode;$/;"	m	struct:__anon42
xga_screen_width	include/vga.h	/^	Bitu xga_screen_width;$/;"	m	struct:__anon42
xlat16	include/vga.h	/^	Bit16u xlat16[256];$/;"	m	struct:__anon53
xms_callback	src/ints/xms.cpp	/^static RealPt xms_callback;$/;"	v	file:
xms_handles	src/ints/xms.cpp	/^static XMS_Block xms_handles[XMS_HANDLES];$/;"	v	file:
xpos	src/hardware/joystick.cpp	/^	float xpos,ypos;$/;"	m	struct:JoyStick	file:
xtick	src/hardware/joystick.cpp	/^	double xtick,ytick;$/;"	m	struct:JoyStick	file:
y	src/gui/sdl_mapper.cpp	/^	Bitu x,y,dx,dy;$/;"	m	class:CButton	file:
y	src/gui/sdlmain.h	/^		   float y;		$/;"	m	struct:SDL_Block::__anon139
y	src/gui/sdlmain.h	/^		   int y;$/;"	m	struct:SDL_Block::__anon140
y	src/ints/mouse.cpp	/^	float x,y;$/;"	m	struct:__anon199	file:
y	src/libs/gui_tk/gui_tk.cpp	/^		int x, y;$/;"	m	struct:GUI::movewin	file:
y	src/libs/gui_tk/gui_tk.h	/^	int y;$/;"	m	class:GUI::Drawable
y	src/libs/gui_tk/gui_tk.h	/^	int y;$/;"	m	class:GUI::Window
y	src/libs/zmbv/zmbv.h	/^		int x,y;$/;"	m	struct:VideoCodec::CodecVector
y1	src/hardware/vga_xga.cpp	/^		Bit16u x1, y1, x2, y2, sizex, sizey;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
y1	src/hardware/vga_xga.cpp	/^		Bit16u x1, y1, x2, y2;$/;"	m	struct:XGAStatus::scissorreg	file:
y2	src/hardware/vga_xga.cpp	/^		Bit16u x1, y1, x2, y2, sizex, sizey;$/;"	m	struct:XGAStatus::XGA_WaitCmd	file:
y2	src/hardware/vga_xga.cpp	/^		Bit16u x1, y1, x2, y2;$/;"	m	struct:XGAStatus::scissorreg	file:
ycount	src/hardware/joystick.cpp	/^	Bitu xcount,ycount;$/;"	m	struct:JoyStick	file:
year	include/dos_inc.h	/^	Bit16u year;$/;"	m	struct:DOS_Date
ypos	src/hardware/joystick.cpp	/^	float xpos,ypos;$/;"	m	struct:JoyStick	file:
ytick	src/hardware/joystick.cpp	/^	double xtick,ytick;$/;"	m	struct:JoyStick	file:
z	src/debug/debug.cpp	/^	bool z;$/;"	m	struct:TLogInst	file:
zeroOutCluster	src/dos/drive_fat.cpp	/^void fatDrive::zeroOutCluster(Bit32u clustNumber) {$/;"	f	class:fatDrive
zeroProtect	src/debug/debug.cpp	/^static bool zeroProtect = false;$/;"	v	file:
zmbv_format_t	src/libs/zmbv/zmbv.h	/^} zmbv_format_t;$/;"	t	typeref:enum:__anon202
zstream	src/libs/zmbv/zmbv.h	/^	z_stream zstream;$/;"	m	class:VideoCodec
~ActionEventSource	src/libs/gui_tk/gui_tk.h	/^	virtual ~ActionEventSource() {}$/;"	f	class:GUI::ActionEventSource
~ActionEventSource_Callback	src/libs/gui_tk/gui_tk.h	/^		virtual ~ActionEventSource_Callback() {}$/;"	f	struct:GUI::ActionEventSource_Callback
~AudioFile	src/dos/cdrom_image.cpp	/^CDROM_Interface_Image::AudioFile::~AudioFile()$/;"	f	class:CDROM_Interface_Image::AudioFile
~AutoexecObject	src/shell/shell.cpp	/^AutoexecObject::~AutoexecObject(){$/;"	f	class:AutoexecObject
~BIOS	src/ints/bios.cpp	/^	~BIOS(){$/;"	f	class:BIOS
~BatchFile	src/shell/shell_batch.cpp	/^BatchFile::~BatchFile() {$/;"	f	class:BatchFile
~BinaryFile	src/dos/cdrom_image.cpp	/^CDROM_Interface_Image::BinaryFile::~BinaryFile()$/;"	f	class:CDROM_Interface_Image::BinaryFile
~CALLBACK_HandlerObject	src/cpu/callback.cpp	/^CALLBACK_HandlerObject::~CALLBACK_HandlerObject(){$/;"	f	class:CALLBACK_HandlerObject
~CBind	src/gui/sdl_mapper.cpp	/^	virtual ~CBind () {$/;"	f	class:CBind
~CBindGroup	src/gui/sdl_mapper.cpp	/^	virtual ~CBindGroup (void) { }$/;"	f	class:CBindGroup
~CButton	src/gui/sdl_mapper.cpp	/^	virtual ~CButton(){};$/;"	f	class:CButton
~CDROM_Interface	src/dos/cdrom.h	/^	virtual ~CDROM_Interface			(void) {};$/;"	f	class:CDROM_Interface
~CDROM_Interface_Aspi	src/dos/cdrom_aspi_win32.cpp	/^CDROM_Interface_Aspi::~CDROM_Interface_Aspi(void)$/;"	f	class:CDROM_Interface_Aspi
~CDROM_Interface_Image	src/dos/cdrom_image.cpp	/^CDROM_Interface_Image::~CDROM_Interface_Image()$/;"	f	class:CDROM_Interface_Image
~CDROM_Interface_Ioctl	src/dos/cdrom_ioctl_win32.cpp	/^CDROM_Interface_Ioctl::~CDROM_Interface_Ioctl() {$/;"	f	class:CDROM_Interface_Ioctl
~CDROM_Interface_SDL	src/dos/cdrom.cpp	/^CDROM_Interface_SDL::~CDROM_Interface_SDL(void) $/;"	f	class:CDROM_Interface_SDL
~CDirectSerial	src/hardware/serialport/directserial_os2.cpp	/^CDirectSerial::~CDirectSerial () {$/;"	f	class:CDirectSerial
~CDirectSerial	src/hardware/serialport/directserial_posix.cpp	/^CDirectSerial::~CDirectSerial () {$/;"	f	class:CDirectSerial
~CDirectSerial	src/hardware/serialport/directserial_win32.cpp	/^CDirectSerial::~CDirectSerial () {$/;"	f	class:CDirectSerial
~CEvent	src/gui/sdl_mapper.cpp	/^	virtual ~CEvent() {}$/;"	f	class:CEvent
~CFifo	src/hardware/serialport/softmodem.h	/^	~CFifo() {$/;"	f	class:CFifo
~CFileInfo	include/dos_system.h	/^		~CFileInfo(void) {$/;"	f	class:DOS_Drive_Cache::CFileInfo
~CKeyBindGroup	src/gui/sdl_mapper.cpp	/^	~CKeyBindGroup() { delete[] lists; }$/;"	f	class:CKeyBindGroup
~CMS	src/hardware/gameblaster.cpp	/^	~CMS() {$/;"	f	class:CMS
~CMscdex	src/dos/dos_mscdex.cpp	/^CMscdex::~CMscdex(void) {$/;"	f	class:CMscdex
~CNullModem	src/hardware/serialport/nullmodem.cpp	/^CNullModem::~CNullModem () {$/;"	f	class:CNullModem
~CPU	src/cpu/cpu.cpp	/^	~CPU(){ \/* empty *\/};$/;"	f	class:CPU
~CSerial	src/hardware/serialport/serialport.cpp	/^CSerial::~CSerial(void) {$/;"	f	class:CSerial
~CSerialDummy	src/hardware/serialport/serialdummy.cpp	/^CSerialDummy::~CSerialDummy() {$/;"	f	class:CSerialDummy
~CSerialModem	src/hardware/serialport/softmodem.cpp	/^CSerialModem::~CSerialModem() {$/;"	f	class:CSerialModem
~CStickBindGroup	src/gui/sdl_mapper.cpp	/^	~CStickBindGroup() {$/;"	f	class:CStickBindGroup
~Config	src/misc/setup.cpp	/^Config::~Config() {$/;"	f	class:Config
~DEBUG	src/debug/debug.cpp	/^	~DEBUG()	{ pDebugcom	= 0; };$/;"	f	class:DEBUG
~DISNEY	src/hardware/disney.cpp	/^	~DISNEY(){$/;"	f	class:DISNEY
~DMA	src/hardware/dma.cpp	/^	~DMA(){$/;"	f	class:DMA
~DOS	src/dos/dos.cpp	/^	~DOS(){$/;"	f	class:DOS
~DOS_Drive	include/dos_system.h	/^	virtual ~DOS_Drive(){};$/;"	f	class:DOS_Drive
~DOS_Drive_Cache	src/dos/drive_cache.cpp	/^DOS_Drive_Cache::~DOS_Drive_Cache(void)$/;"	f	class:DOS_Drive_Cache
~DOS_File	include/dos_system.h	/^	virtual	~DOS_File(){if(name) delete [] name;};$/;"	f	class:DOS_File
~DOS_KeyboardLayout	src/dos/dos_keyboard_layout.cpp	/^	~DOS_KeyboardLayout(){$/;"	f	class:DOS_KeyboardLayout
~DmaController	include/dma.h	/^	~DmaController(void) {$/;"	f	class:DmaController
~Drawable	src/libs/gui_tk/gui_tk.cpp	/^Drawable::~Drawable()$/;"	f	class:GUI::Drawable
~ECBClass	src/hardware/ipx.cpp	/^ECBClass::~ECBClass() {$/;"	f	class:ECBClass
~EMS	src/ints/ems.cpp	/^	~EMS() {$/;"	f	class:EMS
~FixedPoint	src/misc/fixed.cpp	/^FixedPoint::~FixedPoint(void)$/;"	f	class:FixedPoint
~Font	src/libs/gui_tk/gui_tk.h	/^	virtual ~Font() {};$/;"	f	class:GUI::Font
~HARDWARE	src/hardware/hardware.cpp	/^	~HARDWARE(){$/;"	f	class:HARDWARE
~Handler	src/hardware/adlib.cpp	/^		~Handler() {$/;"	f	struct:OPL2::Handler
~Handler	src/hardware/adlib.cpp	/^		~Handler() {$/;"	f	struct:THEOPL3::Handler
~IO	src/hardware/iohandler.cpp	/^	~IO()$/;"	f	class:IO
~IO_ReadHandleObject	src/hardware/iohandler.cpp	/^IO_ReadHandleObject::~IO_ReadHandleObject(){$/;"	f	class:IO_ReadHandleObject
~IO_WriteHandleObject	src/hardware/iohandler.cpp	/^IO_WriteHandleObject::~IO_WriteHandleObject(){$/;"	f	class:IO_WriteHandleObject
~IPX	src/hardware/ipx.cpp	/^	~IPX() {$/;"	f	class:IPX
~Input	src/libs/gui_tk/gui_tk.h	/^	~Input() {$/;"	f	class:GUI::Input
~MEMORY	src/hardware/memory.cpp	/^	~MEMORY(){$/;"	f	class:MEMORY
~Menu	src/libs/gui_tk/gui_tk.h	/^	~Menu() {$/;"	f	class:GUI::Menu
~MixerObject	src/hardware/mixer.cpp	/^MixerObject::~MixerObject(){$/;"	f	class:MixerObject
~Module_base	include/setup.h	/^	virtual ~Module_base(){\/*LOG_MSG("executed")*\/;};\/\/Destructors are required$/;"	f	class:Module_base
~Native	src/libs/gui_tk/gui_tk.h	/^	class Native { public: virtual ~Native() {}; };$/;"	f	class:GUI::String::Native
~NativeArray	src/libs/gui_tk/gui_tk.h	/^		virtual ~NativeArray() { delete[] data; }$/;"	f	class:GUI::String::NativeArray
~NativeObject	src/libs/gui_tk/gui_tk.h	/^		virtual ~NativeObject() { delete data; }$/;"	f	class:GUI::String::NativeObject
~OPL	src/hardware/adlib.cpp	/^	~OPL() {$/;"	f	class:OPL
~PAGING	src/cpu/paging.cpp	/^	~PAGING(){}$/;"	f	class:PAGING
~PCSPEAKER	src/hardware/pcspeaker.cpp	/^	~PCSPEAKER(){$/;"	f	class:PCSPEAKER
~PIC	src/hardware/pic.cpp	/^	~PIC(){$/;"	f	class:PIC
~PageHandler	include/paging.h	/^	virtual ~PageHandler(void) { }$/;"	f	class:PageHandler
~Program	include/programs.h	/^	virtual ~Program(){$/;"	f	class:Program
~Prop_bool	include/setup.h	/^	~Prop_bool(){ }$/;"	f	class:Prop_bool
~Prop_double	include/setup.h	/^	~Prop_double(){ }$/;"	f	class:Prop_double
~Prop_hex	include/setup.h	/^	~Prop_hex(){ }$/;"	f	class:Prop_hex
~Prop_int	include/setup.h	/^	~Prop_int(){ }$/;"	f	class:Prop_int
~Prop_multival	include/setup.h	/^	~Prop_multival() { delete section; }$/;"	f	class:Prop_multival
~Prop_path	include/setup.h	/^	~Prop_path(){ }$/;"	f	class:Prop_path
~Prop_string	include/setup.h	/^	~Prop_string(){ }$/;"	f	class:Prop_string
~Property	include/setup.h	/^	virtual ~Property(){ } $/;"	f	class:Property
~SBLASTER	src/hardware/sblaster.cpp	/^	~SBLASTER() {$/;"	f	class:SBLASTER
~Section	include/setup.h	/^	virtual ~Section() { \/*Children must call executedestroy ! *\/}$/;"	f	class:Section
~Section_line	include/setup.h	/^	~Section_line(){ExecuteDestroy(true);}$/;"	f	class:Section_line
~Section_prop	src/misc/setup.cpp	/^Section_prop::~Section_prop() {$/;"	f	class:Section_prop
~String	src/libs/gui_tk/gui_tk.h	/^	~String() {$/;"	f	class:GUI::String
~TANDYSOUND	src/hardware/tandy_sound.cpp	/^	~TANDYSOUND(){ }$/;"	f	class:TANDYSOUND
~TCPClientSocket	src/hardware/serialport/misc_util.cpp	/^TCPClientSocket::~TCPClientSocket() {$/;"	f	class:TCPClientSocket
~TCPServerSocket	src/hardware/serialport/misc_util.cpp	/^TCPServerSocket::~TCPServerSocket() {$/;"	f	class:TCPServerSocket
~TIMER	src/hardware/timer.cpp	/^	~TIMER(){$/;"	f	class:TIMER
~Timer_Callback	src/libs/gui_tk/gui_tk.h	/^		virtual ~Timer_Callback() {}$/;"	f	struct:GUI::Timer_Callback
~ToplevelWindow	src/libs/gui_tk/gui_tk.h	/^	~ToplevelWindow() {$/;"	f	class:GUI::ToplevelWindow
~ToplevelWindow_Callback	src/libs/gui_tk/gui_tk.h	/^		virtual ~ToplevelWindow_Callback() {}$/;"	f	struct:GUI::ToplevelWindow_Callback
~TrackFile	src/dos/cdrom.h	/^		virtual ~TrackFile() { };$/;"	f	class:CDROM_Interface_Image::TrackFile
~TransientWindow	src/libs/gui_tk/gui_tk.h	/^	~TransientWindow() {$/;"	f	class:GUI::TransientWindow
~Value	include/setup.h	/^	~Value() { destroy();};$/;"	f	class:Value
~Window_Callback	src/libs/gui_tk/gui_tk.h	/^		virtual ~Window_Callback() {}$/;"	f	struct:GUI::Window_Callback
~XMS	src/ints/xms.cpp	/^	~XMS(){$/;"	f	class:XMS
~device_COM	src/hardware/serialport/serialport.cpp	/^device_COM::~device_COM() {$/;"	f	class:device_COM
~imageDisk	include/bios_disk.h	/^	~imageDisk() { if(diskimg != NULL) { fclose(diskimg); }	};$/;"	f	class:imageDisk
~isoDrive	src/dos/drive_iso.cpp	/^isoDrive::~isoDrive() { }$/;"	f	class:isoDrive
~keyboard_layout	src/dos/dos_keyboard_layout.cpp	/^keyboard_layout::~keyboard_layout() {$/;"	f	class:keyboard_layout
